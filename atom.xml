<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>芋艿V的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yunai.me/"/>
  <updated>2017-07-23T08:28:56.000Z</updated>
  <id>http://www.yunai.me/</id>
  
  <author>
    <name>王文斌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sharding-JDBC 源码分析 —— SQL 解析（一）之语法解析</title>
    <link href="http://www.yunai.me/Sharding-JDBC/sql-parse-1/"/>
    <id>http://www.yunai.me/Sharding-JDBC/sql-parse-1/</id>
    <published>2017-07-22T16:00:00.000Z</published>
    <updated>2017-07-23T08:28:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt=""></p>
<blockquote>
<p>🙂🙂🙂关注**微信公众号：【芋艿的后端小屋】**有福利：</p>
<ol>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>所有</strong>源码分析文章列表</li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>中文注释源码 GitHub 地址</strong></li>
<li>您对于源码的疑问每条留言<strong>都</strong>将得到<strong>认真</strong>回复。<strong>甚至不知道如何读源码也可以请教噢</strong>。</li>
<li><strong>新的</strong>源码解析文章<strong>实时</strong>收到通知。<strong>每周更新一篇左右</strong>。</li>
</ol>
</blockquote>
<hr>
<h1>1. 概述</h1>
<p>SQL 解析，数据库中间件必备的功能和流程。Sharding-JDBC 在 <code>1.5.0</code> 正式发布时，将 SQL 解析引擎从 Druid 替换成了自研的。<strong>新引擎仅解析分片上下文，对于 SQL 采用&quot;半理解&quot;理念，进一步提升性能和兼容性，同时降低了代码复杂度</strong>（不理解没关系，我们后续会更新文章解释该优点）。 国内另一款数据库中间件 MyCAT SQL 解析引擎也是 Druid，目前也在属于自己的 SQL 解析引擎。</p>
<p>可能有同学看到<strong>SQL 解析</strong>会被吓到，请淡定，耐心往下看。《SQL 解析》内容我们会分成 5 篇相对简短的文章，让大家能够相对轻松愉快的去理解：</p>
<ol>
<li>词法解析</li>
<li>插入 SQL 解析</li>
<li>查询 SQL 解析</li>
<li>更新 SQL 解析</li>
<li>删除 SQL 解析</li>
</ol>
<hr>
<p><img src="../../../images/Sharding-JDBC/2017_07_23/01.png" alt=""></p>
<p><strong>SQL 解析引擎</strong>在 <code>parsing</code> 包下，如上图所见包含两大组件：</p>
<ol>
<li>Lexer：<strong>词法</strong>解析器。</li>
<li>Parser：<strong>SQL</strong>解析器。</li>
</ol>
<p>两者都是解析器，区别在于 Lexer 只做词法的解析，不关注上下文，将字符串拆解成 N 个词法。而 Parser 在 Lexer 的基础上，还需要理解 SQL 。打个比方：</p>
<p><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> t_user  </div><div class="line">Lexer ：[<span class="keyword">SELECT</span>] [ * ] [<span class="keyword">FROM</span>] [t_user]  </div><div class="line">Parser ：这是一条查询表为 [t_user] ，并且返回 [ * ] 所有字段的<span class="keyword">SQL</span>。</div></pre></td></tr></table></figure></p>
<p>🙂不完全懂？没关系，本文的主角是 Lexer，我们通过源码一点一点理解。一共 1400 行左右代码左右，还包含注释等等，实际更少噢。</p>
<h1>2. Lexer 词法解析器</h1>
<p><strong>Lexer 原理</strong>：<strong>顺序顺序顺序</strong> 解析 SQL，将字符串拆解成 N 个词法。</p>
<p>核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lexer</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 输出字符串</div><div class="line">     * 比如：SQL</div><div class="line">     */</div><div class="line">    <span class="meta">@Getter</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String input;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 词法标记字典</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Dictionary dictionary;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 解析到 SQL 的 offset</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> offset;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 当前 词法标记</div><div class="line">     */</div><div class="line">    <span class="meta">@Getter</span></div><div class="line">    <span class="keyword">private</span> Token currentToken;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 分析下一个词法标记.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@see</span> #currentToken</div><div class="line">     * <span class="doctag">@see</span> #offset</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">nextToken</span><span class="params">()</span> </span>&#123;</div><div class="line">        skipIgnoredToken();</div><div class="line">        <span class="keyword">if</span> (isVariableBegin()) &#123; <span class="comment">// 变量</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanVariable();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isNCharBegin()) &#123; <span class="comment">// N\</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, ++offset).scanChars();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isIdentifierBegin()) &#123; <span class="comment">// Keyword + Literals.IDENTIFIER</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanIdentifier();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isHexDecimalBegin()) &#123; <span class="comment">// 十六进制</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanHexDecimal();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isNumberBegin()) &#123; <span class="comment">// 数字（整数+浮点数）</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanNumber();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSymbolBegin()) &#123; <span class="comment">// 符号</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanSymbol();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isCharsBegin()) &#123; <span class="comment">// 字符串，例如："abc"</span></div><div class="line">            currentToken = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).scanChars();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isEnd()) &#123; <span class="comment">// 结束</span></div><div class="line">            currentToken = <span class="keyword">new</span> Token(Assist.END, <span class="string">""</span>, offset);</div><div class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 分析错误，无符合条件的词法标记</span></div><div class="line">            currentToken = <span class="keyword">new</span> Token(Assist.ERROR, <span class="string">""</span>, offset);</div><div class="line">        &#125;</div><div class="line">        offset = currentToken.getEndPosition();</div><div class="line">        <span class="comment">// System.out.println("| " + currentToken.getLiterals() + " | " + currentToken.getType() + " | " + currentToken.getEndPosition() + " |");</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 跳过忽略的词法标记</div><div class="line">     * 1. 空格</div><div class="line">     * 2. SQL Hint</div><div class="line">     * 3. SQL 注释</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">skipIgnoredToken</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 空格</span></div><div class="line">        offset = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).skipWhitespace();</div><div class="line">        <span class="comment">// SQL Hint</span></div><div class="line">        <span class="keyword">while</span> (isHintBegin()) &#123;</div><div class="line">            offset = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).skipHint();</div><div class="line">            offset = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).skipWhitespace();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// SQL 注释</span></div><div class="line">        <span class="keyword">while</span> (isCommentBegin()) &#123;</div><div class="line">            offset = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).skipComment();</div><div class="line">            offset = <span class="keyword">new</span> Tokenizer(input, dictionary, offset).skipWhitespace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>通过 <code>#nextToken()</code> 方法，不断解析出 Token(<em>词法标记</em>)。我们来执行一次，看看 SQL 会被拆解成哪些 Token。</p>
<p><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">SQL ：<span class="keyword">SELECT</span> i.* <span class="keyword">FROM</span> t_order o <span class="keyword">JOIN</span> t_order_item i <span class="keyword">ON</span> o.order_id=i.order_id <span class="keyword">WHERE</span> o.user_id=? <span class="keyword">AND</span> o.order_id=?</div></pre></td></tr></table></figure></p>
<table>
<thead>
<tr>
<th>literals</th>
<th>TokenType类</th>
<th>TokenType值</th>
<th>endPosition</th>
</tr>
</thead>
<tbody>
<tr>
<td>SELECT</td>
<td>DefaultKeyword</td>
<td>SELECT</td>
<td>6</td>
</tr>
<tr>
<td>i</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>8</td>
</tr>
<tr>
<td>.</td>
<td>Symbol</td>
<td>DOT</td>
<td>9</td>
</tr>
<tr>
<td>*</td>
<td>Symbol</td>
<td>STAR</td>
<td>10</td>
</tr>
<tr>
<td>FROM</td>
<td>DefaultKeyword</td>
<td>FROM</td>
<td>15</td>
</tr>
<tr>
<td>t_order</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>23</td>
</tr>
<tr>
<td>o</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>25</td>
</tr>
<tr>
<td>JOIN</td>
<td>DefaultKeyword</td>
<td>JOIN</td>
<td>30</td>
</tr>
<tr>
<td>t_order_item</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>43</td>
</tr>
<tr>
<td>i</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>45</td>
</tr>
<tr>
<td>ON</td>
<td>DefaultKeyword</td>
<td>ON</td>
<td>48</td>
</tr>
<tr>
<td>o</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>50</td>
</tr>
<tr>
<td>.</td>
<td>Symbol</td>
<td>DOT</td>
<td>51</td>
</tr>
<tr>
<td>order_id</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>59</td>
</tr>
<tr>
<td>=</td>
<td>Symbol</td>
<td>EQ</td>
<td>60</td>
</tr>
<tr>
<td>i</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>61</td>
</tr>
<tr>
<td>.</td>
<td>Symbol</td>
<td>DOT</td>
<td>62</td>
</tr>
<tr>
<td>order_id</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>70</td>
</tr>
<tr>
<td>WHERE</td>
<td>DefaultKeyword</td>
<td>WHERE</td>
<td>76</td>
</tr>
<tr>
<td>o</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>78</td>
</tr>
<tr>
<td>.</td>
<td>Symbol</td>
<td>DOT</td>
<td>79</td>
</tr>
<tr>
<td>user_id</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>86</td>
</tr>
<tr>
<td>=</td>
<td>Symbol</td>
<td>EQ</td>
<td>87</td>
</tr>
<tr>
<td>?</td>
<td>Symbol</td>
<td>QUESTION</td>
<td>88</td>
</tr>
<tr>
<td>AND</td>
<td>DefaultKeyword</td>
<td>AND</td>
<td>92</td>
</tr>
<tr>
<td>o</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>94</td>
</tr>
<tr>
<td>.</td>
<td>Symbol</td>
<td>DOT</td>
<td>95</td>
</tr>
<tr>
<td>order_id</td>
<td>Literals</td>
<td>IDENTIFIER</td>
<td>103</td>
</tr>
<tr>
<td>=</td>
<td>Symbol</td>
<td>EQ</td>
<td>104</td>
</tr>
<tr>
<td>?</td>
<td>Symbol</td>
<td>QUESTION</td>
<td>105</td>
</tr>
<tr>
<td></td>
<td>Assist</td>
<td>END</td>
<td>105</td>
</tr>
</tbody>
</table>
<p>眼尖的同学可能看到了 Tokenizer。对的，它是 Lexer 的好基佬，负责<strong>分词</strong>。</p>
<p><em>我们来总结下，<code>Lexer#nextToken()</code> 方法里，使用 <code>#skipIgnoredToken()</code> 方法跳过忽略的 Token，通过 <code>#isXXXX()</code> 方法判断好下一个 Token 的类型后，<strong>交给 Tokenizer 进行分词返回 Token</strong>。‼️此处可以考虑做个优化，不需要每次都 <code>new Tokenizer(...)</code> 出来，一个 Lexer 搭配一个 Tokenizer。</em></p>
<hr>
<p>由于不同数据库遵守 SQL 规范略有不同，所以不同的数据库对应不同的 Lexer。</p>
<p><img src="../../../images/Sharding-JDBC/2017_07_23/02.png" alt=""></p>
<p>子 Lexer 通过重写方法实现自己独有的 SQL 语法。</p>
<h1>3. Token 词法标记</h1>
<p>上文我们已经看过 Token 的例子，一共有 3 个属性：</p>
<ul>
<li>TokenType type ：词法标记类型</li>
<li>String literals ：词法字面量标记</li>
<li>endPosition ：<code>literals</code> 在 SQL 里的结束位置</li>
</ul>
<p>TokenType 词法标记类型，一共分成 4 个大类：</p>
<ul>
<li>DefaultKeyword ：词法关键词</li>
<li>Literals ：词法字面量标记</li>
<li>Symbol ：词法符号标记</li>
<li>Assist ：词法辅助标记</li>
</ul>
<p><img src="../../../images/Sharding-JDBC/2017_07_23/03.png" alt=""></p>
<h2>3.1 DefaultKeyword 词法关键词</h2>
<p><img src="../../../images/Sharding-JDBC/2017_07_23/04.png" alt=""></p>
<p><strong>不同数据库有自己独有的_词法关键词_，例如 MySQL 熟知的分页 Limit。</strong></p>
<p>我们以 MySQL 举个例子，当创建 MySQLLexer 时，会加载 DefaultKeyword 和 MySQLKeyword（ <em>OracleLexer、PostgreSQLLexer、SQLServerLexer 同 MySQLLexer</em> ）。核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MySQLLexer.java</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">MySQLLexer</span> <span class="keyword">extends</span> <span class="title">Lexer</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 字典</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Dictionary dictionary = <span class="keyword">new</span> Dictionary(MySQLKeyword.values());</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MySQLLexer</span><span class="params">(<span class="keyword">final</span> String input)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(input, dictionary);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Dictionary.java</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Dictionary</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 词法关键词Map</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Keyword&gt; tokens = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">1024</span>);</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dictionary</span><span class="params">(<span class="keyword">final</span> Keyword... dialectKeywords)</span> </span>&#123;</div><div class="line">        fill(dialectKeywords);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 装上默认词法关键词 + 方言词法关键词</div><div class="line">     * 不同的数据库有相同的默认词法关键词，有有不同的方言关键词</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> dialectKeywords 方言词法关键词</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fill</span><span class="params">(<span class="keyword">final</span> Keyword... dialectKeywords)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (DefaultKeyword each : DefaultKeyword.values()) &#123;</div><div class="line">            tokens.put(each.name(), each);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (Keyword each : dialectKeywords) &#123;</div><div class="line">            tokens.put(each.toString(), each);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Keyword 与 Literals.IDENTIFIER 是一起解析的，我们放在 Literals.IDENTIFIER 处一起分析。</p>
<h2>3.2 Literals 词法字面量标记</h2>
<p>Literals 词法字面量标记，一共分成 6 种：</p>
<ul>
<li>IDENTIFIER ：词法关键词</li>
<li>VARIABLE ：变量</li>
<li>CHARS ：字符串</li>
<li>HEX ：十六进制</li>
<li>INT ：整数</li>
<li>FLOAT ：浮点数</li>
</ul>
<h3>3.2.1 Literals.IDENTIFIER 词法关键词</h3>
<p>词法关键词。例如：表名，查询字段 等等。</p>
<p>解析 Literals.IDENTIFIER 与 Keyword 核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isIdentifierBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> isIdentifierBegin(getCurrentChar(<span class="number">0</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isIdentifierBegin</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> ch)</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> CharType.isAlphabet(ch) || <span class="string">'`'</span> == ch || <span class="string">'_'</span> == ch || <span class="string">'$'</span> == ch;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描标识符.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 标识符标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanIdentifier</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="comment">// `字段`，例如：SELECT `id` FROM t_user 中的 `id`</span></div><div class="line">   <span class="keyword">if</span> (<span class="string">'`'</span> == charAt(offset)) &#123;</div><div class="line">       <span class="keyword">int</span> length = getLengthUntilTerminatedChar(<span class="string">'`'</span>);</div><div class="line">       <span class="keyword">return</span> <span class="keyword">new</span> Token(Literals.IDENTIFIER, input.substring(offset, offset + length), offset + length);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">int</span> length = <span class="number">0</span>;</div><div class="line">   <span class="keyword">while</span> (isIdentifierChar(charAt(offset + length))) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   String literals = input.substring(offset, offset + length);</div><div class="line">   <span class="comment">// 处理 order / group 作为表名</span></div><div class="line">   <span class="keyword">if</span> (isAmbiguousIdentifier(literals)) &#123;</div><div class="line">       <span class="keyword">return</span> <span class="keyword">new</span> Token(processAmbiguousIdentifier(offset + length, literals), literals, offset + length);</div><div class="line">   &#125;</div><div class="line">   <span class="comment">// 从 词法关键词 查找是否是 Keyword，如果是，则返回 Keyword，否则返回 Literals.IDENTIFIER</span></div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(dictionary.findTokenType(literals, Literals.IDENTIFIER), literals, offset + length);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line">* 计算到结束字符的长度</div><div class="line">*</div><div class="line">* <span class="doctag">@see</span> #hasEscapeChar(char, int) 处理类似 SELECT a AS `b``c` FROM table。此处连续的 "``" 不是结尾，如果传递的是 "`" 会产生误判，所以加了这个判断</div><div class="line">* <span class="doctag">@param</span> terminatedChar 结束字符</div><div class="line">* <span class="doctag">@return</span> 长度</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getLengthUntilTerminatedChar</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> terminatedChar)</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = <span class="number">1</span>;</div><div class="line">   <span class="keyword">while</span> (terminatedChar != charAt(offset + length) || hasEscapeChar(terminatedChar, offset + length)) &#123;</div><div class="line">       <span class="keyword">if</span> (offset + length &gt;= input.length()) &#123;</div><div class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> UnterminatedCharException(terminatedChar);</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">if</span> (hasEscapeChar(terminatedChar, offset + length)) &#123;</div><div class="line">           length++;</div><div class="line">       &#125;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> length + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是 Escape 字符</div><div class="line">*</div><div class="line">* <span class="doctag">@param</span> charIdentifier 字符</div><div class="line">* <span class="doctag">@param</span> offset 位置</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">hasEscapeChar</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> charIdentifier, <span class="keyword">final</span> <span class="keyword">int</span> offset)</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> charIdentifier == charAt(offset) &amp;&amp; charIdentifier == charAt(offset + <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isIdentifierChar</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> ch)</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> CharType.isAlphabet(ch) || CharType.isDigital(ch) || <span class="string">'_'</span> == ch || <span class="string">'$'</span> == ch || <span class="string">'#'</span> == ch;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是引起歧义的标识符</div><div class="line">* 例如 "SELECT * FROM group"，此时 "group" 代表的是表名，而非词法关键词</div><div class="line">*</div><div class="line">* <span class="doctag">@param</span> literals 标识符</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isAmbiguousIdentifier</span><span class="params">(<span class="keyword">final</span> String literals)</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> DefaultKeyword.ORDER.name().equalsIgnoreCase(literals) || DefaultKeyword.GROUP.name().equalsIgnoreCase(literals);</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line">* 获取引起歧义的标识符对应的词法标记类型</div><div class="line">*</div><div class="line">* <span class="doctag">@param</span> offset 位置</div><div class="line">* <span class="doctag">@param</span> literals 标识符</div><div class="line">* <span class="doctag">@return</span> 词法标记类型</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> TokenType <span class="title">processAmbiguousIdentifier</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> offset, <span class="keyword">final</span> String literals)</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">   <span class="keyword">while</span> (CharType.isWhitespace(charAt(offset + i))) &#123;</div><div class="line">       i++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">if</span> (DefaultKeyword.BY.name().equalsIgnoreCase(String.valueOf(<span class="keyword">new</span> <span class="keyword">char</span>[] &#123;charAt(offset + i), charAt(offset + i + <span class="number">1</span>)&#125;))) &#123;</div><div class="line">       <span class="keyword">return</span> dictionary.findTokenType(literals);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> Literals.IDENTIFIER;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3>3.2.2 Literals.VARIABLE 变量</h3>
<p>变量。例如：<code>SELECT @@VERSION</code> 。</p>
<p>解析核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是 变量</div><div class="line">* MySQL 与 SQL Server 支持</div><div class="line">* </div><div class="line">* <span class="doctag">@see</span> Tokenizer#scanVariable()</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isVariableBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描变量.</div><div class="line">* 在 MySQL 里，@代表用户变量；@@代表系统变量。</div><div class="line">* 在 SQLServer 里，有 @@。</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 变量标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanVariable</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = <span class="number">1</span>;</div><div class="line">   <span class="keyword">if</span> (<span class="string">'@'</span> == charAt(offset + <span class="number">1</span>)) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">while</span> (isVariableChar(charAt(offset + length))) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(Literals.VARIABLE, input.substring(offset, offset + length), offset + length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3>3.2.3 Literals.CHARS 字符串</h3>
<p>字符串。例如：<code>SELECT &quot;123&quot;</code> 。</p>
<p>解析核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否 N\</div><div class="line">* 目前 SQLServer 独有：在 SQL Server 中處理 Unicode 字串常數時，必需為所有的 Unicode 字串加上前置詞 N</div><div class="line">*</div><div class="line">* <span class="doctag">@see</span> Tokenizer#scanChars()</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isNCharBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> isSupportNChars() &amp;&amp; <span class="string">'N'</span> == getCurrentChar(<span class="number">0</span>) &amp;&amp; <span class="string">'\''</span> == getCurrentChar(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isCharsBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> <span class="string">'\''</span> == getCurrentChar(<span class="number">0</span>) || <span class="string">'\"'</span> == getCurrentChar(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描字符串.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 字符串标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanChars</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> scanChars(charAt(offset));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> Token <span class="title">scanChars</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> terminatedChar)</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = getLengthUntilTerminatedChar(terminatedChar);</div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(Literals.CHARS, input.substring(offset + <span class="number">1</span>, offset + length - <span class="number">1</span>), offset + length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3>3.2.4 Literals.HEX 十六进制</h3>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是 十六进制</div><div class="line">*</div><div class="line">* <span class="doctag">@see</span> Tokenizer#scanHexDecimal()</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isHexDecimalBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> <span class="string">'0'</span> == getCurrentChar(<span class="number">0</span>) &amp;&amp; <span class="string">'x'</span> == getCurrentChar(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描十六进制数.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 十六进制数标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanHexDecimal</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = HEX_BEGIN_SYMBOL_LENGTH;</div><div class="line">   <span class="comment">// 负数</span></div><div class="line">   <span class="keyword">if</span> (<span class="string">'-'</span> == charAt(offset + length)) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">while</span> (isHex(charAt(offset + length))) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(Literals.HEX, input.substring(offset, offset + length), offset + length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3>3.2.5 Literals.INT 整数</h3>
<p>整数。例如：<code>SELECT * FROM t_user WHERE id = 1</code>。</p>
<p>Literals.INT 与 Literals.FLOAT 是一起解析的，我们放在 Literals.FLOAT 处一起分析。</p>
<h3>3.2.6 Literals.FLOAT 浮点数</h3>
<p>浮点数。例如：<code>SELECT * FROM t_user WHERE id = 1.0</code>。
浮点数包含几种：&quot;1.0&quot;，&quot;1.0F&quot;，&quot;7.823E5&quot;（科学计数法）。</p>
<p>解析核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是 数字</div><div class="line">* '-' 需要特殊处理。".2" 被处理成省略0的小数，"-.2" 不能被处理成省略的小数，否则会出问题。</div><div class="line">* 例如说，"SELECT a-.2" 处理的结果是 "SELECT" / "a" / "-" / ".2"</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isNumberBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> CharType.isDigital(getCurrentChar(<span class="number">0</span>)) <span class="comment">// 数字</span></div><div class="line">           || (<span class="string">'.'</span> == getCurrentChar(<span class="number">0</span>) &amp;&amp; CharType.isDigital(getCurrentChar(<span class="number">1</span>)) &amp;&amp; !isIdentifierBegin(getCurrentChar(-<span class="number">1</span>)) <span class="comment">// 浮点数</span></div><div class="line">           || (<span class="string">'-'</span> == getCurrentChar(<span class="number">0</span>) &amp;&amp; (<span class="string">'.'</span> == getCurrentChar(<span class="number">0</span>) || CharType.isDigital(getCurrentChar(<span class="number">1</span>))))); <span class="comment">// 负数</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描数字.</div><div class="line">* 解析数字的结果会有两种：整数 和 浮点数.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 数字标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanNumber</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = <span class="number">0</span>;</div><div class="line">   <span class="comment">// 负数</span></div><div class="line">   <span class="keyword">if</span> (<span class="string">'-'</span> == charAt(offset + length)) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="comment">// 浮点数</span></div><div class="line">   length += getDigitalLength(offset + length);</div><div class="line">   <span class="keyword">boolean</span> isFloat = <span class="keyword">false</span>;</div><div class="line">   <span class="keyword">if</span> (<span class="string">'.'</span> == charAt(offset + length)) &#123;</div><div class="line">       isFloat = <span class="keyword">true</span>;</div><div class="line">       length++;</div><div class="line">       length += getDigitalLength(offset + length);</div><div class="line">   &#125;</div><div class="line">   <span class="comment">// 科学计数表示，例如：SELECT 7.823E5</span></div><div class="line">   <span class="keyword">if</span> (isScientificNotation(offset + length)) &#123;</div><div class="line">       isFloat = <span class="keyword">true</span>;</div><div class="line">       length++;</div><div class="line">       <span class="keyword">if</span> (<span class="string">'+'</span> == charAt(offset + length) || <span class="string">'-'</span> == charAt(offset + length)) &#123;</div><div class="line">           length++;</div><div class="line">       &#125;</div><div class="line">       length += getDigitalLength(offset + length);</div><div class="line">   &#125;</div><div class="line">   <span class="comment">// 浮点数，例如：SELECT 1.333F</span></div><div class="line">   <span class="keyword">if</span> (isBinaryNumber(offset + length)) &#123;</div><div class="line">       isFloat = <span class="keyword">true</span>;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(isFloat ? Literals.FLOAT : Literals.INT, input.substring(offset, offset + length), offset + length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里要特别注意下：<strong>&quot;-&quot;</strong>。在数字表达实例，可以判定为 负号 和 减号（不考虑科学计数法）。</p>
<ul>
<li>&quot;.2&quot;  解析结果是 &quot;.2&quot;</li>
<li>&quot;-.2&quot; 解析结果不能是 &quot;-.2&quot;，而是 &quot;-&quot; 和 &quot;.2&quot;。</li>
</ul>
<h2>3.3 Symbol 词法符号标记</h2>
<p>词法符号标记。例如：&quot;{&quot;, &quot;}&quot;, &quot;&gt;=&quot; 等等。</p>
<p>解析核心代码如下：</p>
<p><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// Lexer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 是否是 符号</div><div class="line">*</div><div class="line">* <span class="doctag">@see</span> Tokenizer#scanSymbol()</div><div class="line">* <span class="doctag">@return</span> 是否</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSymbolBegin</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> CharType.isSymbol(getCurrentChar(<span class="number">0</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// CharType.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 判断是否为符号.</div><div class="line">*</div><div class="line">* <span class="doctag">@param</span> ch 待判断的字符</div><div class="line">* <span class="doctag">@return</span> 是否为符号</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSymbol</span><span class="params">(<span class="keyword">final</span> <span class="keyword">char</span> ch)</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> <span class="string">'('</span> == ch || <span class="string">')'</span> == ch || <span class="string">'['</span> == ch || <span class="string">']'</span> == ch || <span class="string">'&#123;'</span> == ch || <span class="string">'&#125;'</span> == ch || <span class="string">'+'</span> == ch || <span class="string">'-'</span> == ch || <span class="string">'*'</span> == ch || <span class="string">'/'</span> == ch || <span class="string">'%'</span> == ch || <span class="string">'^'</span> == ch || <span class="string">'='</span> == ch</div><div class="line">           || <span class="string">'&gt;'</span> == ch || <span class="string">'&lt;'</span> == ch || <span class="string">'~'</span> == ch || <span class="string">'!'</span> == ch || <span class="string">'?'</span> == ch || <span class="string">'&amp;'</span> == ch || <span class="string">'|'</span> == ch || <span class="string">'.'</span> == ch || <span class="string">':'</span> == ch || <span class="string">'#'</span> == ch || <span class="string">','</span> == ch || <span class="string">';'</span> == ch;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Tokenizer.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* 扫描符号.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> 符号标记</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> Token <span class="title">scanSymbol</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">int</span> length = <span class="number">0</span>;</div><div class="line">   <span class="keyword">while</span> (CharType.isSymbol(charAt(offset + length))) &#123;</div><div class="line">       length++;</div><div class="line">   &#125;</div><div class="line">   String literals = input.substring(offset, offset + length);</div><div class="line">   <span class="comment">// 倒序遍历，查询符合条件的 符号。例如 literals = ";;"，会是拆分成两个 ";"。如果基于正序，literals = "&lt;="，会被解析成 "&lt;" + "="。</span></div><div class="line">   Symbol symbol;</div><div class="line">   <span class="keyword">while</span> (<span class="keyword">null</span> == (symbol = Symbol.literalsOf(literals))) &#123;</div><div class="line">       literals = input.substring(offset, offset + --length);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Token(symbol, literals, offset + length);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2>3.4 Assist 词法辅助标记</h2>
<p>Assist 词法辅助标记，一共分成 2 种：</p>
<ul>
<li>END ：分析结束</li>
<li>ERROR ：分析错误。</li>
</ul>
<h1>4. 彩蛋</h1>
<p>老铁，是不是比想象中简单一些？！继续加油写 Parser 相关的文章！来一波微信公众号关注吧。</p>
<hr>
<p><strong>Sharding-JDBC 正在收集使用公司名单：<a href="https://github.com/dangdangdotcom/sharding-jdbc/issues/234" target="_blank" rel="external">传送门</a>。🙂 你的登记，会让更多人参与和使用 Sharding-JDBC。Sharding-JDBC 也会因此，能够覆盖更广的场景。登记吧，少年！</strong></p>
<hr>
<p><strong>我创建了一个微信群【源码圈】，希望和大家分享交流读源码的经验。<br>
读源码先难后易，掌握方法后，可以做更有深度的学习。<br>
而且掌握方法并不难噢。<br>
加群方式：微信公众号发送关键字【qun】。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;🙂🙂🙂关注**微信公众号：【芋艿的后端小屋】**有福利：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Rock
    
    </summary>
    
      <category term="Sharding-JDBC" scheme="http://www.yunai.me/categories/Sharding-JDBC/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析  —— SQL ON MongoDB</title>
    <link href="http://www.yunai.me/MyCAT/connect-mongodb/"/>
    <id>http://www.yunai.me/MyCAT/connect-mongodb/</id>
    <published>2017-07-18T16:00:00.000Z</published>
    <updated>2017-07-20T01:38:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x4E3B;&#x6D41;&#x7A0B;</a></li>
<li><a href="#">3. &#x67E5;&#x8BE2;&#x64CD;&#x4F5C;</a></li>
<li><a href="#">4. &#x63D2;&#x5165;&#x64CD;&#x4F5C;</a></li>
<li><a href="#">5. &#x5F69;&#x86CB;</a></li>
</ul>
<hr>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>&#x53EF;&#x80FD;&#x4F60;&#x5728;&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x6807;&#x9898;&#x4F1A;&#x5C0F;&#x5C0F;&#x7684;&#x5403;&#x60CA;&#xFF0C;MyCAT &#x80FD;&#x4F7F;&#x7528; MongoDB &#x505A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x3002;&#x662F;&#x7684;&#xFF0C;&#x6CA1;&#x9519;&#xFF0C;&#x786E;&#x5B9E;&#x53EF;&#x4EE5;&#x3002;<br>&#x543C;&#x543C;&#x543C;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5F00;&#x542F;&#x8FD9;&#x6BB5;&#x795E;&#x5947;&#x7684;&#x201C;&#x65C5;&#x9014;&#x201D;&#x3002;</p>
<p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5206;&#x6210;&#x56DB;&#x90E8;&#x5206;&#xFF1A;</p>
<ol class="ui list">
<li>&#x603B;&#x4F53;&#x6D41;&#x7A0B;&#xFF0C;&#x8BA9;&#x4F60;&#x6709;&#x4E2A;&#x6574;&#x4F53;&#x7684;&#x8BA4;&#x8BC6;</li>
<li>&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;</li>
<li>&#x63D2;&#x5165;&#x64CD;&#x4F5C;</li>
<li>&#x5F69;&#x86CB;&#xFF0C;&#x1F608;&#x5F69;&#x86CB;&#xFF0C;&#x1F642;&#x5F69;&#x86CB;</li>
</ol>
<p>&#x5EFA;&#x8BAE;&#x4F60;&#x770B;&#x8FC7;&#x8FD9;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;&#xFF08;<em>&#x975E;&#x5FC5;&#x987B;</em>&#xFF09;&#xFF1A;</p>
<ol class="ui list">
<li><a href="http://www.yunai.me/MyCAT/single-db-single-table-insert/?self">&#x300A;MyCAT &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#x300B;</a></li>
<li><a href="http://www.yunai.me/MyCAT/single-db-single-table-select/?self">&#x300A;MyCAT &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#x300B;</a></li>
</ol>
<h1 id="2-&#x4E3B;&#x6D41;&#x7A0B;"><a href="#2-&#x4E3B;&#x6D41;&#x7A0B;" class="headerlink" title="2. &#x4E3B;&#x6D41;&#x7A0B;"></a>2. &#x4E3B;&#x6D41;&#x7A0B;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_19/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_19/01.png" alt="" class="ui centered image"></a>   </p>
<ol class="ui list">
<li><code>MyCAT Server</code> &#x63A5;&#x6536; <code>MySQL Client</code> &#x57FA;&#x4E8E; <strong>MySQL&#x534F;&#x8BAE;</strong> &#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x7FFB;&#x8BD1; <strong>SQL</strong> &#x6210; <strong>MongoDB&#x64CD;&#x4F5C;</strong> &#x53D1;&#x9001;&#x7ED9; <code>MongoDB Server</code>&#x3002;</li>
<li><code>MyCAT Server</code> &#x63A5;&#x6536; <code>MongoDB Server</code> &#x8FD4;&#x56DE;&#x7684; <strong>MongoDB&#x6570;&#x636E;</strong>&#xFF0C;&#x7FFB;&#x8BD1;&#x6210; <code>MySQL&#x6570;&#x636E;&#x7ED3;&#x679C;</code> &#x8FD4;&#x56DE;&#x7ED9; <code>MySQL Client</code>&#x3002;</li>
</ol>
<p>&#x8FD9;&#x6837;&#x4E00;&#x770B;&#xFF0C;MyCAT &#x8FDE;&#x63A5; MongoDB &#x662F;&#x4E0D;&#x662F;&#x5C11;&#x795E;&#x5947;&#x4E00;&#x70B9;&#x5217;&#x3002;</p>
<hr>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_19/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_19/02.png" alt="" class="ui centered image"></a></p>
<blockquote>
<p>Java&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#xFF0C;&#xFF08;Java Database Connectivity&#xFF0C;&#x7B80;&#x79F0;JDBC&#xFF09;&#x662F;Java&#x8BED;&#x8A00;&#x4E2D;&#x7528;&#x6765;&#x89C4;&#x8303;&#x5BA2;&#x6237;&#x7AEF;&#x7A0B;&#x5E8F;&#x5982;&#x4F55;&#x6765;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63A5;&#x53E3;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x8BF8;&#x5982;&#x67E5;&#x8BE2;&#x548C;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6570;&#x636E;&#x7684;&#x65B9;&#x6CD5;&#x3002;JDBC&#x4E5F;&#x662F;Sun Microsystems&#x7684;&#x5546;&#x6807;&#x3002;JDBC&#x662F;&#x9762;&#x5411;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x7684;&#x3002;</p>
</blockquote>
<p>MyCAT &#x4F7F;&#x7528; JDBC &#x89C4;&#x8303;&#xFF0C;&#x62BD;&#x8C61;&#x4E86;&#x5BF9; MongoDB &#x7684;&#x8BBF;&#x95EE;&#x3002;&#x901A;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;MyCAT &#x4E5F;&#x62BD;&#x8C61;&#x4E86; SequoiaDB &#x7684;&#x8BBF;&#x95EE;&#x3002;&#x53EF;&#x80FD;&#x8FD9;&#x6837;&#x8BF4;&#x6CD5;&#x6709;&#x4E9B;&#x62BD;&#x8C61;&#xFF0C;&#x770B;&#x4E2A;&#x7C7B;&#x56FE;&#x538B;&#x538B;&#x60CA;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_19/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_19/03.png" alt="" class="ui centered image"></a></p>
<p>&#x662F;&#x4E0D;&#x662F;&#x719F;&#x6089;&#x7684;&#x5473;&#x9053;&#x3002;<strong>&#x4E0D;&#x5F97;&#x4E0D;&#x8BF4; JDBC &#x89C4;&#x8303;&#x7684;&#x7CBE;&#x5999;&#x3002;</strong></p>
<h1 id="3-&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;"><a href="#3-&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;" class="headerlink" title="3. &#x67E5;&#x8BE2;&#x64CD;&#x4F5C;"></a>3. &#x67E5;&#x8BE2;&#x64CD;&#x4F5C;</h1><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> &gt; <span class="string">&apos;&apos;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> _id <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_19/04.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_19/04.png" alt="" class="ui centered image"></a></p>
<p>&#x770B;&#x987A;&#x5E8F;&#x56FE;&#x5DF2;&#x7ECF;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x7406;&#x89E3;&#x6574;&#x4F53;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x5C31;&#x4E0D;&#x591A;&#x5E9F;&#x8BDD;&#x5566;&#x3002;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x51E0;&#x4E2A;&#x6838;&#x5FC3;&#x7684;&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x3002;</p>
<p><strong>1&#x3001;&#x67E5;&#x8BE2; MongoDB</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MongoSQLParser.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> MongoData <span class="title">query</span><span class="params">()</span> <span class="keyword">throws</span> MongoSQLException </span>{</div><div class="line">   <span class="keyword">if</span> (!(statement <span class="keyword">instanceof</span> SQLSelectStatement)) {</div><div class="line">       <span class="comment">//return null;</span></div><div class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;not a query sql statement&quot;</span>);</div><div class="line">   }</div><div class="line">   MongoData mongo = <span class="keyword">new</span> MongoData();</div><div class="line">   DBCursor c = <span class="keyword">null</span>;</div><div class="line">   SQLSelectStatement selectStmt = (SQLSelectStatement) statement;</div><div class="line">   SQLSelectQuery sqlSelectQuery = selectStmt.getSelect().getQuery();</div><div class="line">   <span class="keyword">int</span> icount = <span class="number">0</span>;</div><div class="line">   <span class="keyword">if</span> (sqlSelectQuery <span class="keyword">instanceof</span> MySqlSelectQueryBlock) {</div><div class="line">       MySqlSelectQueryBlock mysqlSelectQuery = (MySqlSelectQueryBlock) selectStmt.getSelect().getQuery();</div><div class="line"></div><div class="line">       BasicDBObject fields = <span class="keyword">new</span> BasicDBObject();</div><div class="line"></div><div class="line">       <span class="comment">// &#x663E;&#x793A;&#xFF08;&#x8FD4;&#x56DE;&#xFF09;&#x7684;&#x5B57;&#x6BB5;</span></div><div class="line">       <span class="keyword">for</span> (SQLSelectItem item : mysqlSelectQuery.getSelectList()) {</div><div class="line">           <span class="comment">//System.out.println(item.toString());</span></div><div class="line">           <span class="keyword">if</span> (!(item.getExpr() <span class="keyword">instanceof</span> SQLAllColumnExpr)) {</div><div class="line">               <span class="keyword">if</span> (item.getExpr() <span class="keyword">instanceof</span> SQLAggregateExpr) {</div><div class="line">                   SQLAggregateExpr expr = (SQLAggregateExpr) item.getExpr();</div><div class="line">                   <span class="keyword">if</span> (expr.getMethodName().equals(<span class="string">&quot;COUNT&quot;</span>)) { <span class="comment">// TODO &#x5F85;&#x8BFB;&#xFF1A;count&#xFF08;*&#xFF09;</span></div><div class="line">                       icount = <span class="number">1</span>;</div><div class="line">                       mongo.setField(getExprFieldName(expr), Types.BIGINT);</div><div class="line">                   }</div><div class="line">                   fields.put(getExprFieldName(expr), <span class="number">1</span>);</div><div class="line">               } <span class="keyword">else</span> {</div><div class="line">                   fields.put(getFieldName(item), <span class="number">1</span>);</div><div class="line">               }</div><div class="line">           }</div><div class="line"></div><div class="line">       }</div><div class="line"></div><div class="line">       <span class="comment">// &#x8868;&#x540D;</span></div><div class="line">       SQLTableSource table = mysqlSelectQuery.getFrom();</div><div class="line">       DBCollection coll = <span class="keyword">this</span>._db.getCollection(table.toString());</div><div class="line">       mongo.setTable(table.toString());</div><div class="line"></div><div class="line">       <span class="comment">// WHERE</span></div><div class="line">       SQLExpr expr = mysqlSelectQuery.getWhere();</div><div class="line">       DBObject query = parserWhere(expr);</div><div class="line"></div><div class="line">       <span class="comment">// GROUP BY</span></div><div class="line">       SQLSelectGroupByClause groupby = mysqlSelectQuery.getGroupBy();</div><div class="line">       BasicDBObject gbkey = <span class="keyword">new</span> BasicDBObject();</div><div class="line">       <span class="keyword">if</span> (groupby != <span class="keyword">null</span>) {</div><div class="line">           <span class="keyword">for</span> (SQLExpr gbexpr : groupby.getItems()) {</div><div class="line">               <span class="keyword">if</span> (gbexpr <span class="keyword">instanceof</span> SQLIdentifierExpr) {</div><div class="line">                   String name = ((SQLIdentifierExpr) gbexpr).getName();</div><div class="line">                   gbkey.put(name, Integer.valueOf(<span class="number">1</span>));</div><div class="line">               }</div><div class="line">           }</div><div class="line">           icount = <span class="number">2</span>;</div><div class="line">       }</div><div class="line"></div><div class="line">       <span class="comment">// SKIP / LIMIT</span></div><div class="line">       <span class="keyword">int</span> limitoff = <span class="number">0</span>;</div><div class="line">       <span class="keyword">int</span> limitnum = <span class="number">0</span>;</div><div class="line">       <span class="keyword">if</span> (mysqlSelectQuery.getLimit() != <span class="keyword">null</span>) {</div><div class="line">           limitoff = getSQLExprToInt(mysqlSelectQuery.getLimit().getOffset());</div><div class="line">           limitnum = getSQLExprToInt(mysqlSelectQuery.getLimit().getRowCount());</div><div class="line">       }</div><div class="line">       <span class="keyword">if</span> (icount == <span class="number">1</span>) { <span class="comment">// COUNT&#xFF08;*&#xFF09;</span></div><div class="line">           mongo.setCount(coll.count(query));</div><div class="line">       } <span class="keyword">else</span> <span class="keyword">if</span> (icount == <span class="number">2</span>) { <span class="comment">// MapReduce</span></div><div class="line">           BasicDBObject initial = <span class="keyword">new</span> BasicDBObject();</div><div class="line">           initial.put(<span class="string">&quot;num&quot;</span>, <span class="number">0</span>);</div><div class="line">           String reduce = <span class="string">&quot;function (obj, prev) { &quot;</span> + <span class="string">&quot;  prev.num++}&quot;</span>;</div><div class="line">           mongo.setGrouyBy(coll.group(gbkey, query, initial, reduce));</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           <span class="keyword">if</span> ((limitoff &gt; <span class="number">0</span>) || (limitnum &gt; <span class="number">0</span>)) {</div><div class="line">               c = coll.find(query, fields).skip(limitoff).limit(limitnum);</div><div class="line">           } <span class="keyword">else</span> {</div><div class="line">               c = coll.find(query, fields);</div><div class="line">           }</div><div class="line"></div><div class="line">           <span class="comment">// order by</span></div><div class="line">           SQLOrderBy orderby = mysqlSelectQuery.getOrderBy();</div><div class="line">           <span class="keyword">if</span> (orderby != <span class="keyword">null</span>) {</div><div class="line">               BasicDBObject order = <span class="keyword">new</span> BasicDBObject();</div><div class="line">               <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; orderby.getItems().size(); i++) {</div><div class="line">                   SQLSelectOrderByItem orderitem = orderby.getItems().get(i);</div><div class="line">                   order.put(orderitem.getExpr().toString(), getSQLExprToAsc(orderitem.getType()));</div><div class="line">               }</div><div class="line">               c.sort(order);</div><div class="line">               <span class="comment">// System.out.println(order);</span></div><div class="line">           }</div><div class="line">       }</div><div class="line">       mongo.setCursor(c);</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> mongo;</div><div class="line">}</div></pre></td></tr></table></figure>
<p><strong>2&#x3001;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MongoSQLParser.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parserWhere</span><span class="params">(SQLExpr aexpr, BasicDBObject o)</span> </span>{</div><div class="line">   <span class="keyword">if</span> (aexpr <span class="keyword">instanceof</span> SQLBinaryOpExpr) {</div><div class="line">       SQLBinaryOpExpr expr = (SQLBinaryOpExpr) aexpr;</div><div class="line">       SQLExpr exprL = expr.getLeft();</div><div class="line">       <span class="keyword">if</span> (!(exprL <span class="keyword">instanceof</span> SQLBinaryOpExpr)) {</div><div class="line">           <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;=&quot;</span>)) {</div><div class="line">               o.put(exprL.toString(), getExpValue(expr.getRight()));</div><div class="line">           } <span class="keyword">else</span> {</div><div class="line">               String op = <span class="string">&quot;&quot;</span>;</div><div class="line">               <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;&lt;&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$lt&quot;</span>;</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;&lt;=&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$lte&quot;</span>;</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;&gt;&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$gt&quot;</span>;</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;&gt;=&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$gte&quot;</span>;</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;!=&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$ne&quot;</span>;</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;&lt;&gt;&quot;</span>)) {</div><div class="line">                   op = <span class="string">&quot;$ne&quot;</span>;</div><div class="line">               }</div><div class="line">               parserDBObject(o, exprL.toString(), op, getExpValue(expr.getRight()));</div><div class="line">           }</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;AND&quot;</span>)) {</div><div class="line">               parserWhere(exprL, o);</div><div class="line">               parserWhere(expr.getRight(), o);</div><div class="line">           } <span class="keyword">else</span> <span class="keyword">if</span> (expr.getOperator().getName().equals(<span class="string">&quot;OR&quot;</span>)) {</div><div class="line">               orWhere(exprL, expr.getRight(), o);</div><div class="line">           } <span class="keyword">else</span> {</div><div class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;Can&apos;t identify the operation of  of where&quot;</span>);</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">orWhere</span><span class="params">(SQLExpr exprL, SQLExpr exprR, BasicDBObject ob)</span> </span>{</div><div class="line">   BasicDBObject xo = <span class="keyword">new</span> BasicDBObject();</div><div class="line">   BasicDBObject yo = <span class="keyword">new</span> BasicDBObject();</div><div class="line">   parserWhere(exprL, xo);</div><div class="line">   parserWhere(exprR, yo);</div><div class="line">   ob.put(<span class="string">&quot;$or&quot;</span>, <span class="keyword">new</span> Object[]{xo, yo});</div><div class="line">}</div></pre></td></tr></table></figure>
<p><strong>3&#x3001;&#x89E3;&#x6790; MongoDB &#x6570;&#x636E;</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MongoResultSet.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">MongoResultSet</span><span class="params">(MongoData mongo, String schema)</span> <span class="keyword">throws</span> SQLException </span>{</div><div class="line">   <span class="keyword">this</span>._cursor = mongo.getCursor();</div><div class="line">   <span class="keyword">this</span>._schema = schema;</div><div class="line">   <span class="keyword">this</span>._table = mongo.getTable();</div><div class="line">   <span class="keyword">this</span>.isSum = mongo.getCount() &gt; <span class="number">0</span>;</div><div class="line">   <span class="keyword">this</span>._sum = mongo.getCount();</div><div class="line">   <span class="keyword">this</span>.isGroupBy = mongo.getType();</div><div class="line"></div><div class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.isGroupBy) {</div><div class="line">       dblist = mongo.getGrouyBys();</div><div class="line">       <span class="keyword">this</span>.isSum = <span class="keyword">true</span>;</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>._cursor != <span class="keyword">null</span>) {</div><div class="line">       select = _cursor.getKeysWanted().keySet().toArray(<span class="keyword">new</span> String[<span class="number">0</span>]);</div><div class="line">       <span class="comment">// &#x89E3;&#x6790; fields</span></div><div class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>._cursor.hasNext()) {</div><div class="line">           _cur = _cursor.next();</div><div class="line">           <span class="keyword">if</span> (_cur != <span class="keyword">null</span>) {</div><div class="line">               <span class="keyword">if</span> (select.length == <span class="number">0</span>) {</div><div class="line">                   SetFields(_cur.keySet());</div><div class="line">               }</div><div class="line">               _row = <span class="number">1</span>;</div><div class="line">           }</div><div class="line">       }</div><div class="line">       <span class="comment">// &#x8BBE;&#x7F6E; fields &#x7C7B;&#x578B;</span></div><div class="line">       <span class="keyword">if</span> (select.length == <span class="number">0</span>) {</div><div class="line">           select = <span class="keyword">new</span> String[]{<span class="string">&quot;_id&quot;</span>};</div><div class="line">           SetFieldType(<span class="keyword">true</span>);</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           SetFieldType(<span class="keyword">false</span>);</div><div class="line">       }</div><div class="line">   } <span class="keyword">else</span> {</div><div class="line">       SetFields(mongo.getFields().keySet());<span class="comment">//new String[]{&quot;COUNT(*)&quot;};</span></div><div class="line">       SetFieldType(mongo.getFields());</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x5F53;&#x4F7F;&#x7528; <code>SELECT *</code> &#x67E5;&#x8BE2;&#x5B57;&#x6BB5;&#x65F6;&#xFF0C;fields &#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x6761;&#x6570;&#x636E;&#x8FD4;&#x56DE;&#x7684; fields&#x3002;&#x5373;&#x4F7F;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x6570;&#x636E;&#x6709;&#x5176;&#x4ED6; fields&#xFF0C;&#x4E5F;&#x4E0D;&#x8FD4;&#x56DE;&#x3002;</li>
</ul>
<p><strong>4&#x3001;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x7ED9; MySQL Client</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// JDBCConnection.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ouputResultSet</span><span class="params">(ServerConnection sc, String sql)</span></span></div><div class="line">       <span class="keyword">throws</span> SQLException {</div><div class="line">   ResultSet rs = <span class="keyword">null</span>;</div><div class="line">   Statement stmt = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">   <span class="keyword">try</span> {</div><div class="line">       stmt = con.createStatement();</div><div class="line">       rs = stmt.executeQuery(sql);</div><div class="line"></div><div class="line">       <span class="comment">// header</span></div><div class="line">       List&lt;FieldPacket&gt; fieldPks = <span class="keyword">new</span> LinkedList&lt;&gt;();</div><div class="line">       ResultSetUtil.resultSetToFieldPacket(sc.getCharset(), fieldPks, rs, <span class="keyword">this</span>.isSpark);</div><div class="line">       <span class="keyword">int</span> colunmCount = fieldPks.size();</div><div class="line">       ByteBuffer byteBuf = sc.allocate();</div><div class="line">       ResultSetHeaderPacket headerPkg = <span class="keyword">new</span> ResultSetHeaderPacket();</div><div class="line">       headerPkg.fieldCount = fieldPks.size();</div><div class="line">       headerPkg.packetId = ++packetId;</div><div class="line">       byteBuf = headerPkg.write(byteBuf, sc, <span class="keyword">true</span>);</div><div class="line">       byteBuf.flip();</div><div class="line">       <span class="keyword">byte</span>[] header = <span class="keyword">new</span> <span class="keyword">byte</span>[byteBuf.limit()];</div><div class="line">       byteBuf.get(header);</div><div class="line">       byteBuf.clear();</div><div class="line">       List&lt;<span class="keyword">byte</span>[]&gt; fields = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">byte</span>[]&gt;(fieldPks.size());</div><div class="line">       <span class="keyword">for</span> (FieldPacket curField : fieldPks) {</div><div class="line">           curField.packetId = ++packetId;</div><div class="line">           byteBuf = curField.write(byteBuf, sc, <span class="keyword">false</span>);</div><div class="line">           byteBuf.flip();</div><div class="line">           <span class="keyword">byte</span>[] field = <span class="keyword">new</span> <span class="keyword">byte</span>[byteBuf.limit()];</div><div class="line">           byteBuf.get(field);</div><div class="line">           byteBuf.clear();</div><div class="line">           fields.add(field);</div><div class="line">       }</div><div class="line">       <span class="comment">// header eof</span></div><div class="line">       EOFPacket eofPckg = <span class="keyword">new</span> EOFPacket();</div><div class="line">       eofPckg.packetId = ++packetId;</div><div class="line">       byteBuf = eofPckg.write(byteBuf, sc, <span class="keyword">false</span>);</div><div class="line">       byteBuf.flip();</div><div class="line">       <span class="keyword">byte</span>[] eof = <span class="keyword">new</span> <span class="keyword">byte</span>[byteBuf.limit()];</div><div class="line">       byteBuf.get(eof);</div><div class="line">       byteBuf.clear();</div><div class="line">       <span class="keyword">this</span>.respHandler.fieldEofResponse(header, fields, eof, <span class="keyword">this</span>);</div><div class="line"></div><div class="line">       <span class="comment">// row</span></div><div class="line">       <span class="keyword">while</span> (rs.next()) {</div><div class="line">           RowDataPacket curRow = <span class="keyword">new</span> RowDataPacket(colunmCount);</div><div class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; colunmCount; i++) {</div><div class="line">               <span class="keyword">int</span> j = i + <span class="number">1</span>;</div><div class="line">               <span class="keyword">if</span> (MysqlDefs.isBianry((<span class="keyword">byte</span>) fieldPks.get(i).type)) {</div><div class="line">                   curRow.add(rs.getBytes(j));</div><div class="line">               } <span class="keyword">else</span> <span class="keyword">if</span> (fieldPks.get(i).type == MysqlDefs.FIELD_TYPE_DECIMAL ||</div><div class="line">                       fieldPks.get(i).type == (MysqlDefs.FIELD_TYPE_NEW_DECIMAL - <span class="number">256</span>)) { <span class="comment">// field type is unsigned byte</span></div><div class="line">                   <span class="comment">// ensure that do not use scientific notation format</span></div><div class="line">                   BigDecimal val = rs.getBigDecimal(j);</div><div class="line">                   curRow.add(StringUtil.encode(val != <span class="keyword">null</span> ? val.toPlainString() : <span class="keyword">null</span>, sc.getCharset()));</div><div class="line">               } <span class="keyword">else</span> {</div><div class="line">                   curRow.add(StringUtil.encode(rs.getString(j), sc.getCharset()));</div><div class="line">               }</div><div class="line">           }</div><div class="line">           curRow.packetId = ++packetId;</div><div class="line">           byteBuf = curRow.write(byteBuf, sc, <span class="keyword">false</span>);</div><div class="line">           byteBuf.flip();</div><div class="line">           <span class="keyword">byte</span>[] row = <span class="keyword">new</span> <span class="keyword">byte</span>[byteBuf.limit()];</div><div class="line">           byteBuf.get(row);</div><div class="line">           byteBuf.clear();</div><div class="line">           <span class="keyword">this</span>.respHandler.rowResponse(row, <span class="keyword">this</span>);</div><div class="line">       }</div><div class="line">       fieldPks.clear();</div><div class="line">       <span class="comment">// row eof</span></div><div class="line">       eofPckg = <span class="keyword">new</span> EOFPacket();</div><div class="line">       eofPckg.packetId = ++packetId;</div><div class="line">       byteBuf = eofPckg.write(byteBuf, sc, <span class="keyword">false</span>);</div><div class="line">       byteBuf.flip();</div><div class="line">       eof = <span class="keyword">new</span> <span class="keyword">byte</span>[byteBuf.limit()];</div><div class="line">       byteBuf.get(eof);</div><div class="line">       sc.recycle(byteBuf);</div><div class="line">       <span class="keyword">this</span>.respHandler.rowEofResponse(eof, <span class="keyword">this</span>);</div><div class="line">   } <span class="keyword">finally</span> {</div><div class="line">       <span class="keyword">if</span> (rs != <span class="keyword">null</span>) {</div><div class="line">           <span class="keyword">try</span> {</div><div class="line">               rs.close();</div><div class="line">           } <span class="keyword">catch</span> (SQLException e) {</div><div class="line">           }</div><div class="line">       }</div><div class="line">       <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) {</div><div class="line">           <span class="keyword">try</span> {</div><div class="line">               stmt.close();</div><div class="line">           } <span class="keyword">catch</span> (SQLException e) {</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="comment">// MongoResultSet.java</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getString</span><span class="params">(String columnLabel)</span> <span class="keyword">throws</span> SQLException </span>{</div><div class="line">   Object x = getObject(columnLabel);</div><div class="line">   <span class="keyword">if</span> (x == <span class="keyword">null</span>) {</div><div class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> x.toString();</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x5F53;&#x8FD4;&#x56DE;&#x5B57;&#x6BB5;&#x503C;&#x662F; Object &#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x8BE5;&#x5BF9;&#x8C61;.toString()&#x3002;&#x4F8B;&#x5982;&#xFF1A;</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; select * from user order by _id asc;</div><div class="line">+--------------------------+------+-------------------------------+</div><div class="line">| _id                      | name | profile                       |</div><div class="line">+--------------------------+------+-------------------------------+</div><div class="line">| 1                        | 123  | { &quot;age&quot; : 1 , &quot;height&quot; : 100} |</div></pre></td></tr></table></figure>
<h1 id="4-&#x63D2;&#x5165;&#x64CD;&#x4F5C;"><a href="#4-&#x63D2;&#x5165;&#x64CD;&#x4F5C;" class="headerlink" title="4. &#x63D2;&#x5165;&#x64CD;&#x4F5C;"></a>4. &#x63D2;&#x5165;&#x64CD;&#x4F5C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_19/05.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_19/05.png" alt="" class="ui centered image"></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MongoSQLParser.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">()</span> <span class="keyword">throws</span> MongoSQLException </span>{</div><div class="line">   <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> SQLInsertStatement) {</div><div class="line">       <span class="keyword">return</span> InsertData((SQLInsertStatement) statement);</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> SQLUpdateStatement) {</div><div class="line">       <span class="keyword">return</span> UpData((SQLUpdateStatement) statement);</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> SQLDropTableStatement) {</div><div class="line">       <span class="keyword">return</span> dropTable((SQLDropTableStatement) statement);</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> SQLDeleteStatement) {</div><div class="line">       <span class="keyword">return</span> DeleteDate((SQLDeleteStatement) statement);</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> SQLCreateTableStatement) {</div><div class="line">       <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">InsertData</span><span class="params">(SQLInsertStatement state)</span> </span>{</div><div class="line">   <span class="keyword">if</span> (state.getValues().getValues().size() == <span class="number">0</span>) {</div><div class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;number of  columns error&quot;</span>);</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (state.getValues().getValues().size() != state.getColumns().size()) {</div><div class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;number of values and columns have to match&quot;</span>);</div><div class="line">   }</div><div class="line">   SQLTableSource table = state.getTableSource();</div><div class="line">   BasicDBObject o = <span class="keyword">new</span> BasicDBObject();</div><div class="line">   <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">   <span class="keyword">for</span> (SQLExpr col : state.getColumns()) {</div><div class="line">       o.put(getFieldName2(col), getExpValue(state.getValues().getValues().get(i)));</div><div class="line">       i++;</div><div class="line">   }</div><div class="line">   DBCollection coll = <span class="keyword">this</span>._db.getCollection(table.toString());</div><div class="line">   coll.insert(o);</div><div class="line">   <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="5-&#x5F69;&#x86CB;"><a href="#5-&#x5F69;&#x86CB;" class="headerlink" title="5. &#x5F69;&#x86CB;"></a>5. &#x5F69;&#x86CB;</h1><p>&#x8001;&#x94C1;&#xFF0C;&#x770B;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x6765;&#x4E00;&#x6CE2;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x5173;&#x6CE8;&#x5427;&#xFF1F;&#xFF01;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="wechat_mp" class="ui centered image"></a></p>
<p><strong>1&#x3001;&#x652F;&#x6301;&#x591A; MongoDB &#xFF0C;&#x5E76;&#x4F7F;&#x7528; MyCAT &#x8FDB;&#x884C;&#x5206;&#x7247;&#x3002;</strong></p>
<p>MyCAT &#x914D;&#x7F6E;&#xFF1A;<a href="https://github.com/YunaiV/Mycat-Server/tree/1.6/src/test/resources/multi_mongodb" target="_blank" rel="external">multi_mongodb</a></p>
<p><strong>2&#x3001;&#x652F;&#x6301; MongoDB + MySQL &#x4F5C;&#x4E3A;&#x540C;&#x4E00;&#x4E2A; MyCAT Table &#x7684;&#x6570;&#x636E;&#x8282;&#x70B9;&#x3002;&#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x5408;&#x5E76;&#x6570;&#x636E;&#x7ED3;&#x679C;&#x3002;</strong></p>
<p>&#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x8FD4;&#x56DE; MySQL &#x6570;&#x636E;&#x8BB0;&#x5F55;&#x5B57;&#x6BB5;&#x8981;&#x6BD4; MongoDB &#x6570;&#x636E;&#x8BB0;&#x5F55;&#x5B57;&#x6BB5;&#x5168;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x5408;&#x5E76;&#x7ED3;&#x679C;&#x65F6;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p>
<p>MyCAT &#x914D;&#x7F6E;&#xFF1A;<a href="https://github.com/YunaiV/Mycat-Server/tree/1.6/src/test/resources/single_mongodb_mysql" target="_blank" rel="external">single_mongodb_mysql</a></p>
<p><strong>3&#x3001;MongoDB &#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; MyCAT &#x63D0;&#x4F9B;&#x7684;&#x6570;&#x636E;&#x5E93;&#x4E3B;&#x952E;&#x5B57;&#x6BB5;&#x529F;&#x80FD;&#x3002;</strong></p>
<p>MyCAT &#x914D;&#x7F6E;&#xFF1A;<a href="https://github.com/YunaiV/Mycat-Server/tree/1.6/src/test/resources/single_mongodb" target="_blank" rel="external">single_mongodb</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析  —— PreparedStatement 重新入门</title>
    <link href="http://www.yunai.me/MyCAT/what-is-PreparedStatement/"/>
    <id>http://www.yunai.me/MyCAT/what-is-PreparedStatement/</id>
    <published>2017-07-16T16:00:00.000Z</published>
    <updated>2017-07-20T01:38:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. JDBC Client &#x5B9E;&#x73B0;</a></li>
<li><a href="#">3. MyCAT Server &#x5B9E;&#x73B0;</a><ul>
<li><a href="#">3.1 &#x521B;&#x5EFA; PreparedStatement</a></li>
<li><a href="#">3.2 &#x6267;&#x884C; SQL</a></li>
</ul>
</li>
<li><a href="#">4. &#x5F69;&#x86CB;</a></li>
</ul>
<hr>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>&#x76F8;&#x4FE1;&#x5F88;&#x591A;&#x540C;&#x5B66;&#x5728;&#x5B66;&#x4E60; JDBC &#x65F6;&#xFF0C;&#x90FD;&#x78B0;&#x5230; <code>PreparedStatement</code> &#x548C; <code>Statement</code>&#x3002;&#x7A76;&#x7ADF;&#x8BE5;&#x4F7F;&#x7528;&#x54EA;&#x4E2A;&#x5462;&#xFF1F;&#x6700;&#x7EC8;&#x5F88;&#x53EF;&#x80FD;&#x662F;<strong>&#x61F5;&#x91CC;&#x61F5;&#x61C2;</strong>&#x7684;&#x770B;&#x4E86;&#x5404;&#x79CD;&#x603B;&#x7ED3;&#xFF0C;&#x4F7F;&#x7528; <code>PreparedStatement</code>&#x3002;&#x90A3;&#x4E48;&#x672C;&#x6587;&#xFF0C;&#x901A;&#x8FC7; MyCAT &#x5BF9; <code>PreparedStatement</code> &#x7684;&#x5B9E;&#x73B0;&#x5BF9;&#x5927;&#x5BB6;&#x80FD;&#x591F;&#x91CD;&#x65B0;&#x7406;&#x89E3;&#x4E0B;&#x3002;</p>
<p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5206;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF1A;</p>
<ol class="ui list">
<li>JDBC Client &#x5982;&#x4F55;&#x5B9E;&#x73B0; <code>PreparedStatement</code>&#x3002;</li>
<li>MyCAT Server &#x5982;&#x4F55;&#x5904;&#x7406; <code>PreparedStatement</code>&#x3002;</li>
</ol>
<p>&#x1F608; Let&#x2019;s Go&#x3002;</p>
<h1 id="2-JDBC-Client-&#x5B9E;&#x73B0;"><a href="#2-JDBC-Client-&#x5B9E;&#x73B0;" class="headerlink" title="2. JDBC Client &#x5B9E;&#x73B0;"></a>2. JDBC Client &#x5B9E;&#x73B0;</h1><p>&#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x6BB5;&#x5927;&#x5BB6;&#x6700;&#x559C;&#x6B22;&#x590D;&#x5236;&#x7C98;&#x8D34;&#x4E4B;&#x4E00;&#x7684;&#x4EE3;&#x7801;&#xFF0C;JDBC PreparedStatement &#x67E5;&#x8BE2; MySQL &#x6570;&#x636E;&#x5E93;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreparedStatementDemo</span> </span>{</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>{</div><div class="line">        <span class="comment">// 1. &#x83B7;&#x5F97;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;</span></div><div class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</div><div class="line">        Connection conn = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:8066/dbtest?useServerPrepStmts=true&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>);</div><div class="line"></div><div class="line">        <span class="comment">// PreparedStatement</span></div><div class="line">        PreparedStatement ps = conn.prepareStatement(<span class="string">&quot;SELECT id, username, password FROM t_user WHERE id = ?&quot;</span>);</div><div class="line">        ps.setLong(<span class="number">1</span>, Math.abs(<span class="keyword">new</span> Random().nextLong()));</div><div class="line"></div><div class="line">        <span class="comment">// execute</span></div><div class="line">        ps.executeQuery();</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x83B7;&#x53D6; MySQL &#x8FDE;&#x63A5;&#x65F6;&#xFF0C;<code>useServerPrepStmts=true</code>  &#x662F;<strong>&#x975E;&#x5E38;&#x975E;&#x5E38;&#x975E;&#x5E38;&#x91CD;&#x8981;</strong>&#x7684;&#x53C2;&#x6570;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x914D;&#x7F6E;&#xFF0C;<code>PreparedStatement</code> &#x5B9E;&#x9645;&#x662F;&#x4E2A;<strong>&#x5047;</strong>&#x7684; <code>PreparedStatement</code>&#xFF08;&#x65B0;&#x7248;&#x672C;&#x9ED8;&#x8BA4;&#x4E3A; FALSE&#xFF0C;&#x636E;&#x8BF4;&#x90E8;&#x5206;&#x8001;&#x7248;&#x672C;&#x9ED8;&#x8BA4;&#x4E3A; TRUE&#xFF09;&#xFF0C;&#x672A;&#x5F00;&#x542F;&#x670D;&#x52A1;&#x7AEF;&#x7EA7;&#x522B;&#x7684; SQL &#x9884;&#x7F16;&#x8BD1;&#x3002;</p>
<p>WHY &#xFF1F;&#x6765;&#x770B;&#x4E0B; JDBC &#x91CC;&#x9762;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// com.mysql.jdbc.ConnectionImpl.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql, <span class="keyword">int</span> resultSetType, <span class="keyword">int</span> resultSetConcurrency)</span> <span class="keyword">throws</span> SQLException </span>{</div><div class="line">   <span class="keyword">synchronized</span> (getConnectionMutex()) {</div><div class="line">       checkClosed();</div><div class="line">       </div><div class="line">       PreparedStatement pStmt = <span class="keyword">null</span>;</div><div class="line">       <span class="keyword">boolean</span> canServerPrepare = <span class="keyword">true</span>;</div><div class="line">       String nativeSql = getProcessEscapeCodesForPrepStmts() ? nativeSQL(sql) : sql;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.useServerPreparedStmts &amp;&amp; getEmulateUnsupportedPstmts()) {</div><div class="line">           canServerPrepare = canHandleAsServerPreparedStatement(nativeSql);</div><div class="line">       }</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.useServerPreparedStmts &amp;&amp; canServerPrepare) {</div><div class="line">           <span class="keyword">if</span> (<span class="keyword">this</span>.getCachePreparedStatements()) { <span class="comment">// &#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x83B7;&#x53D6; pStmt</span></div><div class="line">               <span class="keyword">synchronized</span> (<span class="keyword">this</span>.serverSideStatementCache) {</div><div class="line">                   pStmt = (com.mysql.jdbc.ServerPreparedStatement) <span class="keyword">this</span>.serverSideStatementCache</div><div class="line">                           .remove(makePreparedStatementCacheKey(<span class="keyword">this</span>.database, sql));</div><div class="line"></div><div class="line">                   <span class="keyword">if</span> (pStmt != <span class="keyword">null</span>) {</div><div class="line">                       ((com.mysql.jdbc.ServerPreparedStatement) pStmt).setClosed(<span class="keyword">false</span>);</div><div class="line">                       pStmt.clearParameters(); <span class="comment">// &#x6E05;&#x7406;&#x4E0A;&#x6B21;&#x7559;&#x4E0B;&#x7684;&#x53C2;&#x6570;</span></div><div class="line">                   }</div><div class="line"></div><div class="line">                   <span class="keyword">if</span> (pStmt == <span class="keyword">null</span>) {</div><div class="line">                        <span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801; &#xFF1A;&#x5411; Server &#x63D0;&#x4EA4; SQL &#x9884;&#x7F16;&#x8BD1;&#x3002;</span></div><div class="line">                   }</div><div class="line">               }</div><div class="line">           } <span class="keyword">else</span> {</div><div class="line">               <span class="keyword">try</span> {</div><div class="line">                   <span class="comment">// &#x5411; Server &#x63D0;&#x4EA4; SQL &#x9884;&#x7F16;&#x8BD1;&#x3002;</span></div><div class="line">                   pStmt = ServerPreparedStatement.getInstance(getMultiHostSafeProxy(), nativeSql, <span class="keyword">this</span>.database, resultSetType, resultSetConcurrency);</div><div class="line"></div><div class="line">                   pStmt.setResultSetType(resultSetType);</div><div class="line">                   pStmt.setResultSetConcurrency(resultSetConcurrency);</div><div class="line">               } <span class="keyword">catch</span> (SQLException sqlEx) {</div><div class="line">                   <span class="comment">// Punt, if necessary</span></div><div class="line">                   <span class="keyword">if</span> (getEmulateUnsupportedPstmts()) {</div><div class="line">                       pStmt = (PreparedStatement) clientPrepareStatement(nativeSql, resultSetType, resultSetConcurrency, <span class="keyword">false</span>);</div><div class="line">                   } <span class="keyword">else</span> {</div><div class="line">                       <span class="keyword">throw</span> sqlEx;</div><div class="line">                   }</div><div class="line">               }</div><div class="line">           }</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           pStmt = (PreparedStatement) clientPrepareStatement(nativeSql, resultSetType, resultSetConcurrency, <span class="keyword">false</span>);</div><div class="line">       }</div><div class="line"></div><div class="line">       <span class="keyword">return</span> pStmt;</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x3010;&#x524D;&#x8005;&#x3011;&#x5F53; Client &#x5F00;&#x542F; <code>useServerPreparedStmts</code> &#x5E76;&#x4E14; Server &#x652F;&#x6301; <code>ServerPrepare</code>&#xFF0C;<strong>Client &#x4F1A;&#x5411; Server &#x63D0;&#x4EA4; SQL &#x9884;&#x7F16;&#x8BD1;&#x8BF7;&#x6C42;</strong>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.useServerPreparedStmts &amp;&amp; canServerPrepare) {</div><div class="line">    pStmt = ServerPreparedStatement.getInstance(getMultiHostSafeProxy(), nativeSql, <span class="keyword">this</span>.database, resultSetType, resultSetConcurrency);</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x3010;&#x540E;&#x8005;&#x3011;&#x5F53; Client &#x672A;&#x5F00;&#x542F; <code>useServerPreparedStmts</code> &#x6216;&#x8005; Server &#x4E0D;&#x652F;&#x6301; <code>ServerPrepare</code>&#xFF0C;Client &#x521B;&#x5EFA; <code>PreparedStatement</code>&#xFF0C;<strong><em>&#x4E0D;&#x4F1A;</em>&#x5411; Server &#x63D0;&#x4EA4; SQL &#x9884;&#x7F16;&#x8BD1;&#x8BF7;&#x6C42;</strong>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">pStmt = (PreparedStatement) clientPrepareStatement(nativeSql, resultSetType, resultSetConcurrency, <span class="keyword">false</span>);</div></pre></td></tr></table></figure>
<p><strong>&#x5373;&#x4F7F;&#x8FD9;&#x6837;&#xFF0C;&#x7A76;&#x7ADF;&#x4E3A;&#x4EC0;&#x4E48;&#x6027;&#x80FD;&#x4F1A;&#x66F4;&#x597D;&#x5462;&#xFF1F;</strong></p>
<ul class="ui list">
<li>&#x3010;&#x524D;&#x8005;&#x3011;&#x8FD4;&#x56DE;&#x7684; <code>PreparedStatement</code> &#x5BF9;&#x8C61;&#x7C7B;&#x662F; <code>JDBC42ServerPreparedStatement.java</code>&#xFF0C;&#x540E;&#x7EED;&#x6BCF;&#x6B21;&#x6267;&#x884C; SQL &#x53EA;&#x9700;&#x5C06;&#x5BF9;&#x5E94;&#x5360;&#x4F4D;&#x7B26;?&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x63D0;&#x4EA4;&#x7ED9; Server&#x5373;&#x53EF;&#xFF0C;&#x51CF;&#x5C11;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x548C; SQL &#x89E3;&#x6790;&#x5F00;&#x9500;&#x3002;  </li>
<li>&#x3010;&#x540E;&#x8005;&#x3011;&#x8FD4;&#x56DE;&#x7684; <code>PreparedStatement</code> &#x5BF9;&#x8C61;&#x7C7B;&#x662F; <code>JDBC42PreparedStatement.java</code>&#xFF0C;&#x540E;&#x7EED;&#x6BCF;&#x6B21;&#x6267;&#x884C; SQL &#x9700;&#x8981;&#x5C06;<strong>&#x5B8C;&#x6574;</strong>&#x7684; SQL &#x63D0;&#x4EA4;&#x7ED9; Server&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x548C; SQL &#x89E3;&#x6790;&#x5F00;&#x9500;&#x3002;</li>
</ul>
<p><em>&#x1F31A;&#xFF1A;&#x3010;&#x524D;&#x8005;&#x3011;&#x6027;&#x80FD;&#x4E00;&#x5B9A;&#x6BD4;&#x3010;&#x540E;&#x8005;&#x3011;&#x597D;&#x5417;&#xFF1F;&#x76F8;&#x4FE1;&#x4F60;&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x6B63;&#x786E;&#x7684;&#x7B54;&#x6848;&#x3002;</em></p>
<h1 id="3-MyCAT-Server-&#x5B9E;&#x73B0;"><a href="#3-MyCAT-Server-&#x5B9E;&#x73B0;" class="headerlink" title="3. MyCAT Server &#x5B9E;&#x73B0;"></a>3. MyCAT Server &#x5B9E;&#x73B0;</h1><h2 id="3-1-&#x521B;&#x5EFA;-PreparedStatement"><a href="#3-1-&#x521B;&#x5EFA;-PreparedStatement" class="headerlink" title="3.1 &#x521B;&#x5EFA; PreparedStatement"></a>3.1 &#x521B;&#x5EFA; PreparedStatement</h2><p>&#x8BE5;&#x64CD;&#x4F5C;&#x5BF9;&#x5E94; Client <code>conn.prepareStatement(....)</code>&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_17/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_17/01.png" alt="" class="ui centered image"></a></p>
<p>MyCAT &#x63A5;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x521B;&#x5EFA; <code>PreparedStatement</code>&#xFF0C;&#x5E76;&#x8FD4;&#x56DE; <code>statementId</code> &#x7B49;&#x4FE1;&#x606F;&#x3002;Client &#x53D1;&#x8D77; SQL &#x6267;&#x884C;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5C06; <code>statementId</code> &#x5E26;&#x7ED9; MyCAT&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ServerPrepareHandler.java</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prepare</span><span class="params">(String sql)</span> </span>{</div><div class="line">LOGGER.debug(<span class="string">&quot;use server prepare, sql: &quot;</span> + sql);</div><div class="line"></div><div class="line">   PreparedStatement pstmt = pstmtForSql.get(sql);</div><div class="line">   <span class="keyword">if</span> (pstmt == <span class="keyword">null</span>) { <span class="comment">// &#x7F13;&#x5B58;&#x4E2D;&#x83B7;&#x53D6;</span></div><div class="line">   	<span class="comment">// &#x89E3;&#x6790;&#x83B7;&#x53D6;&#x5B57;&#x6BB5;&#x4E2A;&#x6570;&#x548C;&#x53C2;&#x6570;&#x4E2A;&#x6570;</span></div><div class="line">   	<span class="keyword">int</span> columnCount = getColumnCount(sql);</div><div class="line">   	<span class="keyword">int</span> paramCount = getParamCount(sql);</div><div class="line">       pstmt = <span class="keyword">new</span> PreparedStatement(++pstmtId, sql, columnCount, paramCount);</div><div class="line">       pstmtForSql.put(pstmt.getStatement(), pstmt);</div><div class="line">       pstmtForId.put(pstmt.getId(), pstmt);</div><div class="line">   }</div><div class="line">   PreparedStmtResponse.response(pstmt, source);</div><div class="line">}</div><div class="line"><span class="comment">// PreparedStmtResponse.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">response</span><span class="params">(PreparedStatement pstmt, FrontendConnection c)</span> </span>{</div><div class="line">   <span class="keyword">byte</span> packetId = <span class="number">0</span>;</div><div class="line"></div><div class="line">   <span class="comment">// write preparedOk packet</span></div><div class="line">   PreparedOkPacket preparedOk = <span class="keyword">new</span> PreparedOkPacket();</div><div class="line">   preparedOk.packetId = ++packetId;</div><div class="line">   preparedOk.statementId = pstmt.getId();</div><div class="line">   preparedOk.columnsNumber = pstmt.getColumnsNumber();</div><div class="line">   preparedOk.parametersNumber = pstmt.getParametersNumber();</div><div class="line">   ByteBuffer buffer = preparedOk.write(c.allocate(), c,<span class="keyword">true</span>);</div><div class="line"></div><div class="line">   <span class="comment">// write parameter field packet</span></div><div class="line">   <span class="keyword">int</span> parametersNumber = preparedOk.parametersNumber;</div><div class="line">   <span class="keyword">if</span> (parametersNumber &gt; <span class="number">0</span>) {</div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; parametersNumber; i++) {</div><div class="line">           FieldPacket field = <span class="keyword">new</span> FieldPacket();</div><div class="line">           field.packetId = ++packetId;</div><div class="line">           buffer = field.write(buffer, c,<span class="keyword">true</span>);</div><div class="line">       }</div><div class="line">       EOFPacket eof = <span class="keyword">new</span> EOFPacket();</div><div class="line">       eof.packetId = ++packetId;</div><div class="line">       buffer = eof.write(buffer, c,<span class="keyword">true</span>);</div><div class="line">   }</div><div class="line"></div><div class="line">   <span class="comment">// write column field packet</span></div><div class="line">   <span class="keyword">int</span> columnsNumber = preparedOk.columnsNumber;</div><div class="line">   <span class="keyword">if</span> (columnsNumber &gt; <span class="number">0</span>) {</div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columnsNumber; i++) {</div><div class="line">           FieldPacket field = <span class="keyword">new</span> FieldPacket();</div><div class="line">           field.packetId = ++packetId;</div><div class="line">           buffer = field.write(buffer, c,<span class="keyword">true</span>);</div><div class="line">       }</div><div class="line">       EOFPacket eof = <span class="keyword">new</span> EOFPacket();</div><div class="line">       eof.packetId = ++packetId;</div><div class="line">       buffer = eof.write(buffer, c,<span class="keyword">true</span>);</div><div class="line">   }</div><div class="line"></div><div class="line">   <span class="comment">// send buffer</span></div><div class="line">   c.write(buffer);</div><div class="line">}</div></pre></td></tr></table></figure>
<p><strong>&#x6BCF;&#x4E2A;&#x8FDE;&#x63A5;&#x4E4B;&#x95F4;&#xFF0C;PreparedStatement &#x4E0D;&#x5171;&#x4EAB;&#xFF0C;&#x5373;&#x4E0D;&#x540C;&#x8FDE;&#x63A5;&#xFF0C;&#x5373;&#x4F7F; SQL&#x76F8;&#x540C;&#xFF0C;&#x5BF9;&#x5E94;&#x7684; PreparedStatement &#x4E0D;&#x540C;&#x3002;</strong></p>
<h2 id="3-2-&#x6267;&#x884C;-SQL"><a href="#3-2-&#x6267;&#x884C;-SQL" class="headerlink" title="3.2 &#x6267;&#x884C; SQL"></a>3.2 &#x6267;&#x884C; SQL</h2><p>&#x8BE5;&#x64CD;&#x4F5C;&#x5BF9;&#x5E94; Client <code>conn.execute(....)</code>&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_17/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_17/02.png" alt="" class="ui centered image"></a></p>
<p>MyCAT &#x63A5;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#x540E;&#xFF0C;&#x5C06; PreparedStatement &#x4F7F;&#x7528;&#x8BF7;&#x6C42;&#x7684;&#x53C2;&#x6570;&#x683C;&#x5F0F;&#x5316;&#x6210;&#x53EF;&#x6267;&#x884C;&#x7684; SQL &#x8FDB;&#x884C;&#x6267;&#x884C;&#x3002;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">String sql = pstmt.sql.format(request.params);</div><div class="line">execute(sql);</div></pre></td></tr></table></figure>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ServerPrepareHandler.java</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line">   <span class="keyword">long</span> pstmtId = ByteUtil.readUB4(data, <span class="number">5</span>);</div><div class="line">   PreparedStatement pstmt = <span class="keyword">null</span>;</div><div class="line">   <span class="keyword">if</span> ((pstmt = pstmtForId.get(pstmtId)) == <span class="keyword">null</span>) {</div><div class="line">       source.writeErrMessage(ErrorCode.ER_ERROR_WHEN_EXECUTING_COMMAND, <span class="string">&quot;Unknown pstmtId when executing.&quot;</span>);</div><div class="line">   } <span class="keyword">else</span> {</div><div class="line">       <span class="comment">// &#x53C2;&#x6570;&#x8BFB;&#x53D6;</span></div><div class="line">       ExecutePacket packet = <span class="keyword">new</span> ExecutePacket(pstmt);</div><div class="line">       <span class="keyword">try</span> {</div><div class="line">           packet.read(data, source.getCharset());</div><div class="line">       } <span class="keyword">catch</span> (UnsupportedEncodingException e) {</div><div class="line">           source.writeErrMessage(ErrorCode.ER_ERROR_WHEN_EXECUTING_COMMAND, e.getMessage());</div><div class="line">           <span class="keyword">return</span>;</div><div class="line">       }</div><div class="line">       BindValue[] bindValues = packet.values;</div><div class="line">       <span class="comment">// &#x8FD8;&#x539F;sql&#x4E2D;&#x7684;&#x52A8;&#x6001;&#x53C2;&#x6570;&#x4E3A;&#x5B9E;&#x9645;&#x53C2;&#x6570;&#x503C;</span></div><div class="line">       String sql = prepareStmtBindValue(pstmt, bindValues);</div><div class="line">       <span class="comment">// &#x6267;&#x884C;sql</span></div><div class="line">       source.getSession2().setPrepared(<span class="keyword">true</span>);</div><div class="line">       source.query(sql);</div><div class="line">   }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> String <span class="title">prepareStmtBindValue</span><span class="params">(PreparedStatement pstmt, BindValue[] bindValues)</span> </span>{</div><div class="line">   String sql = pstmt.getStatement();</div><div class="line">   <span class="keyword">int</span>[] paramTypes = pstmt.getParametersType();</div><div class="line"></div><div class="line">   StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">   <span class="keyword">int</span> idx = <span class="number">0</span>;</div><div class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, len = sql.length(); i &lt; len; i++) {</div><div class="line">       <span class="keyword">char</span> c = sql.charAt(i);</div><div class="line">       <span class="keyword">if</span> (c != <span class="string">&apos;?&apos;</span>) {</div><div class="line">           sb.append(c);</div><div class="line">           <span class="keyword">continue</span>;</div><div class="line">       }</div><div class="line">       <span class="comment">// &#x5904;&#x7406;&#x5360;&#x4F4D;&#x7B26;?</span></div><div class="line">       <span class="keyword">int</span> paramType = paramTypes[idx];</div><div class="line">       BindValue bindValue = bindValues[idx];</div><div class="line">       idx++;</div><div class="line">       <span class="comment">// &#x5904;&#x7406;&#x5B57;&#x6BB5;&#x4E3A;&#x7A7A;&#x7684;&#x60C5;&#x51B5;</span></div><div class="line">       <span class="keyword">if</span> (bindValue.isNull) {</div><div class="line">           sb.append(<span class="string">&quot;NULL&quot;</span>);</div><div class="line">           <span class="keyword">continue</span>;</div><div class="line">       }</div><div class="line">       <span class="comment">// &#x975E;&#x7A7A;&#x60C5;&#x51B5;, &#x6839;&#x636E;&#x5B57;&#x6BB5;&#x7C7B;&#x578B;&#x83B7;&#x53D6;&#x503C;</span></div><div class="line">       <span class="keyword">switch</span> (paramType &amp; <span class="number">0xff</span>) {</div><div class="line">           <span class="keyword">case</span> Fields.FIELD_TYPE_TINY:</div><div class="line">               sb.append(String.valueOf(bindValue.byteBinding));</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> Fields.FIELD_TYPE_SHORT:</div><div class="line">               sb.append(String.valueOf(bindValue.shortBinding));</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="keyword">case</span> Fields.FIELD_TYPE_LONG:</div><div class="line">               sb.append(String.valueOf(bindValue.intBinding));</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           <span class="comment">// .... &#x7701;&#x7565;&#x975E;&#x6838;&#x5FC3;&#x4EE3;&#x7801;</span></div><div class="line">        }</div><div class="line">   }</div><div class="line"></div><div class="line">   <span class="keyword">return</span> sb.toString();</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="4-&#x5F69;&#x86CB;"><a href="#4-&#x5F69;&#x86CB;" class="headerlink" title="4. &#x5F69;&#x86CB;"></a>4. &#x5F69;&#x86CB;</h1><p>&#x1F4AF; &#x770B;&#x5230;&#x6B64;&#x5904;&#x662F;&#x4E0D;&#x662F;&#x771F;&#x7231;&#xFF1F;&#xFF01;&#x53CD;&#x6B63;&#x6211;&#x4FE1;&#x4E86;&#x3002;<br>&#x7ED9;&#x8001;&#x94C1;&#x4EEC;&#x989D;&#x5916;&#x52A0;&#x4E2A;&#x1F357;&#x3002;</p>
<p>&#x7EC6;&#x5FC3;&#x7684;&#x540C;&#x5B66;&#x4EEC;&#x53EF;&#x80FD;&#x5DF2;&#x7ECF;&#x6CE8;&#x610F;&#x5230; JDBC Client &#x662F;&#x652F;&#x6301;&#x7F13;&#x5B58; <code>PreparedStatement</code>&#xFF0C;&#x65E0;&#x9700;&#x6BCF;&#x6B21;&#x90FD;&#x8BA9; Server &#x8FDB;&#x884C;&#x521B;&#x5EFA;&#x3002;</p>
<p>&#x5F53;&#x914D;&#x7F6E; MySQL &#x6570;&#x636E;&#x8FDE;&#x63A5; <code>cachePrepStmts=true</code> &#x65F6;&#x5F00;&#x542F; Client &#x7EA7;&#x522B;&#x7684;&#x7F13;&#x5B58;&#x3002;But&#xFF0C;<strong>&#x6B64;&#x5904;&#x7684;&#x7F13;&#x5B58;&#x53C8;&#x548C;&#x4E00;&#x822C;&#x7684;&#x7F13;&#x5B58;&#x4E0D;&#x4E00;&#x6837;</strong>&#xFF0C;&#x662F;&#x4F7F;&#x7528; <code>remove</code> &#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x5F97;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x521B;&#x5EFA;&#x597D; <code>PreparedStatement</code> &#x65F6;&#x4E5F;&#x4E0D;&#x6DFB;&#x52A0;&#x5230;&#x7F13;&#x5B58;&#x3002;&#x90A3;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x6DFB;&#x52A0;&#x7F13;&#x5B58;&#x5462;&#xFF1F;&#x5728; <code>pstmt.close()</code> &#x65F6;&#xFF0C;&#x5E76;&#x4E14;<strong><code>pstmt</code> &#x662F;&#x901A;&#x8FC7;&#x7F13;&#x5B58;&#x83B7;&#x53D6;&#x65F6;</strong>&#xFF0C;&#x6DFB;&#x52A0;&#x5230;&#x7F13;&#x5B58;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ServerPreparedStatement.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>{</div><div class="line">   MySQLConnection locallyScopedConn = <span class="keyword">this</span>.connection;</div><div class="line"></div><div class="line">   <span class="keyword">if</span> (locallyScopedConn == <span class="keyword">null</span>) {</div><div class="line">       <span class="keyword">return</span>; <span class="comment">// already closed</span></div><div class="line">   }</div><div class="line"></div><div class="line">   <span class="keyword">synchronized</span> (locallyScopedConn.getConnectionMutex()) {</div><div class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.isCached &amp;&amp; isPoolable() &amp;&amp; !<span class="keyword">this</span>.isClosed) {</div><div class="line">           clearParameters();</div><div class="line">           <span class="keyword">this</span>.isClosed = <span class="keyword">true</span>;</div><div class="line">           <span class="keyword">this</span>.connection.recachePreparedStatement(<span class="keyword">this</span>);</div><div class="line">           <span class="keyword">return</span>;</div><div class="line">       }</div><div class="line"></div><div class="line">       realClose(<span class="keyword">true</span>, <span class="keyword">true</span>);</div><div class="line">   }</div><div class="line">}</div><div class="line"><span class="comment">// ConnectionImpl.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recachePreparedStatement</span><span class="params">(ServerPreparedStatement pstmt)</span> <span class="keyword">throws</span> SQLException </span>{</div><div class="line">   <span class="keyword">synchronized</span> (getConnectionMutex()) {</div><div class="line">       <span class="keyword">if</span> (getCachePreparedStatements() &amp;&amp; pstmt.isPoolable()) {</div><div class="line">           <span class="keyword">synchronized</span> (<span class="keyword">this</span>.serverSideStatementCache) {</div><div class="line">               <span class="keyword">this</span>.serverSideStatementCache.put(makePreparedStatementCacheKey(pstmt.currentCatalog, pstmt.originalSql), pstmt);</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x8FD9;&#x4E48;&#x5B9E;&#x73B0;&#xFF1F;<code>PreparedStatement</code> &#x662F;&#x6709;&#x72B6;&#x6001;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x53BB; <code>setXXX(pos, value)</code>&#xFF0C;&#x4E00;&#x65E6;&#x591A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x9519;&#x4E71;&#x3002;</p>
<p>&#x1F5FF; &#x8FD9;&#x4E2A;&#x201C;&#x5F69;&#x86CB;&#x201D;&#x8FD8;&#x6EE1;&#x610F;&#x4E48;&#xFF1F;<strong>&#x8BF7;&#x5173;&#x6CE8;&#x6211;&#x7684;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;</strong>&#x3002;&#x4E0B;&#x4E00;&#x7BC7;&#x66F4;&#x65B0;&#xFF1A;&#x300A;MyCAT&#x6E90;&#x7801;&#x89E3;&#x6790; &#x2014;&#x2014; MongoDB&#x300B;&#xFF0C;&#x6781;&#x5927;&#x53EF;&#x80FD;&#x5C31;&#x5728;&#x672C;&#x5468;&#x5662;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="wechat_mp" class="ui centered image"></a></p>
<p>&#x53E6;&#x5916;&#x63A8;&#x8350;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;<a href="https://www.zybuluo.com/stefanlu/note/254899" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;JDBC PreparedStatement&#x300B;</a>&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么阅读 Sharding-JDBC 源码？</title>
    <link href="http://www.yunai.me/Sharding-JDBC/why-read-Sharding-JDBC-source-code/"/>
    <id>http://www.yunai.me/Sharding-JDBC/why-read-Sharding-JDBC-source-code/</id>
    <published>2017-07-15T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB;-Sharding-JDBC-&#x6E90;&#x7801;&#xFF1F;"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB;-Sharding-JDBC-&#x6E90;&#x7801;&#xFF1F;" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB; Sharding-JDBC &#x6E90;&#x7801;&#xFF1F;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB; Sharding-JDBC &#x6E90;&#x7801;&#xFF1F;</h2><ol class="ui list">
<li>&#x770B;&#x5B8C;&#x5927;&#x90E8;&#x5206;&#x7684; MyCAT &#x6E90;&#x7801;&#xFF0C;&#x6709;&#x60CA;&#x559C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4E5F;&#x6709;&#x5931;&#x671B;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x56E0;&#x800C;&#x60F3;&#x770B;&#x770B; Sharding-JDBC &#x8FDB;&#x884C;&#x4E0B;&#x5BF9;&#x6BD4;&#x3002;&#x5C3D;&#x7BA1;&#xFF0C;Sharding-JDBC &#x662F; Client &#x7AEF;&#x7EA7;&#x522B;&#xFF0C;MyCAT &#x662F; Server &#x7EA7;&#x522B;&#x3002;</li>
<li>Sharding-JDBC &#x7ECF;&#x5386;&#x8FC7;&#x5F53;&#x5F53;&#x672C;&#x8EAB;&#x4E1A;&#x52A1;&#x7684;&#x8003;&#x9A8C;&#xFF0C;&#x4ECE;&#x53EF;&#x9760;&#x6027;&#x4E0A;&#x6765;&#x8BF4;&#x4F1A;&#x66F4;&#x8BA9;&#x4EBA;&#x6709;&#x4FE1;&#x8D56;&#x611F;&#x3002;</li>
<li>&#x6587;&#x6863;&#x66F4;&#x52A0;&#x5B8C;&#x5584;&#xFF0C;&#x5F00;&#x53D1;&#x4F53;&#x7CFB;&#x66F4;&#x52A0;&#x5065;&#x5168;&#x3002;</li>
<li>Sharding-JDBC 1.5.0.M3 &#x53D1;&#x5E03;&#x3002;</li>
<li><strong>&#x6700;&#x5927;&#x52AA;&#x529B;&#x9001;&#x8FBE;&#x578B;</strong>&#x4E8B;&#x52A1;&#x652F;&#x6301;&#xFF0C;&#x60F3;&#x8981;&#x8FDB;&#x4E00;&#x6B65;&#x4E86;&#x89E3;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;Last But Very Importment&#x3002;</li>
</ol>
<h2 id="&#x6B65;&#x9AA4;"><a href="#&#x6B65;&#x9AA4;" class="headerlink" title="&#x6B65;&#x9AA4;"></a>&#x6B65;&#x9AA4;</h2><ul class="ui list">
<li><p>FROM MyCAT</p>
<p>  <strong>&#x4ECE; MyCAT &#x9605;&#x8BFB;&#x8BA1;&#x5212;&#x590D;&#x5236;&#xFF0C;&#x7528;&#x4E8E;&#x5BF9;&#x6BD4;&#x3002;</strong></p>
</li>
<li><p>[ ] NIO</p>
</li>
<li>[ ] <del>&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;</del></li>
<li>[ ] <del>MyCAT &#x4E3B;&#x4ECE;</del></li>
<li>[ ] <del>&#x652F;&#x6301;prepare&#x9884;&#x7F16;&#x8BD1;&#x6307;&#x4EE4;</del></li>
<li>[ ] &#x81EA;&#x589E;&#x5E8F;&#x5217;</li>
<li>[ ] &#x5355;&#x5E93;&#x4EFB;&#x610F; Join</li>
<li>[ ] &#x8DE8;&#x5E93;2&#x8868; Join</li>
<li>[ ] &#x8DE8;&#x5E93;&#x591A;&#x8868; Join</li>
<li>[ ] SQL &#x89E3;&#x6790;</li>
<li>[ ] &#x8BFB;&#x5199;&#x5206;&#x79BB;</li>
<li>[ ] MySQL &#x4E3B;&#x4ECE;</li>
<li>[ ] <del>&#x81EA;&#x52A8;&#x6545;&#x969C;&#x5207;&#x6362;</del></li>
<li>[ ] <del>Galera Cluster &#x96C6;&#x7FA4;</del></li>
<li>[ ] <del>MHA &#x96C6;&#x7FA4;</del></li>
<li>[ ] <del>Percona &#x96C6;&#x7FA4;</del></li>
<li>[ ] <del>&#x670D;&#x52A1;&#x964D;&#x7EA7;</del></li>
<li>[ ] <del>&#x591A;&#x79DF;&#x6237;</del></li>
<li>[ ] &#x8DEF;&#x7531;</li>
<li>[ ] <del>MyCAT &#x96C6;&#x7FA4;</del></li>
<li>[ ] &#x6CE8;&#x89E3;</li>
<li>[ ] &#x7F13;&#x5B58;</li>
<li>[ ] &#x76D1;&#x63A7;</li>
<li>[ ] <del>Mongodb</del></li>
<li>[ ] &#x5185;&#x5B58;&#x7BA1;&#x7406;</li>
<li>[ ] &#x6570;&#x636E;&#x805A;&#x5408;</li>
<li>[ ] &#x6570;&#x636E;&#x6392;&#x5E8F;</li>
<li>[ ] &#x5206;&#x8868;</li>
<li>[ ] &#x5206;&#x5E93;</li>
<li>[ ] &#x5168;&#x5C40;&#x8868;</li>
<li>[ ] E/R&#x5173;&#x7CFB;</li>
<li>[ ] &#x670D;&#x52A1;&#x964D;&#x7EA7;</li>
<li>[ ] SQL &#x6CE8;&#x5165;&#x653B;&#x51FB;&#x62E6;&#x622A;</li>
<li>[ ] <del>MySQL &#x534F;&#x8BAE;</del></li>
<li>[ ] <del>PostgreSQL &#x534F;&#x8BAE;</del></li>
<li><p>[ ] &#x5B58;&#x50A8;&#x8FC7;&#x7A0B;</p>
</li>
<li><p>FROM Sharding-JDBC</p>
<p>  <strong>&#x4ECE; &#x5B98;&#x7F51; &#x4ECB;&#x7ECD;&#x83B7;&#x53D6;&#x3002;</strong></p>
</li>
<li><p>[ ] &#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1; &#xFF1A;&#x6700;&#x5927;&#x52AA;&#x529B;&#x9001;&#x8FBE;&#x578B;&#x4E8B;&#x52A1;</p>
</li>
<li>[ ] &#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1; &#xFF1A;TCC&#x578B;&#x4E8B;&#x52A1;(TBD)</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="Sharding-JDBC" scheme="http://www.yunai.me/categories/Sharding-JDBC/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析  —— XA分布式事务</title>
    <link href="http://www.yunai.me/MyCAT/xa-distributed-transaction/"/>
    <id>http://www.yunai.me/MyCAT/xa-distributed-transaction/</id>
    <published>2017-07-14T16:00:00.000Z</published>
    <updated>2017-07-20T01:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. XA &#x6982;&#x5FF5;</a></li>
<li><a href="#">3. MyCAT &#x4EE3;&#x7801;&#x5B9E;&#x73B0;</a><ul>
<li><a href="#">3.1 JDBC Demo &#x4EE3;&#x7801;</a></li>
<li><a href="#">3.2 MyCAT &#x5F00;&#x542F; XA &#x4E8B;&#x52A1;</a></li>
<li><a href="#">3.3 MyCAT &#x63A5;&#x6536; SQL</a></li>
<li><a href="#">3.4 MySQL &#x63A5;&#x6536; COMMIT</a><ul>
<li><a href="#">3.4.1 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1; or &#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;</a></li>
<li><a href="#">3.4.2 &#x534F;&#x8C03;&#x65E5;&#x5FD7;</a></li>
<li><a href="#">3.4.3 MultiNodeCoordinator</a></li>
</ul>
</li>
<li><a href="#">3.5 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; XA&#x4E8B;&#x52A1;</a></li>
</ul>
</li>
<li><a href="#">4. MyCAT &#x5B9E;&#x73B0;&#x7F3A;&#x9677;</a><ul>
<li><a href="#">4.1 &#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5199;&#x5165;&#x6027;&#x80FD;</a></li>
<li><a href="#">4.2 &#x6570;&#x636E;&#x8282;&#x70B9;&#x672A;&#x5168;&#x90E8; PREPARE &#x5C31;&#x8FDB;&#x884C; COMMIT</a></li>
<li><a href="#">4.3 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; PREPARE &#x7684; XA&#x4E8B;&#x52A1;</a></li>
<li><a href="#">4.4 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#x672A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;</a></li>
<li><a href="#">4.5 XA COMMIT &#x90E8;&#x5206;&#x8282;&#x70B9;&#x6302;&#x4E86;&#x91CD;&#x65B0;&#x6062;&#x590D;&#x540E;&#xFF0C;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;</a></li>
</ul>
</li>
<li><a href="#">5. &#x5F69;&#x86CB;</a></li>
</ul>
<hr>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>&#x6570;&#x636E;&#x5E93;&#x62C6;&#x5206;&#x540E;&#xFF0C;&#x4E1A;&#x52A1;&#x4E0A;&#x4F1A;&#x78B0;&#x5230;&#x9700;&#x8981;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x7684;&#x573A;&#x666F;&#x3002;MyCAT &#x57FA;&#x4E8E; XA &#x5B9E;&#x73B0;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x3002;&#x56FD;&#x5185;&#x76EE;&#x524D;&#x53E6;&#x5916;&#x4E00;&#x6B3E;&#x5F88;&#x706B;&#x7684;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x95F4;&#x4EF6; Sharding-JDBC &#x51C6;&#x5907;&#x57FA;&#x4E8E; TCC &#x5B9E;&#x73B0;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x3002;</p>
<p>&#x672C;&#x6587;&#x5185;&#x5BB9;&#x5206;&#x6210;&#x4E09;&#x90E8;&#x5206;&#xFF1A;</p>
<ol class="ui list">
<li>XA &#x6982;&#x5FF5;&#x7B80;&#x8FF0;</li>
<li>MyCAT &#x4EE3;&#x7801;&#x5982;&#x4F55;&#x5B9E;&#x73B0; XA</li>
<li>MyCAT &#x5728;&#x5B9E;&#x73B0; XA &#x5B58;&#x5728;&#x7684;&#x4E00;&#x4E9B;&#x7F3A;&#x9677;</li>
</ol>
<h1 id="2-XA-&#x6982;&#x5FF5;"><a href="#2-XA-&#x6982;&#x5FF5;" class="headerlink" title="2. XA &#x6982;&#x5FF5;"></a>2. XA &#x6982;&#x5FF5;</h1><p>&gt;<br>X/Open &#x7EC4;&#x7EC7;&#xFF08;&#x5373;&#x73B0;&#x5728;&#x7684; Open Group &#xFF09;&#x5B9A;&#x4E49;&#x4E86;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x5904;&#x7406;&#x6A21;&#x578B;&#x3002; X/Open DTP &#x6A21;&#x578B;&#xFF08; 1994 &#xFF09;&#x5305;&#x62EC;&#xFF1A;  </p>
<ol class="ui list">
<li>&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF08; <strong>AP</strong> &#xFF09;  </li>
<li>&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#xFF08; <strong>TM</strong> &#xFF09;  </li>
<li>&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#xFF08; <strong>RM</strong> &#xFF09;  </li>
<li>&#x901A;&#x4FE1;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#xFF08; <strong>CRM</strong> &#xFF09;<br>&#x4E00;&#x822C;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#xFF08; TM &#xFF09;&#x662F;&#x4EA4;&#x6613;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#xFF08; <strong>RM</strong> &#xFF09;&#x662F;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x901A;&#x4FE1;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#xFF08; <strong>CRM</strong> &#xFF09;&#x662F;&#x6D88;&#x606F;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x4E0B;&#x56FE;&#x662F;X/Open DTP&#x6A21;&#x578B;&#xFF1A;</li>
</ol>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_15/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_15/01.png" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x4E00;&#x822C;&#x7684;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;  </p>
<ol class="ui list">
<li>&#x914D;&#x7F6E; <strong>TM</strong> &#xFF0C;&#x901A;&#x8FC7; <strong>TM</strong> &#x6216;&#x8005; <strong>RM</strong> &#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x628A; <strong>RM</strong> &#x6CE8;&#x518C;&#x5230; <strong>TM</strong>&#x3002;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x7ED9; <strong>TM</strong> &#x6CE8;&#x518C; <strong>RM</strong> &#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x6E90;&#x3002;&#x4E00;&#x4E2A; <strong>TM</strong> &#x53EF;&#x4EE5;&#x6CE8;&#x518C;&#x591A;&#x4E2A; <strong>RM</strong>&#x3002;  </li>
<li><strong>AP</strong> &#x4ECE; <strong>TM</strong> &#x83B7;&#x53D6;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#x7684;&#x4EE3;&#x7406;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x4F7F;&#x7528;JTA&#x63A5;&#x53E3;&#xFF0C;&#x4ECE;TM&#x7BA1;&#x7406;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x83B7;&#x53D6;&#x51FA;&#x8FD9;&#x4E2A;TM&#x6240;&#x7BA1;&#x7406;&#x7684;RM&#x7684;JDBC&#x8FDE;&#x63A5;&#x6216;JMS&#x8FDE;&#x63A5;&#xFF09;<br><strong>AP</strong> &#x5411; <strong>TM</strong> &#x53D1;&#x8D77;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x4E8B;&#x52A1;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;<strong>TM</strong> &#x4F1A;&#x901A;&#x77E5;&#x5404;&#x4E2A; <strong>RM</strong>&#x3002;<strong>XID</strong>&#xFF08;&#x5168;&#x5C40;&#x4E8B;&#x52A1;ID&#xFF09;&#x4F1A;&#x901A;&#x77E5;&#x5230;&#x5404;&#x4E2A;RM&#x3002;  </li>
<li><strong>AP</strong> &#x901A;&#x8FC7; <strong>TM</strong> &#x4E2D;&#x83B7;&#x53D6;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;<strong>&#x95F4;&#x63A5;</strong>&#x64CD;&#x4F5C; <strong>RM</strong> &#x8FDB;&#x884C;&#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;<strong>TM</strong> &#x5728;&#x6BCF;&#x6B21; <strong>AP</strong> &#x64CD;&#x4F5C;&#x65F6;&#x628A; <strong>XID</strong>(&#x5305;&#x62EC;&#x6240;&#x5C5E;&#x5206;&#x652F;&#x7684;&#x4FE1;&#x606F;)&#x4F20;&#x9012;&#x7ED9; <strong>RM</strong>&#xFF0C;<strong>RM</strong> &#x6B63;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A; <strong>XID</strong> &#x5173;&#x8054;&#x6765;&#x64CD;&#x4F5C;&#x548C;&#x4E8B;&#x52A1;&#x7684;&#x5173;&#x7CFB;&#x7684;&#x3002;  </li>
<li><strong>AP</strong> &#x7ED3;&#x675F;&#x5168;&#x5C40;&#x4E8B;&#x52A1;&#x65F6;&#xFF0C;<strong>TM</strong> &#x4F1A;&#x901A;&#x77E5; <strong>RM</strong> &#x5168;&#x5C40;&#x4E8B;&#x52A1;&#x7ED3;&#x675F;&#x3002;&#x5F00;&#x59CB;&#x4E8C;&#x6BB5;&#x63D0;&#x4EA4;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;prepare - commit&#x7684;&#x8FC7;&#x7A0B;&#x3002;</li>
</ol>
</blockquote>
<hr>
<blockquote>
<p>XA&#x534F;&#x8BAE;&#x6307;&#x7684;&#x662F;TM&#xFF08;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#xFF09;&#x548C;RM&#xFF08;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#xFF09;&#x4E4B;&#x95F4;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x76EE;&#x524D;&#x4E3B;&#x6D41;&#x7684;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4EA7;&#x54C1;&#x90FD;&#x662F;&#x5B9E;&#x73B0;&#x4E86;XA&#x63A5;&#x53E3;&#x7684;&#x3002;JTA(Java Transaction API)&#x662F;&#x7B26;&#x5408;X/Open DTP&#x6A21;&#x578B;&#x7684;&#xFF0C;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x5668;&#x548C;&#x8D44;&#x6E90;&#x7BA1;&#x7406;&#x5668;&#x4E4B;&#x95F4;&#x4E5F;&#x4F7F;&#x7528;&#x4E86;XA&#x534F;&#x8BAE;&#x3002; &#x672C;&#x8D28;&#x4E0A;&#x4E5F;&#x662F;&#x501F;&#x52A9;&#x4E24;&#x9636;&#x6BB5;&#x63D0;&#x4EA4;&#x534F;&#x8BAE;&#x6765;&#x5B9E;&#x73B0;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x5206;&#x522B;&#x6765;&#x770B;&#x770B;XA&#x4E8B;&#x52A1;&#x6210;&#x529F;&#x548C;&#x5931;&#x8D25;&#x7684;&#x6A21;&#x578B;&#x56FE;&#xFF1A;</p>
</blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_15/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_15/02.png" alt="&#x6210;&#x529F;" class="ui centered image"></a></p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_15/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_15/03.png" alt="&#x5931;&#x8D25;" class="ui centered image"></a></p>
<hr>
<p>&#x1F608; &#x770B;&#x5230;&#x8FD9;&#x91CC;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x79CD;&#x9ED1;&#x4EBA;&#x95EE;&#x53F7;&#x7684;&#x611F;&#x89C9;&#xFF1F;&#x6DE1;&#x5B9A;&#xFF01;&#x6211;&#x4EEC;&#x63A5;&#x4E0B;&#x6765;&#x770B; MyCAT &#x4EE3;&#x7801;&#x5C42;&#x9762;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0; XA &#x7684;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x5BF9;&#x6982;&#x5FF5;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x770B;&#x5982;&#x4E0B;&#x6587;&#x7AE0;&#xFF1A;</p>
<ol class="ui list">
<li><a href="http://www.infoq.com/cn/articles/xa-transactions-handle" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;XA&#x4E8B;&#x52A1;&#x5904;&#x7406;&#x300B;</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/xa-statements.html" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;XA Transaction SQL Syntax&#x300B;</a></li>
<li><a href="http://www.voidcn.com/blog/gao1738/article/p-4554083.html" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;MySQL XA &#x4E8B;&#x52A1;&#x652F;&#x6301;&#x8C03;&#x7814;&#x300B;</a></li>
</ol>
<h1 id="3-MyCAT-&#x4EE3;&#x7801;&#x5B9E;&#x73B0;"><a href="#3-MyCAT-&#x4EE3;&#x7801;&#x5B9E;&#x73B0;" class="headerlink" title="3. MyCAT &#x4EE3;&#x7801;&#x5B9E;&#x73B0;"></a>3. MyCAT &#x4EE3;&#x7801;&#x5B9E;&#x73B0;</h1><ul class="ui list">
<li>MyCAT &#xFF1A;TM&#xFF0C;&#x534F;&#x8C03;&#x8005;&#x3002;</li>
<li>&#x6570;&#x636E;&#x8282;&#x70B9; &#xFF1A;RM&#xFF0C;&#x53C2;&#x4E0E;&#x8005;&#x3002;</li>
</ul>
<h2 id="3-1-JDBC-Demo-&#x4EE3;&#x7801;"><a href="#3-1-JDBC-Demo-&#x4EE3;&#x7801;" class="headerlink" title="3.1 JDBC Demo &#x4EE3;&#x7801;"></a>3.1 JDBC Demo &#x4EE3;&#x7801;</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCATXAClientDemo</span> </span>{</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>{</div><div class="line">        <span class="comment">// 1. &#x83B7;&#x5F97;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;</span></div><div class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</div><div class="line">        Connection conn = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:8066/dbtest&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>);</div><div class="line">        conn.setAutoCommit(<span class="keyword">false</span>);</div><div class="line"></div><div class="line">        <span class="comment">// 2. &#x5F00;&#x542F; MyCAT XA &#x4E8B;&#x52A1;</span></div><div class="line">        conn.prepareStatement(<span class="string">&quot;set xa=on&quot;</span>).execute();</div><div class="line"></div><div class="line">        <span class="comment">// 3. &#x63D2;&#x5165; SQL</span></div><div class="line">        <span class="comment">// 3.1 SQL1 A&#x5E93;</span></div><div class="line">        <span class="keyword">long</span> uid = Math.abs(<span class="keyword">new</span> Random().nextLong());</div><div class="line">        String username = UUID.randomUUID().toString();</div><div class="line">        String password = UUID.randomUUID().toString();</div><div class="line">        String sql1 = String.format(<span class="string">&quot;insert into t_user(id, username, password) VALUES (%d, &apos;%s&apos;, &apos;%s&apos;)&quot;</span>,</div><div class="line">                uid, username, password);</div><div class="line">        conn.prepareStatement(sql1).execute();</div><div class="line">        <span class="comment">// 3.2 SQL2 B&#x5E93;</span></div><div class="line">        <span class="keyword">long</span> orderId = Math.abs(<span class="keyword">new</span> Random().nextLong());</div><div class="line">        String nickname = UUID.randomUUID().toString();</div><div class="line">        String sql2 = String.format(<span class="string">&quot;insert into t_order(id, uid, nickname) VALUES(%d, %s, &apos;%s&apos;)&quot;</span>, orderId, uid, nickname);</div><div class="line">        conn.prepareStatement(sql2).execute();</div><div class="line"></div><div class="line">        <span class="comment">// 4. &#x63D0;&#x4EA4; XA &#x4E8B;&#x52A1;</span></div><div class="line">        conn.commit();</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>set xa=on</code> MyCAT &#x5F00;&#x542F; XA &#x4E8B;&#x52A1;&#x3002;</li>
<li><code>conn.commit</code> &#x63D0;&#x4EA4; XA &#x4E8B;&#x52A1;&#x3002; </li>
</ul>
<h2 id="3-2-MyCAT-&#x5F00;&#x542F;-XA-&#x4E8B;&#x52A1;"><a href="#3-2-MyCAT-&#x5F00;&#x542F;-XA-&#x4E8B;&#x52A1;" class="headerlink" title="3.2 MyCAT &#x5F00;&#x542F; XA &#x4E8B;&#x52A1;"></a>3.2 MyCAT &#x5F00;&#x542F; XA &#x4E8B;&#x52A1;</h2><p>&#x5F53; MyCAT &#x63A5;&#x6536;&#x5230; <code>set xa = on</code> &#x547D;&#x4EE4;&#x65F6;&#xFF0C;&#x5F00;&#x542F; XA &#x4E8B;&#x52A1;&#xFF0C;&#x5E76;&#x751F;&#x6210; XA &#x4E8B;&#x52A1;&#x7F16;&#x53F7;&#x3002;XA &#x4E8B;&#x52A1;&#x7F16;&#x53F7;&#x751F;&#x6210;&#x7B97;&#x6CD5;&#x4E3A; UUID&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// SetHandler.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(String stmt, ServerConnection c, <span class="keyword">int</span> offset)</span> </span>{</div><div class="line">		<span class="keyword">int</span> rs = ServerParseSet.parse(stmt, offset);</div><div class="line">		<span class="keyword">switch</span> (rs &amp; <span class="number">0xff</span>) {</div><div class="line">		<span class="comment">// ... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line">		<span class="keyword">case</span> XA_FLAG_ON: {</div><div class="line">			<span class="keyword">if</span> (c.isAutocommit()) {</div><div class="line">				c.writeErrMessage(ErrorCode.ERR_WRONG_USED, <span class="string">&quot;set xa cmd on can&apos;t used in autocommit connection &quot;</span>);</div><div class="line">				<span class="keyword">return</span>;</div><div class="line">			}</div><div class="line">			c.getSession2().setXATXEnabled(<span class="keyword">true</span>);</div><div class="line">			c.write(c.writeToBuffer(OkPacket.OK, c.allocate()));</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		}</div><div class="line">		<span class="keyword">case</span> XA_FLAG_OFF: {</div><div class="line">			c.writeErrMessage(ErrorCode.ERR_WRONG_USED,</div><div class="line">					<span class="string">&quot;set xa cmd off not for external use &quot;</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		}</div><div class="line">		<span class="comment">// ... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line">	}</div><div class="line">}</div><div class="line"><span class="comment">// NonBlockingSession.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setXATXEnabled</span><span class="params">(<span class="keyword">boolean</span> xaTXEnabled)</span> </span>{</div><div class="line">   <span class="keyword">if</span> (xaTXEnabled) {</div><div class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.xaTXID == <span class="keyword">null</span>) {</div><div class="line">           xaTXID = genXATXID(); <span class="comment">// &#x1F608;&#x1F608;&#x1F608;&#x83B7;&#x5F97; XA &#x4E8B;&#x52A1;&#x7F16;&#x53F7;</span></div><div class="line">       }</div><div class="line">   } <span class="keyword">else</span> {</div><div class="line">       <span class="keyword">this</span>.xaTXID = <span class="keyword">null</span>;</div><div class="line">   }</div><div class="line">}</div><div class="line"><span class="function"><span class="keyword">private</span> String <span class="title">genXATXID</span><span class="params">()</span> </span>{</div><div class="line">   <span class="keyword">return</span> MycatServer.getInstance().getXATXIDGLOBAL();</div><div class="line">}</div><div class="line"><span class="comment">// MycatServer.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getXATXIDGLOBAL</span><span class="params">()</span> </span>{</div><div class="line">   <span class="keyword">return</span> <span class="string">&quot;&apos;&quot;</span> + getUUID() + <span class="string">&quot;&apos;&quot;</span>;</div><div class="line">}</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUUID</span><span class="params">()</span> </span>{ <span class="comment">// &#x1F608;&#x1F608;&#x1F608;</span></div><div class="line">   String s = UUID.randomUUID().toString();</div><div class="line">   <span class="keyword">return</span> s.substring(<span class="number">0</span>, <span class="number">8</span>) + s.substring(<span class="number">9</span>, <span class="number">13</span>) + s.substring(<span class="number">14</span>, <span class="number">18</span>) + s.substring(<span class="number">19</span>, <span class="number">23</span>) + s.substring(<span class="number">24</span>);</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="3-3-MyCAT-&#x63A5;&#x6536;-SQL"><a href="#3-3-MyCAT-&#x63A5;&#x6536;-SQL" class="headerlink" title="3.3 MyCAT &#x63A5;&#x6536; SQL"></a>3.3 MyCAT &#x63A5;&#x6536; SQL</h2><p>&#x6B64;&#x5904; SQL &#x6307;&#x7684;&#x662F; <code>insert</code>&#x3001;<code>update</code>&#x3001;<code>delete</code> &#x64CD;&#x4F5C;&#x3002;</p>
<p>&#x5F53;&#x5411;&#x67D0;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;<strong>&#x7B2C;&#x4E00;&#x6B21;</strong>&#x53D1;&#x8D77; SQL &#x65F6;&#xFF0C;&#x4F1A;&#x5728; SQL &#x524D;&#x9762;&#x9644;&#x52A0; <code>XA START &apos;xaTranId&apos;</code>&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x8BE5;&#x6570;&#x636E;&#x8282;&#x70B9;<strong>&#x8FDE;&#x63A5;</strong>&#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x4E3A; <code>TxState.TX_STARTED_STATE</code>&#xFF08;<em>&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x72B6;&#x6001;&#xFF0C;&#x4E0B;&#x6587;&#x4F1A;&#x4E13;&#x95E8;&#x6574;&#x7406;</em>&#xFF09;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MySQLConnection.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">synAndDoExecute</span><span class="params">(String xaTxID, RouteResultsetNode rrn,</span></span></div><div class="line">                                 <span class="keyword">int</span> clientCharSetIndex, <span class="keyword">int</span> clientTxIsoLation,</div><div class="line">                                 <span class="keyword">boolean</span> clientAutoCommit) {</div><div class="line">   String xaCmd = <span class="keyword">null</span>;</div><div class="line">   <span class="keyword">boolean</span> conAutoComit = <span class="keyword">this</span>.autocommit;</div><div class="line">   String conSchema = <span class="keyword">this</span>.schema;</div><div class="line">   <span class="comment">// never executed modify sql,so auto commit</span></div><div class="line">   <span class="keyword">boolean</span> expectAutocommit = !modifiedSQLExecuted || isFromSlaveDB() || clientAutoCommit;</div><div class="line">   <span class="keyword">if</span> (expectAutocommit == <span class="keyword">false</span> &amp;&amp; xaTxID != <span class="keyword">null</span> &amp;&amp; xaStatus == TxState.TX_INITIALIZE_STATE) { <span class="comment">// &#x1F608;&#x1F608;&#x1F608;</span></div><div class="line">       xaCmd = <span class="string">&quot;XA START &quot;</span> + xaTxID + <span class="string">&apos;;&apos;</span>;</div><div class="line">       <span class="keyword">this</span>.xaStatus = TxState.TX_STARTED_STATE;</div><div class="line">   }</div><div class="line">   <span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line">   StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">   <span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line">   <span class="keyword">if</span> (xaCmd != <span class="keyword">null</span>) {</div><div class="line">       sb.append(xaCmd);</div><div class="line">   }</div><div class="line">   <span class="comment">// and our query sql to multi command at last</span></div><div class="line">   sb.append(rrn.getStatement() + <span class="string">&quot;;&quot;</span>);</div><div class="line">   <span class="comment">// syn and execute others</span></div><div class="line">   <span class="keyword">this</span>.sendQueryCmd(sb.toString());</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x4E3E;&#x4E2A; &#x53D8;&#x91CF;<code>sb</code> &#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">names</span> utf8;<span class="keyword">SET</span> autocommit=<span class="number">0</span>;XA <span class="keyword">START</span> <span class="string">&apos;1f2da7353e8846e5833b8d8dd041cfb1&apos;</span>,<span class="string">&apos;db2&apos;</span>;<span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, username, <span class="keyword">password</span>) <span class="keyword">VALUES</span> (<span class="number">3400</span>, <span class="string">&apos;b7c5ec1f-11cc-4599-851c-06ad617fec42&apos;</span>, <span class="string">&apos;d2694679-f6a2-4623-a339-48d4a868be90&apos;</span>);</div></pre></td></tr></table></figure>
<h2 id="3-4-MySQL-&#x63A5;&#x6536;-COMMIT"><a href="#3-4-MySQL-&#x63A5;&#x6536;-COMMIT" class="headerlink" title="3.4 MySQL &#x63A5;&#x6536; COMMIT"></a>3.4 MySQL &#x63A5;&#x6536; COMMIT</h2><h3 id="3-4-1-&#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;-or-&#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;"><a href="#3-4-1-&#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;-or-&#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;" class="headerlink" title="3.4.1 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1; or &#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;"></a>3.4.1 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1; or &#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;</h3><p><code>COMMIT</code> &#x6267;&#x884C;&#x65F6;&#xFF0C;MyCAT &#x4F1A;&#x5224;&#x65AD; XA &#x4E8B;&#x52A1;&#x91CC;&#xFF0C;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8282;&#x70B9;&#x6570;&#x91CF;&#x3002;</p>
<ul class="ui list">
<li>&#x5982;&#x679C;&#x8282;&#x70B9;&#x6570;&#x91CF;&#x4E3A; 1&#xFF0C;&#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#xFF0C;&#x4F7F;&#x7528; <code>CommitNodeHandler</code> &#x5904;&#x7406;&#x3002;</li>
<li>&#x5982;&#x679C;&#x8282;&#x70B9;&#x6570;&#x91CF; &gt; 1&#xFF0C;&#x591A;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#xFF0C;&#x4F7F;&#x7528; <code>MultiNodeCoordinator</code> &#x5904;&#x7406;&#x3002;</li>
</ul>
<p><code>CommitNodeHandler</code> &#x76F8;&#x6BD4; <code>MultiNodeCoordinator</code> &#x6765;&#x8BF4;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x591A;&#x8282;&#x70B9;&#x534F;&#x8C03;&#xFF0C;&#x903B;&#x8F91;&#x4F1A;&#x76F8;&#x5BF9;&#x7B80;&#x5355;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x53E6;&#x5916;&#x770B;&#x3002;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5206;&#x6790; <code>MultiNodeCoordinator</code>&#x3002;</p>
<h3 id="3-4-2-&#x534F;&#x8C03;&#x65E5;&#x5FD7;"><a href="#3-4-2-&#x534F;&#x8C03;&#x65E5;&#x5FD7;" class="headerlink" title="3.4.2 &#x534F;&#x8C03;&#x65E5;&#x5FD7;"></a>3.4.2 &#x534F;&#x8C03;&#x65E5;&#x5FD7;</h3><p><strong>&#x534F;&#x8C03;&#x65E5;&#x5FD7;</strong>&#xFF0C;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x8FC7;&#x7A0B;&#x4E2D;&#x5404;&#x6570;&#x636E;&#x8282;&#x70B9; XA &#x4E8B;&#x52A1;&#x72B6;&#x6001;&#xFF0C;&#x5904;&#x7406;<strong>MyCAT&#x5F02;&#x5E38;&#x5954;&#x6E83;</strong>&#x6216;&#x8005;<strong>&#x6570;&#x636E;&#x8282;&#x70B9;&#x90E8;&#x5206;XA COMMIT&#xFF0C;&#x53E6;&#x5916;&#x90E8;&#x5206; XA PREPARE</strong>&#x4E0B;&#x7684;&#x72B6;&#x6001;&#x6062;&#x590D;&#x3002;</p>
<p><strong>XA &#x4E8B;&#x52A1;&#x5171;&#x6709;&#x79CD;</strong>&#xFF1A;</p>
<ol class="ui list">
<li>TX_INITIALIZE_STATE &#xFF1A;&#x4E8B;&#x52A1;&#x521D;&#x59CB;&#x5316;</li>
<li>TX_STARTED_STATE &#xFF1A;&#x4E8B;&#x52A1;&#x5F00;&#x59CB;&#x5B8C;&#x6210;</li>
<li>TX_PREPARED_STATE &#xFF1A;&#x4E8B;&#x52A1;&#x51C6;&#x5907;&#x5B8C;&#x6210;</li>
<li>TX_COMMITED_STATE &#xFF1A;&#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x5B8C;&#x6210;</li>
<li>TX_ROLLBACKED_STATE &#xFF1A;&#x4E8B;&#x52A1;&#x56DE;&#x6EDA;&#x5B8C;&#x6210;</li>
</ol>
<p><strong>&#x72B6;&#x6001;&#x53D8;&#x66F4;&#x6D41;</strong> &#xFF1A;TX_INITIALIZE_STATE =&gt; TX_STARTED_STATE =&gt; TX_PREPARED_STATE =&gt; TX_COMMITED_STATE / TX_ROLLBACKED_STATE &#x3002;</p>
<p><strong>&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x90E8;&#x5206;</strong>&#xFF1A;</p>
<ol class="ui list">
<li>CoordinatorLogEntry &#xFF1A;&#x534F;&#x8C03;&#x8005;&#x65E5;&#x5FD7;</li>
<li>ParticipantLogEntry &#xFF1A;&#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;&#x3002;<strong>&#x6B64;&#x5904;&#xFF0C;&#x6570;&#x636E;&#x8282;&#x70B9;&#x626E;&#x6F14;&#x53C2;&#x4E0E;&#x8005;&#x7684;&#x89D2;&#x8272;&#x3002;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x53C2;&#x4E0E;&#x8005;&#x4E0E;&#x6570;&#x636E;&#x8282;&#x70B9;&#x6DF7;&#x7528;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x671B;&#x89C1;&#x8C05;&#x3002;</strong></li>
</ol>
<p><em>&#x4E00;&#x6B21; XA &#x4E8B;&#x52A1;&#xFF0C;&#x5BF9;&#x5E94;&#x4E00;&#x6761; <code>CoordinatorLogEntry</code>&#x3002;&#x4E00;&#x6761;<code>CoordinatorLogEntry</code> &#x5305;&#x542B; N&#x6761;<code>ParticipantLogEntry</code></em>&#x3002; &#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// CoordinatorLogEntry &#xFF1A;&#x534F;&#x8C03;&#x8005;&#x65E5;&#x5FD7;</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CoordinatorLogEntry</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>{</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * XA &#x4E8B;&#x52A1;&#x7F16;&#x53F7;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String id;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;&#x6570;&#x7EC4;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">final</span> ParticipantLogEntry[] participants;</div><div class="line">}</div><div class="line"><span class="comment">// ParticipantLogEntry &#xFF1A;&#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParticipantLogEntry</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>{</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * XA &#x4E8B;&#x52A1;&#x7F16;&#x53F7;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> String coordinatorId;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &#x6570;&#x636E;&#x5E93; uri</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> String uri;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &#x8FC7;&#x671F;&#x63CF;&#x8FF0;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> expires;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * XA &#x4E8B;&#x52A1;&#x72B6;&#x6001;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> txState;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * &#x53C2;&#x4E0E;&#x8005;&#x540D;&#x5B57;</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> String resourceName;</div><div class="line">}</div></pre></td></tr></table></figure>
<p><strong>MyCAT &#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x4EE5; JSON&#x683C;&#x5F0F; &#x5230;&#x6587;&#x4EF6;</strong>&#x3002;<strong>&#x6BCF;&#x884C;</strong>&#x5305;&#x542B;&#x4E00;&#x6761;<code>CoordinatorLogEntry</code>&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>
<figure class="highlight json"><table><tr><td class="code"><pre><div class="line">{<span class="attr">&quot;id&quot;</span>:<span class="string">&quot;&apos;e827b3fe666c4d968961350d19adda31&apos;&quot;</span>,<span class="attr">&quot;participants&quot;</span>:[{<span class="attr">&quot;uri&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,<span class="attr">&quot;state&quot;</span>:<span class="string">&quot;3&quot;</span>,<span class="attr">&quot;expires&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;resourceName&quot;</span>:<span class="string">&quot;db3&quot;</span>},{<span class="attr">&quot;uri&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,<span class="attr">&quot;state&quot;</span>:<span class="string">&quot;3&quot;</span>,<span class="attr">&quot;expires&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;resourceName&quot;</span>:<span class="string">&quot;db1&quot;</span>}]}</div><div class="line">{<span class="attr">&quot;id&quot;</span>:<span class="string">&quot;&apos;f00b61fa17cb4ec5b8264a6d82f847d0&apos;&quot;</span>,<span class="attr">&quot;participants&quot;</span>:[{<span class="attr">&quot;uri&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,<span class="attr">&quot;state&quot;</span>:<span class="string">&quot;3&quot;</span>,<span class="attr">&quot;expires&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;resourceName&quot;</span>:<span class="string">&quot;db2&quot;</span>},{<span class="attr">&quot;uri&quot;</span>:<span class="string">&quot;127.0.0.1&quot;</span>,<span class="attr">&quot;state&quot;</span>:<span class="string">&quot;3&quot;</span>,<span class="attr">&quot;expires&quot;</span>:<span class="number">0</span>,<span class="attr">&quot;resourceName&quot;</span>:<span class="string">&quot;db1&quot;</span>}]}</div></pre></td></tr></table></figure>
<p>&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// XA &#x534F;&#x8C03;&#x8005;&#x65E5;&#x5FD7; &#x5B58;&#x50A8;&#x63A5;&#x53E3;&#xFF1A;https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/backend/mysql/xa/recovery/Repository.java</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Repository</span> </span>{}</div><div class="line"><span class="comment">// XA &#x534F;&#x8C03;&#x8005;&#x65E5;&#x5FD7; &#x6587;&#x4EF6;&#x5B58;&#x50A8;&#xFF1A;https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/backend/mysql/xa/recovery/impl/FileSystemRepository.java</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileSystemRepository</span> <span class="keyword">implements</span> <span class="title">Repository</span> </span>{}</div><div class="line"><span class="comment">// XA &#x534F;&#x8C03;&#x8005;&#x65E5;&#x5FD7; &#x6587;&#x4EF6;&#x5B58;&#x50A8;&#xFF1A;https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/backend/mysql/xa/recovery/impl/InMemoryRepository.java</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InMemoryRepository</span> <span class="keyword">implements</span> <span class="title">Repository</span> </span>{}</div></pre></td></tr></table></figure>
<p>&#x76EE;&#x524D;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x5199;&#x5165;&#x7684;&#x65B9;&#x5F0F;&#x6027;&#x80FD;&#x8F83;&#x5DEE;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4E0D;&#x505A;&#x5206;&#x6790;&#xFF0C;&#x5728;&#x3010;4. MyCAT &#x5B9E;&#x73B0;&#x7F3A;&#x9677;&#x3011;&#x91CC;&#x4E00;&#x8D77;&#x8BB2;&#x3002;</p>
<h3 id="3-4-3-MultiNodeCoordinator"><a href="#3-4-3-MultiNodeCoordinator" class="headerlink" title="3.4.3 MultiNodeCoordinator"></a>3.4.3 MultiNodeCoordinator</h3><p>&#x6572;&#x6572;&#x6572;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x672C;&#x6587;&#x7684;&#x91CD;&#x70B9;&#x4E4B;&#x4E00;&#x5662;&#x3002;&#x1F608;</p>
<p><strong>&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF1A;&#x53D1;&#x8D77; PREPARE&#x3002;</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeBatchNodeCmd</span><span class="params">(SQLCtrlCommand cmdHandler)</span> </span>{</div><div class="line">   <span class="keyword">this</span>.cmdHandler = cmdHandler;</div><div class="line">   <span class="keyword">final</span> <span class="keyword">int</span> initCount = session.getTargetCount();</div><div class="line">   runningCount.set(initCount);</div><div class="line">   nodeCount = initCount;</div><div class="line">   failed.set(<span class="keyword">false</span>);</div><div class="line">   faileCount.set(<span class="number">0</span>);</div><div class="line">   <span class="comment">//recovery nodes log</span></div><div class="line">   ParticipantLogEntry[] participantLogEntry = <span class="keyword">new</span> ParticipantLogEntry[initCount];</div><div class="line">   <span class="comment">// &#x6267;&#x884C;</span></div><div class="line">   <span class="keyword">int</span> started = <span class="number">0</span>;</div><div class="line">   <span class="keyword">for</span> (RouteResultsetNode rrn : session.getTargetKeys()) {</div><div class="line">       <span class="keyword">if</span> (rrn == <span class="keyword">null</span>) {</div><div class="line">           <span class="keyword">continue</span>;</div><div class="line">       }</div><div class="line">       <span class="keyword">final</span> BackendConnection conn = session.getTarget(rrn);</div><div class="line">       <span class="keyword">if</span> (conn != <span class="keyword">null</span>) {</div><div class="line">           conn.setResponseHandler(<span class="keyword">this</span>);</div><div class="line">           <span class="comment">//process the XA_END XA_PREPARE Command</span></div><div class="line">           MySQLConnection mysqlCon = (MySQLConnection) conn;</div><div class="line">           String xaTxId = <span class="keyword">null</span>;</div><div class="line">           <span class="keyword">if</span> (session.getXaTXID() != <span class="keyword">null</span>) {</div><div class="line">               xaTxId = session.getXaTXID() + <span class="string">&quot;,&apos;&quot;</span> + mysqlCon.getSchema() + <span class="string">&quot;&apos;&quot;</span>;</div><div class="line">           }</div><div class="line">           <span class="keyword">if</span> (mysqlCon.getXaStatus() == TxState.TX_STARTED_STATE) { <span class="comment">// XA &#x4E8B;&#x52A1;</span></div><div class="line">               <span class="comment">//recovery Log</span></div><div class="line">               participantLogEntry[started] = <span class="keyword">new</span> ParticipantLogEntry(xaTxId, conn.getHost(), <span class="number">0</span>, conn.getSchema(), ((MySQLConnection) conn).getXaStatus());</div><div class="line">               String[] cmds = <span class="keyword">new</span> String[]{<span class="string">&quot;XA END &quot;</span> + xaTxId, <span class="comment">// XA END &#x547D;&#x4EE4;</span></div><div class="line">                       <span class="string">&quot;XA PREPARE &quot;</span> + xaTxId}; <span class="comment">// XA PREPARE &#x547D;&#x4EE4;</span></div><div class="line">               mysqlCon.execBatchCmd(cmds);</div><div class="line">           } <span class="keyword">else</span> { <span class="comment">// &#x975E; XA &#x4E8B;&#x52A1;</span></div><div class="line">               <span class="comment">// recovery Log</span></div><div class="line">               participantLogEntry[started] = <span class="keyword">new</span> ParticipantLogEntry(xaTxId, conn.getHost(), <span class="number">0</span>, conn.getSchema(), ((MySQLConnection) conn).getXaStatus());</div><div class="line">               cmdHandler.sendCommand(session, conn);</div><div class="line">           }</div><div class="line">           ++started;</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="comment">// xa recovery log</span></div><div class="line">   <span class="keyword">if</span> (session.getXaTXID() != <span class="keyword">null</span>) {</div><div class="line">       CoordinatorLogEntry coordinatorLogEntry = <span class="keyword">new</span> CoordinatorLogEntry(session.getXaTXID(), <span class="keyword">false</span>, participantLogEntry);</div><div class="line">       inMemoryRepository.put(session.getXaTXID(), coordinatorLogEntry);</div><div class="line">       fileRepository.writeCheckpoint(inMemoryRepository.getAllCoordinatorLogEntries());</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (started &lt; nodeCount) { <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x5982;&#x4F55;&#x89E6;&#x53D1;</span></div><div class="line">       runningCount.set(started);</div><div class="line">       LOGGER.warn(<span class="string">&quot;some connection failed to execute &quot;</span> + (nodeCount - started));</div><div class="line">       <span class="comment">/**</span></div><div class="line">        * assumption: only caused by front-end connection close. &lt;br/&gt;</div><div class="line">        * Otherwise, packet must be returned to front-end</div><div class="line">        */</div><div class="line">       failed.set(<span class="keyword">true</span>);</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x5411;&#x5404;&#x6570;&#x636E;&#x8282;&#x70B9;&#x53D1;&#x9001; <code>XA END</code> + <code>XA PREPARE</code> &#x6307;&#x4EE4;&#x3002;&#x4E3E;&#x4E2A; &#x53D8;&#x91CF;<code>cmds</code> &#x4F8B;&#x5B50;&#xFF1A;</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">XA <span class="keyword">END</span> <span class="string">&apos;4cbb18214d0b47adbdb0658598666677&apos;</span>,<span class="string">&apos;db3&apos;</span>;XA <span class="keyword">PREPARE</span> <span class="string">&apos;4cbb18214d0b47adbdb0658598666677&apos;</span>,<span class="string">&apos;db3&apos;</span>;</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x3002;&#x6BCF;&#x6761;&#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;&#x72B6;&#x6001;&#x4E3A; <code>TxState.TX_STARTED_STATE</code>&#x3002;</li>
</ul>
<hr>
<p><strong>&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#xFF1A;&#x53D1;&#x8D77; COMMIT&#x3002;</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">okResponse</span><span class="params">(<span class="keyword">byte</span>[] ok, BackendConnection conn)</span> </span>{</div><div class="line">   <span class="comment">// process the XA Transatcion 2pc commit</span></div><div class="line">   <span class="keyword">if</span> (conn <span class="keyword">instanceof</span> MySQLConnection) {</div><div class="line">       MySQLConnection mysqlCon = (MySQLConnection) conn;</div><div class="line">       <span class="keyword">switch</span> (mysqlCon.getXaStatus()) {</div><div class="line">           <span class="keyword">case</span> TxState.TX_STARTED_STATE:</div><div class="line">               <span class="comment">//if there have many SQL execute wait the okResponse,will come to here one by one</span></div><div class="line">               <span class="comment">//should be wait all nodes ready ,then send xa commit to all nodes.</span></div><div class="line">               <span class="keyword">if</span> (mysqlCon.batchCmdFinished()) {</div><div class="line">                   String xaTxId = session.getXaTXID();</div><div class="line">                   String cmd = <span class="string">&quot;XA COMMIT &quot;</span> + xaTxId + <span class="string">&quot;,&apos;&quot;</span> + mysqlCon.getSchema() + <span class="string">&quot;&apos;&quot;</span>;</div><div class="line">                   <span class="keyword">if</span> (LOGGER.isDebugEnabled()) {</div><div class="line">                       LOGGER.debug(<span class="string">&quot;Start execute the cmd :&quot;</span> + cmd + <span class="string">&quot;,current host:&quot;</span> + mysqlCon.getHost() + <span class="string">&quot;:&quot;</span> + mysqlCon.getPort());</div><div class="line">                   }</div><div class="line">                   <span class="comment">// recovery log</span></div><div class="line">                   CoordinatorLogEntry coordinatorLogEntry = inMemoryRepository.get(xaTxId);</div><div class="line">                   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; coordinatorLogEntry.participants.length; i++) {</div><div class="line">                       LOGGER.debug(<span class="string">&quot;[In Memory CoordinatorLogEntry]&quot;</span> + coordinatorLogEntry.participants[i]);</div><div class="line">                       <span class="keyword">if</span> (coordinatorLogEntry.participants[i].resourceName.equals(conn.getSchema())) {</div><div class="line">                           coordinatorLogEntry.participants[i].txState = TxState.TX_PREPARED_STATE;</div><div class="line">                       }</div><div class="line">                   }</div><div class="line">                   inMemoryRepository.put(xaTxId, coordinatorLogEntry);</div><div class="line">                   fileRepository.writeCheckpoint(inMemoryRepository.getAllCoordinatorLogEntries());</div><div class="line">                   <span class="comment">// send commit</span></div><div class="line">                   mysqlCon.setXaStatus(TxState.TX_PREPARED_STATE);</div><div class="line">                   mysqlCon.execCmd(cmd);</div><div class="line">               }</div><div class="line">               <span class="keyword">return</span>;</div><div class="line">           <span class="keyword">case</span> TxState.TX_PREPARED_STATE: {</div><div class="line">               <span class="comment">// recovery log</span></div><div class="line">               String xaTxId = session.getXaTXID();</div><div class="line">               CoordinatorLogEntry coordinatorLogEntry = inMemoryRepository.get(xaTxId);</div><div class="line">               <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; coordinatorLogEntry.participants.length; i++) {</div><div class="line">                   <span class="keyword">if</span> (coordinatorLogEntry.participants[i].resourceName.equals(conn.getSchema())) {</div><div class="line">                       coordinatorLogEntry.participants[i].txState = TxState.TX_COMMITED_STATE;</div><div class="line">                   }</div><div class="line">               }</div><div class="line">               inMemoryRepository.put(xaTxId, coordinatorLogEntry);</div><div class="line">               fileRepository.writeCheckpoint(inMemoryRepository.getAllCoordinatorLogEntries());</div><div class="line">               <span class="comment">// XA reset status now</span></div><div class="line">               mysqlCon.setXaStatus(TxState.TX_INITIALIZE_STATE);</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           }</div><div class="line">           <span class="keyword">default</span>:</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="comment">// &#x91CA;&#x653E;&#x8FDE;&#x63A5;</span></div><div class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.cmdHandler.relaseConOnOK()) {</div><div class="line">       session.releaseConnection(conn);</div><div class="line">   } <span class="keyword">else</span> {</div><div class="line">       session.releaseConnectionIfSafe(conn, LOGGER.isDebugEnabled(), <span class="keyword">false</span>);</div><div class="line">   }</div><div class="line">   <span class="comment">// &#x662F;&#x5426;&#x6240;&#x6709;&#x8282;&#x70B9;&#x90FD;&#x5B8C;&#x6210;commit&#xFF0C;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;Client &#x6210;&#x529F;</span></div><div class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.finished()) {</div><div class="line">       cmdHandler.okResponse(session, ok);</div><div class="line">       <span class="keyword">if</span> (cmdHandler.isAutoClearSessionCons()) {</div><div class="line">           session.clearResources(<span class="keyword">false</span>);</div><div class="line">       }</div><div class="line">       <span class="comment">/* 1.  &#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x540E;,xa &#x4E8B;&#x52A1;&#x7ED3;&#x675F;   */</span></div><div class="line">       <span class="keyword">if</span> (session.getXaTXID() != <span class="keyword">null</span>) {</div><div class="line">           session.setXATXEnabled(<span class="keyword">false</span>);</div><div class="line">       }</div><div class="line">       <span class="comment">/* 2. preAcStates &#x4E3A;true,&#x4E8B;&#x52A1;&#x7ED3;&#x675F;&#x540E;,&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E3A;true&#x3002;preAcStates &#x4E3A;ac&#x4E0A;&#x4E00;&#x4E2A;&#x72B6;&#x6001;    */</span></div><div class="line">       <span class="keyword">if</span> (session.getSource().isPreAcStates()) {</div><div class="line">           session.getSource().setAutocommit(<span class="keyword">true</span>);</div><div class="line">       }</div><div class="line">   }</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>mysqlCon.batchCmdFinished()</code> &#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8FD4;&#x56DE;&#x7684;&#x662F; <code>XA END</code> &#x6210;&#x529F;&#xFF0C;&#x7B2C;&#x4E8C;&#x6B21;&#x8FD4;&#x56DE;&#x7684;&#x662F; <code>XA PREPARE</code>&#x3002;&#x5728; <code>XA PREPARE</code> &#x6210;&#x529F;&#x540E;&#xFF0C;&#x8BB0;&#x5F55;&#x8BE5;&#x6570;&#x636E;&#x8282;&#x70B9;&#x7684;<strong>&#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;</strong>&#x72B6;&#x6001;&#x4E3A; <code>TxState.TX_PREPARED_STATE</code>&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x5411;&#x8BE5;&#x6570;&#x636E;&#x8282;&#x70B9;&#x53D1;&#x8D77; <code>XA COMMIT</code> &#x547D;&#x4EE4;&#x3002;</li>
<li><code>XA COMMIT</code> &#x8FD4;&#x56DE;&#x6210;&#x529F;&#x540E;&#xFF0C;&#x8BB0;&#x5F55;&#x8BE5;&#x6570;&#x636E;&#x8282;&#x70B9;&#x7684;<strong>&#x4E8B;&#x52A1;&#x53C2;&#x4E0E;&#x8005;&#x65E5;&#x5FD7;</strong>&#x72B6;&#x6001;&#x4E3A; <code>TxState.TX_COMMITED_STATE</code>&#x3002;</li>
<li>&#x5F53;&#x6240;&#x6709;&#x6570;&#x636E;&#x8282;&#x70B9;&#xFF08;&#x53C2;&#x4E0E;&#x8005;&#xFF09;&#x90FD;&#x6267;&#x884C;&#x5B8C;&#x6210; <code>XA COMMIT</code> &#x8FD4;&#x56DE;&#xFF0C;&#x5373; <code>this.finished() == true</code>&#xFF0C;&#x8FD4;&#x56DE; MySQL Client XA &#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x6210;&#x529F;&#x3002;</li>
</ul>
<p>[x] <code>XA PREPARE</code> &#x548C; <code>XA COMMIT</code>&#xFF0C;&#x6570;&#x636E;&#x8282;&#x70B9;&#x53EF;&#x80FD;&#x8FD4;&#x56DE;&#x5931;&#x8D25;&#xFF0C;&#x76EE;&#x524D;&#x6682;&#x65F6;&#x6CA1;&#x6A21;&#x62DF;&#x51FA;&#x6765;&#xFF0C;&#x5BF9;&#x5E94;&#x65B9;&#x6CD5;&#x4E3A; <code>#errorResponse(....)</code>&#x3002; </p>
<h2 id="3-5-MyCAT-&#x542F;&#x52A8;&#x56DE;&#x6EDA;-XA&#x4E8B;&#x52A1;"><a href="#3-5-MyCAT-&#x542F;&#x52A8;&#x56DE;&#x6EDA;-XA&#x4E8B;&#x52A1;" class="headerlink" title="3.5 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; XA&#x4E8B;&#x52A1;"></a>3.5 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; XA&#x4E8B;&#x52A1;</h2><p>MyCAT &#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x4F1A;<strong>&#x56DE;&#x6EDA;&#x5904;&#x4E8E;TxState.TX_PREPARED_STATE</strong>&#x7684; <code>ParticipantLogEntry</code> &#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8282;&#x70B9;&#x7684; XA &#x4E8B;&#x52A1;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// MycatServer.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">performXARecoveryLog</span><span class="params">()</span> </span>{</div><div class="line">   <span class="comment">// fetch the recovery log</span></div><div class="line">   CoordinatorLogEntry[] coordinatorLogEntries = getCoordinatorLogEntries();</div><div class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; coordinatorLogEntries.length; i++) {</div><div class="line">       CoordinatorLogEntry coordinatorLogEntry = coordinatorLogEntries[i];</div><div class="line">       <span class="keyword">boolean</span> needRollback = <span class="keyword">false</span>;</div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; coordinatorLogEntry.participants.length; j++) {</div><div class="line">           ParticipantLogEntry participantLogEntry = coordinatorLogEntry.participants[j];</div><div class="line">           <span class="keyword">if</span> (participantLogEntry.txState == TxState.TX_PREPARED_STATE) {</div><div class="line">               needRollback = <span class="keyword">true</span>;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           }</div><div class="line">       }</div><div class="line">       <span class="keyword">if</span> (needRollback) {</div><div class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; coordinatorLogEntry.participants.length; j++) {</div><div class="line">               ParticipantLogEntry participantLogEntry = coordinatorLogEntry.participants[j];</div><div class="line">               <span class="comment">//XA rollback</span></div><div class="line">               String xacmd = <span class="string">&quot;XA ROLLBACK &quot;</span> + coordinatorLogEntry.id + <span class="string">&apos;;&apos;</span>;</div><div class="line">               OneRawSQLQueryResultHandler resultHandler = <span class="keyword">new</span> OneRawSQLQueryResultHandler(<span class="keyword">new</span> String[<span class="number">0</span>], <span class="keyword">new</span> XARollbackCallback());</div><div class="line">               outloop:</div><div class="line">               <span class="keyword">for</span> (SchemaConfig schema : MycatServer.getInstance().getConfig().getSchemas().values()) {</div><div class="line">                   <span class="keyword">for</span> (TableConfig table : schema.getTables().values()) {</div><div class="line">                       <span class="keyword">for</span> (String dataNode : table.getDataNodes()) {</div><div class="line">                           PhysicalDBNode dn = MycatServer.getInstance().getConfig().getDataNodes().get(dataNode);</div><div class="line">                           <span class="keyword">if</span> (dn.getDbPool().getSource().getConfig().getIp().equals(participantLogEntry.uri)</div><div class="line">                                   &amp;&amp; dn.getDatabase().equals(participantLogEntry.resourceName)) {</div><div class="line">                               <span class="comment">//XA STATE ROLLBACK</span></div><div class="line">                               participantLogEntry.txState = TxState.TX_ROLLBACKED_STATE;</div><div class="line">                               SQLJob sqlJob = <span class="keyword">new</span> SQLJob(xacmd, dn.getDatabase(), resultHandler, dn.getDbPool().getSource());</div><div class="line">                               sqlJob.run();</div><div class="line">                               <span class="keyword">break</span> outloop;</div><div class="line">                           }</div><div class="line">                       }</div><div class="line">                   }</div><div class="line">               }</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="comment">// init into in memory cached</span></div><div class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; coordinatorLogEntries.length; i++) {</div><div class="line">  MultiNodeCoordinator.inMemoryRepository.put(coordinatorLogEntries[i].id, coordinatorLogEntries[i]);</div><div class="line">   }</div><div class="line">   <span class="comment">// discard the recovery log</span></div><div class="line">    MultiNodeCoordinator.fileRepository.writeCheckpoint(MultiNodeCoordinator.inMemoryRepository.getAllCoordinatorLogEntries());</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="4-MyCAT-&#x5B9E;&#x73B0;&#x7F3A;&#x9677;"><a href="#4-MyCAT-&#x5B9E;&#x73B0;&#x7F3A;&#x9677;" class="headerlink" title="4. MyCAT &#x5B9E;&#x73B0;&#x7F3A;&#x9677;"></a>4. MyCAT &#x5B9E;&#x73B0;&#x7F3A;&#x9677;</h1><p>MyCAT 1.6.5 &#x7248;&#x672C;&#x5B9E;&#x73B0;&#x5F31;XA&#x4E8B;&#x52A1;&#xFF0C;&#x76F8;&#x5BF9;&#x6765;&#x8BF4;&#xFF0C;&#x7B14;&#x8005;&#x8BA4;&#x4E3A;&#x8DDD;&#x79BB;&#x5B9E;&#x9645;&#x751F;&#x4EA7;&#x4F7F;&#x7528;&#x5B58;&#x5728;&#x4E00;&#x4E9B;&#x5DEE;&#x8DDD;&#x3002;&#x4E0B;&#x9762;&#x7F57;&#x5217;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x7684;&#x7F3A;&#x9677;&#xFF0C;&#x5982;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x9EBB;&#x70E6;&#x6307;&#x51FA;&#x3002;&#x1F642;&#x5E0C;&#x671B; MyCAT &#x5728;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x7684;&#x5B9E;&#x73B0;&#x4E0A;&#xFF0C;&#x80FD;&#x591F;&#x8D8A;&#x6765;&#x8D8A;&#x7ED9;&#x529B;&#x3002;</p>
<h2 id="4-1-&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5199;&#x5165;&#x6027;&#x80FD;"><a href="#4-1-&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5199;&#x5165;&#x6027;&#x80FD;" class="headerlink" title="4.1 &#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5199;&#x5165;&#x6027;&#x80FD;"></a>4.1 &#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5199;&#x5165;&#x6027;&#x80FD;</h2><p>1&#x3001;<code>CoordinatorLogEntry</code>&#x3001;<code>ParticipantLogEntry</code> &#x5728;&#x6BCF;&#x6B21;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x662F;&#x5C06;&#x5185;&#x5B58;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x65E5;&#x5FD7;<strong>&#x5168;&#x90E8;&#x91CD;&#x65B0;</strong>&#x5199;&#x5165;&#xFF0C;&#x5BFC;&#x81F4;&#x5199;&#x5165;&#x6027;&#x80FD;&#x968F;&#x7740; XA &#x4E8B;&#x52A1;&#x6B21;&#x6570;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x6027;&#x80FD;&#x4F1A;&#x8D8A;&#x6765;&#x8D8A;&#x7CDF;&#x7CD5;&#xFF0C;&#x5BFC;&#x81F4; XA &#x4E8B;&#x52A1;&#x6574;&#x4F53;&#x6027;&#x80FD;&#x4F1A;&#x975E;&#x5E38;&#x5DEE;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x662F;<strong>&#x540C;&#x6B65;</strong>&#x7684;&#xFF0C;&#x4E5F;&#x52A0;&#x5927;&#x4E86;&#x5199;&#x5165;&#x7684;&#x5EF6;&#x8FDF;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x5148;&#x83B7;&#x5F97;&#x53EF;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684; OFFSET&#xFF0C;&#x5199;&#x5165;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x5230;&#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5B58;&#x7EF4;&#x62A4;&#x597D; XA&#x4E8B;&#x52A1;&#x7F16;&#x53F7; &#x4E0E; OFFSET &#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;<strong>&#x987A;&#x5E8F;&#x5199;&#x5165;</strong> + <strong>&#x5E76;&#x884C;&#x5199;&#x5165;</strong>&#x3002;</p>
<p>2&#x3001;&#x5185;&#x5B58;&#x91CC;&#x7EF4;&#x62A4;&#x4E86;&#x6240;&#x6709;&#x7684;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#xFF0C;&#x5360;&#x7528;&#x5185;&#x5B58;&#x4F1A;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x5E76;&#x4E14;&#x65E0;&#x91CA;&#x653E;&#x673A;&#x5236;&#x3002;&#x5373;&#x4F7F;&#x91CD;&#x542F;&#xFF0C;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x4E5F;&#x4F1A;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x5DF2;&#x5B8C;&#x5168;&#x56DE;&#x6EDA;&#x6216;&#x8005;&#x63D0;&#x4EA4;&#x7684;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x4E0D;&#x653E;&#x5165;&#x5185;&#x5B58;&#x3002;&#x53E6;&#x5916;&#x6709;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x597D; XA&#x4E8B;&#x52A1;&#x7F16;&#x53F7; &#x4E0E; OFFSET &#x7684;&#x6620;&#x5C04;&#x5173;&#x7CFB;&#x3002;</p>
<p>3&#x3001;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x53EA;&#x5199;&#x5165;&#x5355;&#x4E2A;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x5206;&#x62C6;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x3002;</p>
<p>PS&#xFF1A;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x770B;&#x4E0B; <code>RocketMQ</code> &#x5BF9; <code>CommitLog</code> &#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x6027;&#x80FD;&#x4E0A;&#x5F88;&#x8D5E;&#xFF01;</p>
<h2 id="4-2-&#x6570;&#x636E;&#x8282;&#x70B9;&#x672A;&#x5168;&#x90E8;-PREPARE-&#x5C31;&#x8FDB;&#x884C;-COMMIT"><a href="#4-2-&#x6570;&#x636E;&#x8282;&#x70B9;&#x672A;&#x5168;&#x90E8;-PREPARE-&#x5C31;&#x8FDB;&#x884C;-COMMIT" class="headerlink" title="4.2 &#x6570;&#x636E;&#x8282;&#x70B9;&#x672A;&#x5168;&#x90E8; PREPARE &#x5C31;&#x8FDB;&#x884C; COMMIT"></a>4.2 &#x6570;&#x636E;&#x8282;&#x70B9;&#x672A;&#x5168;&#x90E8; PREPARE &#x5C31;&#x8FDB;&#x884C; COMMIT</h2><p>XA &#x4E8B;&#x52A1;&#x5B9A;&#x4E49;&#xFF0C;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x53C2;&#x4E0E;&#x8005;<strong>&#x5168;&#x90E8;</strong> <code>XA PREPARE</code> &#x6210;&#x529F;&#x5B8C;&#x6210;&#x540E;&#x53D1;&#x8D77; <code>XA COMMIT</code>&#x3002;&#x76EE;&#x524D; MyCAT &#x662F;&#x67D0;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9; <code>XA PREPARE</code> &#x5B8C;&#x6210;&#x540E;<strong>&#x7ACB;&#x5373;</strong>&#x8FDB;&#x884C; <code>XA COMMIT</code>&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#xFF1A;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x63D0;&#x4EA4;&#x4E86; <code>XA END;XA PREPARE</code> &#x65F6;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x5728;&#x8FDB;&#x884C; <code>XA END;XA PREAPRE;</code> &#x524D;&#x6302;&#x4E86;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x4F9D;&#x7136;&#x4F1A; <code>XA COMMIT</code> &#x6210;&#x529F;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x6309;&#x7167;&#x4E25;&#x683C;&#x7684; XA &#x4E8B;&#x52A1;&#x5B9A;&#x4E49;&#x3002;</p>
<h2 id="4-3-MyCAT-&#x542F;&#x52A8;&#x56DE;&#x6EDA;-PREPARE-&#x7684;-XA&#x4E8B;&#x52A1;"><a href="#4-3-MyCAT-&#x542F;&#x52A8;&#x56DE;&#x6EDA;-PREPARE-&#x7684;-XA&#x4E8B;&#x52A1;" class="headerlink" title="4.3 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; PREPARE &#x7684; XA&#x4E8B;&#x52A1;"></a>4.3 MyCAT &#x542F;&#x52A8;&#x56DE;&#x6EDA; PREPARE &#x7684; XA&#x4E8B;&#x52A1;</h2><p>1&#x3001;MyCAT &#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x56DE;&#x6EDA;&#x6240;&#x6709;&#x7684; <code>PREPARE</code> &#x7684; XA &#x4E8B;&#x52A1;&#xFF0C;&#x53EF;&#x80FD;&#x67D0;&#x4E2A; XA &#x4E8B;&#x52A1;&#xFF0C;&#x90E8;&#x5206; <code>COMMIT</code>&#xFF0C;&#x90E8;&#x5206; <code>PREPARE</code>&#x3002;&#x6B64;&#x65F6;&#x76F4;&#x63A5;&#x56DE;&#x6EDA;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x5F53;&#x5224;&#x65AD;&#x5230;&#x67D0;&#x4E2A; XA &#x4E8B;&#x52A1;&#x5B58;&#x5728; <code>PREPARE</code> &#x7684;&#x53C2;&#x4E0E;&#x8005;&#xFF0C;<strong>&#x540C;&#x65F6;&#x5224;&#x65AD;&#x8BE5; XA &#x4E8B;&#x52A1;&#x91CC;&#x5176;&#x4ED6;&#x53C2;&#x4E0E;&#x8005;&#x7684;&#x4E8B;&#x52A1;&#x72B6;&#x6001;</strong>&#x4EE5;&#x53CA;<strong>&#x6570;&#x636E;&#x8282;&#x70B9;&#x91CC; XA &#x4E8B;&#x52A1;&#x72B6;&#x6001;</strong>&#xFF0C;&#x6BD4;&#x5982;&#x53C2;&#x4E0E;&#x8005;&#x4E3A; <code>MySQL</code>&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <code>XA RECOVER</code> &#x67E5;&#x8BE2;&#x5904;&#x4E8E; <code>PREPARE</code> &#x6240;&#x6709;&#x7684; XA &#x4E8B;&#x52A1;&#x3002;</p>
<p>2&#x3001;&#x56DE;&#x6EDA; <code>PREPARE</code> &#x662F;&#x5F02;&#x6B65;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x5728;&#x672A;&#x8FDB;&#x884C;&#x5B8C;&#x6210;&#x65F6;&#x5DF2;&#x7ECF;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#x91CC;&#x56DE;&#x6EDA;&#x6210;&#x529F;&#x3002;&#x5982;&#x679C;&#x5F02;&#x6B65;&#x8FC7;&#x7A0B;&#x4E2D;&#x5931;&#x8D25;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4; XA &#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x4E0D;&#x4E00;&#x81F4;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x56DE;&#x8C03;&#x6210;&#x529F;&#x540E;&#xFF0C;&#x66F4;&#x65B0;&#x8BE5; XA &#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x3002;</p>
<h2 id="4-4-&#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#x672A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;"><a href="#4-4-&#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#x672A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;" class="headerlink" title="4.4 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#x672A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;"></a>4.4 &#x5355;&#x8282;&#x70B9;&#x4E8B;&#x52A1;&#x672A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;</h2><p>&#x8BE5;&#x60C5;&#x51B5;&#x8F83;&#x4E3A;&#x6781;&#x7AEF;&#x3002;&#x53D1;&#x8D77; <code>XA PREPARE</code>&#x5B8C;&#x540E;&#xFF0C;MyCAT &#x6302;&#x4E86;&#x3002;&#x91CD;&#x542F;&#x540E;&#xFF0C;&#x8BE5; XA &#x4E8B;&#x52A1;&#x5728; MyCAT &#x91CC;&#x5C31;&#x201C;&#x6D88;&#x5931;&#x201C;&#x4E86;&#xFF0C;&#x53C2;&#x4E0E;&#x8005;&#x7684;&#x8BE5; XA &#x4E8B;&#x52A1;&#x4E00;&#x76F4;&#x5904;&#x4E8E; <code>PREPARE</code> &#x72B6;&#x6001;&#x3002;&#x4ECE;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x9700;&#x8981;&#x56DE;&#x6EDA;&#x8BE5; XA &#x4E8B;&#x52A1;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x8BB0;&#x5F55;&#x534F;&#x8C03;&#x65E5;&#x5FD7;&#x3002;</p>
<h2 id="4-5-XA-COMMIT-&#x90E8;&#x5206;&#x8282;&#x70B9;&#x6302;&#x4E86;&#x91CD;&#x65B0;&#x6062;&#x590D;&#x540E;&#xFF0C;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;"><a href="#4-5-XA-COMMIT-&#x90E8;&#x5206;&#x8282;&#x70B9;&#x6302;&#x4E86;&#x91CD;&#x65B0;&#x6062;&#x590D;&#x540E;&#xFF0C;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;" class="headerlink" title="4.5 XA COMMIT &#x90E8;&#x5206;&#x8282;&#x70B9;&#x6302;&#x4E86;&#x91CD;&#x65B0;&#x6062;&#x590D;&#x540E;&#xFF0C;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;"></a>4.5 XA COMMIT &#x90E8;&#x5206;&#x8282;&#x70B9;&#x6302;&#x4E86;&#x91CD;&#x65B0;&#x6062;&#x590D;&#x540E;&#xFF0C;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;</h2><p>&#x5F53;&#x4E00;&#x90E8;&#x5206;&#x8282;&#x70B9; <code>XA COMMIT</code> &#x5B8C;&#x6210;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x90E8;&#x5206;&#x6B64;&#x65F6;&#x6302;&#x4E86;&#x3002;&#x5728;&#x7BA1;&#x7406;&#x5458;&#x91CD;&#x542F;&#x6302;&#x6389;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5176;&#x5BF9;&#x5E94;&#x7684; XA &#x4E8B;&#x52A1;&#x672A;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;&#xFF0C;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x1F608;&#x6728;&#x6709;&#x5EFA;&#x8BAE;&#x3002;&#x4E5F;&#x5F88;&#x597D;&#x5947;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5982;&#x4F55;&#x5904;&#x7406;&#x8F83;&#x4E3A;&#x5408;&#x9002;&#x3002;&#x5982;&#x6709;&#x5927;&#x5927;&#x77E5;&#x9053;&#xFF0C;&#x70E6;&#x8BF7;&#x544A;&#x77E5;&#x4E0B;&#x3002;</p>
<h1 id="5-&#x5F69;&#x86CB;"><a href="#5-&#x5F69;&#x86CB;" class="headerlink" title="5. &#x5F69;&#x86CB;"></a>5. &#x5F69;&#x86CB;</h1><p>&#x4F8B;&#x884C;&#x201C;&#x5F69;&#x86CB;&#x201D;&#xFF1F;</p>
<ul class="ui list">
<li><a href="http://blog.csdn.net/d6619309/article/details/52330334" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;Mycat&#x6E90;&#x7801;&#x7BC7; : MyCat&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x673A;&#x5236;&#x5206;&#x6790;&#x300B;</a> &#x6765;&#x81EA; MyCAT Committer &#x7684;&#x6587;&#x7AE0;</li>
<li><a href="http://mysql.taobao.org/monthly/2015/04/05/" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;MySQL &#xB7; &#x6349;&#x866B;&#x52A8;&#x6001; &#xB7; &#x8FDE;&#x63A5;&#x65AD;&#x5F00;&#x5BFC;&#x81F4;XA&#x4E8B;&#x52A1;&#x4E22;&#x5931;&#x300B;</a></li>
<li><a href="http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E8B;&#x52A1;&#x4E00;&#x81F4;&#x6027;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x300B;</a></li>
<li><a href="http://blog.csdn.net/fly2749/article/details/44998203" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;MySQL&#x6570;&#x636E;&#x5E93;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;XA&#x4F18;&#x7F3A;&#x70B9;&#x4E0E;&#x6539;&#x8FDB;&#x65B9;&#x6848;&#x300B;</a></li>
<li><a href="http://www.hollischuang.com/archives/1580" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;&#x6DF1;&#x5165;&#x7406;&#x89E3;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x7684;2PC&#x548C;3PC&#x300B;</a></li>
<li><a href="https://github.com/YunaiV/yunaiv.github.io/blob/master/source/_drafts/MyCAT/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.xmind" target="_blank" rel="external">&#x3010;&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;.xmind&#x3011;</a> &#x7B14;&#x8005;&#x62D9;&#x4F5C; </li>
<li><a href="http://www.yunai.me/RocketMQ/message-transaction/?self">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x300B;</a> &#x7B14;&#x8005;&#x62D9;&#x4F5C;</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析  —— 跨库两表Join</title>
    <link href="http://www.yunai.me/MyCAT/two-table-share-join/"/>
    <id>http://www.yunai.me/MyCAT/two-table-share-join/</id>
    <published>2017-07-11T16:00:00.000Z</published>
    <updated>2017-07-20T01:38:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x4E3B;&#x6D41;&#x7A0B;</a></li>
<li><a href="#">3. ShareJoin</a><ul>
<li><a href="#">3.1 JoinParser</a></li>
<li><a href="#">3.2 ShareJoin.processSQL(&#x2026;)</a></li>
<li><a href="#">3.3 BatchSQLJob</a></li>
<li><a href="#">3.4 ShareDBJoinHandler</a></li>
<li><a href="#">3.5 ShareRowOutPutDataHandler</a></li>
</ul>
</li>
<li><a href="#">4. &#x5F69;&#x86CB;</a></li>
</ul>
<hr>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>MyCAT &#x652F;&#x6301;&#x8DE8;&#x5E93;&#x8868; Join&#xFF0C;&#x76EE;&#x524D;&#x7248;&#x672C;&#x4EC5;&#x652F;&#x6301;&#x8DE8;&#x5E93;<strong>&#x4E24;</strong>&#x8868; Join&#x3002;&#x867D;&#x7136;&#x5982;&#x6B64;&#xFF0C;&#x5DF2;&#x7ECF;&#x80FD;&#x591F;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x5927;&#x90E8;&#x5206;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x3002;&#x51B5;&#x4E14;&#xFF0C;Join &#x8FC7;&#x591A;&#x7684;&#x8868;&#x53EF;&#x80FD;&#x5E26;&#x6765;&#x7684;&#x6027;&#x80FD;&#x95EE;&#x9898;&#x4E5F;&#x662F;&#x5F88;&#x9EBB;&#x70E6;&#x7684;&#x3002;</p>
<p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5206;&#x4EAB;&#xFF1A;</p>
<ol class="ui list">
<li>&#x6574;&#x4F53;&#x6D41;&#x7A0B;&#x3001;&#x8C03;&#x7528;&#x987A;&#x5E8F;&#x56FE;</li>
<li>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x7684;&#x5206;&#x6790;</li>
</ol>
<p>&#x524D;&#x7F6E;&#x9605;&#x8BFB;&#xFF1A;<a href="http://www.yunai.me/MyCAT/single-db-single-table-select/?yunai">&#x300A;MyCAT &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#x300B;</a>&#x3002;</p>
<p>OK&#xFF0C;Let&#x2019;s Go&#x3002;</p>
<h1 id="2-&#x4E3B;&#x6D41;&#x7A0B;"><a href="#2-&#x4E3B;&#x6D41;&#x7A0B;" class="headerlink" title="2. &#x4E3B;&#x6D41;&#x7A0B;"></a>2. &#x4E3B;&#x6D41;&#x7A0B;</h1><p>&#x5F53;&#x6267;&#x884C;&#x8DE8;&#x5E93;&#x4E24;&#x8868; Join SQL &#x65F6;&#xFF0C;&#x7ECF;&#x5386;&#x7684;&#x5927;&#x4F53;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/01.png" alt="" class="ui centered image"></a></p>
<p>SQL &#x4E0A;&#xFF0C;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x6CE8;&#x89E3; <code>/*!mycat:catlet=io.mycat.catlets.ShareJoin */ ${SQL}</code> &#x3002;<code>RouteService#route(...)</code> &#x89E3;&#x6790;&#x6CE8;&#x89E3; <code>mycat:catlet</code> &#x540E;&#xFF0C;&#x8DEF;&#x7531;&#x7ED9; <code>HintCatletHandler</code> &#x4F5C;&#x8FDB;&#x4E00;&#x6B65;&#x5904;&#x7406;&#x3002;</p>
<p><code>HintCatletHandler</code> &#x83B7;&#x53D6;&#x6CE8;&#x89E3;&#x5BF9;&#x5E94;&#x7684; <code>Catlet</code> &#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;<code>io.mycat.catlets.ShareJoin</code> &#x5C31;&#x662F;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#xFF08;&#x76EE;&#x524D;&#x4E5F;&#x53EA;&#x6709;&#x8FD9;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#xFF09;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x8DE8;&#x5E93;&#x4E24;&#x8868; Join &#x7684;&#x529F;&#x80FD;&#x3002;&#x4ECE;&#x7C7B;&#x547D;&#x540D;&#x4E0A;&#x770B;&#xFF0C;<code>ShareJoin</code> &#x5F88;&#x5927;&#x53EF;&#x80FD;&#x6027;&#x540E;&#x7EED;&#x4F1A;&#x63D0;&#x4F9B;<strong>&#x5B8C;&#x6574;</strong>&#x7684;&#x8DE8;&#x5E93;&#x591A;&#x8868;&#x7684; Join &#x529F;&#x80FD;&#x3002;</p>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// HintCatletHandler.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> RouteResultset <span class="title">route</span><span class="params">(SystemConfig sysConfig, SchemaConfig schema,</span></span></div><div class="line">                           <span class="keyword">int</span> sqlType, String realSQL, String charset, ServerConnection sc,</div><div class="line">                           LayerCachePool cachePool, String hintSQLValue, <span class="keyword">int</span> hintSqlType, Map hintMap)</div><div class="line">       <span class="keyword">throws</span> SQLNonTransientException {</div><div class="line">   String cateletClass = hintSQLValue;</div><div class="line">   <span class="keyword">if</span> (LOGGER.isDebugEnabled()) {</div><div class="line">       LOGGER.debug(<span class="string">&quot;load catelet class:&quot;</span> + hintSQLValue + <span class="string">&quot; to run sql &quot;</span> + realSQL);</div><div class="line">   }</div><div class="line">   <span class="keyword">try</span> {</div><div class="line">       Catlet catlet = (Catlet) MycatServer.getInstance().getCatletClassLoader().getInstanceofClass(cateletClass);</div><div class="line">       catlet.route(sysConfig, schema, sqlType, realSQL, charset, sc, cachePool);</div><div class="line">       catlet.processSQL(realSQL, <span class="keyword">new</span> EngineCtx(sc.getSession2()));</div><div class="line">   } <span class="keyword">catch</span> (Exception e) {</div><div class="line">       LOGGER.warn(<span class="string">&quot;catlet error &quot;</span> + e);</div><div class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> SQLNonTransientException(e);</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="3-ShareJoin"><a href="#3-ShareJoin" class="headerlink" title="3. ShareJoin"></a>3. ShareJoin</h1><p>&#x76EE;&#x524D;&#x652F;&#x6301;&#x8DE8;&#x5E93;<strong>&#x4E24;</strong>&#x8868; Join&#x3002;<code>ShareJoin</code> &#x5C06; SQL &#x62C6;&#x5206;&#x6210;&#x5DE6;&#x8868; SQL &#x548C; &#x53F3;&#x8868; SQL&#xFF0C;&#x53D1;&#x9001;&#x7ED9;&#x5404;&#x6570;&#x636E;&#x8282;&#x70B9;&#x6267;&#x884C;&#xFF0C;&#x6C47;&#x603B;&#x6570;&#x636E;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x5408;&#x540E;&#x8FD4;&#x56DE;&#x3002;</p>
<p>&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// SELECT u.id, o.id FROM t_order o </span></div><div class="line"><span class="comment">// INNER JOIN t_user u ON o.uid = u.id</span></div><div class="line"><span class="comment">// &#x3010;&#x987A;&#x5E8F;&#x3011;&#x67E5;&#x8BE2;&#x5DE6;&#x8868;</span></div><div class="line">String leftSQL = <span class="string">&quot;SELECT o.id, u.id FROM t_order o&quot;</span>;</div><div class="line">List leftList = dn[<span class="number">0</span>].select(leftSQL) + dn[<span class="number">1</span>].select(leftSQL) + ... + dn[n].select(leftsql);</div><div class="line"><span class="comment">// &#x3010;&#x5E76;&#x884C;&#x3011;&#x67E5;&#x8BE2;&#x53F3;&#x8868;</span></div><div class="line">String rightSQL = <span class="string">&quot;SELECT u.id FROM t_user u WHERE u.id IN (${leftList.uid})&quot;</span>;</div><div class="line"><span class="keyword">for</span> (dn : dns) { <span class="comment">// &#x6B64;&#x5904;&#x662F;&#x5E76;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x4F7F;&#x7528;&#x56DE;&#x8C03;&#x903B;&#x8F91;</span></div><div class="line">    <span class="keyword">for</span> (rightRecord : dn.select(rightSQL)) { <span class="comment">// &#x67E5;&#x8BE2;&#x53F3;&#x8868;</span></div><div class="line">        <span class="comment">// &#x5408;&#x5E76;&#x7ED3;&#x679C;</span></div><div class="line">        <span class="keyword">for</span> (leftRecord : leftList) {</div><div class="line">            <span class="keyword">if</span> (leftRecord.uid == rightRecord.id) {</div><div class="line">                write(leftRecord + leftRecord.uid &#x62FC;&#x63A5;&#x7ED3;&#x679C;);</div><div class="line">            }</div><div class="line">        }</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x4F1A;&#x66F4;&#x52A0;&#x590D;&#x6742;&#xFF0C;&#x6211;&#x4EEC;&#x63A5;&#x4E0B;&#x6765;&#x4E00;&#x70B9;&#x70B9;&#x5F80;&#x4E0B;&#x770B;&#x3002;</p>
<h2 id="3-1-JoinParser"><a href="#3-1-JoinParser" class="headerlink" title="3.1 JoinParser"></a>3.1 JoinParser</h2><p><code>JoinParser</code> &#x8D1F;&#x8D23;&#x5BF9; SQL &#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;&#x6574;&#x4F53;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/02.png" alt="" class="ui centered image"></a></p>
<p>&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;<code>/*!mycat:catlet=io.mycat.catlets.ShareJoin */ SELECT o.id, u.username from t_order o join t_user u on o.uid = u.id;</code> &#x89E3;&#x6790;&#x540E;&#xFF0C;<code>TableFilter</code> &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/03.png" alt="" class="ui centered image"></a></p>
<ul class="ui list">
<li>tName &#xFF1A;&#x8868;&#x540D;</li>
<li>tAlia &#xFF1A;&#x8868;&#x81EA;&#x5B9A;&#x4E49;&#x547D;&#x540D;</li>
<li>where &#xFF1A;&#x8FC7;&#x6EE4;&#x6761;&#x4EF6;</li>
<li>order &#xFF1A;&#x6392;&#x5E8F;&#x6761;&#x4EF6;</li>
<li>parenTable &#xFF1A;&#x5DE6;&#x8FDE;&#x63A5;&#x7684; Join &#x7684;&#x8868;&#x540D;&#x3002;<code>t_user</code>&#x8868; &#x5728; <code>join</code>&#x5C5E;&#x6027; &#x7684; <code>parenTable</code> &#x4E3A; &#x201C;o&#x201D;&#xFF0C;&#x5373; <code>t_order</code>&#x3002;</li>
<li>joinParentkey &#xFF1A;&#x5DE6;&#x8FDE;&#x63A5;&#x7684; Join &#x5B57;&#x6BB5;</li>
<li>joinKey &#xFF1A;join &#x5B57;&#x6BB5;&#x3002;<code>t_user</code>&#x8868; &#x5728; <code>join</code>&#x5C5E;&#x6027; &#x4E3A; <code>id</code>&#x3002;</li>
<li>join &#xFF1A;&#x5B50; tableFilter&#x3002;&#x5373;&#xFF0C;&#x8BE5;&#x8868;&#x8FDE;&#x63A5;&#x7684;&#x53F3;&#x8FB9;&#x7684;&#x8868;&#x3002;</li>
<li>parent &#xFF1A;&#x548C; <code>join</code>&#x5C5E;&#x6027; &#x76F8;&#x5BF9;&#x3002;</li>
</ul>
<p>&#x770B;&#x5230;&#x6B64;&#x5904;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x80FD;&#x6709;&#x7591;&#x95EE;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x628A; SQL &#x89E3;&#x6790;&#x6210; <code>TableFilter</code>&#x3002;<code>JoinParser</code> &#x6839;&#x636E; <code>TableFilter</code> &#x751F;&#x6210;&#x6570;&#x636E;&#x8282;&#x70B9;&#x6267;&#x884C; SQL&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// TableFilter.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSQL</span><span class="params">()</span> </span>{</div><div class="line">   String sql = <span class="string">&quot;&quot;</span>;</div><div class="line">   <span class="comment">// fields</span></div><div class="line">   <span class="keyword">for</span> (Entry&lt;String, String&gt; entry : fieldAliasMap.entrySet()) {</div><div class="line">       String key = entry.getKey();</div><div class="line">       String val = entry.getValue();</div><div class="line">       <span class="keyword">if</span> (val == <span class="keyword">null</span>) {</div><div class="line">           sql = unionsql(sql, getFieldfrom(key), <span class="string">&quot;,&quot;</span>);</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           sql = unionsql(sql, getFieldfrom(key) + <span class="string">&quot; as &quot;</span> + val, <span class="string">&quot;,&quot;</span>);</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="comment">// where</span></div><div class="line">   <span class="keyword">if</span> (parent == <span class="keyword">null</span>) {    <span class="comment">// on/where &#x7B49;&#x4E8E;&#x53F7;&#x5DE6;&#x8FB9;&#x7684;&#x8868;</span></div><div class="line">       String parentJoinKey = getJoinKey(<span class="keyword">true</span>);</div><div class="line">       <span class="comment">// fix sharejoin bug&#xFF1A;</span></div><div class="line">       <span class="comment">// (AbstractConnection.java:458) -close connection,reason:program err:java.lang.IndexOutOfBoundsException:</span></div><div class="line">       <span class="comment">// &#x539F;&#x56E0;&#x662F;&#x5DE6;&#x8868;&#x7684;select&#x5217;&#x6CA1;&#x6709;&#x5305;&#x542B; join &#x5217;&#xFF0C;&#x5728;&#x83B7;&#x53D6;&#x7ED3;&#x679C;&#x65F6;&#x62A5;&#x4E0A;&#x9762;&#x7684;&#x9519;&#x8BEF;</span></div><div class="line">       <span class="keyword">if</span> (sql != <span class="keyword">null</span> &amp;&amp; parentJoinKey != <span class="keyword">null</span> &amp;&amp;</div><div class="line">               !sql.toUpperCase().contains(parentJoinKey.trim().toUpperCase())) {</div><div class="line">           sql += <span class="string">&quot;, &quot;</span> + parentJoinKey;</div><div class="line">       }</div><div class="line">       sql = <span class="string">&quot;select &quot;</span> + sql + <span class="string">&quot; from &quot;</span> + tName;</div><div class="line">       <span class="keyword">if</span> (!(where.trim().equals(<span class="string">&quot;&quot;</span>))) {</div><div class="line">           sql += <span class="string">&quot; where &quot;</span> + where.trim();</div><div class="line">       }</div><div class="line">   } <span class="keyword">else</span> {    <span class="comment">// on/where &#x7B49;&#x4E8E;&#x53F7;&#x53F3;&#x8FB9;&#x8FB9;&#x7684;&#x8868;</span></div><div class="line">       <span class="keyword">if</span> (allField) {</div><div class="line">           sql = <span class="string">&quot;select &quot;</span> + sql + <span class="string">&quot; from &quot;</span> + tName;</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           sql = unionField(<span class="string">&quot;select &quot;</span> + joinKey, sql, <span class="string">&quot;,&quot;</span>);</div><div class="line">           sql = sql + <span class="string">&quot; from &quot;</span> + tName;</div><div class="line">           <span class="comment">//sql=&quot;select &quot;+joinKey+&quot;,&quot;+sql+&quot; from &quot;+tName;</span></div><div class="line">       }</div><div class="line">       <span class="keyword">if</span> (!(where.trim().equals(<span class="string">&quot;&quot;</span>))) {</div><div class="line">           sql += <span class="string">&quot; where &quot;</span> + where.trim() + <span class="string">&quot; and (&quot;</span> + joinKey + <span class="string">&quot; in %s )&quot;</span>;</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           sql += <span class="string">&quot; where &quot;</span> + joinKey + <span class="string">&quot; in %s &quot;</span>;</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="comment">// order</span></div><div class="line">   <span class="keyword">if</span> (!(order.trim().equals(<span class="string">&quot;&quot;</span>))) {</div><div class="line">       sql += <span class="string">&quot; order by &quot;</span> + order.trim();</div><div class="line">   }</div><div class="line">   <span class="comment">// limit</span></div><div class="line">   <span class="keyword">if</span> (parent == <span class="keyword">null</span>) {</div><div class="line">       <span class="keyword">if</span> ((rowCount &gt; <span class="number">0</span>) &amp;&amp; (offset &gt; <span class="number">0</span>)) {</div><div class="line">           sql += <span class="string">&quot; limit&quot;</span> + offset + <span class="string">&quot;,&quot;</span> + rowCount;</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           <span class="keyword">if</span> (rowCount &gt; <span class="number">0</span>) {</div><div class="line">               sql += <span class="string">&quot; limit &quot;</span> + rowCount;</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> sql;</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x5F53; <code>parent</code> &#x4E3A;&#x7A7A;&#x65F6;&#xFF0C;&#x5373;<strong>on/where &#x7B49;&#x4E8E;&#x53F7;&#x5DE6;&#x8FB9;&#x7684;&#x8868;</strong>&#x3002;&#x4F8B;&#x5982;&#xFF1A;<code>select id, uid from t_order</code>&#x3002;</li>
<li>&#x5F53; <code>parent</code>  &#x4E0D;&#x4E3A;&#x7A7A;&#x65F6;&#xFF0C;&#x5373;<strong>on/where &#x7B49;&#x4E8E;&#x53F7;&#x53F3;&#x8FB9;&#x7684;&#x8868;</strong>&#x3002;&#x4F8B;&#x5982;&#xFF1A;<code>select id, username from t_user where id in (1, 2, 3)</code>&#x3002;</li>
</ul>
<h2 id="3-2-ShareJoin-processSQL-&#x2026;"><a href="#3-2-ShareJoin-processSQL-&#x2026;" class="headerlink" title="3.2 ShareJoin.processSQL(&#x2026;)"></a>3.2 ShareJoin.processSQL(&#x2026;)</h2><p>&#x5F53; SQL &#x89E3;&#x6790;&#x5B8C;&#x540E;&#xFF0C;&#x751F;&#x6210;<strong>&#x5DE6;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL&#xFF0C;&#x53D1;&#x9001;&#x7ED9;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8282;&#x70B9;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x3002;&#x5927;&#x4F53;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/04.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/04.png" alt="" class="ui centered image"></a></p>
<p>&#x5F53; SQL &#x4E3A; <code>/*!mycat:catlet=io.mycat.catlets.ShareJoin */ SELECT o.id, u.username from t_order o join t_user u on o.uid = u.id;</code> &#x65F6;&#xFF0C;<br><code>sql = getSql()</code> &#x7684;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x4E3A; <code>select id, uid from t_order</code>&#x3002;</p>
<p>&#x751F;&#x6210;<strong>&#x5DE6;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x540E;&#xFF0C;<strong>&#x987A;&#x5E8F;&#x987A;&#x5E8F;&#x987A;&#x5E8F;</strong>&#x53D1;&#x9001;&#x7ED9;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8282;&#x70B9;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x3002;&#x5177;&#x4F53;&#x987A;&#x5E8F;&#x67E5;&#x8BE2;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;&#x7AE0; <strong>BatchSQLJob</strong>&#x3002;</p>
<h2 id="3-3-BatchSQLJob"><a href="#3-3-BatchSQLJob" class="headerlink" title="3.3 BatchSQLJob"></a>3.3 BatchSQLJob</h2><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/05.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/05.png" alt="" class="ui centered image"></a></p>
<p><code>EngineCtx</code> &#x5BF9; <code>BatchSQLJob</code> &#x5C01;&#x88C5;&#xFF0C;&#x63D0;&#x4F9B;&#x4E0A;&#x5C42;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;</p>
<ol class="ui list">
<li>executeNativeSQLSequnceJob &#xFF1A;&#x987A;&#x5E8F;&#xFF08;&#x975E;&#x5E76;&#x53D1;&#xFF09;&#x5728;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x6267;&#x884C;SQL&#x4EFB;&#x52A1;</li>
<li>executeNativeSQLParallJob &#xFF1A;&#x5E76;&#x53D1;&#x5728;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x6267;&#x884C;SQL&#x4EFB;&#x52A1;</li>
</ol>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// EngineCtx.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeNativeSQLSequnceJob</span><span class="params">(String[] dataNodes, String sql,</span></span></div><div class="line">		SQLJobHandler jobHandler) {</div><div class="line">	<span class="keyword">for</span> (String dataNode : dataNodes) {</div><div class="line">		SQLJob job = <span class="keyword">new</span> SQLJob(jobId.incrementAndGet(), sql, dataNode,</div><div class="line">				jobHandler, <span class="keyword">this</span>);</div><div class="line">		bachJob.addJob(job, <span class="keyword">false</span>);</div><div class="line">	}</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeNativeSQLParallJob</span><span class="params">(String[] dataNodes, String sql,</span></span></div><div class="line">		SQLJobHandler jobHandler) {</div><div class="line">	<span class="keyword">for</span> (String dataNode : dataNodes) {</div><div class="line">		SQLJob job = <span class="keyword">new</span> SQLJob(jobId.incrementAndGet(), sql, dataNode,</div><div class="line">				jobHandler, <span class="keyword">this</span>);</div><div class="line">		bachJob.addJob(job, <span class="keyword">true</span>);</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<hr>
<p><code>BatchSQLJob</code> &#x901A;&#x8FC7;<strong>&#x6267;&#x884C;&#x4E2D;&#x4EFB;&#x52A1;&#x5217;&#x8868;</strong>&#x3001;<strong>&#x5F85;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x5217;&#x8868;</strong>&#x6765;&#x5B9E;&#x73B0;<strong>&#x987A;&#x5E8F;/&#x5E76;&#x53D1;</strong>&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// BatchSQLJob.java</span></div><div class="line"><span class="comment">/**</span></div><div class="line">* &#x6267;&#x884C;&#x4E2D;&#x4EFB;&#x52A1;&#x5217;&#x8868;</div><div class="line">*/</div><div class="line"><span class="keyword">private</span> ConcurrentHashMap&lt;Integer, SQLJob&gt; runningJobs = <span class="keyword">new</span> ConcurrentHashMap&lt;Integer, SQLJob&gt;();</div><div class="line"><span class="comment">/**</span></div><div class="line">* &#x5F85;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x5217;&#x8868;</div><div class="line">*/</div><div class="line"><span class="keyword">private</span> ConcurrentLinkedQueue&lt;SQLJob&gt; waitingJobs = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;SQLJob&gt;();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(SQLJob newJob, <span class="keyword">boolean</span> parallExecute)</span> </span>{</div><div class="line">   <span class="keyword">if</span> (parallExecute) {</div><div class="line">       runJob(newJob);</div><div class="line">   } <span class="keyword">else</span> {</div><div class="line">       waitingJobs.offer(newJob);</div><div class="line">       <span class="keyword">if</span> (runningJobs.isEmpty()) { <span class="comment">// &#x82E5;&#x65E0;&#x6B63;&#x5728;&#x6267;&#x884C;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x5219;&#x4ECE;&#x7B49;&#x5F85;&#x961F;&#x5217;&#x91CC;&#x83B7;&#x53D6;&#x4EFB;&#x52A1;&#x8FDB;&#x884C;&#x6267;&#x884C;&#x3002;</span></div><div class="line">           SQLJob job = waitingJobs.poll();</div><div class="line">           <span class="keyword">if</span> (job != <span class="keyword">null</span>) {</div><div class="line">               runJob(job);</div><div class="line">           }</div><div class="line">       }</div><div class="line">   }</div><div class="line">}</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">jobFinished</span><span class="params">(SQLJob sqlJob)</span> </span>{</div><div class="line">	runningJobs.remove(sqlJob.getId());</div><div class="line">	SQLJob job = waitingJobs.poll();</div><div class="line">	<span class="keyword">if</span> (job != <span class="keyword">null</span>) {</div><div class="line">		runJob(job);</div><div class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	} <span class="keyword">else</span> {</div><div class="line">		<span class="keyword">if</span> (noMoreJobInput) {</div><div class="line">			<span class="keyword">return</span> runningJobs.isEmpty() &amp;&amp; waitingJobs.isEmpty();</div><div class="line">		} <span class="keyword">else</span> {</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><strong>&#x987A;&#x5E8F;</strong>&#x6267;&#x884C;&#x65F6;&#xFF0C;&#x5F53; <code>runningJobs</code> &#x5B58;&#x5728;&#x6267;&#x884C;&#x4E2D;&#x7684;&#x4EFB;&#x52A1;&#x65F6;&#xFF0C;<code>#addJob(...)</code> &#x65F6;&#xFF0C;&#x4E0D;&#x7ACB;&#x5373;&#x6267;&#x884C;&#xFF0C;&#x6DFB;&#x52A0;&#x5230; <code>waitingJobs</code>&#x3002;&#x5F53; <code>SQLJob</code> &#x5B8C;&#x6210;&#x65F6;&#xFF0C;&#x987A;&#x5E8F;&#x8C03;&#x7528;&#x4E0B;&#x4E00;&#x4E2A;&#x4EFB;&#x52A1;&#x3002;</li>
<li><strong>&#x5E76;&#x53D1;</strong>&#x6267;&#x884C;&#x65F6;&#xFF0C;<code>#addJob(...)</code> &#x65F6;&#xFF0C;&#x7ACB;&#x5373;&#x6267;&#x884C;&#x3002;</li>
</ul>
<hr>
<p><code>SQLJob</code> SQL &#x5F02;&#x6B65;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x3002;&#x5176; <code>jobHandler(SQLJobHandler)</code> &#x5C5E;&#x6027;&#xFF0C;&#x5728; SQL &#x6267;&#x884C;&#x6709;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x65F6;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x56DE;&#x8C03;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x5F02;&#x6B65;&#x6267;&#x884C;&#x3002;</p>
<p>&#x5728; <code>ShareJoin</code> &#x91CC;&#xFF0C;<code>SQLJobHandler</code> &#x6709;&#x4E24;&#x4E2A;&#x5B9E;&#x73B0;&#xFF1A;<code>ShareDBJoinHandler</code>&#x3001;<code>ShareRowOutPutDataHandler</code>&#x3002;&#x524D;&#x8005;&#xFF0C;<strong>&#x5DE6;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x56DE;&#x8C03;&#xFF1B;&#x540E;&#x8005;&#xFF0C;<strong>&#x53F3;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x56DE;&#x8C03;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/06.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/06.png" alt="" class="ui centered image"></a></p>
<h2 id="3-4-ShareDBJoinHandler"><a href="#3-4-ShareDBJoinHandler" class="headerlink" title="3.4 ShareDBJoinHandler"></a>3.4 ShareDBJoinHandler</h2><p><code>ShareDBJoinHandler</code>&#xFF0C;<strong>&#x5DE6;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x56DE;&#x8C03;&#x3002;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/07.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/07.png" alt="" class="ui centered image"></a></p>
<ul class="ui list">
<li><code>#fieldEofResponse(...)</code> &#xFF1A;&#x63A5;&#x6536;&#x6570;&#x636E;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x7684; fields&#xFF0C;&#x653E;&#x5165;&#x5185;&#x5B58;&#x3002;</li>
<li><code>#rowResponse(...)</code> &#xFF1A;&#x63A5;&#x6536;&#x6570;&#x636E;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x7684; row&#xFF0C;&#x653E;&#x5165;&#x5185;&#x5B58;&#x3002;</li>
<li><code>#rowEofResponse(...)</code> &#xFF1A;&#x63A5;&#x6536;&#x5B8C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x7684; row&#x3002;&#x5F53;&#x6240;&#x6709;&#x6570;&#x636E;&#x8282;&#x70B9;&#x90FD;&#x5B8C;&#x6210; SQL &#x6267;&#x884C;&#x65F6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x53F3;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x4EFB;&#x52A1;&#xFF0C;<strong>&#x5E76;&#x884C;</strong>&#x6267;&#x884C;&#xFF0C;&#x5373;&#x56FE;&#x4E2D;<strong>#createQryJob(&#x2026;)</strong>&#x3002;</li>
</ul>
<p>&#x5F53; SQL &#x4E3A; <code>/*!mycat:catlet=io.mycat.catlets.ShareJoin */ SELECT o.id, u.username from t_order o join t_user u on o.uid = u.id;</code> &#x65F6;&#xFF0C;<br><code>sql = getChildSQL()</code> &#x7684;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x4E3A; <code>select id, username from t_user where id in (1, 2, 3)</code>&#x3002;</p>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ShareJoin.java</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createQryJob</span><span class="params">(<span class="keyword">int</span> batchSize)</span> </span>{</div><div class="line">   <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line">   Map&lt;String, <span class="keyword">byte</span>[]&gt; batchRows = <span class="keyword">new</span> ConcurrentHashMap&lt;String, <span class="keyword">byte</span>[]&gt;();</div><div class="line">   String theId = <span class="keyword">null</span>;</div><div class="line">   StringBuilder sb = <span class="keyword">new</span> StringBuilder().append(<span class="string">&apos;(&apos;</span>);</div><div class="line">   String svalue = <span class="string">&quot;&quot;</span>;</div><div class="line">   <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : ids.entrySet()) {</div><div class="line">       theId = e.getKey();</div><div class="line">       <span class="keyword">byte</span>[] rowbyte = rows.remove(theId);</div><div class="line">       <span class="keyword">if</span> (rowbyte != <span class="keyword">null</span>) {</div><div class="line">           batchRows.put(theId, rowbyte);</div><div class="line">       }</div><div class="line">       <span class="keyword">if</span> (!svalue.equals(e.getValue())) {</div><div class="line">           <span class="keyword">if</span> (joinKeyType == Fields.FIELD_TYPE_VAR_STRING</div><div class="line">                   || joinKeyType == Fields.FIELD_TYPE_STRING) { <span class="comment">// joinkey &#x4E3A;varchar</span></div><div class="line">               sb.append(<span class="string">&quot;&apos;&quot;</span>).append(e.getValue()).append(<span class="string">&quot;&apos;&quot;</span>).append(<span class="string">&apos;,&apos;</span>); <span class="comment">// (&apos;digdeep&apos;,&apos;yuanfang&apos;)</span></div><div class="line">           } <span class="keyword">else</span> { <span class="comment">// &#x9ED8;&#x8BA4;joinkey&#x4E3A;int/long</span></div><div class="line">               sb.append(e.getValue()).append(<span class="string">&apos;,&apos;</span>); <span class="comment">// (1,2,3)</span></div><div class="line">           }</div><div class="line">       }</div><div class="line">       svalue = e.getValue();</div><div class="line">       <span class="keyword">if</span> (count++ &gt; batchSize) {</div><div class="line">           <span class="keyword">break</span>;</div><div class="line">       }</div><div class="line">   }</div><div class="line">   <span class="keyword">if</span> (count == <span class="number">0</span>) {</div><div class="line">       <span class="keyword">return</span>;</div><div class="line">   }</div><div class="line">   jointTableIsData = <span class="keyword">true</span>;</div><div class="line">   sb.deleteCharAt(sb.length() - <span class="number">1</span>).append(<span class="string">&apos;)&apos;</span>);</div><div class="line">   String sql = String.format(joinParser.getChildSQL(), sb);</div><div class="line">   getRoute(sql);</div><div class="line">   ctx.executeNativeSQLParallJob(getDataNodes(), sql, <span class="keyword">new</span> ShareRowOutPutDataHandler(<span class="keyword">this</span>, fields, joinindex, joinParser.getJoinRkey(), batchRows, ctx.getSession()));</div><div class="line">}</div></pre></td></tr></table></figure>
<h2 id="3-5-ShareRowOutPutDataHandler"><a href="#3-5-ShareRowOutPutDataHandler" class="headerlink" title="3.5 ShareRowOutPutDataHandler"></a>3.5 ShareRowOutPutDataHandler</h2><p><code>ShareRowOutPutDataHandler</code>&#xFF0C;<strong>&#x53F3;&#x8FB9;&#x7684;&#x8868;</strong>&#x6267;&#x884C;&#x7684; SQL &#x56DE;&#x8C03;&#x3002;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/08.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/08.png" alt="" class="ui centered image"></a></p>
<ul class="ui list">
<li><code>#fieldEofResponse(...)</code> &#xFF1A;&#x63A5;&#x6536;&#x6570;&#x636E;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x7684; fields&#xFF0C;&#x8FD4;&#x56DE; header &#x7ED9; MySQL Client&#x3002;</li>
<li><code>#rowResponse(...)</code> &#xFF1A;&#x63A5;&#x6536;&#x6570;&#x636E;&#x8282;&#x70B9;&#x8FD4;&#x56DE;&#x7684; row&#xFF0C;&#x5339;&#x914D;&#x5DE6;&#x8868;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x8FD4;&#x56DE;&#x5408;&#x5E76;&#x540E;&#x8FD4;&#x56DE;&#x7684; row &#x7ED9; MySQL Client&#x3002;</li>
<li><code>#rowEofResponse(...)</code> &#xFF1A;&#x5F53;&#x6240;&#x6709; row &#x90FD;&#x8FD4;&#x56DE;&#x5B8C;&#x540E;&#xFF0C;&#x8FD4;&#x56DE; eof &#x7ED9; MySQL Client&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="comment">// ShareRowOutPutDataHandler.java</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onRowData</span><span class="params">(String dataNode, <span class="keyword">byte</span>[] rowData)</span> </span>{</div><div class="line">   RowDataPacket rowDataPkgold = ResultSetUtil.parseRowData(rowData, bfields);</div><div class="line">   <span class="comment">//&#x62F7;&#x8D1D;&#x4E00;&#x4EFD;batchRows</span></div><div class="line">   Map&lt;String, <span class="keyword">byte</span>[]&gt; batchRowsCopy = <span class="keyword">new</span> ConcurrentHashMap&lt;String, <span class="keyword">byte</span>[]&gt;();</div><div class="line">   batchRowsCopy.putAll(arows);</div><div class="line">   <span class="comment">// &#x83B7;&#x53D6;Id&#x5B57;&#x6BB5;&#xFF0C;</span></div><div class="line">   String id = ByteUtil.getString(rowDataPkgold.fieldValues.get(joinR));</div><div class="line">   <span class="comment">// &#x67E5;&#x627E;ID&#x5BF9;&#x5E94;&#x7684;A&#x8868;&#x7684;&#x8BB0;&#x5F55;</span></div><div class="line">   <span class="keyword">byte</span>[] arow = getRow(batchRowsCopy, id, joinL);</div><div class="line">   <span class="keyword">while</span> (arow != <span class="keyword">null</span>) {</div><div class="line">       RowDataPacket rowDataPkg = ResultSetUtil.parseRowData(arow, afields);<span class="comment">//ctx.getAllFields());</span></div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; rowDataPkgold.fieldCount; i++) {</div><div class="line">           <span class="comment">// &#x8BBE;&#x7F6E;b.name &#x5B57;&#x6BB5;</span></div><div class="line">           <span class="keyword">byte</span>[] bname = rowDataPkgold.fieldValues.get(i);</div><div class="line">           rowDataPkg.add(bname);</div><div class="line">           rowDataPkg.addFieldCount(<span class="number">1</span>);</div><div class="line">       }</div><div class="line">       <span class="comment">// huangyiming add</span></div><div class="line">       MiddlerResultHandler middlerResultHandler = session.getMiddlerResultHandler();</div><div class="line">       <span class="keyword">if</span> (<span class="keyword">null</span> == middlerResultHandler) {</div><div class="line">           ctx.writeRow(rowDataPkg);</div><div class="line">       } <span class="keyword">else</span> {</div><div class="line">           <span class="keyword">if</span> (middlerResultHandler <span class="keyword">instanceof</span> MiddlerQueryResultHandler) {</div><div class="line">               <span class="keyword">byte</span>[] columnData = rowDataPkg.fieldValues.get(<span class="number">0</span>);</div><div class="line">               <span class="keyword">if</span> (columnData != <span class="keyword">null</span> &amp;&amp; columnData.length &gt; <span class="number">0</span>) {</div><div class="line">                   String rowValue = <span class="keyword">new</span> String(columnData);</div><div class="line">                   middlerResultHandler.add(rowValue);</div><div class="line">               }</div><div class="line">               <span class="comment">//}</span></div><div class="line">           }</div><div class="line"></div><div class="line">       }</div><div class="line">       arow = getRow(batchRowsCopy, id, joinL);</div><div class="line">   }</div><div class="line">   <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="4-&#x5F69;&#x86CB;"><a href="#4-&#x5F69;&#x86CB;" class="headerlink" title="4. &#x5F69;&#x86CB;"></a>4. &#x5F69;&#x86CB;</h1><p>&#x5982;&#x4E0B;&#x662F;&#x672C;&#x6587;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x6838;&#x5FC3;&#x7C7B;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x7FFB;&#x4E00;&#x7FFB;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_07_12/09.png"><img src="http://www.yunai.me/images/MyCAT/2017_07_12/09.png" alt="" class="ui centered image"></a></p>
<p><code>ShareJoin</code> &#x53E6;&#x5916;&#x4E0D;&#x652F;&#x6301;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<ol class="ui list">
<li>&#x53EA;&#x652F;&#x6301; inner join&#xFF0C;&#x4E0D;&#x652F;&#x6301; left join&#x3001;right join &#x7B49;&#x7B49;&#x8FDE;&#x63A5;&#x3002;</li>
<li>&#x4E0D;&#x652F;&#x6301; order by&#x3002;</li>
<li>&#x4E0D;&#x652F;&#x6301; group by &#x4EE5;&#x53CA; &#x76F8;&#x5173;&#x805A;&#x5408;&#x51FD;&#x6570;&#x3002;</li>
<li>&#x5373;&#x4F7F; join &#x5DE6;&#x8868;&#x7684;&#x5B57;&#x6BB5;&#x672A;&#x58F0;&#x660E;&#x4E3A;&#x8FD4;&#x56DE; fields &#x4E5F;&#x4F1A;&#x8FD4;&#x56DE;&#x3002;</li>
</ol>
<p>&#x6069;&#xFF0C;<strong>MyCAT &#x5F31;XA</strong> &#x6E90;&#x7801;&#x7EE7;&#x7EED;&#x8D70;&#x8D77;&#xFF01;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码解析 —— 分片结果合并（一）</title>
    <link href="http://www.yunai.me/MyCAT/sharding-result-merge-first/"/>
    <id>http://www.yunai.me/MyCAT/sharding-result-merge-first/</id>
    <published>2017-06-12T16:00:00.000Z</published>
    <updated>2017-07-20T01:38:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>&#x76F8;&#x4FE1;&#x5F88;&#x591A;&#x540C;&#x5B66;&#x770B;&#x8FC7; MySQL &#x5404;&#x79CD;&#x4F18;&#x5316;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x91CC;&#x9762; 99% &#x4F1A;&#x63D0;&#x5230;&#xFF1A;&#x5355;&#x8868;&#x6570;&#x636E;&#x91CF;&#x5927;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5206;&#x7247;&#xFF08;&#x6C34;&#x5E73;&#x62C6;&#x5206; or &#x5782;&#x76F4;&#x62C6;&#x5206;&#xFF09;&#x3002;&#x5206;&#x7247;&#x4E4B;&#x540E;&#xFF0C;&#x4E1A;&#x52A1;&#x4E0A;&#x5FC5;&#x7136;&#x9762;&#x4E34;&#x7684;&#x573A;&#x666F;&#xFF1A;&#x8DE8;&#x5206;&#x7247;&#x7684;&#x6570;&#x636E;&#x5408;&#x5E76;&#x3002;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x5C31;&#x4E00;&#x8D77;&#x6765;&#x7785;&#x7785; MyCAT &#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;<strong>&#x5206;&#x7247;&#x7ED3;&#x679C;&#x5408;&#x5E76;</strong>&#x3002;</p>
<p>&#x8DE8;&#x5206;&#x7247;&#x67E5;&#x8BE2;&#x5927;&#x4F53;&#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/flow.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/flow.png" alt="flow" class="ui centered image"></a></p>
<p>&#x548C; <a href="http://www.yunai.me/Mycat/single-db-single-table-select/">&#x300A;&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#x300B;</a> &#x4E0D;&#x540C;&#x7684;&#x4E24;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF1A;</p>
<ul class="ui list">
<li>&#x3010;2&#x3011;&#x591A;&#x5206;&#x7247;&#x6267;&#x884C; SQL</li>
<li>&#x3010;4&#x3011;&#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;</li>
</ul>
<p>&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x9010;&#x6761;&#x8BB2;&#x89E3;&#x8FD9;&#x4E24;&#x4E2A;&#x8FC7;&#x7A0B;&#x3002;</p>
<h1 id="2-&#x591A;&#x5206;&#x7247;&#x6267;&#x884C;-SQL"><a href="#2-&#x591A;&#x5206;&#x7247;&#x6267;&#x884C;-SQL" class="headerlink" title="2. &#x591A;&#x5206;&#x7247;&#x6267;&#x884C; SQL"></a>2. &#x591A;&#x5206;&#x7247;&#x6267;&#x884C; SQL</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/execute_sql.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/execute_sql.png" alt="execute_sql" class="ui centered image"></a></p>
<p>&#x7ECF;&#x8FC7; SQL &#x89E3;&#x6790;&#x540E;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x9700;&#x8981;&#x6267;&#x884C; SQL &#x7684;<strong>&#x5206;&#x7247;&#x8282;&#x70B9;</strong>&#xFF0C;&#x904D;&#x5386;<strong>&#x5206;&#x7247;&#x8282;&#x70B9;</strong>&#x53D1;&#x9001; SQL &#x8FDB;&#x884C;&#x6267;&#x884C;&#x3002;</p>
<p><strong>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</strong>&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeQueryHandler.java" target="_blank" rel="external">MultiNodeQueryHandler.java#execute(&#x2026;)</a></li>
</ul>
<p><em><strong>SQL &#x89E3;&#x6790;</strong> &#x8BE6;&#x7EC6;&#x8FC7;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x53E6;&#x5F00;&#x6587;&#x7AE0;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5BB9;&#x8FC7;&#x591A;&#xFF0C;&#x5F71;&#x54CD;&#x5927;&#x5BB6;&#x5BF9; <strong>&#x5206;&#x7247;&#x7ED3;&#x679C;&#x5408;&#x5E76;</strong> &#x6D41;&#x7A0B;&#x548C;&#x903B;&#x8F91;&#x7684;&#x7406;&#x89E3;&#x3002;</em></p>
<h1 id="3-&#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;"><a href="#3-&#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;" class="headerlink" title="3. &#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;"></a>3. &#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/handle_response.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/handle_response.png" alt="handle_response" class="ui centered image"></a></p>
<p>&#x548C; <a href="http://www.yunai.me/Mycat/single-db-single-table-select/">&#x300A;&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#x300B;</a> &#x4E0D;&#x540C;&#xFF0C;&#x591A;&#x4E2A;<strong>&#x5206;&#x7247;&#x8282;&#x70B9;</strong>&#x90FD;&#x4F1A;<strong>&#x5206;&#x522B;</strong>&#x54CD;&#x5E94; <em>&#x8BB0;&#x5F55;&#x5934;(header)</em> &#x548C; <em>&#x8BB0;&#x5F55;&#x884C;(row)</em> &#x3002;&#x5728;&#x5F00;&#x59CB;&#x5206;&#x6790; MyCAT &#x662F;&#x600E;&#x4E48;&#x5408;&#x5E76;&#x591A;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x56DE;&#x60F3;&#x4E0B; SQL &#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x3002;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line">FROM       // [1] &#x9009;&#x62E9;&#x8868;</div><div class="line">WHERE      // [2] &#x8FC7;&#x6EE4;&#x8868;</div><div class="line">GROUP BY   // [3] &#x5206;&#x7EC4;</div><div class="line"><span class="keyword">SELECT</span>     // [<span class="number">4</span>] &#x666E;&#x901A;&#x5B57;&#x6BB5;&#xFF0C;<span class="keyword">max</span> / <span class="keyword">min</span> / <span class="keyword">avg</span> / <span class="keyword">sum</span> / <span class="keyword">count</span> &#x7B49;&#x51FD;&#x6570;&#xFF0C;<span class="keyword">distinct</span></div><div class="line"><span class="keyword">HAVING</span>     // [<span class="number">5</span>] &#x518D;&#x8FC7;&#x6EE4;&#x8868;</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span>   // [<span class="number">6</span>] &#x6392;&#x5E8F;</div><div class="line"><span class="keyword">LIMIT</span>      // [<span class="number">7</span>] &#x5206;&#x9875;</div></pre></td></tr></table></figure>
<h2 id="3-1-&#x8BB0;&#x5F55;&#x5934;-header"><a href="#3-1-&#x8BB0;&#x5F55;&#x5934;-header" class="headerlink" title="3.1 &#x8BB0;&#x5F55;&#x5934;(header)"></a>3.1 &#x8BB0;&#x5F55;&#x5934;(header)</h2><p>&#x591A;&#x4E2A;<strong>&#x5206;&#x7247;&#x8282;&#x70B9;</strong>&#x54CD;&#x5E94;&#x65F6;&#xFF0C;&#x4F1A;&#x54CD;&#x5E94;&#x591A;&#x6B21; <em>&#x8BB0;&#x5F55;&#x5934;(header)</em> &#x3002;MyCAT &#x5728;&#x5B9E;&#x9645;&#x5904;&#x7406;&#x65F6;&#xFF0C;&#x53EA;&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x7684; <em>&#x8BB0;&#x5F55;&#x5934;(header)</em> &#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x65F6;&#x8981;&#x4FDD;&#x8BC1;&#x8868;&#x7684; Schema &#x76F8;&#x540C;&#x3002;</p>
<p><strong>&#x5206;&#x7247;&#x8282;&#x70B9;</strong>&#x54CD;&#x5E94;&#x7684; <em>&#x8BB0;&#x5F55;&#x5934;(header)</em> &#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8FD4;&#x56DE; MySQL Client &#x5417;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#x4E0D;&#x53EF;&#x4EE5;&#x3002;<code>AVG</code>&#x51FD;&#x6570; &#x662F;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#xFF0C;MyCAT &#x9700;&#x8981;&#x5C06; <code>AVG</code> &#x62C6;&#x6210; <code>SUM</code> + <code>COUNT</code> &#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>
<figure class="highlight"><table><tr><td class="code"><pre><div class="line">// [1] MySQL Client =&gt; MyCAT &#xFF1A;</div><div class="line">SELECT AVG(age) FROM student;</div><div class="line"></div><div class="line">// [2] MyCAT =&gt; MySQL Server &#xFF1A;</div><div class="line">SELECT SUM(age) AS AVG0SUM, COUNT(age) AS AVG0COUNT FROM student;</div><div class="line"></div><div class="line">// [3] &#x6700;&#x7EC8;&#xFF1A;AVG(age) = SUM(age) AS AVG0SUM / COUNT(age)</div></pre></td></tr></table></figure>
<p><strong>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</strong>&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeQueryHandler.java" target="_blank" rel="external">MultiNodeQueryHandler.java#fieldEofResponse(&#x2026;)</a>&#x3002;</li>
</ul>
<h2 id="3-2-&#x8BB0;&#x5F55;&#x884C;-row"><a href="#3-2-&#x8BB0;&#x5F55;&#x884C;-row" class="headerlink" title="3.2 &#x8BB0;&#x5F55;&#x884C;(row)"></a>3.2 &#x8BB0;&#x5F55;&#x884C;(row)</h2><h3 id="3-1-AbstractDataNodeMerge"><a href="#3-1-AbstractDataNodeMerge" class="headerlink" title="3.1 AbstractDataNodeMerge"></a>3.1 AbstractDataNodeMerge</h3><p>MyCAT &#x5BF9;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x5408;&#x5E76;&#x901A;&#x8FC7; <code>AbstractDataNodeMerge</code> &#x5B50;&#x7C7B;&#x6765;&#x5B8C;&#x6210;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/merge_service.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/merge_service.png" alt="merge_service" class="ui centered image"></a> </p>
<p><code>AbstractDataNodeMerge</code> &#xFF1A;</p>
<ul class="ui list">
<li>-packs &#xFF1A;&#x5F85;&#x5408;&#x5E76;&#x8BB0;&#x5F55;&#x884C;(row)&#x961F;&#x5217;&#x3002;&#x961F;&#x5217;&#x5C3E;&#x90E8;&#x63D2;&#x5165; <code>END_FLAG_PACK</code> &#x8868;&#x793A;&#x961F;&#x5217;&#x5DF2;&#x7ED3;&#x675F;&#x3002;</li>
<li>-running &#xFF1A;&#x5408;&#x5E76;&#x903B;&#x8F91;&#x662F;&#x5426;&#x6B63;&#x5728;&#x6267;&#x884C;&#x4E2D;&#x7684;&#x6807;&#x8BB0;&#x3002;</li>
<li>~onRowMetaData(&#x2026;) &#xFF1A;&#x6839;&#x636E;<strong>&#x8BB0;&#x5F55;&#x5217;&#x4FE1;&#x606F;(ColMeta)</strong>&#x6784;&#x5EFA;&#x5BF9;&#x5E94;&#x7684;&#x6392;&#x5E8F;&#x7EC4;&#x4EF6;&#x548C;&#x805A;&#x5408;&#x7EC4;&#x4EF6;&#x3002;&#x9700;&#x8981;&#x5B50;&#x7C7B;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#x3002;</li>
<li>~onNewRecord(&#x2026;) &#xFF1A;&#x63D2;&#x5165;&#x8BB0;&#x5F55;&#x884C;(row) &#x5230; <code>packs</code>&#x3002;</li>
<li>~outputMergeResult(&#x2026;) &#xFF1A;&#x63D2;&#x5165; <code>END_FLAG_PACK</code> &#x5230; <code>packs</code>&#x3002;</li>
<li>~run(&#x2026;) &#xFF1A;&#x6267;&#x884C;<strong>&#x5408;&#x5E76;</strong>&#x5206;&#x7247;&#x7ED3;&#x679C;&#x903B;&#x8F91;&#xFF0C;&#x5E76;&#x5C06;&#x5408;&#x5E76;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x7ED9; MySQL Client&#x3002;&#x9700;&#x8981;&#x5B50;&#x7C7B;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#x3002;</li>
</ul>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/AbstractDataNodeMerge_run.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/AbstractDataNodeMerge_run.png" alt="AbstractDataNodeMerge_run.png" class="ui centered image"></a></p>
<p><strong>&#x901A;&#x8FC7; <code>running</code> &#x6807;&#x8BB0;&#x4FDD;&#x8BC1;&#x540C;&#x4E00;&#x6761; SQL &#x540C;&#x65F6;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6B63;&#x5728;&#x6267;&#x884C;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x9700;&#x8981;&#x7B49;&#x5230;&#x6BCF;&#x4E2A;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x90FD;&#x8FD4;&#x56DE;&#x5C31;&#x53EF;&#x4EE5;&#x6267;&#x884C;<em>&#x805A;&#x5408;</em>&#x903B;&#x8F91;&#x3002;&#x5F53;&#x7136;&#xFF0C;<em>&#x6392;&#x5E8F;</em>&#x903B;&#x8F91;&#x9700;&#x8981;&#x7B49;&#x5230;&#x6240;&#x6709;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x90FD;&#x8FD4;&#x56DE;&#x624D;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x3002;</strong></p>
<p><strong>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</strong>&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/sqlengine/mpp/AbstractDataNodeMerge.java" target="_blank" rel="external">AbstractDataNodeMerge.java</a></li>
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/sqlengine/mpp/DataNodeMergeManager.java" target="_blank" rel="external">DataNodeMergeManager.java#run(&#x2026;)</a></li>
</ul>
<h3 id="3-2-DataNodeMergeManager"><a href="#3-2-DataNodeMergeManager" class="headerlink" title="3.2 DataNodeMergeManager"></a>3.2 DataNodeMergeManager</h3><p><code>AbstractDataNodeMerge</code> &#x6709;&#x4E24;&#x79CD;&#x5B50;&#x7C7B;&#x5B9E;&#x73B0;&#xFF1A;</p>
<ul class="ui list">
<li><code>DataMergeService</code> &#xFF1A;&#x57FA;&#x4E8E;<strong>&#x5806;&#x5185;&#x5185;&#x5B58;</strong>&#x5408;&#x5E76;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x3002;</li>
<li><code>DataNodeMergeManager</code> &#xFF1A;&#x57FA;&#x4E8E;<strong>&#x5806;&#x5916;&#x5185;&#x5B58;</strong>&#x5408;&#x5E76;&#x5206;&#x7247;&#x7ED3;&#x679C;&#x3002;</li>
</ul>
<p>&#x76EE;&#x524D;&#x5B98;&#x65B9;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x4F7F;&#x7528; <code>DataNodeMergeManager</code>&#x3002;&#x4E3B;&#x8981;&#x6709;&#x5982;&#x4E0B;&#x4F18;&#x70B9;&#xFF1A;</p>
<ol class="ui list">
<li>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3002;&#x5F53;&#x5E76;&#x53D1;&#x91CF;&#x5927;&#x6216;&#x8005;&#x6570;&#x636E;&#x91CF;&#x5927;&#x65F6;&#xFF0C;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x610F;&#x5473;&#x7740;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;</li>
<li>&#x51CF;&#x5C11; GC &#x6682;&#x505C;&#x65F6;&#x95F4;&#x3002;&#x8BB0;&#x5F55;&#x884C;(row)&#x5BF9;&#x8C61;&#x5C0F;&#x4E14;&#x91CD;&#x7528;&#x6027;&#x5F88;&#x4F4E;&#xFF0C;&#x9700;&#x8981;&#x80FD;&#x591F;&#x8FDB;&#x884C;&#x7C7B;&#x4F3C; C / C++ &#x7684;&#x81EA;&#x4E3B;&#x5185;&#x5B58;&#x91CA;&#x653E;&#x3002;</li>
<li>&#x66F4;&#x5FEB;&#x7684;&#x5185;&#x5B58;&#x590D;&#x5236;&#x548C;&#x8BFB;&#x53D6;&#x901F;&#x5EA6;&#xFF0C;&#x5BF9;&#x6392;&#x5E8F;&#x548C;&#x805A;&#x5408;&#x5E26;&#x6765;&#x5F88;&#x597D;&#x7684;&#x63D0;&#x901F;&#x3002;</li>
</ol>
<p>&#x5982;&#x679C;&#x5BF9;<strong>&#x5806;&#x5916;&#x5185;&#x5B58;</strong>&#x4E0D;&#x592A;&#x4E86;&#x89E3;&#xFF0C;&#x63A8;&#x8350;&#x9605;&#x8BFB;&#x5982;&#x4E0B;&#x6587;&#x7AE0;&#xFF1A;</p>
<ol class="ui list">
<li><a href="http://www.jianshu.com/p/50be08b54bee" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;&#x4ECE;0&#x5230;1&#x8D77;&#x6B65;-&#x8DDF;&#x6211;&#x8FDB;&#x5165;&#x5806;&#x5916;&#x5185;&#x5B58;&#x7684;&#x5947;&#x5999;&#x4E16;&#x754C;&#x300B;</a></li>
<li><a href="http://www.infoq.com/cn/news/2014/12/external-memory-heap-memory" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;&#x5806;&#x5185;&#x5185;&#x5B58;&#x8FD8;&#x662F;&#x5806;&#x5916;&#x5185;&#x5B58;&#xFF1F;&#x300B;</a></li>
<li><a href="http://www.cnblogs.com/moonandstar08/p/5107648.html" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;JAVA&#x5806;&#x5916;&#x5185;&#x5B58;&#x300B;</a></li>
<li><a href="https://yq.aliyun.com/articles/2948?spm=5176.100239.blogcont62539.11.a3HdFE" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;JVM&#x6E90;&#x7801;&#x5206;&#x6790;&#x4E4B;&#x5806;&#x5916;&#x5185;&#x5B58;&#x5B8C;&#x5168;&#x89E3;&#x8BFB;&#x300B;</a></li>
</ol>
<p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x5206;&#x6790; <code>DataNodeMergeManager</code> &#x5B9E;&#x73B0;&#xFF0C;<code>DataMergeService</code> &#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x9605;&#x8BFB;&#x6216;&#x8005;&#x7B49;&#x5F85;&#x540E;&#x7EED;&#x6587;&#x7AE0;&#xFF08;&#x1F608;<strong>&#x6B22;&#x8FCE;&#x8BA2;&#x9605;&#x6211;&#x7684;&#x516C;&#x4F17;&#x53F7;&#x5662;</strong>&#xFF09;&#x3002;</p>
<p><code>DataNodeMergeManager</code> &#x6709;&#x4E09;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF1A;</p>
<ul class="ui list">
<li><code>globalSorter</code> &#xFF1A;<code>UnsafeExternalRowSorter</code> =&gt; &#x5B9E;&#x73B0;&#x8BB0;&#x5F55;&#x884C;(row)<strong>&#x5408;&#x5E76;&#x5E76;&#x6392;&#x5E8F;</strong>&#x903B;&#x8F91;&#x3002;</li>
<li><code>globalMergeResult</code> &#xFF1A;<code>UnsafeExternalRowSorter</code> =&gt; &#x5B9E;&#x73B0;&#x8BB0;&#x5F55;&#x884C;(row)<strong>&#x5408;&#x5E76;&#x4E0D;&#x6392;&#x5E8F;</strong>&#x903B;&#x8F91;&#x3002;</li>
<li><code>unsafeRowGrouper</code> &#xFF1A; <code>UnsafeRowGrouper</code> =&gt; &#x5B9E;&#x73B0;&#x8BB0;&#x5F55;&#x884C;(row)<strong>&#x805A;&#x5408;</strong>&#x903B;&#x8F91;&#x3002;</li>
</ul>
<p><code>DataNodeMergeManager#run(...)</code> &#x903B;&#x8F91;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul class="ui list">
<li>[1] &#x5199;&#x5165;&#x8BB0;&#x5F55;&#x884C;(row)&#x5230; <code>UnsafeRow</code>&#x3002;</li>
<li>[2] &#x6839;&#x636E;&#x60C5;&#x51B5;&#x5C06; <code>UnsafeRow</code> &#x63D2;&#x5165;&#x5BF9;&#x5E94;&#x7EC4;&#x4EF6;&#x3002;</li>
<li>[3] &#x5F53;&#x6240;&#x6709; <code>UnsafeRow</code> &#x63D2;&#x5165;&#x5B8C;&#x540E;&#xFF0C;&#x6839;&#x636E;&#x60C5;&#x51B5;&#x4F7F;&#x7528;&#x7EC4;&#x4EF6;&#x805A;&#x5408;&#x3001;&#x6392;&#x5E8F;&#x3002;</li>
</ul>
<table>
<thead>
<tr>
<th>&#x662F;&#x5426;&#x6392;&#x5E8F;</th>
<th>&#x662F;&#x5426;&#x805A;&#x5408;</th>
<th>&#x4F9D;&#x8D56;&#x7EC4;&#x4EF6;</th>
<th>[2]</th>
<th>[3]</th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x5426;</td>
<td>&#x5426;</td>
<td><code>globalSorter</code></td>
<td>&#x63D2;&#x5165; <code>globalSorter</code></td>
<td>&#x4F7F;&#x7528; <code>globalSorter</code> &#x5408;&#x5E76;&#x5E76;&#x6392;&#x5E8F;</td>
</tr>
<tr>
<td>&#x662F;</td>
<td>&#x5426;</td>
<td><code>globalMergeResult</code></td>
<td>&#x63D2;&#x5165; <code>globalMergeResult</code></td>
<td>&#x4F7F;&#x7528; <code>globalMergeResult</code> &#x5408;&#x5E76;&#x4E0D;&#x6392;&#x5E8F;</td>
</tr>
<tr>
<td>&#x5426;</td>
<td>&#x662F;</td>
<td><code>unsafeRowGrouper</code> + <code>globalSorter</code></td>
<td>&#x63D2;&#x5165; <code>unsafeRowGrouper</code> &#x8FDB;&#x884C;&#x805A;&#x5408;</td>
<td>&#x4F7F;&#x7528; <code>globalSorter</code> &#x5408;&#x5E76;&#x5E76;&#x6392;&#x5E8F;</td>
</tr>
<tr>
<td>&#x662F;</td>
<td>&#x662F;</td>
<td><code>unsafeRowGrouper</code> + <code>globalMergeResult</code></td>
<td>&#x63D2;&#x5165; <code>unsafeRowGrouper</code> &#x8FDB;&#x884C;&#x805A;&#x5408;</td>
<td>&#x4F7F;&#x7528; <code>globalMergeResult</code> &#x5408;&#x5E76;&#x4E0D;&#x6392;&#x5E8F;</td>
</tr>
</tbody>
</table>
<p><strong>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</strong>&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/sqlengine/mpp/DataNodeMergeManager.java" target="_blank" rel="external">DataNodeMergeManager.java</a>&#x3002;</li>
</ul>
<p>&#x1F643;&#x770B;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x53EF;&#x80FD;&#x5F88;&#x591A;&#x540C;&#x5B66;&#x90FD;&#x6709;&#x70B9;&#x61F5;&#x903C;&#xFF0C;&#x95EE;&#x9898;&#x4E0D;&#x5927;&#xFF0C;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x7785;&#x3002;</p>
<h3 id="3-3-UnsafeRow"><a href="#3-3-UnsafeRow" class="headerlink" title="3.3 UnsafeRow"></a>3.3 UnsafeRow</h3><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row.png" alt="unsafe_row" class="ui centered image"></a></p>
<p>&#x8BB0;&#x5F55;&#x884C;(row)&#x5199;&#x5230; <code>UnsafeRow</code> &#x7684; <code>baseObject</code> &#x5C5E;&#x6027;&#xFF0C;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row_object.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row_object.png" alt="unsafe_row_object" class="ui centered image"></a><br><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row_2.png"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/unsafe_row_2.png" alt="unsafe_row_2.png" class="ui centered image"></a></p>
<ul class="ui list">
<li>&#x62C6;&#x5206;&#x6210;&#x4E09;&#x4E2A;&#x533A;&#x57DF;&#xFF0C;<strong>&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x6309;&#x7167;&#x683C;&#x5B50;&#x8BB0;&#x5F55;&#x4FE1;&#x606F;&#xFF0C;&#x6BCF;&#x4E2A;&#x683C;&#x5B50; 64bits(8 Bytes)</strong>&#x3002;</li>
<li>&#x8BB0;&#x5F55;&#x884C;(row)&#x6309;&#x7167;&#x5B57;&#x6BB5;&#x987A;&#x5E8F;&#x4F4D;&#x7F6E;&#x8BB0;&#x5F55;&#x5230; <code>baseObject</code>&#x3002;</li>
<li>[1] &#x7A7A;&#x6807;&#x8BB0;&#x4F4D;&#x533A;&#x57DF; &#xFF1A;&#x6807;&#x8BB0;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x662F;&#x5426;&#x4E3A; NULL&#x3002;<ul>
<li>&#x5F53;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x4E3A; NULL &#x65F6;&#xFF0C;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x6BB5;&#x987A;&#x5E8F;&#x5BF9;&#x5E94;&#x7684; bit &#x8BBE;&#x7F6E;&#x4E3A; 1&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x7B2C; 0 &#x4E2A;&#x4F4D;&#x7F6E;&#x5B57;&#x6BB5;&#x4E3A; NULL&#xFF0C;&#x5219;&#x7B2C;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#x5BF9;&#x5E94;&#x7684; 64 bits &#x4ECE;&#x53F3;&#x8FB9;&#x7B2C;&#x4E00;&#x4E2A; bit &#x8BBE;&#x7F6E;&#x4E3A; 1&#x3002;</li>
<li>&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#x662F; 64 bits&#xFF0C;&#x6BCF; 64 &#x4E2A;&#x5B57;&#x6BB5;&#x5360;&#x7528;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#xFF0C;&#x4E0D;&#x6EE1;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#xFF0C;&#x6309;&#x7167;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#x8BA1;&#x7B97;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x957F;&#x5EA6;(<code>bitSetWidthInBytes</code>) = &#x5B57;&#x6BB5;&#x5360;&#x7528;&#x7684;&#x683C;&#x5B50;&#x6570; * 64 bits&#x3002;</li>
</ul>
</li>
<li>[2] &#x4F4D;&#x7F6E;&#x957F;&#x5EA6;&#x533A;&#x57DF; &#xFF1A;&#x8BB0;&#x5F55;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x5728;<code>[3]&#x533A;&#x57DF;</code>&#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x957F;&#x5EA6;&#x3002;<ul>
<li>&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x8BB0;&#x5F55;<code>[2]&#x533A;&#x57DF;</code>&#x7684;&#x4F4D;&#x7F6E; = <code>baseOffset</code> + <code>bitSetWidthInBytes</code> + 8 Bytes * &#x5B57;&#x6BB5;&#x987A;&#x5E8F;&#x3002;</li>
<li>&#x5360;&#x7528;&#x4E00;&#x4E2A;&#x683C;&#x5B50;&#xFF0C;&#x524D; 32 bits &#x4E3A;<code>[3]&#x533A;&#x57DF;</code>&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x540E; 32 bits &#x4E3A;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x957F;&#x5EA6;&#x3002;</li>
</ul>
</li>
<li>[3] &#x503C;&#x533A;&#x57DF; &#xFF1A;&#x8BB0;&#x5F55;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x3002;<ul>
<li>&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x5360;&#x7528;&#x683C;&#x5B50;&#x6570; = &#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x957F;&#x5EA6; / 8 Byte&#xFF0C;&#x5982;&#x679C;&#x65E0;&#x6CD5;&#x6574;&#x9664;&#x518D; + 1&#x3002;</li>
<li>&#x56E0;&#x4E3A;&#x5B57;&#x6BB5;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x53EF;&#x80FD;&#x65E0;&#x6CD5;&#x521A;&#x597D;&#x5360;&#x6EE1;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#xFF0C;&#x672A;&#x4F7F;&#x7528;&#x7684; bit &#x7528; 0 &#x5360;&#x4F4D;&#x3002;</li>
</ul>
</li>
</ul>
<p><strong>&#x5199;&#x5165; <code>UnsafeRow</code>&#xFF0C;MyCAT &#x53EF;&#x4EE5;&#x987A;&#x5E8F;&#x8BBF;&#x95EE;&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x8BB0;&#x5F55;&#x884C;(row)&#x8FDB;&#x884C;&#x904D;&#x5386;&#x3002;</strong>  </p>
<p>&#x1F643;&#x65E5;&#x5E38;&#x5F00;&#x53D1;&#x4F7F;&#x7528;&#x4F4D;&#x64CD;&#x4F5C;&#x7684;&#x673A;&#x4F1A;&#x6BD4;&#x8F83;&#x5C11;&#xFF0C;&#x53EF;&#x80FD;&#x8F83;&#x4E3A;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x9700;&#x8981;&#x53CD;&#x590D;&#x7406;&#x89E3;&#x4E0B;&#xFF0C;&#x76F8;&#x4FE1;&#x4F1A;&#x83B7;&#x5F97;&#x5F88;&#x5927;&#x542F;&#x53D1;&#x3002;&#x6069;&#xFF0C;&#x8BE5;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x5F15;&#x7528;&#x81EA;&#x5F00;&#x6E90;&#x8FD0;&#x7B97;&#x6846;&#x67B6; <code>Spark</code>&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x66F4;&#x52A0;&#x6709;&#x52A8;&#x529B;&#x5217;&#x1F608;&#x3002;</p>
<p><strong>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</strong>&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/row/UnsafeRow.java" target="_blank" rel="external">UnsafeRow.java</a></li>
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/row/BufferHolder.java" target="_blank" rel="external">BufferHolder.java</a></li>
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/row/UnsafeRowWriter.java" target="_blank" rel="external">UnsafeRowWriter.java</a></li>
</ul>
<h3 id="3-4-UnsafeExternalRowSorter"><a href="#3-4-UnsafeExternalRowSorter" class="headerlink" title="3.4 UnsafeExternalRowSorter"></a>3.4 UnsafeExternalRowSorter</h3><p>&#x5982;&#x679C;&#x4F7F;&#x7528; Java &#x5B9E;&#x73B0; <code>SELECT * FROM student ORDER BY age desc, nickname asc</code>&#xFF0C;&#x4E0D;&#x8003;&#x8651;&#x7B97;&#x6CD5;&#x4F18;&#x5316;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5982;&#x4E0B;&#x5B9E;&#x73B0;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Collections.sort(students, <span class="keyword">new</span> Comparator&lt;Comparable&gt;() {</div><div class="line">       <span class="meta">@Override</span></div><div class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Student o1, Student o2)</span> </span>{</div><div class="line">           <span class="keyword">int</span> cmp = compare(o2.age, o1.age);</div><div class="line">           <span class="keyword">return</span> cmp != <span class="number">0</span> ? cmp : compare(o1.nickname, o2.nickname);</div><div class="line">       }</div><div class="line">   }</div><div class="line">});</div></pre></td></tr></table></figure>
<p>&#x4ECE;&#x529F;&#x80FD;&#x4E0A;&#xFF0C;<code>UnsafeExternalRowSorter</code> &#x662F;&#x8FD9;&#x4E48;&#x5B9E;&#x73B0;&#x6392;&#x5E8F;&#x903B;&#x8F91;&#x3002;&#x5F53;&#x7136;&#x80AF;&#x5B9A;&#x7684;&#x662F;&#xFF0C;&#x4E0D;&#x662F;&#x8FD9;&#x4E48;&#x201C;&#x7B80;&#x5355;&#x201D;&#x7684;&#x5B9E;&#x73B0;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_06_13/sorter_write.jpeg"><img src="http://www.yunai.me/images/MyCAT/2017_06_13/sorter_write.jpeg" alt="sorter_write" class="ui centered image"></a></p>
<p><code>UnsafeRow</code> &#x4F1A;&#x5199;&#x5165;&#x5230;&#x4E24;&#x4E2A;&#x5730;&#x65B9;&#xFF1A;</p>
<ol class="ui list">
<li><code>List&lt;MemoryBlock&gt;</code> &#xFF1A;&#x5185;&#x5B58;&#x5757;&#x6570;&#x7EC4;&#x3002;&#x5F53;&#x524D; <code>MemoryBlock</code> &#x65E0;&#x6CD5;&#x5BB9;&#x7EB3;&#x5199;&#x5165;&#x7684; <code>UnsafeRow</code> &#x65F6;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x7684; <code>MemoryBlock</code> &#x63D0;&#x4F9B;&#x5199;&#x5165;&#x3002;&#x6BCF;&#x6761; <code>UnsafeRow</code> &#x5B58;&#x50A8;&#x5728; <code>MemoryBlock</code> &#x7531; &#x957F;&#x5EA6; + &#x5B57;&#x8282;&#x5185;&#x5BB9; &#x7EC4;&#x6210;&#x3002;</li>
<li><code>LongArray</code> &#xFF1A;&#x6BCF;&#x6761; <code>UnsafeRow</code> &#x5B58;&#x50A8;&#x5728; <code>LongArray</code> &#x7531;&#x4E24;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF1A;address + prefix&#x3002;<ul>
<li><code>address</code> &#xFF1A;<code>UnsafeRow</code> &#x5B58;&#x50A8;&#x5728; <code>List&lt;MemoryBlock&gt;</code> &#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x524D; 13 bits &#x8BB0;&#x5F55;&#x6240;&#x5728; <code>MemoryBlock</code> &#x7684; index&#xFF0C;&#x540E; 51 bit &#x8BB0;&#x5F55;&#x5728; <code>MemoryBlock</code> &#x7684; offset&#x3002;</li>
<li><code>prefix</code> &#xFF1A;<code>UnsafeRow</code> &#x7B2C;&#x4E00;&#x4E2A;&#x6392;&#x5E8F;&#x5B57;&#x6BB5;<strong>&#x503C;</strong>&#x524D; 64 bits &#x8BA1;&#x7B97;&#x7684;&#x503C;&#x3002;</li>
</ul>
</li>
</ol>
<p><strong><code>UnsafeExternalRowSorter</code> &#x6392;&#x5E8F;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;</strong> &#xFF1A;&#x63D0;&#x4F9B; <strong><a href="http://blog.csdn.net/yangzhongblog/article/details/8184707" rel="external nofollow noopener noreferrer" target="_blank">TimSort</a></strong> &#x548C; <strong>RadixSort</strong> &#x4E24;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x524D;&#x8005;&#x4E3A;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x3002;<strong>TimSort</strong> &#x6298;&#x534A;&#x67E5;&#x627E;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; <code>LongArray</code>&#xFF0C;&#x5148;&#x6BD4;&#x8F83; <code>prefix</code>&#xFF0C;&#x82E5;&#x76F8;&#x7B49;&#xFF0C;&#x5219;&#x987A;&#x5E8F;&#x5BF9;&#x6BD4;&#x6BCF;&#x4E2A;&#x6392;&#x5E8F;&#x5B57;&#x6BB5;&#x76F4;&#x5230;&#x4E0D;&#x7B49;&#xFF0C;&#x63D0;&#x5347;&#x8BA1;&#x7B97;&#x6548;&#x7387;&#x3002;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x5728; <code>LongArray</code> &#x64CD;&#x4F5C;&#xFF0C;<code>List&lt;MemoryBlock&gt;</code> &#x53EA;&#x4F5C;&#x4E3A;&#x539F;&#x59CB;&#x6570;&#x636E;&#x3002;</p>
<p>&#x53E6;&#x5916;&#xFF0C;&#x5F53;&#x9700;&#x8981;&#x6392;&#x5E8F;&#x7279;&#x522B;&#x5927;&#x7684;&#x6570;&#x636E;&#x91CF;&#x65F6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x5230;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;&#x9650;&#x4E8E;&#x7B14;&#x8005;&#x6682;&#x65F6;&#x672A;&#x9605;&#x8BFB;&#x8BE5;&#x5904;&#x6E90;&#x7801;&#xFF0C;&#x540E;&#x7EED;&#x4F1A;&#x53E6;&#x5F00;&#x6587;&#x7AE0;&#x5206;&#x6790;&#x3002;&#x1F642;</p>
<p>&#x6838;&#x5FC3;&#x6E90;&#x7801;&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/utils/sort/UnsafeExternalRowSorter.java" target="_blank" rel="external">UnsafeExternalRowSorter.java</a></li>
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/utils/sort/UnsafeExternalRowSorter.java" target="_blank" rel="external">UnsafeExternalRowSorter.java</a></li>
<li><a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/memory/unsafe/utils/sort/TimSort.java" target="_blank" rel="external">TimSort.java</a></li>
</ul>
<h3 id="3-5-UnsafeRowGrouper"><a href="#3-5-UnsafeRowGrouper" class="headerlink" title="3.5 UnsafeRowGrouper"></a>3.5 UnsafeRowGrouper</h3><p>&#x5982;&#x679C;&#x4F7F;&#x7528; Java &#x5B9E;&#x73B0; <code>SELECT nickname, COUNT(*) FROM student group by nickname</code>&#xFF0C;&#x4E0D;&#x8003;&#x8651;&#x7B97;&#x6CD5;&#x4F18;&#x5316;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5982;&#x4E0B;&#x5B9E;&#x73B0;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Map&lt;String, List&lt;Object&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line"><span class="comment">// &#x805A;&#x5408;</span></div><div class="line"><span class="keyword">for</span> (student : students) {</div><div class="line">    <span class="keyword">if</span> (map.contains(student.nickname)) {</div><div class="line">        map.put(student.nickname, map.get(student.nickname).get(<span class="number">1</span>) + <span class="number">1</span>);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        List&lt;Object&gt; value = <span class="keyword">new</span> Array&lt;&gt;();</div><div class="line">        value.add(nickname);</div><div class="line">        value.add(<span class="number">1</span>);</div><div class="line">        map.put(student.nickname, value);</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="comment">// &#x8F93;&#x51FA;</span></div><div class="line"><span class="keyword">for</span> (value : map.values) {</div><div class="line">    System.out.println(value);</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x4ECE;&#x529F;&#x80FD;&#x4E0A;&#xFF0C;<code>UnsafeRowGrouper</code> &#x662F;&#x8FD9;&#x4E48;&#x5B9E;&#x73B0;&#x6392;&#x5E8F;&#x903B;&#x8F91;&#x3002;&#x5F53;&#x7136;&#x80AF;&#x5B9A;&#x7684;&#x662F;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x8FD9;&#x4E48;&#x201C;&#x7B80;&#x5355;&#x201D;&#x7684;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#x1F608;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x5728;&#x300A;MyCAT &#x6E90;&#x7801;&#x89E3;&#x6790; &#x2014;&#x2014; &#x5206;&#x7247;&#x7ED3;&#x679C;&#x5408;&#x5E76;&#xFF08;&#x4E8C;&#xFF09;&#x300B;&#x7EE7;&#x7EED;&#x5206;&#x6790;&#x3002;</p>
<h1 id="4-&#x6551;&#x62A4;&#x4E2D;&#x5FC3;"><a href="#4-&#x6551;&#x62A4;&#x4E2D;&#x5FC3;" class="headerlink" title="4. &#x6551;&#x62A4;&#x4E2D;&#x5FC3;"></a>4. &#x6551;&#x62A4;&#x4E2D;&#x5FC3;</h1><p>&#x770B;&#x5230;&#x6B64;&#x5904;&#x7684;&#x5E94;&#x8BE5;&#x662F;&#x771F;&#x7231;&#x5427;&#xFF1F;&#xFF01;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x4E0A;&#x6709;&#x4EC0;&#x4E48;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x96BE;&#x61C2;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x53EF;&#x4EE5;&#x5173;&#x6CE8;&#x6211;&#x7684;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#x7ED9;&#x6211;&#x7559;&#x8A00;&#xFF0C;&#x6211;&#x4F1A;&#x5F88;&#x8BA4;&#x771F;&#x7684;&#x9010;&#x6761;&#x89E3;&#x7B54;&#x7684;&#x3002;&#x201C;&#x4E07;&#x4E00;&#x201D;&#x89C9;&#x5F97;&#x672C;&#x6587;&#x8FD8;&#x53EF;&#x4EE5;&#xFF0C;&#x5E0C;&#x671B;&#x8F6C;&#x53D1;&#x5230;&#x670B;&#x53CB;&#x5708;&#x8BA9;&#x66F4;&#x591A;&#x7684;&#x4EBA;&#x770B;&#x5230;&#x3002;</p>
<p>&#x6700;&#x540E;&#x7684;&#x6700;&#x540E;&#xFF0C;&#x611F;&#x8C22;&#x8010;&#x5FC3;&#x9605;&#x8BFB;&#x672C;&#x6587;&#x7684;&#x540C;&#x5B66;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="wechat_mp" class="ui centered image"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析 —— 【单库单表】查询</title>
    <link href="http://www.yunai.me/MyCAT/single-db-single-table-select/"/>
    <id>http://www.yunai.me/MyCAT/single-db-single-table-select/</id>
    <published>2017-05-29T16:00:00.000Z</published>
    <updated>2017-07-20T01:39:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL</a></li>
<li><a href="#">3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;</a></li>
<li><a href="#">4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL</a></li>
<li><a href="#">5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;</a></li>
<li><a href="#">6. &#x5176;&#x4ED6; &#xFF1A;&#x66F4;&#x65B0; / &#x5220;&#x9664;</a></li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><blockquote>
<p>&#x5185;&#x5BB9;&#x5F62;&#x6001;&#x4EE5; &#x987A;&#x5E8F;&#x56FE; + &#x6838;&#x5FC3;&#x4EE3;&#x7801; &#x4E3A;&#x4E3B;&#x3002;<br>&#x5982;&#x679C;&#x6709;&#x5730;&#x65B9;&#x8868;&#x8FF0;&#x4E0D;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x4E0D;&#x6E05;&#x6670;&#xFF0C;&#x6B22;&#x8FCE;&#x7559;&#x8A00;&#x3002;<br>&#x5BF9;&#x4E8E;&#x5185;&#x5BB9;&#x5F62;&#x6001;&#xFF0C;&#x975E;&#x5E38;&#x7EA0;&#x7ED3;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5EFA;&#x8BAE;&#xFF0C;&#x7279;&#x522B;&#x7279;&#x522B;&#x7279;&#x522B;&#x6B22;&#x8FCE;&#x60A8;&#x63D0;&#x51FA;&#x3002;<br>&#x5FAE;&#x4FE1;&#x53F7;&#xFF1A;wangwenbin-server&#x3002;</p>
</blockquote>
<p>&#x672C;&#x6587;&#x8BB2;&#x89E3; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2; &#x6240;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<p>&#x1F602;&#x5185;&#x5BB9;&#x548C; <a href="http://www.yunai.me/Mycat/single-db-single-table-insert/">&#x300A;MyCAT &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#x300B;</a> &#x8D85;&#x7EA7;&#x76F8;&#x4F3C;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x672C;&#x8EAB;&#x6D41;&#x7A0B;&#x57FA;&#x672C;&#x76F8;&#x540C;&#xFF0C;&#x53E6;&#x5916;&#x4E00;&#x65B9;&#x9762;&#x6587;&#x7AE0;&#x7ED3;&#x6784;&#x6CA1;&#x62C6;&#x5206;&#x597D;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528; &#x1F680; &#x6807;&#x8BB0;&#x5DEE;&#x5F02;&#x7684;&#x903B;&#x8F91;&#x3002;</p>
<p>&#x4EA4;&#x4E92;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_30/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_30/01.png" alt="&#x5355;&#x5E93;&#x5355;&#x8868;&#x67E5;&#x8BE2;&#x7B80;&#x56FE;" class="ui centered image"></a></p>
<p>&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF0C;MyCAT Server &#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<ol class="ui list">
<li>&#x63A5;&#x6536; MySQL Client &#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL&#x3002;</li>
<li>&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;&#xFF0C;&#x8FDB;&#x884C;&#x8DEF;&#x7531;&#x3002;</li>
<li>&#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL&#x3002;</li>
<li>&#x54CD;&#x5E94;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF0C;&#x53D1;&#x9001;&#x7ED3;&#x679C;&#x7ED9; MySQL Client&#x3002;</li>
</ol>
<p>&#x6211;&#x4EEC;&#x9010;&#x4E2A;&#x6B65;&#x9AA4;&#x5206;&#x6790;&#xFF0C;&#x4E00;&#x8D77;&#x6765;&#x770B;&#x770B;&#x6E90;&#x7801;&#x3002;</p>
<h1 id="2-&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790;-SQL"><a href="#2-&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790;-SQL" class="headerlink" title="2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL"></a>2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_30/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_30/02.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#xFF08;01&#x4E3B;&#x6D41;&#x7A0B;&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;1-2&#x3011;"><a href="#&#x3010;1-2&#x3011;" class="headerlink" title="&#x3010;1 - 2&#x3011;"></a>&#x3010;1 - 2&#x3011;</h2><p>&#x63A5;&#x6536;<strong>&#x4E00;&#x6761;</strong> MySQL &#x547D;&#x4EE4;&#x3002;&#x5728;&#x3010;1&#x3011;&#x4E4B;&#x524D;&#xFF0C;&#x8FD8;&#x6709;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x8BFB;&#x53D6;&#x3001;&#x62C6;&#x6210;&#x5355;&#x6761; MySQL SQL&#x3002;</p>
<h2 id="&#x3010;3&#x3011;"><a href="#&#x3010;3&#x3011;" class="headerlink" title="&#x3010;3&#x3011;"></a>&#x3010;3&#x3011;</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FrontendCommandHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FrontendCommandHandler</span> <span class="keyword">implements</span> <span class="title">NIOHandler</span> </span>{</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line"> <span class="number">6</span>:     </div><div class="line"> <span class="number">7</span>:         <span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">switch</span> (data[<span class="number">4</span>]) <span class="comment">// </span></div><div class="line"> <span class="number">9</span>:         {</div><div class="line"><span class="number">10</span>:             <span class="keyword">case</span> MySQLPacket.COM_INIT_DB:</div><div class="line"><span class="number">11</span>:                 commands.doInitDB();</div><div class="line"><span class="number">12</span>:                 source.initDB(data);</div><div class="line"><span class="number">13</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">14</span>:             <span class="keyword">case</span> MySQLPacket.COM_QUERY: <span class="comment">// &#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">15</span>:                 <span class="comment">// &#x8BA1;&#x6570;&#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">16</span>:                 commands.doQuery();</div><div class="line"><span class="number">17</span>:                 <span class="comment">// &#x6267;&#x884C;&#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">18</span>:                 source.query(data);</div><div class="line"><span class="number">19</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">20</span>:             <span class="keyword">case</span> MySQLPacket.COM_PING:</div><div class="line"><span class="number">21</span>:                 commands.doPing();</div><div class="line"><span class="number">22</span>:                 source.ping();</div><div class="line"><span class="number">23</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">24</span>:             <span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>: }</div></pre></td></tr></table></figure>
<p><code>INSERT</code>/<code>SELECT</code>/<code>UPDATE</code>/<code>DELETE</code> &#x7B49; SQL &#x5F52;&#x5C5E;&#x4E8E; <code>MySQLPacket.COM_QUERY</code>&#xFF0C;&#x8BE6;&#x7EC6;&#x53EF;&#x89C1;&#xFF1A;<a href="http://hutaow.com/blog/2013/11/06/mysql-protocol-analysis/#42-" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;MySQL&#x534F;&#x8BAE;&#x5206;&#x6790;#4.2 &#x5BA2;&#x6237;&#x7AEF;&#x547D;&#x4EE4;&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#xFF08;&#x5BA2;&#x6237;&#x7AEF; -&gt; &#x670D;&#x52A1;&#x5668;&#xFF09;&#x300B;</a>&#x3002;</p>
<h2 id="&#x3010;4&#x3011;"><a href="#&#x3010;4&#x3011;" class="headerlink" title="&#x3010;4&#x3011;"></a>&#x3010;4&#x3011;</h2><p>&#x5C06; &#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7EC4; &#x89E3;&#x6790;&#x6210; SQL&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FrontendConnection.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line"> <span class="number">3</span>: 	<span class="comment">// &#x53D6;&#x5F97;&#x8BED;&#x53E5;</span></div><div class="line"> <span class="number">4</span>: 	String sql = <span class="keyword">null</span>;		</div><div class="line"> <span class="number">5</span>: 	<span class="keyword">try</span> {</div><div class="line"> <span class="number">6</span>: 		MySQLMessage mm = <span class="keyword">new</span> MySQLMessage(data);</div><div class="line"> <span class="number">7</span>: 		mm.position(<span class="number">5</span>);</div><div class="line"> <span class="number">8</span>: 		sql = mm.readString(charset);</div><div class="line"> <span class="number">9</span>: 	} <span class="keyword">catch</span> (UnsupportedEncodingException e) {</div><div class="line"><span class="number">10</span>: 		writeErrMessage(ErrorCode.ER_UNKNOWN_CHARACTER_SET, <span class="string">&quot;Unknown charset &apos;&quot;</span> + charset + <span class="string">&quot;&apos;&quot;</span>);</div><div class="line"><span class="number">11</span>: 		<span class="keyword">return</span>;</div><div class="line"><span class="number">12</span>: 	}		</div><div class="line"><span class="number">13</span>: 	<span class="comment">// &#x6267;&#x884C;&#x8BED;&#x53E5;</span></div><div class="line"><span class="number">14</span>: 	<span class="keyword">this</span>.query( sql );</div><div class="line"><span class="number">15</span>: }</div></pre></td></tr></table></figure>
<h2 id="&#x3010;5&#x3011;"><a href="#&#x3010;5&#x3011;" class="headerlink" title="&#x3010;5&#x3011;"></a>&#x3010;5&#x3011;</h2><p>&#x89E3;&#x6790; SQL &#x7C7B;&#x578B;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerQueryHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">3</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">(String sql)</span> </span>{</div><div class="line"> <span class="number">4</span>: 	<span class="comment">// &#x89E3;&#x6790; SQL &#x7C7B;&#x578B;</span></div><div class="line"> <span class="number">5</span>: 	<span class="keyword">int</span> rs = ServerParse.parse(sql);</div><div class="line"> <span class="number">6</span>: 	<span class="keyword">int</span> sqlType = rs &amp; <span class="number">0xff</span>;</div><div class="line"> <span class="number">7</span>: 	</div><div class="line"> <span class="number">8</span>: 	<span class="keyword">switch</span> (sqlType) {</div><div class="line"> <span class="number">9</span>: 	<span class="comment">//explain sql</span></div><div class="line"><span class="number">10</span>: 	<span class="keyword">case</span> ServerParse.EXPLAIN:</div><div class="line"><span class="number">11</span>: 		ExplainHandler.handle(sql, c, rs &gt;&gt;&gt; <span class="number">8</span>);</div><div class="line"><span class="number">12</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">13</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">14</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">15</span>: 	<span class="keyword">case</span> ServerParse.SELECT:</div><div class="line"><span class="number">16</span>: 		SelectHandler.handle(sql, c, rs &gt;&gt;&gt; <span class="number">8</span>);</div><div class="line"><span class="number">17</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">18</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">19</span>: 	<span class="keyword">default</span>:</div><div class="line"><span class="number">20</span>: 		<span class="keyword">if</span>(readOnly){</div><div class="line"><span class="number">21</span>: 			LOGGER.warn(<span class="keyword">new</span> StringBuilder().append(<span class="string">&quot;User readonly:&quot;</span>).append(sql).toString());</div><div class="line"><span class="number">22</span>: 			c.writeErrMessage(ErrorCode.ER_USER_READ_ONLY, <span class="string">&quot;User readonly&quot;</span>);</div><div class="line"><span class="number">23</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">24</span>: 		}</div><div class="line"><span class="number">25</span>: 		c.execute(sql, rs &amp; <span class="number">0xff</span>);</div><div class="line"><span class="number">26</span>: 	}</div><div class="line"><span class="number">27</span>: }</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:</div><div class="line"><span class="number">30</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerParse.java&#x3011;</span></div><div class="line"><span class="number">31</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parse</span><span class="params">(String stmt)</span> </span>{</div><div class="line"><span class="number">32</span>: 	<span class="keyword">int</span> length = stmt.length();</div><div class="line"><span class="number">33</span>: 	<span class="comment">//FIX BUG FOR SQL SUCH AS /XXXX/SQL</span></div><div class="line"><span class="number">34</span>: 	<span class="keyword">int</span> rt = -<span class="number">1</span>;</div><div class="line"><span class="number">35</span>: 	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i) {</div><div class="line"><span class="number">36</span>: 		<span class="keyword">switch</span> (stmt.charAt(i)) {</div><div class="line"><span class="number">37</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case			case &apos;I&apos;:</span></div><div class="line"><span class="number">38</span>: 		<span class="keyword">case</span> <span class="string">&apos;i&apos;</span>:</div><div class="line"><span class="number">39</span>: 			rt = insertCheck(stmt, i);</div><div class="line"><span class="number">40</span>: 			<span class="keyword">if</span> (rt != OTHER) {</div><div class="line"><span class="number">41</span>: 				<span class="keyword">return</span> rt;</div><div class="line"><span class="number">42</span>: 			}</div><div class="line"><span class="number">43</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">44</span>: 			<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">45</span>: 		<span class="keyword">case</span> <span class="string">&apos;S&apos;</span>:</div><div class="line"><span class="number">46</span>: 		<span class="keyword">case</span> <span class="string">&apos;s&apos;</span>:</div><div class="line"><span class="number">47</span>: 			rt = sCheck(stmt, i);</div><div class="line"><span class="number">48</span>: 			<span class="keyword">if</span> (rt != OTHER) {</div><div class="line"><span class="number">49</span>: 				<span class="keyword">return</span> rt;</div><div class="line"><span class="number">50</span>: 			}</div><div class="line"><span class="number">51</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">52</span>: 			<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">53</span>: 		<span class="keyword">default</span>:</div><div class="line"><span class="number">54</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">55</span>: 		}</div><div class="line"><span class="number">56</span>: 	}</div><div class="line"><span class="number">57</span>: 	<span class="keyword">return</span> OTHER;</div><div class="line"><span class="number">58</span>: }</div></pre></td></tr></table></figure>
<h2 id="&#x1F680;&#x3010;6&#x3011;&#x3010;7&#x3011;"><a href="#&#x1F680;&#x3010;6&#x3011;&#x3010;7&#x3011;" class="headerlink" title="&#x1F680;&#x3010;6&#x3011;&#x3010;7&#x3011;"></a>&#x1F680;&#x3010;6&#x3011;&#x3010;7&#x3011;</h2><p>&#x89E3;&#x6790; Select SQL &#x7C7B;&#x578B;&#xFF0C;&#x5206;&#x53D1;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x903B;&#x8F91;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;SelectHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(String stmt, ServerConnection c, <span class="keyword">int</span> offs)</span> </span>{</div><div class="line"> <span class="number">3</span>: 	<span class="keyword">int</span> offset = offs;</div><div class="line"> <span class="number">4</span>: 	<span class="keyword">switch</span> (ServerParseSelect.parse(stmt, offs)) { <span class="comment">// &#x89E3;&#x6790; Select SQL &#x7C7B;&#x578B;</span></div><div class="line"> <span class="number">5</span>: 	<span class="keyword">case</span> ServerParseSelect.VERSION_COMMENT: <span class="comment">// select @@VERSION_COMMENT;</span></div><div class="line"> <span class="number">6</span>: 		SelectVersionComment.response(c);</div><div class="line"> <span class="number">7</span>: 		<span class="keyword">break</span>;</div><div class="line"> <span class="number">8</span>: 	<span class="keyword">case</span> ServerParseSelect.DATABASE: <span class="comment">// select DATABASE();</span></div><div class="line"> <span class="number">9</span>: 		SelectDatabase.response(c);</div><div class="line"><span class="number">10</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">11</span>: 	<span class="keyword">case</span> ServerParseSelect.USER: <span class="comment">// select CURRENT_USER();</span></div><div class="line"><span class="number">12</span>:         SelectUser.response(c);</div><div class="line"><span class="number">13</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">14</span>: 	<span class="keyword">case</span> ServerParseSelect.VERSION: <span class="comment">// select VERSION();</span></div><div class="line"><span class="number">15</span>: 		SelectVersion.response(c);</div><div class="line"><span class="number">16</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">17</span>: 	<span class="keyword">case</span> ServerParseSelect.SESSION_INCREMENT: <span class="comment">// select @@session.auto_increment_increment;</span></div><div class="line"><span class="number">18</span>: 		SessionIncrement.response(c);</div><div class="line"><span class="number">19</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">20</span>: 	<span class="keyword">case</span> ServerParseSelect.SESSION_ISOLATION: <span class="comment">// select @@session.tx_isolation;</span></div><div class="line"><span class="number">21</span>: 		SessionIsolation.response(c);</div><div class="line"><span class="number">22</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">23</span>: 	<span class="keyword">case</span> ServerParseSelect.LAST_INSERT_ID: <span class="comment">// select LAST_INSERT_ID();</span></div><div class="line"><span class="number">24</span>: 		<span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">25</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">26</span>: 	<span class="keyword">case</span> ServerParseSelect.IDENTITY: <span class="comment">// select @@identity</span></div><div class="line"><span class="number">27</span>: 		<span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">28</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">29</span>:     <span class="keyword">case</span> ServerParseSelect.SELECT_VAR_ALL: <span class="comment">//</span></div><div class="line"><span class="number">30</span>:         SelectVariables.execute(c,stmt);</div><div class="line"><span class="number">31</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">32</span>:     <span class="keyword">case</span> ServerParseSelect.SESSION_TX_READ_ONLY: <span class="comment">//</span></div><div class="line"><span class="number">33</span>:         SelectTxReadOnly.response(c);</div><div class="line"><span class="number">34</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">35</span>: 	<span class="keyword">default</span>: <span class="comment">// &#x5176;&#x4ED6;&#xFF0C;&#x4F8B;&#x5982; select * from table</span></div><div class="line"><span class="number">36</span>: 		c.execute(stmt, ServerParse.SELECT);</div><div class="line"><span class="number">37</span>: 	}</div><div class="line"><span class="number">38</span>: }</div><div class="line"><span class="number">39</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerParseSelect.java&#x3011;</span></div><div class="line"><span class="number">40</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parse</span><span class="params">(String stmt, <span class="keyword">int</span> offset)</span> </span>{</div><div class="line"><span class="number">41</span>: 	<span class="keyword">int</span> i = offset;</div><div class="line"><span class="number">42</span>: 	<span class="keyword">for</span> (; i &lt; stmt.length(); ++i) {</div><div class="line"><span class="number">43</span>: 		<span class="keyword">switch</span> (stmt.charAt(i)) {</div><div class="line"><span class="number">44</span>: 		<span class="keyword">case</span> <span class="string">&apos; &apos;</span>:</div><div class="line"><span class="number">45</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">46</span>: 		<span class="keyword">case</span> <span class="string">&apos;/&apos;</span>:</div><div class="line"><span class="number">47</span>: 		<span class="keyword">case</span> <span class="string">&apos;#&apos;</span>:</div><div class="line"><span class="number">48</span>: 			i = ParseUtil.comment(stmt, i);</div><div class="line"><span class="number">49</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">50</span>: 		<span class="keyword">case</span> <span class="string">&apos;@&apos;</span>:</div><div class="line"><span class="number">51</span>: 			<span class="keyword">return</span> select2Check(stmt, i);</div><div class="line"><span class="number">52</span>: 		<span class="keyword">case</span> <span class="string">&apos;D&apos;</span>:</div><div class="line"><span class="number">53</span>: 		<span class="keyword">case</span> <span class="string">&apos;d&apos;</span>:</div><div class="line"><span class="number">54</span>: 			<span class="keyword">return</span> databaseCheck(stmt, i);</div><div class="line"><span class="number">55</span>: 		<span class="keyword">case</span> <span class="string">&apos;L&apos;</span>:</div><div class="line"><span class="number">56</span>: 		<span class="keyword">case</span> <span class="string">&apos;l&apos;</span>:</div><div class="line"><span class="number">57</span>: 			<span class="keyword">return</span> lastInsertCheck(stmt, i);</div><div class="line"><span class="number">58</span>: 		<span class="keyword">case</span> <span class="string">&apos;U&apos;</span>:</div><div class="line"><span class="number">59</span>: 		<span class="keyword">case</span> <span class="string">&apos;u&apos;</span>:</div><div class="line"><span class="number">60</span>: 			<span class="keyword">return</span> userCheck(stmt, i);</div><div class="line"><span class="number">61</span>: 		<span class="keyword">case</span> <span class="string">&apos;C&apos;</span>:</div><div class="line"><span class="number">62</span>: 		<span class="keyword">case</span> <span class="string">&apos;c&apos;</span>:</div><div class="line"><span class="number">63</span>: 			<span class="keyword">return</span> currentUserCheck(stmt, i);</div><div class="line"><span class="number">64</span>: 		<span class="keyword">case</span> <span class="string">&apos;V&apos;</span>:</div><div class="line"><span class="number">65</span>: 		<span class="keyword">case</span> <span class="string">&apos;v&apos;</span>:</div><div class="line"><span class="number">66</span>: 			<span class="keyword">return</span> versionCheck(stmt, i);</div><div class="line"><span class="number">67</span>: 		<span class="keyword">default</span>:</div><div class="line"><span class="number">68</span>: 			<span class="keyword">return</span> OTHER;</div><div class="line"><span class="number">69</span>: 		}</div><div class="line"><span class="number">70</span>: 	}</div><div class="line"><span class="number">71</span>: 	<span class="keyword">return</span> OTHER;</div><div class="line"><span class="number">72</span>: }</div></pre></td></tr></table></figure>
<h2 id="&#x3010;8&#x3011;"><a href="#&#x3010;8&#x3011;" class="headerlink" title="&#x3010;8&#x3011;"></a>&#x3010;8&#x3011;</h2><p>&#x6267;&#x884C; SQL&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#x4E0B;&#x6587;&#xFF0C;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerConnection.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerConnection</span> <span class="keyword">extends</span> <span class="title">FrontendConnection</span> </span>{</div><div class="line"> <span class="number">3</span>: 	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(String sql, <span class="keyword">int</span> type)</span> </span>{</div><div class="line"> <span class="number">4</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">5</span>: 		SchemaConfig schema = MycatServer.getInstance().getConfig().getSchemas().get(db);</div><div class="line"> <span class="number">6</span>: 		<span class="keyword">if</span> (schema == <span class="keyword">null</span>) {</div><div class="line"> <span class="number">7</span>: 			writeErrMessage(ErrorCode.ERR_BAD_LOGICDB,</div><div class="line"> <span class="number">8</span>: 					<span class="string">&quot;Unknown MyCAT Database &apos;&quot;</span> + db + <span class="string">&quot;&apos;&quot;</span>);</div><div class="line"> <span class="number">9</span>: 			<span class="keyword">return</span>;</div><div class="line"><span class="number">10</span>: 		}</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>: 		<span class="comment">// &#x8DEF;&#x7531;&#x5230;&#x540E;&#x7AEF;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6267;&#x884C; SQL</span></div><div class="line"><span class="number">15</span>: 		routeEndExecuteSQL(sql, type, schema);</div><div class="line"><span class="number">16</span>: 	}</div><div class="line"><span class="number">17</span>: 	</div><div class="line"><span class="number">18</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">routeEndExecuteSQL</span><span class="params">(String sql, <span class="keyword">final</span> <span class="keyword">int</span> type, <span class="keyword">final</span> SchemaConfig schema)</span> </span>{</div><div class="line"><span class="number">19</span>: 		<span class="comment">// &#x8DEF;&#x7531;&#x8BA1;&#x7B97;</span></div><div class="line"><span class="number">20</span>: 		RouteResultset rrs = <span class="keyword">null</span>;</div><div class="line"><span class="number">21</span>: 		<span class="keyword">try</span> {</div><div class="line"><span class="number">22</span>: 			rrs = MycatServer</div><div class="line"><span class="number">23</span>: 					.getInstance()</div><div class="line"><span class="number">24</span>: 					.getRouterservice()</div><div class="line"><span class="number">25</span>: 					.route(MycatServer.getInstance().getConfig().getSystem(),</div><div class="line"><span class="number">26</span>: 							schema, type, sql, <span class="keyword">this</span>.charset, <span class="keyword">this</span>);</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>: 		} <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">29</span>: 			StringBuilder s = <span class="keyword">new</span> StringBuilder();</div><div class="line"><span class="number">30</span>: 			LOGGER.warn(s.append(<span class="keyword">this</span>).append(sql).toString() + <span class="string">&quot; err:&quot;</span> + e.toString(),e);</div><div class="line"><span class="number">31</span>: 			String msg = e.getMessage();</div><div class="line"><span class="number">32</span>: 			writeErrMessage(ErrorCode.ER_PARSE_ERROR, msg == <span class="keyword">null</span> ? e.getClass().getSimpleName() : msg);</div><div class="line"><span class="number">33</span>: 			<span class="keyword">return</span>;</div><div class="line"><span class="number">34</span>: 		}</div><div class="line"><span class="number">35</span>: </div><div class="line"><span class="number">36</span>: 		<span class="comment">// &#x6267;&#x884C; SQL</span></div><div class="line"><span class="number">37</span>: 		<span class="keyword">if</span> (rrs != <span class="keyword">null</span>) {</div><div class="line"><span class="number">38</span>: 			<span class="comment">// session&#x6267;&#x884C;</span></div><div class="line"><span class="number">39</span>: 			session.execute(rrs, rrs.isSelectForUpdate() ? ServerParse.UPDATE : type);</div><div class="line"><span class="number">40</span>: 		}</div><div class="line"><span class="number">41</span>: 		</div><div class="line"><span class="number">42</span>:  	}</div><div class="line"><span class="number">43</span>: </div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<h1 id="3-&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;"><a href="#3-&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;" class="headerlink" title="3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;"></a>3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_30/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_30/03.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#xFF08;02&#x83B7;&#x53D6;&#x8DEF;&#x7531;&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-5-&#x3011;"><a href="#&#x3010;-1-5-&#x3011;" class="headerlink" title="&#x3010; 1 -  5 &#x3011;"></a>&#x3010; 1 -  5 &#x3011;</h2><p>&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x4E3B;&#x6D41;&#x7A0B;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;SelectHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> RouteResultset <span class="title">route</span><span class="params">(SystemConfig sysconf, SchemaConfig schema,</span></span></div><div class="line"> <span class="number">3</span>: 		<span class="keyword">int</span> sqlType, String stmt, String charset, ServerConnection sc)</div><div class="line"> 4: 		<span class="keyword">throws</span> SQLNonTransientException {</div><div class="line"> <span class="number">5</span>: 	RouteResultset rrs = <span class="keyword">null</span>;</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>: 	<span class="comment">// SELECT &#x7C7B;&#x578B;&#x7684;SQL, &#x68C0;&#x6D4B;&#x7F13;&#x5B58;&#x662F;&#x5426;&#x5B58;&#x5728;</span></div><div class="line"> <span class="number">8</span>: 	<span class="keyword">if</span> (sqlType == ServerParse.SELECT) {</div><div class="line"> <span class="number">9</span>: 		cacheKey = schema.getName() + stmt;			</div><div class="line"><span class="number">10</span>: 		rrs = (RouteResultset) sqlRouteCache.get(cacheKey);</div><div class="line"><span class="number">11</span>: 		<span class="keyword">if</span> (rrs != <span class="keyword">null</span>) {</div><div class="line"><span class="number">12</span>: 			checkMigrateRule(schema.getName(),rrs,sqlType);</div><div class="line"><span class="number">13</span>: 			<span class="keyword">return</span> rrs;</div><div class="line"><span class="number">14</span>: 			}</div><div class="line"><span class="number">15</span>: 		}</div><div class="line"><span class="number">16</span>: 	}</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">19</span>: 	<span class="keyword">int</span> hintLength = RouteService.isHintSql(stmt);</div><div class="line"><span class="number">20</span>: 	<span class="keyword">if</span>(hintLength != -<span class="number">1</span>){ <span class="comment">// TODO &#x5F85;&#x8BFB;&#xFF1A;hint</span></div><div class="line"><span class="number">21</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">22</span>: 		}</div><div class="line"><span class="number">23</span>: 	} <span class="keyword">else</span> {</div><div class="line"><span class="number">24</span>: 		stmt = stmt.trim();</div><div class="line"><span class="number">25</span>: 		rrs = RouteStrategyFactory.getRouteStrategy().route(sysconf, schema, sqlType, stmt,</div><div class="line"><span class="number">26</span>: 				charset, sc, tableId2DataNodeCache);</div><div class="line"><span class="number">27</span>: 	}</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>: 	<span class="comment">// &#x8BB0;&#x5F55;&#x67E5;&#x8BE2;&#x547D;&#x4EE4;&#x8DEF;&#x7531;&#x7ED3;&#x679C;&#x7F13;&#x5B58;</span></div><div class="line"><span class="number">30</span>: 	<span class="keyword">if</span> (rrs != <span class="keyword">null</span> &amp;&amp; sqlType == ServerParse.SELECT &amp;&amp; rrs.isCacheAble()) {</div><div class="line"><span class="number">31</span>: 		sqlRouteCache.putIfAbsent(cacheKey, rrs);</div><div class="line"><span class="number">32</span>: 	}</div><div class="line"><span class="number">33</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;		return rrs;</span></div><div class="line"><span class="number">34</span>: }</div><div class="line"><span class="number">35</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;AbstractRouteStrategy.java&#x3011;</span></div><div class="line"><span class="number">36</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">37</span>: <span class="function"><span class="keyword">public</span> RouteResultset <span class="title">route</span><span class="params">(SystemConfig sysConfig, SchemaConfig schema, <span class="keyword">int</span> sqlType, String origSQL,</span></span></div><div class="line"><span class="number">38</span>: 		String charset, ServerConnection sc, LayerCachePool cachePool) <span class="keyword">throws</span> SQLNonTransientException {</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>: 	<span class="comment">// &#x5904;&#x7406;&#x4E00;&#x4E9B;&#x8DEF;&#x7531;&#x4E4B;&#x524D;&#x7684;&#x903B;&#x8F91;;&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;&#xFF0C;&#x7236;&#x5B50;&#x8868;&#x63D2;&#x5165;</span></div><div class="line"><span class="number">43</span>: 	<span class="keyword">if</span> (beforeRouteProcess(schema, sqlType, origSQL, sc) ) {</div><div class="line"><span class="number">44</span>: 		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"><span class="number">45</span>: 	}</div><div class="line"><span class="number">46</span>: </div><div class="line"><span class="number">47</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">48</span>: </div><div class="line"><span class="number">49</span>: 	<span class="comment">// &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x5206;&#x7247;</span></div><div class="line"><span class="number">50</span>: 	<span class="keyword">if</span> (schema.isNoSharding() &amp;&amp; ServerParse.SHOW != sqlType) {</div><div class="line"><span class="number">51</span>: 		rrs = RouterUtil.routeToSingleNode(rrs, schema.getDataNode(), stmt);</div><div class="line"><span class="number">52</span>: 	} <span class="keyword">else</span> {</div><div class="line"><span class="number">53</span>: 		RouteResultset returnedSet = routeSystemInfo(schema, sqlType, stmt, rrs);</div><div class="line"><span class="number">54</span>: 		<span class="keyword">if</span> (returnedSet == <span class="keyword">null</span>) {</div><div class="line"><span class="number">55</span>: 			rrs = routeNormalSqlWithAST(schema, stmt, rrs, charset, cachePool,sqlType,sc);</div><div class="line"><span class="number">56</span>: 		}</div><div class="line"><span class="number">57</span>: 	}</div><div class="line"><span class="number">58</span>: </div><div class="line"><span class="number">59</span>: 	<span class="keyword">return</span> rrs;</div><div class="line"><span class="number">60</span>: }</div></pre></td></tr></table></figure>
<p>&#x1F680;&#x3010;3&#x3011;&#x7B2C; 7 &#x81F3; 16 &#x884C; &#xFF1A;&#x5F53; Select SQL &#x5B58;&#x5728;&#x8DEF;&#x7531;&#x7ED3;&#x679C;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7F13;&#x5B58;&#x3002;<br>&#x1F680;&#x3010;6&#x3011;&#x7B2C; 29 &#x81F3; 32 &#x884C; &#xFF1A;&#x8BB0;&#x5F55; Select SQL &#x8DEF;&#x7531;&#x7ED3;&#x679C;&#x5230;&#x7F13;&#x5B58;&#x3002;</p>
<p><em><strong>&#x8DEF;&#x7531;</strong> &#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x53E6;&#x5F00;&#x6587;&#x7AE0;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5BB9;&#x8FC7;&#x591A;&#xFF0C;&#x5F71;&#x54CD;&#x5927;&#x5BB6;&#x5BF9;&#x3010;&#x63D2;&#x5165;&#x3011;&#x6D41;&#x7A0B;&#x548C;&#x903B;&#x8F91;&#x7684;&#x7406;&#x89E3;&#x3002;</em></p>
<h1 id="4-&#x83B7;&#x5F97;-MySQL-&#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C;-SQL"><a href="#4-&#x83B7;&#x5F97;-MySQL-&#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C;-SQL" class="headerlink" title="4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL"></a>4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/03.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#xFF08;03&#x6267;&#x884C; SQL&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-8-&#x3011;"><a href="#&#x3010;-1-8-&#x3011;" class="headerlink" title="&#x3010; 1 - 8 &#x3011;"></a>&#x3010; 1 - 8 &#x3011;</h2><p>&#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#x3002;</p>
<ul class="ui list">
<li>PhysicalDBNode &#xFF1A;&#x7269;&#x7406;&#x6570;&#x636E;&#x5E93;&#x8282;&#x70B9;&#x3002;</li>
<li>PhysicalDatasource &#xFF1A;&#x7269;&#x7406;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x6E90;&#x3002;</li>
</ul>
<h2 id="&#x3010;-9-13-&#x3011;"><a href="#&#x3010;-9-13-&#x3011;" class="headerlink" title="&#x3010; 9 - 13 &#x3011;"></a>&#x3010; 9 - 13 &#x3011;</h2><p>&#x53D1;&#x9001; SQL &#x5230; MySQL Server&#xFF0C;&#x6267;&#x884C; SQL&#x3002;</p>
<h1 id="&#x1F680;-5-&#x54CD;&#x5E94;&#x6267;&#x884C;-SQL-&#x7ED3;&#x679C;"><a href="#&#x1F680;-5-&#x54CD;&#x5E94;&#x6267;&#x884C;-SQL-&#x7ED3;&#x679C;" class="headerlink" title="&#x1F680; 5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;"></a>&#x1F680; 5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_30/04.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_30/04.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x67E5;&#x8BE2;&#xFF08;04&#x6267;&#x884C;&#x54CD;&#x5E94;&#xFF09;" class="ui centered image"></a></p>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;MySQLConnectionHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">3</span>: <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleData</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line"> <span class="number">4</span>: 	<span class="keyword">switch</span> (resultStatus) {</div><div class="line"> <span class="number">5</span>: 	<span class="keyword">case</span> RESULT_STATUS_INIT:</div><div class="line"> <span class="number">6</span>: 		<span class="keyword">switch</span> (data[<span class="number">4</span>]) {</div><div class="line"> <span class="number">7</span>: 		<span class="keyword">case</span> OkPacket.FIELD_COUNT:</div><div class="line"> <span class="number">8</span>: 			handleOkPacket(data);</div><div class="line"> <span class="number">9</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">10</span>: 		<span class="keyword">case</span> ErrorPacket.FIELD_COUNT:</div><div class="line"><span class="number">11</span>: 			handleErrorPacket(data);</div><div class="line"><span class="number">12</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">13</span>: 		<span class="keyword">case</span> RequestFilePacket.FIELD_COUNT:</div><div class="line"><span class="number">14</span>: 			handleRequestPacket(data);</div><div class="line"><span class="number">15</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">16</span>: 		<span class="keyword">default</span>: <span class="comment">// &#x521D;&#x59CB;&#x5316; header fields</span></div><div class="line"><span class="number">17</span>: 			resultStatus = RESULT_STATUS_HEADER;</div><div class="line"><span class="number">18</span>: 			header = data;</div><div class="line"><span class="number">19</span>: 			fields = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">byte</span>[]&gt;((<span class="keyword">int</span>) ByteUtil.readLength(data,</div><div class="line"><span class="number">20</span>: 					<span class="number">4</span>));</div><div class="line"><span class="number">21</span>: 		}</div><div class="line"><span class="number">22</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">23</span>: 	<span class="keyword">case</span> RESULT_STATUS_HEADER:</div><div class="line"><span class="number">24</span>: 		<span class="keyword">switch</span> (data[<span class="number">4</span>]) {</div><div class="line"><span class="number">25</span>: 		<span class="keyword">case</span> ErrorPacket.FIELD_COUNT:</div><div class="line"><span class="number">26</span>: 			resultStatus = RESULT_STATUS_INIT;</div><div class="line"><span class="number">27</span>: 			handleErrorPacket(data);</div><div class="line"><span class="number">28</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">29</span>: 		<span class="keyword">case</span> EOFPacket.FIELD_COUNT: <span class="comment">// &#x89E3;&#x6790; fields &#x7ED3;&#x675F;</span></div><div class="line"><span class="number">30</span>: 			resultStatus = RESULT_STATUS_FIELD_EOF;</div><div class="line"><span class="number">31</span>: 			handleFieldEofPacket(data);</div><div class="line"><span class="number">32</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">33</span>: 		<span class="keyword">default</span>: <span class="comment">// &#x89E3;&#x6790; fields</span></div><div class="line"><span class="number">34</span>: 			fields.add(data);</div><div class="line"><span class="number">35</span>: 		}</div><div class="line"><span class="number">36</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">37</span>: 	<span class="keyword">case</span> RESULT_STATUS_FIELD_EOF:</div><div class="line"><span class="number">38</span>: 		<span class="keyword">switch</span> (data[<span class="number">4</span>]) {</div><div class="line"><span class="number">39</span>: 		<span class="keyword">case</span> ErrorPacket.FIELD_COUNT:</div><div class="line"><span class="number">40</span>: 			resultStatus = RESULT_STATUS_INIT;</div><div class="line"><span class="number">41</span>: 			handleErrorPacket(data);</div><div class="line"><span class="number">42</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">43</span>: 		<span class="keyword">case</span> EOFPacket.FIELD_COUNT: <span class="comment">// &#x89E3;&#x6790; &#x6BCF;&#x884C;&#x8BB0;&#x5F55; &#x7ED3;&#x675F;</span></div><div class="line"><span class="number">44</span>: 			resultStatus = RESULT_STATUS_INIT;</div><div class="line"><span class="number">45</span>: 			handleRowEofPacket(data);</div><div class="line"><span class="number">46</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">47</span>: 		<span class="keyword">default</span>: <span class="comment">// &#x6BCF;&#x884C;&#x8BB0;&#x5F55;</span></div><div class="line"><span class="number">48</span>: 			handleRowPacket(data);</div><div class="line"><span class="number">49</span>: 		}</div><div class="line"><span class="number">50</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">51</span>: 	<span class="keyword">default</span>:</div><div class="line"><span class="number">52</span>: 		<span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;unknown status!&quot;</span>);</div><div class="line"><span class="number">53</span>: 	}</div><div class="line"><span class="number">54</span>: }</div></pre></td></tr></table></figure>
<h1 id="6-&#x5176;&#x4ED6;-&#xFF1A;&#x66F4;&#x65B0;-&#x5220;&#x9664;"><a href="#6-&#x5176;&#x4ED6;-&#xFF1A;&#x66F4;&#x65B0;-&#x5220;&#x9664;" class="headerlink" title="6. &#x5176;&#x4ED6; &#xFF1A;&#x66F4;&#x65B0; / &#x5220;&#x9664;"></a>6. &#x5176;&#x4ED6; &#xFF1A;&#x66F4;&#x65B0; / &#x5220;&#x9664;</h1><p>&#x6D41;&#x7A0B;&#x57FA;&#x672C;&#x548C; <a href="http://www.yunai.me/Mycat/single-db-single-table-insert/">&#x300A;MyCAT&#x6E90;&#x7801;&#x5206;&#x6790;&#xFF1A;&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#x300B;</a> &#x76F8;&#x540C;&#x3002;&#x6211;&#x4EEC;&#x5C31;&#x4E0D;&#x53E6;&#x5916;&#x6587;&#x7AE0;&#x89E3;&#x6790;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析 —— 【单库单表】插入</title>
    <link href="http://www.yunai.me/MyCAT/single-db-single-table-insert/"/>
    <id>http://www.yunai.me/MyCAT/single-db-single-table-insert/</id>
    <published>2017-05-28T16:00:00.000Z</published>
    <updated>2017-07-20T01:39:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL</a></li>
<li><a href="#">3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;</a></li>
<li><a href="#">4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL</a></li>
<li><a href="#">5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;</a></li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><blockquote>
<p>&#x5185;&#x5BB9;&#x5F62;&#x6001;&#x4EE5; &#x987A;&#x5E8F;&#x56FE; + &#x6838;&#x5FC3;&#x4EE3;&#x7801; &#x4E3A;&#x4E3B;&#x3002;<br>&#x5982;&#x679C;&#x6709;&#x5730;&#x65B9;&#x8868;&#x8FF0;&#x4E0D;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x4E0D;&#x6E05;&#x6670;&#xFF0C;&#x6B22;&#x8FCE;&#x7559;&#x8A00;&#x3002;<br>&#x5BF9;&#x4E8E;&#x5185;&#x5BB9;&#x5F62;&#x6001;&#xFF0C;&#x975E;&#x5E38;&#x7EA0;&#x7ED3;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5EFA;&#x8BAE;&#xFF0C;&#x7279;&#x522B;&#x7279;&#x522B;&#x7279;&#x522B;&#x6B22;&#x8FCE;&#x60A8;&#x63D0;&#x51FA;&#x3002;<br>&#x5FAE;&#x4FE1;&#x53F7;&#xFF1A;wangwenbin-server&#x3002;</p>
</blockquote>
<p>&#x672C;&#x6587;&#x8BB2;&#x89E3; &#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165; &#x6240;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x4EA4;&#x4E92;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/05.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/05.png" alt="&#x5355;&#x5E93;&#x5355;&#x8868;&#x63D2;&#x5165;&#x7B80;&#x56FE;" class="ui centered image"></a></p>
<p>&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF0C;MyCAT Server &#x6D41;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<ol class="ui list">
<li>&#x63A5;&#x6536; MySQL Client &#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL&#x3002;</li>
<li>&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;&#xFF0C;&#x8FDB;&#x884C;&#x8DEF;&#x7531;&#x3002;</li>
<li>&#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL&#x3002;</li>
<li>&#x54CD;&#x5E94;&#x6267;&#x884C;&#x7ED3;&#x679C;&#xFF0C;&#x53D1;&#x9001;&#x7ED3;&#x679C;&#x7ED9; MySQL Client&#x3002;</li>
</ol>
<p>&#x6211;&#x4EEC;&#x9010;&#x4E2A;&#x6B65;&#x9AA4;&#x5206;&#x6790;&#xFF0C;&#x4E00;&#x8D77;&#x6765;&#x770B;&#x770B;&#x6E90;&#x7801;&#x3002;</p>
<h1 id="2-&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790;-SQL"><a href="#2-&#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790;-SQL" class="headerlink" title="2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL"></a>2. &#x63A5;&#x6536;&#x8BF7;&#x6C42;&#xFF0C;&#x89E3;&#x6790; SQL</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/01.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#xFF08;01&#x4E3B;&#x6D41;&#x7A0B;&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-2-&#x3011;"><a href="#&#x3010;-1-2-&#x3011;" class="headerlink" title="&#x3010; 1 - 2 &#x3011;"></a>&#x3010; 1 - 2 &#x3011;</h2><p>&#x63A5;&#x6536;<strong>&#x4E00;&#x6761;</strong> MySQL &#x547D;&#x4EE4;&#x3002;&#x5728;&#x3010;1&#x3011;&#x4E4B;&#x524D;&#xFF0C;&#x8FD8;&#x6709;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x8BFB;&#x53D6;&#x3001;&#x62C6;&#x6210;&#x5355;&#x6761; MySQL SQL&#x3002;</p>
<h2 id="&#x3010;-3-&#x3011;"><a href="#&#x3010;-3-&#x3011;" class="headerlink" title="&#x3010; 3 &#x3011;"></a>&#x3010; 3 &#x3011;</h2><p>&#x4E0D;&#x540C; MySQL &#x547D;&#x4EE4;&#xFF0C;&#x5206;&#x53D1;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FrontendCommandHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FrontendCommandHandler</span> <span class="keyword">implements</span> <span class="title">NIOHandler</span> </span>{</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line"> <span class="number">6</span>:     </div><div class="line"> <span class="number">7</span>:         <span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">switch</span> (data[<span class="number">4</span>]) <span class="comment">// </span></div><div class="line"> <span class="number">9</span>:         {</div><div class="line"><span class="number">10</span>:             <span class="keyword">case</span> MySQLPacket.COM_INIT_DB:</div><div class="line"><span class="number">11</span>:                 commands.doInitDB();</div><div class="line"><span class="number">12</span>:                 source.initDB(data);</div><div class="line"><span class="number">13</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">14</span>:             <span class="keyword">case</span> MySQLPacket.COM_QUERY: <span class="comment">// &#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">15</span>:                 <span class="comment">// &#x8BA1;&#x6570;&#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">16</span>:                 commands.doQuery();</div><div class="line"><span class="number">17</span>:                 <span class="comment">// &#x6267;&#x884C;&#x67E5;&#x8BE2;&#x547D;&#x4EE4;</span></div><div class="line"><span class="number">18</span>:                 source.query(data);</div><div class="line"><span class="number">19</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">20</span>:             <span class="keyword">case</span> MySQLPacket.COM_PING:</div><div class="line"><span class="number">21</span>:                 commands.doPing();</div><div class="line"><span class="number">22</span>:                 source.ping();</div><div class="line"><span class="number">23</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">24</span>:             <span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>: }</div></pre></td></tr></table></figure>
<p><code>INSERT</code>/<code>SELECT</code>/<code>UPDATE</code>/<code>DELETE</code> &#x7B49; SQL &#x5F52;&#x5C5E;&#x4E8E; <code>MySQLPacket.COM_QUERY</code>&#xFF0C;&#x8BE6;&#x7EC6;&#x53EF;&#x89C1;&#xFF1A;<a href="http://hutaow.com/blog/2013/11/06/mysql-protocol-analysis/#42-" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;MySQL&#x534F;&#x8BAE;&#x5206;&#x6790;#4.2 &#x5BA2;&#x6237;&#x7AEF;&#x547D;&#x4EE4;&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#xFF08;&#x5BA2;&#x6237;&#x7AEF; -&gt; &#x670D;&#x52A1;&#x5668;&#xFF09;&#x300B;</a>&#x3002;</p>
<p>##&#x3010; 4 &#x3011;</p>
<p>&#x5C06; &#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7EC4; &#x89E3;&#x6790;&#x6210; SQL&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FrontendConnection.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>{</div><div class="line"> <span class="number">3</span>: 	<span class="comment">// &#x53D6;&#x5F97;&#x8BED;&#x53E5;</span></div><div class="line"> <span class="number">4</span>: 	String sql = <span class="keyword">null</span>;		</div><div class="line"> <span class="number">5</span>: 	<span class="keyword">try</span> {</div><div class="line"> <span class="number">6</span>: 		MySQLMessage mm = <span class="keyword">new</span> MySQLMessage(data);</div><div class="line"> <span class="number">7</span>: 		mm.position(<span class="number">5</span>);</div><div class="line"> <span class="number">8</span>: 		sql = mm.readString(charset);</div><div class="line"> <span class="number">9</span>: 	} <span class="keyword">catch</span> (UnsupportedEncodingException e) {</div><div class="line"><span class="number">10</span>: 		writeErrMessage(ErrorCode.ER_UNKNOWN_CHARACTER_SET, <span class="string">&quot;Unknown charset &apos;&quot;</span> + charset + <span class="string">&quot;&apos;&quot;</span>);</div><div class="line"><span class="number">11</span>: 		<span class="keyword">return</span>;</div><div class="line"><span class="number">12</span>: 	}		</div><div class="line"><span class="number">13</span>: 	<span class="comment">// &#x6267;&#x884C;&#x8BED;&#x53E5;</span></div><div class="line"><span class="number">14</span>: 	<span class="keyword">this</span>.query( sql );</div><div class="line"><span class="number">15</span>: }</div></pre></td></tr></table></figure>
<p>##&#x3010; 5 &#x3011;</p>
<p>&#x89E3;&#x6790; SQL &#x7C7B;&#x578B;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerQueryHandler.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">3</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">(String sql)</span> </span>{</div><div class="line"> <span class="number">4</span>: 	<span class="comment">// &#x89E3;&#x6790; SQL &#x7C7B;&#x578B;</span></div><div class="line"> <span class="number">5</span>: 	<span class="keyword">int</span> rs = ServerParse.parse(sql);</div><div class="line"> <span class="number">6</span>: 	<span class="keyword">int</span> sqlType = rs &amp; <span class="number">0xff</span>;</div><div class="line"> <span class="number">7</span>: 	</div><div class="line"> <span class="number">8</span>: 	<span class="keyword">switch</span> (sqlType) {</div><div class="line"> <span class="number">9</span>: 	<span class="comment">//explain sql</span></div><div class="line"><span class="number">10</span>: 	<span class="keyword">case</span> ServerParse.EXPLAIN:</div><div class="line"><span class="number">11</span>: 		ExplainHandler.handle(sql, c, rs &gt;&gt;&gt; <span class="number">8</span>);</div><div class="line"><span class="number">12</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">13</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">14</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">15</span>: 	<span class="keyword">case</span> ServerParse.SELECT:</div><div class="line"><span class="number">16</span>: 		SelectHandler.handle(sql, c, rs &gt;&gt;&gt; <span class="number">8</span>);</div><div class="line"><span class="number">17</span>: 		<span class="keyword">break</span>;</div><div class="line"><span class="number">18</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">19</span>: 	<span class="keyword">default</span>:</div><div class="line"><span class="number">20</span>: 		<span class="keyword">if</span>(readOnly){</div><div class="line"><span class="number">21</span>: 			LOGGER.warn(<span class="keyword">new</span> StringBuilder().append(<span class="string">&quot;User readonly:&quot;</span>).append(sql).toString());</div><div class="line"><span class="number">22</span>: 			c.writeErrMessage(ErrorCode.ER_USER_READ_ONLY, <span class="string">&quot;User readonly&quot;</span>);</div><div class="line"><span class="number">23</span>: 			<span class="keyword">break</span>;</div><div class="line"><span class="number">24</span>: 		}</div><div class="line"><span class="number">25</span>: 		c.execute(sql, rs &amp; <span class="number">0xff</span>);</div><div class="line"><span class="number">26</span>: 	}</div><div class="line"><span class="number">27</span>: }</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:</div><div class="line"><span class="number">30</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerParse.java&#x3011;</span></div><div class="line"><span class="number">31</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parse</span><span class="params">(String stmt)</span> </span>{</div><div class="line"><span class="number">32</span>: 	<span class="keyword">int</span> length = stmt.length();</div><div class="line"><span class="number">33</span>: 	<span class="comment">//FIX BUG FOR SQL SUCH AS /XXXX/SQL</span></div><div class="line"><span class="number">34</span>: 	<span class="keyword">int</span> rt = -<span class="number">1</span>;</div><div class="line"><span class="number">35</span>: 	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; ++i) {</div><div class="line"><span class="number">36</span>: 		<span class="keyword">switch</span> (stmt.charAt(i)) {</div><div class="line"><span class="number">37</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case			case &apos;I&apos;:</span></div><div class="line"><span class="number">38</span>: 		<span class="keyword">case</span> <span class="string">&apos;i&apos;</span>:</div><div class="line"><span class="number">39</span>: 			rt = insertCheck(stmt, i);</div><div class="line"><span class="number">40</span>: 			<span class="keyword">if</span> (rt != OTHER) {</div><div class="line"><span class="number">41</span>: 				<span class="keyword">return</span> rt;</div><div class="line"><span class="number">42</span>: 			}</div><div class="line"><span class="number">43</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">44</span>: 			<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">45</span>: 		<span class="keyword">case</span> <span class="string">&apos;S&apos;</span>:</div><div class="line"><span class="number">46</span>: 		<span class="keyword">case</span> <span class="string">&apos;s&apos;</span>:</div><div class="line"><span class="number">47</span>: 			rt = sCheck(stmt, i);</div><div class="line"><span class="number">48</span>: 			<span class="keyword">if</span> (rt != OTHER) {</div><div class="line"><span class="number">49</span>: 				<span class="keyword">return</span> rt;</div><div class="line"><span class="number">50</span>: 			}</div><div class="line"><span class="number">51</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">52</span>: 			<span class="comment">// .... &#x7701;&#x7565;&#x90E8;&#x5206;case</span></div><div class="line"><span class="number">53</span>: 		<span class="keyword">default</span>:</div><div class="line"><span class="number">54</span>: 			<span class="keyword">continue</span>;</div><div class="line"><span class="number">55</span>: 		}</div><div class="line"><span class="number">56</span>: 	}</div><div class="line"><span class="number">57</span>: 	<span class="keyword">return</span> OTHER;</div><div class="line"><span class="number">58</span>: }</div></pre></td></tr></table></figure>
<p>##&#x3010; 6 &#x3011;</p>
<p>&#x6267;&#x884C; SQL&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#x4E0B;&#x6587;&#xFF0C;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ServerConnection.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerConnection</span> <span class="keyword">extends</span> <span class="title">FrontendConnection</span> </span>{</div><div class="line"> <span class="number">3</span>: 	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(String sql, <span class="keyword">int</span> type)</span> </span>{</div><div class="line"> <span class="number">4</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">5</span>: 		SchemaConfig schema = MycatServer.getInstance().getConfig().getSchemas().get(db);</div><div class="line"> <span class="number">6</span>: 		<span class="keyword">if</span> (schema == <span class="keyword">null</span>) {</div><div class="line"> <span class="number">7</span>: 			writeErrMessage(ErrorCode.ERR_BAD_LOGICDB,</div><div class="line"> <span class="number">8</span>: 					<span class="string">&quot;Unknown MyCAT Database &apos;&quot;</span> + db + <span class="string">&quot;&apos;&quot;</span>);</div><div class="line"> <span class="number">9</span>: 			<span class="keyword">return</span>;</div><div class="line"><span class="number">10</span>: 		}</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>: 		<span class="comment">// &#x8DEF;&#x7531;&#x5230;&#x540E;&#x7AEF;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6267;&#x884C; SQL</span></div><div class="line"><span class="number">15</span>: 		routeEndExecuteSQL(sql, type, schema);</div><div class="line"><span class="number">16</span>: 	}</div><div class="line"><span class="number">17</span>: 	</div><div class="line"><span class="number">18</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">routeEndExecuteSQL</span><span class="params">(String sql, <span class="keyword">final</span> <span class="keyword">int</span> type, <span class="keyword">final</span> SchemaConfig schema)</span> </span>{</div><div class="line"><span class="number">19</span>: 		<span class="comment">// &#x8DEF;&#x7531;&#x8BA1;&#x7B97;</span></div><div class="line"><span class="number">20</span>: 		RouteResultset rrs = <span class="keyword">null</span>;</div><div class="line"><span class="number">21</span>: 		<span class="keyword">try</span> {</div><div class="line"><span class="number">22</span>: 			rrs = MycatServer</div><div class="line"><span class="number">23</span>: 					.getInstance()</div><div class="line"><span class="number">24</span>: 					.getRouterservice()</div><div class="line"><span class="number">25</span>: 					.route(MycatServer.getInstance().getConfig().getSystem(),</div><div class="line"><span class="number">26</span>: 							schema, type, sql, <span class="keyword">this</span>.charset, <span class="keyword">this</span>);</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>: 		} <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">29</span>: 			StringBuilder s = <span class="keyword">new</span> StringBuilder();</div><div class="line"><span class="number">30</span>: 			LOGGER.warn(s.append(<span class="keyword">this</span>).append(sql).toString() + <span class="string">&quot; err:&quot;</span> + e.toString(),e);</div><div class="line"><span class="number">31</span>: 			String msg = e.getMessage();</div><div class="line"><span class="number">32</span>: 			writeErrMessage(ErrorCode.ER_PARSE_ERROR, msg == <span class="keyword">null</span> ? e.getClass().getSimpleName() : msg);</div><div class="line"><span class="number">33</span>: 			<span class="keyword">return</span>;</div><div class="line"><span class="number">34</span>: 		}</div><div class="line"><span class="number">35</span>: </div><div class="line"><span class="number">36</span>: 		<span class="comment">// &#x6267;&#x884C; SQL</span></div><div class="line"><span class="number">37</span>: 		<span class="keyword">if</span> (rrs != <span class="keyword">null</span>) {</div><div class="line"><span class="number">38</span>: 			<span class="comment">// session&#x6267;&#x884C;</span></div><div class="line"><span class="number">39</span>: 			session.execute(rrs, rrs.isSelectForUpdate() ? ServerParse.UPDATE : type);</div><div class="line"><span class="number">40</span>: 		}</div><div class="line"><span class="number">41</span>: 		</div><div class="line"><span class="number">42</span>:  	}</div><div class="line"><span class="number">43</span>: </div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<h1 id="3-&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;"><a href="#3-&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;" class="headerlink" title="3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;"></a>3. &#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x7ED3;&#x679C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/02.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/02.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#xFF08;02&#x83B7;&#x53D6;&#x8DEF;&#x7531;&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-2-&#x3011;&#x3010;-12-&#x3011;"><a href="#&#x3010;-1-2-&#x3011;&#x3010;-12-&#x3011;" class="headerlink" title="&#x3010; 1 - 2 &#x3011;&#x3010; 12 &#x3011;"></a>&#x3010; 1 - 2 &#x3011;&#x3010; 12 &#x3011;</h2><p>&#x83B7;&#x5F97;&#x8DEF;&#x7531;&#x4E3B;&#x6D41;&#x7A0B;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RouteService.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> RouteResultset <span class="title">route</span><span class="params">(SystemConfig sysconf, SchemaConfig schema,</span></span></div><div class="line"> <span class="number">3</span>: 		<span class="keyword">int</span> sqlType, String stmt, String charset, ServerConnection sc)</div><div class="line"> 4: 		<span class="keyword">throws</span> SQLNonTransientException {</div><div class="line"> <span class="number">5</span>: 	RouteResultset rrs = <span class="keyword">null</span>;</div><div class="line"> <span class="number">6</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">7</span>: 	<span class="keyword">int</span> hintLength = RouteService.isHintSql(stmt);</div><div class="line"> <span class="number">8</span>: 	<span class="keyword">if</span>(hintLength != -<span class="number">1</span>){ <span class="comment">// TODO &#x5F85;&#x8BFB;&#xFF1A;hint</span></div><div class="line"> <span class="number">9</span>: 		<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">10</span>: 		}</div><div class="line"><span class="number">11</span>: 	} <span class="keyword">else</span> {</div><div class="line"><span class="number">12</span>: 		stmt = stmt.trim();</div><div class="line"><span class="number">13</span>: 		rrs = RouteStrategyFactory.getRouteStrategy().route(sysconf, schema, sqlType, stmt,</div><div class="line"><span class="number">14</span>: 				charset, sc, tableId2DataNodeCache);</div><div class="line"><span class="number">15</span>: 	}</div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;		return rrs;</span></div><div class="line"><span class="number">18</span>: }</div><div class="line"><span class="number">19</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;AbstractRouteStrategy.java&#x3011;</span></div><div class="line"><span class="number">20</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">21</span>: <span class="function"><span class="keyword">public</span> RouteResultset <span class="title">route</span><span class="params">(SystemConfig sysConfig, SchemaConfig schema, <span class="keyword">int</span> sqlType, String origSQL,</span></span></div><div class="line"><span class="number">22</span>: 		String charset, ServerConnection sc, LayerCachePool cachePool) <span class="keyword">throws</span> SQLNonTransientException {</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>: 	<span class="comment">// &#x5904;&#x7406;&#x4E00;&#x4E9B;&#x8DEF;&#x7531;&#x4E4B;&#x524D;&#x7684;&#x903B;&#x8F91;;&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;&#xFF0C;&#x7236;&#x5B50;&#x8868;&#x63D2;&#x5165;</span></div><div class="line"><span class="number">27</span>: 	<span class="keyword">if</span> (beforeRouteProcess(schema, sqlType, origSQL, sc) ) {</div><div class="line"><span class="number">28</span>: 		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"><span class="number">29</span>: 	}</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>: 	<span class="comment">// .... &#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">32</span>: </div><div class="line"><span class="number">33</span>: 	<span class="comment">// &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x5206;&#x7247;</span></div><div class="line"><span class="number">34</span>: 	<span class="keyword">if</span> (schema.isNoSharding() &amp;&amp; ServerParse.SHOW != sqlType) {</div><div class="line"><span class="number">35</span>: 		rrs = RouterUtil.routeToSingleNode(rrs, schema.getDataNode(), stmt);</div><div class="line"><span class="number">36</span>: 	} <span class="keyword">else</span> {</div><div class="line"><span class="number">37</span>: 		RouteResultset returnedSet = routeSystemInfo(schema, sqlType, stmt, rrs);</div><div class="line"><span class="number">38</span>: 		<span class="keyword">if</span> (returnedSet == <span class="keyword">null</span>) {</div><div class="line"><span class="number">39</span>: 			rrs = routeNormalSqlWithAST(schema, stmt, rrs, charset, cachePool,sqlType,sc);</div><div class="line"><span class="number">40</span>: 		}</div><div class="line"><span class="number">41</span>: 	}</div><div class="line"><span class="number">42</span>: </div><div class="line"><span class="number">43</span>: 	<span class="keyword">return</span> rrs;</div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<p><em><strong>&#x8DEF;&#x7531;</strong> &#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x53E6;&#x5F00;&#x6587;&#x7AE0;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5BB9;&#x8FC7;&#x591A;&#xFF0C;&#x5F71;&#x54CD;&#x5927;&#x5BB6;&#x5BF9;&#x3010;&#x63D2;&#x5165;&#x3011;&#x6D41;&#x7A0B;&#x548C;&#x903B;&#x8F91;&#x7684;&#x7406;&#x89E3;&#x3002;</em></p>
<h2 id="&#x3010;-3-6-&#x3011;"><a href="#&#x3010;-3-6-&#x3011;" class="headerlink" title="&#x3010; 3 - 6 &#x3011;"></a>&#x3010; 3 - 6 &#x3011;</h2><p>&#x8DEF;&#x7531;<strong>&#x524D;&#x7F6E;</strong>&#x5904;&#x7406;&#x3002;&#x5F53;&#x7B26;&#x5408;&#x5982;&#x4E0B;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF1A;  </p>
<p>{ 1 } &#x4F7F;&#x7528;<strong>&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;</strong>&#xFF1A;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">values</span> (<span class="keyword">NEXT</span> <span class="keyword">VALUE</span> <span class="keyword">FOR</span> MYCATSEQ_ID, <span class="string">&apos;name&apos;</span>)</div></pre></td></tr></table></figure>
<p>{ 2 } ER &#x5B50;&#x8868;&#x63D2;&#x5165;<br>{ 3 } &#x4E3B;&#x952E;&#x4F7F;&#x7528;&#x81EA;&#x589E; ID &#x63D2;&#x5165;&#xFF1A;</p>
<figure class="highlight"><table><tr><td class="code"><pre><div class="line">insert into table (name) values (&apos;name&apos;)</div><div class="line">===&gt;</div><div class="line">insert into table (id, name) values (NEXT VALUE FOR MYCATSEQ_ID, &apos;name&apos;)</div><div class="line">```  </div><div class="line"></div><div class="line">&#x60C5;&#x51B5; { 1 } { 3 } &#x60C5;&#x51B5;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;&#x3002;</div><div class="line"></div><div class="line">&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</div><div class="line"></div><div class="line">```Java</div><div class="line">  1: // &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;AbstractRouteStrategy.java&#x3011;</div><div class="line">  2: private boolean beforeRouteProcess(SchemaConfig schema, int sqlType, String origSQL, ServerConnection sc)</div><div class="line">  3: 		throws SQLNonTransientException {</div><div class="line">  4: 	return  // &#x5904;&#x7406; id &#x4F7F;&#x7528; &#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;</div><div class="line">  5:             RouterUtil.processWithMycatSeq(schema, sqlType, origSQL, sc)</div><div class="line">  6:             // &#x5904;&#x7406; ER &#x5B50;&#x8868;</div><div class="line">  7: 			|| (sqlType == ServerParse.INSERT &amp;&amp; RouterUtil.processERChildTable(schema, origSQL, sc))</div><div class="line">  8:             // &#x5904;&#x7406; id &#x81EA;&#x589E;&#x957F;</div><div class="line">  9: 			|| (sqlType == ServerParse.INSERT &amp;&amp; RouterUtil.processInsert(schema, sqlType, origSQL, sc));</div><div class="line"> 10: }</div></pre></td></tr></table></figure>
<p><code>RouterUtil.java</code> &#x5904;&#x7406; SQL &#x8003;&#x8651;&#x6027;&#x80FD;&#xFF0C;&#x5B9E;&#x73B0;&#x4F1A;&#x6BD4;&#x8F83; C-style&#xFF0C;&#x4EE3;&#x7801;&#x54B1;&#x5C31;&#x4E0D;&#x8D34;&#x4E86;&#xFF0C;&#x4F20;&#x9001;&#x95E8;&#xFF1A;<a href="https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/route/util/RouterUtil.java&#x3002;" target="_blank" rel="external">https://github.com/YunaiV/Mycat-Server/blob/1.6/src/main/java/io/mycat/route/util/RouterUtil.java&#x3002;</a> &#xFF08;&#x1F608;&#x8BE5;&#x4ED3;&#x5E93;&#x4ECE;&#x5B98;&#x65B9; Fork&#xFF0C;&#x9010;&#x6B65;&#x5B8C;&#x5584;&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#xFF0C;&#x6B22;&#x8FCE; Star&#xFF09;</p>
<h2 id="&#x3010;-7-11-&#x3011;"><a href="#&#x3010;-7-11-&#x3011;" class="headerlink" title="&#x3010; 7 - 11 &#x3011;"></a>&#x3010; 7 - 11 &#x3011;</h2><p>&#x5F53;<strong>&#x524D;&#x7F6E;</strong>&#x8DEF;&#x7531;&#x5904;&#x7406;<strong>&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x53F7;</strong>&#x65F6;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;&#x5168;&#x5C40;&#x5E8F;&#x5217;&#x5904;&#x7406;&#x5668;&#xFF08;<code>MyCATSequnceProcessor</code>&#xFF09;&#x3002;&#x8BE5;&#x5904;&#x7406;&#x5668;&#x4F1A;&#x5F02;&#x6B65;&#x751F;&#x6210; ID&#xFF0C;&#x66FF;&#x6362; SQL &#x5185;&#x7684; <code>NEXT VALUE FOR MYCATSEQ_</code> &#x6B63;&#x5219;&#x3002;&#x4F8B;&#x5982;&#xFF1A;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">values</span> (<span class="keyword">NEXT</span> <span class="keyword">VALUE</span> <span class="keyword">FOR</span> MYCATSEQ_ID, <span class="string">&apos;name&apos;</span>)</div><div class="line">===&gt;</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> (<span class="keyword">id</span>, <span class="keyword">name</span>) <span class="keyword">values</span> (<span class="number">868348974560579584</span>, <span class="string">&apos;name&apos;</span>)</div></pre></td></tr></table></figure>
<p>&#x5F02;&#x6B65;&#x5904;&#x7406;&#x5B8C;&#x540E;&#xFF0C;&#x8C03;&#x7528; <code>ServerConnection#routeEndExecuteSQL(sql, type, schema)</code> &#x65B9;&#x6CD5;&#x91CD;&#x65B0;&#x6267;&#x884C; SQL&#x3002;</p>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RouterUtil.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">processSQL</span><span class="params">(ServerConnection sc,SchemaConfig schema,String sql,<span class="keyword">int</span> sqlType)</span></span>{</div><div class="line"> <span class="number">3</span>: 	SessionSQLPair sessionSQLPair = <span class="keyword">new</span> SessionSQLPair(sc.getSession2(), schema, sql, sqlType);</div><div class="line"> <span class="number">4</span>: 	MycatServer.getInstance().getSequnceProcessor().addNewSql(sessionSQLPair);</div><div class="line"> <span class="number">5</span>: }</div><div class="line"> <span class="number">6</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;MyCATSequnceProcessor.java&#x3011;</span></div><div class="line"> <span class="number">7</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCATSequnceProcessor</span> </span>{</div><div class="line"> <span class="number">8</span>: 	<span class="keyword">private</span> LinkedBlockingQueue&lt;SessionSQLPair&gt; seqSQLQueue = <span class="keyword">new</span> LinkedBlockingQueue&lt;SessionSQLPair&gt;();</div><div class="line"> <span class="number">9</span>: 	<span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> running=<span class="keyword">true</span>;</div><div class="line"><span class="number">10</span>: 	</div><div class="line"><span class="number">11</span>: 	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addNewSql</span><span class="params">(SessionSQLPair pair)</span> </span>{</div><div class="line"><span class="number">12</span>: 		seqSQLQueue.add(pair);</div><div class="line"><span class="number">13</span>: 	}</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>: 	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">executeSeq</span><span class="params">(SessionSQLPair pair)</span> </span>{</div><div class="line"><span class="number">16</span>: 		<span class="keyword">try</span> {</div><div class="line"><span class="number">17</span>: 			</div><div class="line"><span class="number">18</span>: 			<span class="comment">// &#x4F7F;&#x7528;Druid&#x89E3;&#x6790;&#x5668;&#x5B9E;&#x73B0;sequence&#x5904;&#x7406;  @&#x5175;&#x4E34;&#x57CE;&#x4E0B;</span></div><div class="line"><span class="number">19</span>: 			DruidSequenceHandler sequenceHandler = <span class="keyword">new</span> DruidSequenceHandler(MycatServer</div><div class="line"><span class="number">20</span>: 					.getInstance().getConfig().getSystem().getSequnceHandlerType());</div><div class="line"><span class="number">21</span>: </div><div class="line"><span class="number">22</span>: 			<span class="comment">// &#x751F;&#x6210;&#x53EF;&#x6267;&#x884C; SQL &#xFF1A;&#x76EE;&#x524D;&#x4E3B;&#x8981;&#x662F;&#x751F;&#x6210; id</span></div><div class="line"><span class="number">23</span>: 			String charset = pair.session.getSource().getCharset();</div><div class="line"><span class="number">24</span>: 			String executeSql = sequenceHandler.getExecuteSql(pair.sql,charset == <span class="keyword">null</span> ? <span class="string">&quot;utf-8&quot;</span>:charset);</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>: 			<span class="comment">// &#x6267;&#x884C; SQL</span></div><div class="line"><span class="number">27</span>: 			pair.session.getSource().routeEndExecuteSQL(executeSql, pair.type,pair.schema);</div><div class="line"><span class="number">28</span>: 		} <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">29</span>: 			LOGGER.error(<span class="string">&quot;MyCATSequenceProcessor.executeSeq(SesionSQLPair)&quot;</span>,e);</div><div class="line"><span class="number">30</span>: 			pair.session.getSource().writeErrMessage(ErrorCode.ER_YES,<span class="string">&quot;mycat sequnce err.&quot;</span> + e);</div><div class="line"><span class="number">31</span>: 			<span class="keyword">return</span>;</div><div class="line"><span class="number">32</span>: 		}</div><div class="line"><span class="number">33</span>: 	}</div><div class="line"><span class="number">34</span>: 	</div><div class="line"><span class="number">35</span>: 	<span class="class"><span class="keyword">class</span> <span class="title">ExecuteThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>{</div><div class="line"><span class="number">36</span>: 		</div><div class="line"><span class="number">37</span>: 		<span class="function"><span class="keyword">public</span> <span class="title">ExecuteThread</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">38</span>: 			setDaemon(<span class="keyword">true</span>); <span class="comment">// &#x8BBE;&#x7F6E;&#x4E3A;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;,&#x9632;&#x6B62;throw RuntimeExecption&#x8FDB;&#x7A0B;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;</span></div><div class="line"><span class="number">39</span>: 		}</div><div class="line"><span class="number">40</span>: 		</div><div class="line"><span class="number">41</span>: 		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">42</span>: 			<span class="keyword">while</span> (running) {</div><div class="line"><span class="number">43</span>: 				<span class="keyword">try</span> {</div><div class="line"><span class="number">44</span>: 					SessionSQLPair pair=seqSQLQueue.poll(<span class="number">100</span>,TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">45</span>: 					<span class="keyword">if</span>(pair!=<span class="keyword">null</span>){</div><div class="line"><span class="number">46</span>:                         executeSeq(pair);</div><div class="line"><span class="number">47</span>: 					}</div><div class="line"><span class="number">48</span>: 				} <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">49</span>: 					LOGGER.warn(<span class="string">&quot;MyCATSequenceProcessor$ExecutorThread&quot;</span>,e);</div><div class="line"><span class="number">50</span>: 				}</div><div class="line"><span class="number">51</span>: 			}</div><div class="line"><span class="number">52</span>: 		}</div><div class="line"><span class="number">53</span>: 	}</div><div class="line"><span class="number">54</span>: }</div></pre></td></tr></table></figure>
<p>&#x2753;&#x6B64;&#x5904;&#x6709;&#x4E2A;&#x7591;&#x95EE;&#xFF1A;<code>MyCATSequnceProcessor</code> &#x662F;&#x5355;&#x7EBF;&#x7A0B;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x63D2;&#x5165;&#x6027;&#x80FD;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x5F71;&#x54CD;&#xFF1F;&#x540E;&#x7EED;&#x54B1;&#x505A;&#x4E0B;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x3002;</p>
<h1 id="4-&#x83B7;&#x5F97;-MySQL-&#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C;-SQL"><a href="#4-&#x83B7;&#x5F97;-MySQL-&#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C;-SQL" class="headerlink" title="4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL"></a>4. &#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#xFF0C;&#x6267;&#x884C; SQL</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/03.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/03.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#xFF08;03&#x6267;&#x884C; SQL&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-8-&#x3011;"><a href="#&#x3010;-1-8-&#x3011;" class="headerlink" title="&#x3010; 1 - 8 &#x3011;"></a>&#x3010; 1 - 8 &#x3011;</h2><p>&#x83B7;&#x5F97; MySQL &#x8FDE;&#x63A5;&#x3002;</p>
<ul class="ui list">
<li>PhysicalDBNode &#xFF1A;&#x7269;&#x7406;&#x6570;&#x636E;&#x5E93;&#x8282;&#x70B9;&#x3002;</li>
<li>PhysicalDatasource &#xFF1A;&#x7269;&#x7406;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x6E90;&#x3002;</li>
</ul>
<h2 id="&#x3010;-9-13-&#x3011;"><a href="#&#x3010;-9-13-&#x3011;" class="headerlink" title="&#x3010; 9 - 13 &#x3011;"></a>&#x3010; 9 - 13 &#x3011;</h2><p>&#x53D1;&#x9001; SQL &#x5230; MySQL Server&#xFF0C;&#x6267;&#x884C; SQL&#x3002;</p>
<h1 id="5-&#x54CD;&#x5E94;&#x6267;&#x884C;-SQL-&#x7ED3;&#x679C;"><a href="#5-&#x54CD;&#x5E94;&#x6267;&#x884C;-SQL-&#x7ED3;&#x679C;" class="headerlink" title="5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;"></a>5. &#x54CD;&#x5E94;&#x6267;&#x884C; SQL &#x7ED3;&#x679C;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_29/04.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_29/04.png" alt="&#x3010;&#x5355;&#x5E93;&#x5355;&#x8868;&#x3011;&#x63D2;&#x5165;&#xFF08;04&#x6267;&#x884C;&#x54CD;&#x5E94;&#xFF09;" class="ui centered image"></a></p>
<h2 id="&#x3010;-1-4-&#x3011;"><a href="#&#x3010;-1-4-&#x3011;" class="headerlink" title="&#x3010; 1 - 4 &#x3011;"></a>&#x3010; 1 - 4 &#x3011;</h2><p>&#x5904;&#x7406; MySQL Server &#x54CD;&#x5E94;&#x6570;&#x636E;&#x5305;&#x3002;</p>
<h2 id="&#x3010;-5-8-&#x3011;"><a href="#&#x3010;-5-8-&#x3011;" class="headerlink" title="&#x3010; 5 - 8 &#x3011;"></a>&#x3010; 5 - 8 &#x3011;</h2><p>&#x53D1;&#x9001;&#x63D2;&#x5165;&#x6210;&#x529F;&#x7ED3;&#x679C;&#x7ED9; MySQL Client&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>MyCAT 源码分析 —— 调试环境搭建</title>
    <link href="http://www.yunai.me/MyCAT/build-debugging-environment/"/>
    <id>http://www.yunai.me/MyCAT/build-debugging-environment/</id>
    <published>2017-05-22T16:00:00.000Z</published>
    <updated>2017-07-20T01:39:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x4F9D;&#x8D56;&#x5DE5;&#x5177;</a></li>
<li><a href="#">2. &#x6E90;&#x7801;&#x62C9;&#x53D6;</a></li>
<li><a href="#">3. &#x6570;&#x636E;&#x5E93;&#x914D;&#x7F6E;</a></li>
<li><a href="#">4. MyCat &#x914D;&#x7F6E;</a></li>
<li><a href="#">5. MyCAT &#x542F;&#x52A8;</a></li>
<li><a href="#">6. MyCAT &#x6D4B;&#x8BD5;</a></li>
<li><a href="#">7. &#x4EA4;&#x6D41;</a></li>
</ul>
<h1 id="1-&#x4F9D;&#x8D56;&#x5DE5;&#x5177;"><a href="#1-&#x4F9D;&#x8D56;&#x5DE5;&#x5177;" class="headerlink" title="1. &#x4F9D;&#x8D56;&#x5DE5;&#x5177;"></a>1. &#x4F9D;&#x8D56;&#x5DE5;&#x5177;</h1><ul class="ui list">
<li>Maven</li>
<li>Git</li>
<li>JDK</li>
<li>MySQL</li>
<li>IntelliJ IDEA</li>
</ul>
<h1 id="2-&#x6E90;&#x7801;&#x62C9;&#x53D6;"><a href="#2-&#x6E90;&#x7801;&#x62C9;&#x53D6;" class="headerlink" title="2. &#x6E90;&#x7801;&#x62C9;&#x53D6;"></a>2. &#x6E90;&#x7801;&#x62C9;&#x53D6;</h1><p>&#x4ECE;&#x5B98;&#x65B9;&#x4ED3;&#x5E93; <a href="https://github.com/MyCATApache/Mycat-Server" target="_blank" rel="external">https://github.com/MyCATApache/Mycat-Server</a> <code>Fork</code> &#x51FA;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;&#x4ED3;&#x5E93;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x8981; <code>Fork</code> &#xFF1F;&#x65E2;&#x7136;&#x5F00;&#x59CB;&#x9605;&#x8BFB;&#x3001;&#x8C03;&#x8BD5;&#x6E90;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4F1A;&#x5199;&#x4E00;&#x4E9B;&#x6CE8;&#x91CA;&#xFF0C;&#x6709;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x4ED3;&#x5E93;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x81EA;&#x7531;&#x7684;&#x63D0;&#x4EA4;&#x3002;&#x1F608;</p>
<p>&#x4F7F;&#x7528; <code>IntelliJ IDEA</code> &#x4ECE; <code>Fork</code> &#x51FA;&#x6765;&#x7684;&#x4ED3;&#x5E93;&#x62C9;&#x53D6;&#x4EE3;&#x7801;&#x3002;&#x62C9;&#x53D6;&#x5B8C;&#x6210;&#x540E;&#xFF0C;<code>Maven</code> &#x4F1A;&#x4E0B;&#x8F7D;&#x4F9D;&#x8D56;&#x5305;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x82B1;&#x8D39;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#xFF0C;&#x8010;&#x5FC3;&#x7B49;&#x5F85;&#x4E0B;&#x3002;</p>
<h1 id="3-&#x6570;&#x636E;&#x5E93;&#x914D;&#x7F6E;"><a href="#3-&#x6570;&#x636E;&#x5E93;&#x914D;&#x7F6E;" class="headerlink" title="3. &#x6570;&#x636E;&#x5E93;&#x914D;&#x7F6E;"></a>3. &#x6570;&#x636E;&#x5E93;&#x914D;&#x7F6E;</h1><p>&#x6211;&#x4EEC;&#x8981;&#x642D;&#x5EFA;&#x7684;&#x662F;<strong>&#x975E;&#x5206;&#x7247;&#x8868;</strong>&#x7684;&#x8C03;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x548C;&#x8868;&#xFF1A;</p>
<ol class="ui list">
<li>&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#xFF1A;<code>db01</code> &#x3002;</li>
<li>&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x8868;&#xFF1A;<code>travelrecord</code> &#x3002;</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`travelrecord`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> latin1 <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_bin</div></pre></td></tr></table></figure>
<h1 id="4-MyCAT-&#x914D;&#x7F6E;"><a href="#4-MyCAT-&#x914D;&#x7F6E;" class="headerlink" title="4. MyCAT &#x914D;&#x7F6E;"></a>4. MyCAT &#x914D;&#x7F6E;</h1><p>&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x5BF9;&#x5B9E;&#x73B0;&#x6E90;&#x7801;&#x4EA7;&#x751F;&#x5F71;&#x54CD;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x5BF9; <code>test</code> &#x76EE;&#x5F55;&#x505A;&#x53D8;&#x66F4;&#x3002;</p>
<p>1&#x3001;&#x5728; <code>resources</code> &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;&#x5939; <code>backups</code> &#xFF0C;&#x5C06;&#x539F; <code>resources</code> &#x4E0B;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x79FB;&#x5230; <code>backups</code> &#x4E0B;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x7684;&#x73AF;&#x5883;&#x5C31;&#x5E72;&#x5E72;&#x51C0;&#x4E86;&#x3002;<br>2&#x3001;&#x5728; <code>resources</code> &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA; <code>schema.xml</code> &#x6587;&#x4EF6;&#xFF0C;&#x914D;&#x7F6E; <code>MyCAT</code> &#x7684;&#x903B;&#x8F91;&#x5E93;&#x3001;&#x8868;&#x3001;&#x6570;&#x636E;&#x8282;&#x70B9;&#x3001;&#x6570;&#x636E;&#x6E90;&#x3002;</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mycat:schema SYSTEM &quot;schema.dtd&quot;&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">&quot;dbtest&quot;</span> <span class="attr">checkSQLschema</span>=<span class="string">&quot;true&quot;</span> <span class="attr">sqlMaxLimit</span>=<span class="string">&quot;100&quot;</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">&quot;travelrecord&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">autoIncrement</span>=<span class="string">&quot;true&quot;</span> <span class="attr">primaryKey</span>=<span class="string">&quot;id&quot;</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">schema</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;db1&quot;</span> /&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;localhost1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></div><div class="line">			  <span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span> <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;127.0.0.1:33061&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span> <span class="comment">&lt;!-- &#x203C;&#xFE0F;&#x203C;&#xFE0F;&#x203C;&#xFE0F; url&#x3001;user&#x3001;password &#x8BBE;&#x7F6E;&#x6210;&#x4F60;&#x7684;&#x6570;&#x636E;&#x5E93; --&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></div></pre></td></tr></table></figure>
<p>3&#x3001;&#x5728; <code>resources</code> &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA; <code>server.xml</code> &#x6587;&#x4EF6;&#xFF0C;&#x914D;&#x7F6E; <code>MyCAT</code> &#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x3002;</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mycat:server SYSTEM &quot;server.dtd&quot;&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mycat:server</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">system</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;nonePasswordLogin&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span> <span class="comment">&lt;!-- 0&#x4E3A;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x767B;&#x9646;&#x3001;1&#x4E3A;&#x4E0D;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x767B;&#x9646; ,&#x9ED8;&#x8BA4;&#x4E3A;0&#xFF0C;&#x8BBE;&#x7F6E;&#x4E3A;1&#x5219;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x9ED8;&#x8BA4;&#x8D26;&#x6237;--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useHandshakeV10&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useSqlStat&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!-- 1&#x4E3A;&#x5F00;&#x542F;&#x5B9E;&#x65F6;&#x7EDF;&#x8BA1;&#x3001;0&#x4E3A;&#x5173;&#x95ED; --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useGlobleTableCheck&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!-- 1&#x4E3A;&#x5F00;&#x542F;&#x5168;&#x52A0;&#x73ED;&#x4E00;&#x81F4;&#x6027;&#x68C0;&#x6D4B;&#x3001;0&#x4E3A;&#x5173;&#x95ED; --&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sequnceHandlerType&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;processorBufferPoolType&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;handleDistributedTransactions&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useOffHeapForMerge&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;memoryPageSize&quot;</span>&gt;</span>64k<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;spillsFileBufferSize&quot;</span>&gt;</span>1k<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useStreamOutput&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;systemReserveMemorySize&quot;</span>&gt;</span>384m<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;useZKSwitch&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">system</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;root&quot;</span> <span class="attr">defaultAccount</span>=<span class="string">&quot;true&quot;</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>dbtest<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">user</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">mycat:server</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="5-MyCAT-&#x542F;&#x52A8;"><a href="#5-MyCAT-&#x542F;&#x52A8;" class="headerlink" title="5. MyCAT &#x542F;&#x52A8;"></a>5. MyCAT &#x542F;&#x52A8;</h1><p>1&#x3001;&#x5728; <code>java</code> &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA; <code>debugger</code> &#x5305;&#xFF0C;&#x548C;&#x539F;&#x5148;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5305;&#x505A;&#x533A;&#x5206;&#x3002;<br>2&#x3001;&#x5728; <code>debbuger</code> &#x5305;&#x4E0B;&#x65B0;&#x5EFA; <code>MycatStartupTest.java</code> &#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">package</span> debugger;</div><div class="line"></div><div class="line"><span class="keyword">import</span> io.mycat.MycatStartup;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * {<span class="doctag">@link</span> io.mycat.MycatStartup}&#x6D4B;&#x8BD5;</div><div class="line"> *</div><div class="line"> * Created by yunai on 2017/5/22.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MycatStartupTest</span> </span>{</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</div><div class="line">        MycatStartup.main(args);</div><div class="line">    }</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>
<p>3&#x3001;&#x8FD0;&#x884C; <code>MycatStartupTest.java</code> &#xFF0C;&#x5F53;&#x770B;&#x5230;&#x8F93;&#x51FA;&#x65E5;&#x5FD7; <code>MyCAT Server startup successfully. see logs in logs/mycat.log</code> &#x5373;&#x4E3A;&#x542F;&#x52A8;&#x6210;&#x529F;&#x3002;</p>
<p>&#x622A;&#x6B62;&#x76EE;&#x524D;&#xFF0C;<code>test</code> &#x76EE;&#x5F55;&#x5982;&#x4E0B;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/MyCAT/2017_05_23/01.png"><img src="http://www.yunai.me/images/MyCAT/2017_05_23/01.png" alt="test&#x76EE;&#x5F55;.png" class="ui centered image"></a></p>
<h1 id="6-MyCAT-&#x6D4B;&#x8BD5;"><a href="#6-MyCAT-&#x6D4B;&#x8BD5;" class="headerlink" title="6. MyCAT &#x6D4B;&#x8BD5;"></a>6. MyCAT &#x6D4B;&#x8BD5;</h1><p>&#x8C03;&#x8BD5;&#x73AF;&#x5883;&#x5DF2;&#x7ECF;&#x642D;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;</p>
<p>&#x4F7F;&#x7528; <code>MySQL</code> &#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5; <code>MyCAT</code> &#xFF1A;</p>
<ul class="ui list">
<li>HOST &#xFF1A;127.0.0.1</li>
<li>PORT &#xFF1A;8066</li>
<li>USERNAME &#xFF1A;root</li>
<li>PASSWORD &#xFF1A;123456</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><div class="line">mysql&gt; insert into travelrecord(name) values (&apos;haha&apos;);</div><div class="line">Query OK, 1 rows affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from travelrecord;</div><div class="line">+--------------------+------+</div><div class="line">| id                 | name |</div><div class="line">+--------------------+------+</div><div class="line">| 866707181398003712 | haha |</div><div class="line">+--------------------+------+</div><div class="line">1 rows in set (0.05 sec)</div></pre></td></tr></table></figure>
<p>&#x6210;&#x529F;&#x3002;&#x1F608;&#x1F608;&#x1F608;</p>
<h1 id="7-&#x4EA4;&#x6D41;"><a href="#7-&#x4EA4;&#x6D41;" class="headerlink" title="7. &#x4EA4;&#x6D41;"></a>7. &#x4EA4;&#x6D41;</h1><p>&#x611F;&#x8C22;&#x9605;&#x8BFB;&#x3001;&#x6536;&#x85CF;&#x3001;&#x5173;&#x6CE8;&#x3002;<br><strong>&#x77E5;&#x5176;&#x7136;&#x77E5;&#x5176;&#x6240;&#x4EE5;&#x7136;&#x3002;&#x5B66;&#x4E60; MyCAT &#x4F1A;&#x662F;&#x4E00;&#x6BB5;&#x5F88;&#x6109;&#x5FEB;&#x7684;&#x65C5;&#x7A0B;&#x3002;&#x5982;&#x679C;&#x6709;&#x4F60;&#x7684;&#x4EA4;&#x6D41;&#xFF0C;&#x76F8;&#x4FE1;&#x4F1A;&#x66F4;&#x52A0;&#x6109;&#x5FEB;&#x3002;&#x6B22;&#x8FCE;&#x6DFB;&#x52A0;&#x5FAE;&#x4FE1;&#xFF1A;<code>wangwenbin-server</code> &#x8FDB;&#x884C;&#x63A2;&#x8BA8;&#x3002;</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么阅读 MyCAT 源码？</title>
    <link href="http://www.yunai.me/MyCAT/why-read-MyCAT-source-code/"/>
    <id>http://www.yunai.me/MyCAT/why-read-MyCAT-source-code/</id>
    <published>2017-05-21T16:00:00.000Z</published>
    <updated>2017-07-20T01:39:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB;-MyCAT-&#x6E90;&#x7801;&#xFF1F;"><a href="#&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB;-MyCAT-&#x6E90;&#x7801;&#xFF1F;" class="headerlink" title="&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB; MyCAT &#x6E90;&#x7801;&#xFF1F;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x9605;&#x8BFB; MyCAT &#x6E90;&#x7801;&#xFF1F;</h2><ul class="ui list">
<li>&#x6DF1;&#x5165;&#x4E86;&#x89E3;<strong>&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x95F4;&#x4EF6;</strong> &#xFF0C;&#x77E5;&#x5176;&#x7136;&#x77E5;&#x5176;&#x6240;&#x4EE5;&#x7136;&#x3002;</li>
<li>NIO &#x7684;&#x5B9E;&#x73B0; &#x4E0E; Netty &#x6709;&#x4EC0;&#x4E48;&#x7279;&#x6B8A;&#x7684;&#x5730;&#x65B9;&#xFF1F;</li>
<li>&#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#xFF1F;</li>
<li>&#x5185;&#x5B58;&#x7BA1;&#x7406;</li>
<li>SQL &#x89E3;&#x6790;</li>
<li>&#x7B49;&#x7B49;</li>
</ul>
<h2 id="&#x529F;&#x80FD;&#x70B9;"><a href="#&#x529F;&#x80FD;&#x70B9;" class="headerlink" title="&#x529F;&#x80FD;&#x70B9;"></a>&#x529F;&#x80FD;&#x70B9;</h2><ul class="ui list">
<li>[ ] NIO</li>
<li>[x] &#x5206;&#x5E03;&#x5F0F;&#x4E8B;&#x52A1;</li>
<li>[ ] MyCAT &#x4E3B;&#x4ECE;</li>
<li>[x] &#x652F;&#x6301;prepare&#x9884;&#x7F16;&#x8BD1;&#x6307;&#x4EE4;</li>
<li>[ ] &#x81EA;&#x589E;&#x5E8F;&#x5217; 30%</li>
<li>[ ] &#x5355;&#x5E93;&#x4EFB;&#x610F; Join Doing</li>
<li>[x] &#x8DE8;&#x5E93;2&#x8868; Join</li>
<li>[ ] &#x8DE8;&#x5E93;&#x591A;&#x8868; Join</li>
<li>[ ] SQL &#x89E3;&#x6790;</li>
<li>[ ] &#x8BFB;&#x5199;&#x5206;&#x79BB;</li>
<li>[ ] MySQL &#x4E3B;&#x4ECE;</li>
<li>[ ] &#x81EA;&#x52A8;&#x6545;&#x969C;&#x5207;&#x6362;</li>
<li>[ ] Galera Cluster &#x96C6;&#x7FA4;</li>
<li>[ ] MHA &#x96C6;&#x7FA4;</li>
<li>[ ] Percona &#x96C6;&#x7FA4;</li>
<li>[ ] &#x670D;&#x52A1;&#x964D;&#x7EA7;</li>
<li>[ ] &#x591A;&#x79DF;&#x6237;</li>
<li>[ ] &#x8DEF;&#x7531;</li>
<li>[ ] MyCAT &#x96C6;&#x7FA4;</li>
<li>[ ] &#x6CE8;&#x89E3;</li>
<li>[ ] &#x7F13;&#x5B58;</li>
<li>[ ] &#x76D1;&#x63A7;</li>
<li>[ ] Mongodb</li>
<li>[ ] &#x5185;&#x5B58;&#x7BA1;&#x7406; 20%</li>
<li>[ ] &#x6570;&#x636E;&#x805A;&#x5408; 30% </li>
<li>[ ] &#x6570;&#x636E;&#x6392;&#x5E8F; 25%</li>
<li>[ ] &#x5206;&#x8868;</li>
<li>[ ] &#x5206;&#x5E93; 50%</li>
<li>[ ] &#x5168;&#x5C40;&#x8868;</li>
<li>[ ] E/R&#x5173;&#x7CFB;</li>
<li>[ ] &#x670D;&#x52A1;&#x964D;&#x7EA7;</li>
<li>[ ] SQL &#x6CE8;&#x5165;&#x653B;&#x51FB;&#x62E6;&#x622A;</li>
<li>[ ] MySQL &#x534F;&#x8BAE;</li>
<li>[ ] PostgreSQL &#x534F;&#x8BAE;</li>
<li>[ ] &#x5B58;&#x50A8;&#x8FC7;&#x7A0B;</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="MyCAT" scheme="http://www.yunai.me/categories/MyCAT/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— 事务消息</title>
    <link href="http://www.yunai.me/RocketMQ/message-transaction/"/>
    <id>http://www.yunai.me/RocketMQ/message-transaction/</id>
    <published>2017-05-20T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x53D1;&#x9001;</a><ul>
<li><a href="#">2.1 Producer &#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;</a></li>
<li><a href="#">2.2 Broker &#x5904;&#x7406;&#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#x8BF7;&#x6C42;</a></li>
<li><a href="#">2.3 Broker &#x751F;&#x6210; ConsumeQueue</a></li>
</ul>
</li>
<li><a href="#">3. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;</a><ul>
<li><a href="#">3.1 Broker &#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;</a><ul>
<li><a href="#">3.1.1 &#x5B98;&#x65B9;V3.1.4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</a><ul>
<li><a href="#">3.1.1.1 &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5230; CommitLog</a></li>
<li><a href="#">3.1.1.2 &#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</a></li>
<li><a href="#">3.1.1.3 &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;</a></li>
<li><a href="#">3.1.1.4 &#x521D;&#x59CB;&#x5316;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</a></li>
<li><a href="#">3.1.1.5 &#x8865;&#x5145;</a></li>
</ul>
</li>
<li><a href="#">3.1.2 &#x5B98;&#x65B9;V4.0.0&#xFF1A;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;</a></li>
</ul>
</li>
<li><a href="#">3.2 Producer &#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;</a></li>
</ul>
</li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p><strong>&#x5FC5;&#x987B;&#x5FC5;&#x987B;&#x5FC5;&#x987B;</strong> &#x524D;&#x7F6E;&#x9605;&#x8BFB;&#x5185;&#x5BB9;&#xFF1A;</p>
<ul class="ui list">
<li><a href="https://help.aliyun.com/document_detail/43348.html?spm=5176.doc43490.6.566.Zd5Bl7" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#xFF08;&#x963F;&#x91CC;&#x4E91;&#xFF09;&#x300B;</a></li>
</ul>
<h1 id="2-&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x53D1;&#x9001;"><a href="#2-&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x53D1;&#x9001;" class="headerlink" title="2. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x53D1;&#x9001;"></a>2. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x53D1;&#x9001;</h1><h2 id="2-1-Producer-&#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;"><a href="#2-1-Producer-&#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;" class="headerlink" title="2.1 Producer &#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;"></a>2.1 Producer &#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x6D3B;&#x52A8;&#x56FE;&#x5982;&#x4E0B;&#xFF08;&#x7ED3;&#x5408; <code>&#x6838;&#x5FC3;&#x4EE3;&#x7801;</code> &#x7406;&#x89E3;&#xFF09;&#xFF1A;</li>
</ul>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_21/03.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_21/03.png" alt="Producer&#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;" class="ui centered image"></a></p>
<ul class="ui list">
<li>&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMQProducerImpl.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x53D1;&#x9001;&#x4E8B;&#x52A1;&#x6D88;&#x606F;</div><div class="line">  4:  *</div><div class="line">  5:  * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line">  6:  * <span class="doctag">@param</span> tranExecuter &#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x6267;&#x884C;&#x5668;</div><div class="line">  7:  * <span class="doctag">@param</span> arg &#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x6267;&#x884C;&#x5668;&#x53C2;&#x6570;</div><div class="line">  8:  * <span class="doctag">@return</span> &#x4E8B;&#x52A1;&#x53D1;&#x9001;&#x7ED3;&#x679C;</div><div class="line">  9:  * <span class="doctag">@throws</span> MQClientException &#x5F53; Client &#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line"> 10:  */</div><div class="line"> <span class="number">11</span>: <span class="function"><span class="keyword">public</span> TransactionSendResult <span class="title">sendMessageInTransaction</span><span class="params">(<span class="keyword">final</span> Message msg, <span class="keyword">final</span> LocalTransactionExecuter tranExecuter, <span class="keyword">final</span> Object arg)</span></span></div><div class="line"> 12:     <span class="keyword">throws</span> MQClientException {</div><div class="line"> <span class="number">13</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == tranExecuter) {</div><div class="line"> <span class="number">14</span>:         <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;tranExecutor is null&quot;</span>, <span class="keyword">null</span>);</div><div class="line"> <span class="number">15</span>:     }</div><div class="line"> <span class="number">16</span>:     Validators.checkMessage(msg, <span class="keyword">this</span>.defaultMQProducer);</div><div class="line"> <span class="number">17</span>: </div><div class="line"> <span class="number">18</span>:     <span class="comment">// &#x53D1;&#x9001;&#x3010;Half&#x6D88;&#x606F;&#x3011;</span></div><div class="line"> <span class="number">19</span>:     SendResult sendResult;</div><div class="line"> <span class="number">20</span>:     MessageAccessor.putProperty(msg, MessageConst.PROPERTY_TRANSACTION_PREPARED, <span class="string">&quot;true&quot;</span>);</div><div class="line"> <span class="number">21</span>:     MessageAccessor.putProperty(msg, MessageConst.PROPERTY_PRODUCER_GROUP, <span class="keyword">this</span>.defaultMQProducer.getProducerGroup());</div><div class="line"> <span class="number">22</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">23</span>:         sendResult = <span class="keyword">this</span>.send(msg);</div><div class="line"> <span class="number">24</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">25</span>:         <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;send message Exception&quot;</span>, e);</div><div class="line"> <span class="number">26</span>:     }</div><div class="line"> <span class="number">27</span>: </div><div class="line"> <span class="number">28</span>:     <span class="comment">// &#x5904;&#x7406;&#x53D1;&#x9001;&#x3010;Half&#x6D88;&#x606F;&#x3011;&#x7ED3;&#x679C;</span></div><div class="line"> <span class="number">29</span>:     LocalTransactionState localTransactionState = LocalTransactionState.UNKNOW;</div><div class="line"> <span class="number">30</span>:     Throwable localException = <span class="keyword">null</span>;</div><div class="line"> <span class="number">31</span>:     <span class="keyword">switch</span> (sendResult.getSendStatus()) {</div><div class="line"> <span class="number">32</span>:         <span class="comment">// &#x53D1;&#x9001;&#x3010;Half&#x6D88;&#x606F;&#x3011;&#x6210;&#x529F;&#xFF0C;&#x6267;&#x884C;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x903B;&#x8F91;</span></div><div class="line"> <span class="number">33</span>:         <span class="keyword">case</span> SEND_OK: {</div><div class="line"> <span class="number">34</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">35</span>:                 <span class="keyword">if</span> (sendResult.getTransactionId() != <span class="keyword">null</span>) { <span class="comment">// &#x4E8B;&#x52A1;&#x7F16;&#x53F7;&#x3002;&#x76EE;&#x524D;&#x5F00;&#x6E90;&#x7248;&#x672C;&#x6682;&#x65F6;&#x6CA1;&#x7528;&#x5230;&#xFF0C;&#x731C;&#x60F3;ONS&#x5728;&#x4F7F;&#x7528;&#x3002;</span></div><div class="line"> <span class="number">36</span>:                     msg.putUserProperty(<span class="string">&quot;__transactionId__&quot;</span>, sendResult.getTransactionId());</div><div class="line"> <span class="number">37</span>:                 }</div><div class="line"> <span class="number">38</span>: </div><div class="line"> <span class="number">39</span>:                 <span class="comment">// &#x6267;&#x884C;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x903B;&#x8F91;</span></div><div class="line"> <span class="number">40</span>:                 localTransactionState = tranExecuter.executeLocalTransactionBranch(msg, arg);</div><div class="line"> <span class="number">41</span>:                 <span class="keyword">if</span> (<span class="keyword">null</span> == localTransactionState) {</div><div class="line"> <span class="number">42</span>:                     localTransactionState = LocalTransactionState.UNKNOW;</div><div class="line"> <span class="number">43</span>:                 }</div><div class="line"> <span class="number">44</span>: </div><div class="line"> <span class="number">45</span>:                 <span class="keyword">if</span> (localTransactionState != LocalTransactionState.COMMIT_MESSAGE) {</div><div class="line"> <span class="number">46</span>:                     log.info(<span class="string">&quot;executeLocalTransactionBranch return {}&quot;</span>, localTransactionState);</div><div class="line"> <span class="number">47</span>:                     log.info(msg.toString());</div><div class="line"> <span class="number">48</span>:                 }</div><div class="line"> <span class="number">49</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">50</span>:                 log.info(<span class="string">&quot;executeLocalTransactionBranch exception&quot;</span>, e);</div><div class="line"> <span class="number">51</span>:                 log.info(msg.toString());</div><div class="line"> <span class="number">52</span>:                 localException = e;</div><div class="line"> <span class="number">53</span>:             }</div><div class="line"> <span class="number">54</span>:         }</div><div class="line"> <span class="number">55</span>:         <span class="keyword">break</span>;</div><div class="line"> <span class="number">56</span>:         <span class="comment">// &#x53D1;&#x9001;&#x3010;Half&#x6D88;&#x606F;&#x3011;&#x5931;&#x8D25;&#xFF0C;&#x6807;&#x8BB0;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x72B6;&#x6001;&#x4E3A;&#x56DE;&#x6EDA;</span></div><div class="line"> <span class="number">57</span>:         <span class="keyword">case</span> FLUSH_DISK_TIMEOUT:</div><div class="line"> <span class="number">58</span>:         <span class="keyword">case</span> FLUSH_SLAVE_TIMEOUT:</div><div class="line"> <span class="number">59</span>:         <span class="keyword">case</span> SLAVE_NOT_AVAILABLE:</div><div class="line"> <span class="number">60</span>:             localTransactionState = LocalTransactionState.ROLLBACK_MESSAGE;</div><div class="line"> <span class="number">61</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">62</span>:         <span class="keyword">default</span>:</div><div class="line"> <span class="number">63</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">64</span>:     }</div><div class="line"> <span class="number">65</span>: </div><div class="line"> <span class="number">66</span>:     <span class="comment">// &#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#xFF1A;&#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK</span></div><div class="line"> <span class="number">67</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">68</span>:         <span class="keyword">this</span>.endTransaction(sendResult, localTransactionState, localException);</div><div class="line"> <span class="number">69</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">70</span>:         log.warn(<span class="string">&quot;local transaction execute &quot;</span> + localTransactionState + <span class="string">&quot;, but end broker transaction failed&quot;</span>, e);</div><div class="line"> <span class="number">71</span>:     }</div><div class="line"> <span class="number">72</span>: </div><div class="line"> <span class="number">73</span>:     <span class="comment">// &#x8FD4;&#x56DE;&#x3010;&#x4E8B;&#x52A1;&#x53D1;&#x9001;&#x7ED3;&#x679C;&#x3011;</span></div><div class="line"> <span class="number">74</span>:     TransactionSendResult transactionSendResult = <span class="keyword">new</span> TransactionSendResult();</div><div class="line"> <span class="number">75</span>:     transactionSendResult.setSendStatus(sendResult.getSendStatus());</div><div class="line"> <span class="number">76</span>:     transactionSendResult.setMessageQueue(sendResult.getMessageQueue());</div><div class="line"> <span class="number">77</span>:     transactionSendResult.setMsgId(sendResult.getMsgId());</div><div class="line"> <span class="number">78</span>:     transactionSendResult.setQueueOffset(sendResult.getQueueOffset());</div><div class="line"> <span class="number">79</span>:     transactionSendResult.setTransactionId(sendResult.getTransactionId());</div><div class="line"> <span class="number">80</span>:     transactionSendResult.setLocalTransactionState(localTransactionState);</div><div class="line"> <span class="number">81</span>:     <span class="keyword">return</span> transactionSendResult;</div><div class="line"> <span class="number">82</span>: }</div><div class="line"> <span class="number">83</span>: </div><div class="line"> <span class="number">84</span>: <span class="comment">/**</span></div><div class="line"> 85:  * &#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#xFF1A;&#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK</div><div class="line"> 86:  *</div><div class="line"> 87:  * <span class="doctag">@param</span> sendResult &#x53D1;&#x9001;&#x3010;Half&#x6D88;&#x606F;&#x3011;&#x7ED3;&#x679C;</div><div class="line"> 88:  * <span class="doctag">@param</span> localTransactionState &#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x72B6;&#x6001;</div><div class="line"> 89:  * <span class="doctag">@param</span> localException &#x6267;&#x884C;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x903B;&#x8F91;&#x4EA7;&#x751F;&#x7684;&#x5F02;&#x5E38;</div><div class="line"> 90:  * <span class="doctag">@throws</span> RemotingException &#x5F53;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line"> 91:  * <span class="doctag">@throws</span> MQBrokerException &#x5F53; Broker &#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line"> 92:  * <span class="doctag">@throws</span> InterruptedException &#x5F53;&#x7EBF;&#x7A0B;&#x4E2D;&#x65AD;&#x65F6;</div><div class="line"> 93:  * <span class="doctag">@throws</span> UnknownHostException &#x5F53;&#x89E3;&#x7801;&#x6D88;&#x606F;&#x7F16;&#x53F7;&#x5931;&#x8D25;&#x662F;</div><div class="line"> 94:  */</div><div class="line"> <span class="number">95</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endTransaction</span><span class="params">(//</span></span></div><div class="line"> <span class="number">96</span>:     <span class="keyword">final</span> SendResult sendResult, //</div><div class="line"> <span class="number">97</span>:     <span class="keyword">final</span> LocalTransactionState localTransactionState, //</div><div class="line"> <span class="number">98</span>:     <span class="keyword">final</span> Throwable localException) <span class="keyword">throws</span> RemotingException, MQBrokerException, InterruptedException, UnknownHostException {</div><div class="line"> <span class="number">99</span>:     <span class="comment">// &#x89E3;&#x7801;&#x6D88;&#x606F;&#x7F16;&#x53F7;</span></div><div class="line"><span class="number">100</span>:     <span class="keyword">final</span> MessageId id;</div><div class="line"><span class="number">101</span>:     <span class="keyword">if</span> (sendResult.getOffsetMsgId() != <span class="keyword">null</span>) {</div><div class="line"><span class="number">102</span>:         id = MessageDecoder.decodeMessageId(sendResult.getOffsetMsgId());</div><div class="line"><span class="number">103</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">104</span>:         id = MessageDecoder.decodeMessageId(sendResult.getMsgId());</div><div class="line"><span class="number">105</span>:     }</div><div class="line"><span class="number">106</span>: </div><div class="line"><span class="number">107</span>:     <span class="comment">// &#x521B;&#x5EFA;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">108</span>:     String transactionId = sendResult.getTransactionId();</div><div class="line"><span class="number">109</span>:     <span class="keyword">final</span> String brokerAddr = <span class="keyword">this</span>.mQClientFactory.findBrokerAddressInPublish(sendResult.getMessageQueue().getBrokerName());</div><div class="line"><span class="number">110</span>:     EndTransactionRequestHeader requestHeader = <span class="keyword">new</span> EndTransactionRequestHeader();</div><div class="line"><span class="number">111</span>:     requestHeader.setTransactionId(transactionId);</div><div class="line"><span class="number">112</span>:     requestHeader.setCommitLogOffset(id.getOffset());</div><div class="line"><span class="number">113</span>:     <span class="keyword">switch</span> (localTransactionState) {</div><div class="line"><span class="number">114</span>:         <span class="keyword">case</span> COMMIT_MESSAGE:</div><div class="line"><span class="number">115</span>:             requestHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_COMMIT_TYPE);</div><div class="line"><span class="number">116</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">117</span>:         <span class="keyword">case</span> ROLLBACK_MESSAGE:</div><div class="line"><span class="number">118</span>:             requestHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_ROLLBACK_TYPE);</div><div class="line"><span class="number">119</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">120</span>:         <span class="keyword">case</span> UNKNOW:</div><div class="line"><span class="number">121</span>:             requestHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_NOT_TYPE);</div><div class="line"><span class="number">122</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">123</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">124</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">125</span>:     }</div><div class="line"><span class="number">126</span>:     requestHeader.setProducerGroup(<span class="keyword">this</span>.defaultMQProducer.getProducerGroup());</div><div class="line"><span class="number">127</span>:     requestHeader.setTranStateTableOffset(sendResult.getQueueOffset());</div><div class="line"><span class="number">128</span>:     requestHeader.setMsgId(sendResult.getMsgId());</div><div class="line"><span class="number">129</span>:     String remark = localException != <span class="keyword">null</span> ? (<span class="string">&quot;executeLocalTransactionBranch exception: &quot;</span> + localException.toString()) : <span class="keyword">null</span>;</div><div class="line"><span class="number">130</span>: </div><div class="line"><span class="number">131</span>:     <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK&#x3002;&#xFF01;&#xFF01;&#xFF01;&#x901A;&#x4FE1;&#x65B9;&#x5F0F;&#x4E3A;&#xFF1A;Oneway&#xFF01;&#xFF01;&#xFF01;</span></div><div class="line"><span class="number">132</span>:     <span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().endTransactionOneway(brokerAddr, requestHeader, remark, <span class="keyword">this</span>.defaultMQProducer.getSendMsgTimeout());</div><div class="line"><span class="number">133</span>: }</div></pre></td></tr></table></figure>
<h2 id="2-2-Broker-&#x5904;&#x7406;&#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#x8BF7;&#x6C42;"><a href="#2-2-Broker-&#x5904;&#x7406;&#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#x8BF7;&#x6C42;" class="headerlink" title="2.2 Broker &#x5904;&#x7406;&#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#x8BF7;&#x6C42;"></a>2.2 Broker &#x5904;&#x7406;&#x7ED3;&#x675F;&#x4E8B;&#x52A1;&#x8BF7;&#x6C42;</h2><ul class="ui list">
<li>&#x1F985; &#x67E5;&#x8BE2;&#x8BF7;&#x6C42;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x8FDB;&#x884C;<strong>&#x63D0;&#x4EA4; / &#x56DE;&#x6EDA;</strong>&#x3002;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;EndTransactionProcessor.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> RemotingCommand <span class="title">processRequest</span><span class="params">(ChannelHandlerContext ctx, RemotingCommand request)</span> <span class="keyword">throws</span> RemotingCommandException </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">final</span> RemotingCommand response = RemotingCommand.createResponseCommand(<span class="keyword">null</span>);</div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> EndTransactionRequestHeader requestHeader = (EndTransactionRequestHeader) request.decodeCommandCustomHeader(EndTransactionRequestHeader.class);</div><div class="line"> <span class="number">5</span>: </div><div class="line"> <span class="number">6</span>:     <span class="comment">// &#x7701;&#x7565;&#x4EE3;&#x7801; =&#x300B;&#x6253;&#x5370;&#x65E5;&#x5FD7;&#xFF08;&#x53EA;&#x5904;&#x7406; COMMIT / ROLLBACK&#xFF09;</span></div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:     <span class="comment">// &#x67E5;&#x8BE2;&#x63D0;&#x4EA4;&#x7684;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">9</span>:     <span class="keyword">final</span> MessageExt msgExt = <span class="keyword">this</span>.brokerController.getMessageStore().lookMessageByOffset(requestHeader.getCommitLogOffset());</div><div class="line"><span class="number">10</span>:     <span class="keyword">if</span> (msgExt != <span class="keyword">null</span>) {</div><div class="line"><span class="number">11</span>:         <span class="comment">// &#x7701;&#x7565;&#x4EE3;&#x7801; =&#x300B;&#x6821;&#x9A8C;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:         <span class="comment">// &#x751F;&#x6210;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">14</span>:         MessageExtBrokerInner msgInner = <span class="keyword">this</span>.endMessageTransaction(msgExt);</div><div class="line"><span class="number">15</span>:         msgInner.setSysFlag(MessageSysFlag.resetTransactionValue(msgInner.getSysFlag(), requestHeader.getCommitOrRollback()));</div><div class="line"><span class="number">16</span>:         msgInner.setQueueOffset(requestHeader.getTranStateTableOffset());</div><div class="line"><span class="number">17</span>:         msgInner.setPreparedTransactionOffset(requestHeader.getCommitLogOffset());</div><div class="line"><span class="number">18</span>:         msgInner.setStoreTimestamp(msgExt.getStoreTimestamp());</div><div class="line"><span class="number">19</span>:         <span class="keyword">if</span> (MessageSysFlag.TRANSACTION_ROLLBACK_TYPE == requestHeader.getCommitOrRollback()) {</div><div class="line"><span class="number">20</span>:             msgInner.setBody(<span class="keyword">null</span>);</div><div class="line"><span class="number">21</span>:         }</div><div class="line"><span class="number">22</span>: </div><div class="line"><span class="number">23</span>:         <span class="comment">// &#x5B58;&#x50A8;&#x751F;&#x6210;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">24</span>:         <span class="keyword">final</span> MessageStore messageStore = <span class="keyword">this</span>.brokerController.getMessageStore();</div><div class="line"><span class="number">25</span>:         <span class="keyword">final</span> PutMessageResult putMessageResult = messageStore.putMessage(msgInner);</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>:         <span class="comment">// &#x5904;&#x7406;&#x5B58;&#x50A8;&#x7ED3;&#x679C;</span></div><div class="line"><span class="number">28</span>:         <span class="keyword">if</span> (putMessageResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">29</span>:             <span class="keyword">switch</span> (putMessageResult.getPutMessageStatus()) {</div><div class="line"><span class="number">30</span>:                 <span class="comment">// Success</span></div><div class="line"><span class="number">31</span>:                 <span class="keyword">case</span> PUT_OK:</div><div class="line"><span class="number">32</span>:                 <span class="keyword">case</span> FLUSH_DISK_TIMEOUT:</div><div class="line"><span class="number">33</span>:                 <span class="keyword">case</span> FLUSH_SLAVE_TIMEOUT:</div><div class="line"><span class="number">34</span>:                 <span class="keyword">case</span> SLAVE_NOT_AVAILABLE:</div><div class="line"><span class="number">35</span>:                     response.setCode(ResponseCode.SUCCESS);</div><div class="line"><span class="number">36</span>:                     response.setRemark(<span class="keyword">null</span>);</div><div class="line"><span class="number">37</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">38</span>:                 <span class="comment">// Failed</span></div><div class="line"><span class="number">39</span>:                 <span class="keyword">case</span> CREATE_MAPEDFILE_FAILED:</div><div class="line"><span class="number">40</span>:                     response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">41</span>:                     response.setRemark(<span class="string">&quot;create maped file failed.&quot;</span>);</div><div class="line"><span class="number">42</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">43</span>:                 <span class="keyword">case</span> MESSAGE_ILLEGAL:</div><div class="line"><span class="number">44</span>:                 <span class="keyword">case</span> PROPERTIES_SIZE_EXCEEDED:</div><div class="line"><span class="number">45</span>:                     response.setCode(ResponseCode.MESSAGE_ILLEGAL);</div><div class="line"><span class="number">46</span>:                     response.setRemark(<span class="string">&quot;the message is illegal, maybe msg body or properties length not matched. msg body length limit 128k, msg properties length limit 32k.&quot;</span>);</div><div class="line"><span class="number">47</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">48</span>:                 <span class="keyword">case</span> SERVICE_NOT_AVAILABLE:</div><div class="line"><span class="number">49</span>:                     response.setCode(ResponseCode.SERVICE_NOT_AVAILABLE);</div><div class="line"><span class="number">50</span>:                     response.setRemark(<span class="string">&quot;service not available now.&quot;</span>);</div><div class="line"><span class="number">51</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">52</span>:                 <span class="keyword">case</span> OS_PAGECACHE_BUSY:</div><div class="line"><span class="number">53</span>:                     response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">54</span>:                     response.setRemark(<span class="string">&quot;OS page cache busy, please try another machine&quot;</span>);</div><div class="line"><span class="number">55</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">56</span>:                 <span class="keyword">case</span> UNKNOWN_ERROR:</div><div class="line"><span class="number">57</span>:                     response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">58</span>:                     response.setRemark(<span class="string">&quot;UNKNOWN_ERROR&quot;</span>);</div><div class="line"><span class="number">59</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">60</span>:                 <span class="keyword">default</span>:</div><div class="line"><span class="number">61</span>:                     response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">62</span>:                     response.setRemark(<span class="string">&quot;UNKNOWN_ERROR DEFAULT&quot;</span>);</div><div class="line"><span class="number">63</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">64</span>:             }</div><div class="line"><span class="number">65</span>: </div><div class="line"><span class="number">66</span>:             <span class="keyword">return</span> response;</div><div class="line"><span class="number">67</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">68</span>:             response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">69</span>:             response.setRemark(<span class="string">&quot;store putMessage return null&quot;</span>);</div><div class="line"><span class="number">70</span>:         }</div><div class="line"><span class="number">71</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">72</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">73</span>:         response.setRemark(<span class="string">&quot;find prepared transaction message failed&quot;</span>);</div><div class="line"><span class="number">74</span>:         <span class="keyword">return</span> response;</div><div class="line"><span class="number">75</span>:     }</div><div class="line"><span class="number">76</span>: </div><div class="line"><span class="number">77</span>:     <span class="keyword">return</span> response;</div><div class="line"><span class="number">78</span>: }</div></pre></td></tr></table></figure>
<h2 id="2-3-Broker-&#x751F;&#x6210;-ConsumeQueue"><a href="#2-3-Broker-&#x751F;&#x6210;-ConsumeQueue" class="headerlink" title="2.3 Broker &#x751F;&#x6210; ConsumeQueue"></a>2.3 Broker &#x751F;&#x6210; ConsumeQueue</h2><ul class="ui list">
<li>&#x1F985; &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#xFF0C;&#x63D0;&#x4EA4;&#xFF08;<code>COMMIT</code>&#xFF09;&#x540E;&#x624D;&#x751F;&#x6210; <code>ConsumeQueue</code>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMessageStore.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doDispatch</span><span class="params">(DispatchRequest req)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="comment">// &#x975E;&#x4E8B;&#x52A1;&#x6D88;&#x606F; &#x6216; &#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x6D88;&#x606F; &#x5EFA;&#x7ACB; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F; &#x5230; ConsumeQueue</span></div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(req.getSysFlag());</div><div class="line"> <span class="number">5</span>:     <span class="keyword">switch</span> (tranType) {</div><div class="line"> <span class="number">6</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_NOT_TYPE: <span class="comment">// &#x975E;&#x4E8B;&#x52A1;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">7</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_COMMIT_TYPE: <span class="comment">// &#x4E8B;&#x52A1;&#x6D88;&#x606F;COMMIT</span></div><div class="line"> <span class="number">8</span>:             DefaultMessageStore.<span class="keyword">this</span>.putMessagePositionInfo(req.getTopic(), req.getQueueId(), req.getCommitLogOffset(), req.getMsgSize(),</div><div class="line"> <span class="number">9</span>:                 req.getTagsCode(), req.getStoreTimestamp(), req.getConsumeQueueOffset());</div><div class="line"><span class="number">10</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">11</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_PREPARED_TYPE: <span class="comment">// &#x4E8B;&#x52A1;&#x6D88;&#x606F;PREPARED</span></div><div class="line"><span class="number">12</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_ROLLBACK_TYPE: <span class="comment">// &#x4E8B;&#x52A1;&#x6D88;&#x606F;ROLLBACK</span></div><div class="line"><span class="number">13</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">14</span>:     }</div><div class="line"><span class="number">15</span>:     <span class="comment">// &#x7701;&#x7565;&#x4EE3;&#x7801; =&#x300B; &#x5EFA;&#x7ACB; &#x7D22;&#x5F15;&#x4FE1;&#x606F; &#x5230; IndexFile</span></div><div class="line"><span class="number">16</span>: }</div></pre></td></tr></table></figure>
<h1 id="3-&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;"><a href="#3-&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;" class="headerlink" title="3. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;"></a>3. &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;</h1><ul class="ui list">
<li>&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;&#x529F;&#x80FD;&#x66FE;&#x7ECF;&#x5F00;&#x6E90;&#x8FC7;&#xFF0C;&#x76EE;&#x524D;&#xFF08;V4.0.0&#xFF09;&#x6682;&#x672A;&#x5F00;&#x6E90;&#x3002;&#x5982;&#x4E0B;&#x662F;&#x8BE5;&#x529F;&#x80FD;&#x7684;&#x5F00;&#x6E90;&#x60C5;&#x51B5;&#xFF1A;</li>
</ul>
<table>
<thead>
<tr>
<th>&#x7248;&#x672C;</th>
<th>&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x5B98;&#x65B9;V3.0.4 ~ V3.1.4</td>
<td>&#x57FA;&#x4E8E; &#x6587;&#x4EF6;&#x7CFB;&#x7EDF; &#x5B9E;&#x73B0;</td>
<td>&#x5DF2;&#x5F00;&#x6E90;</td>
</tr>
<tr>
<td>&#x5B98;&#x65B9;V3.1.5 ~ V4.0.0</td>
<td>&#x57FA;&#x4E8E; &#x6570;&#x636E;&#x5E93; &#x5B9E;&#x73B0;</td>
<td>&#x672A;&#x5B8C;&#x5168;&#x5F00;&#x6E90;</td>
</tr>
</tbody>
</table>
<p>&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x3002;</p>
<h2 id="3-1-Broker-&#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;"><a href="#3-1-Broker-&#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;" class="headerlink" title="3.1 Broker &#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;"></a>3.1 Broker &#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;</h2><h3 id="3-1-1-&#x5B98;&#x65B9;V3-1-4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;"><a href="#3-1-1-&#x5B98;&#x65B9;V3-1-4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;" class="headerlink" title="3.1.1 &#x5B98;&#x65B9;V3.1.4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;"></a>3.1.1 &#x5B98;&#x65B9;V3.1.4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</h3><blockquote>
<p>&#x4ED3;&#x5E93;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/YunaiV/rocketmq-3.1.9/tree/release_3.1.4" target="_blank" rel="external">https://github.com/YunaiV/rocketmq-3.1.9/tree/release_3.1.4</a></p>
</blockquote>
<p>&#x76F8;&#x8F83;&#x4E8E;&#x666E;&#x901A;&#x6D88;&#x606F;&#xFF0C;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x591A;&#x4F9D;&#x8D56;&#x5982;&#x4E0B;&#x4E09;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF1A;</p>
<ul class="ui list">
<li><strong>TransactionStateService</strong> &#xFF1A;&#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x670D;&#x52A1;&#xFF0C;&#x8D1F;&#x8D23;&#x5BF9;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#xFF0C;&#x5305;&#x62EC;&#x5B58;&#x50A8;&#x4E0E;&#x66F4;&#x65B0;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x72B6;&#x6001;&#x3001;&#x56DE;&#x67E5;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x72B6;&#x6001;&#x7B49;&#x7B49;&#x3002;</li>
<li><strong>TranStateTable</strong> &#xFF1A;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#x3002;&#x57FA;&#x4E8E; <code>MappedFileQueue</code> &#x5B9E;&#x73B0;&#xFF0C;&#x9ED8;&#x8BA4;&#x5B58;&#x50A8;&#x8DEF;&#x5F84;&#x4E3A; <code>~/store/transaction/statetable</code>&#xFF0C;&#x6BCF;&#x6761;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">offset</td>
<td style="text-align:left">CommitLog &#x7269;&#x7406;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">size</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x957F;&#x5EA6;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">timestamp</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x65F6;&#x95F4;&#xFF0C;&#x5355;&#x4F4D;&#xFF1A;&#x79D2;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">producerGroupHash</td>
<td style="text-align:left">producerGroup &#x6C42; HashCode</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">state</td>
<td style="text-align:left">&#x4E8B;&#x52A1;&#x72B6;&#x6001;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
</tbody>
</table>
<ul class="ui list">
<li><strong>TranRedoLog</strong> &#xFF1A;<code>TranStateTable</code> &#x91CD;&#x653E;&#x65E5;&#x5FD7;&#xFF0C;&#x6BCF;&#x6B21;<strong>&#x5199;&#x64CD;&#x4F5C;</strong> <code>TranStateTable</code> &#x8BB0;&#x5F55;&#x91CD;&#x653E;&#x65E5;&#x5FD7;&#x3002;&#x5F53; <code>Broker</code> &#x5F02;&#x5E38;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; <code>TranRedoLog</code> &#x6062;&#x590D; <code>TranStateTable</code>&#x3002;&#x57FA;&#x4E8E; <code>ConsumeQueue</code> &#x5B9E;&#x73B0;&#xFF0C;<code>Topic</code> &#x4E3A; <code>TRANSACTION_REDOLOG_TOPIC_XXXX</code>&#xFF0C;&#x9ED8;&#x8BA4;&#x5B58;&#x50A8;&#x8DEF;&#x5F84;&#x4E3A; <code>~/store/transaction/redolog</code>&#x3002;</li>
</ul>
<hr>
<p>&#x7B80;&#x5355;&#x624B;&#x7ED8;&#x903B;&#x8F91;&#x56FE;&#x5982;&#x4E0B;&#x1F608;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_21/01.jpeg"><img src="http://www.yunai.me/images/RocketMQ/2017_05_21/01.jpeg" alt="Broker_V3.1.4_&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;" class="ui centered image"></a></p>
<h4 id="3-1-1-1-&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5230;-CommitLog"><a href="#3-1-1-1-&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5230;-CommitLog" class="headerlink" title="3.1.1.1 &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5230; CommitLog"></a>3.1.1.1 &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5230; CommitLog</h4><ul class="ui list">
<li>&#x1F985;&#x5B58;&#x50A8;&#x3010;half&#x6D88;&#x606F;&#x3011;&#x5230; <code>CommitLog</code> &#x65F6;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF08;<code>queueOffset</code>&#xFF09;&#x4F7F;&#x7528; <code>TranStateTable</code> &#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x53EF;&#x5199;&#x5165;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF09;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x6D88;&#x606F;&#x53EF;&#x4EE5;&#x7D22;&#x5F15;&#x5230;&#x81EA;&#x5DF1;&#x5BF9;&#x5E94;&#x7684; <code>TranStateTable</code> &#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x8BB0;&#x5F55;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultAppendMessageCallback.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="class"><span class="keyword">class</span> <span class="title">DefaultAppendMessageCallback</span> <span class="keyword">implements</span> <span class="title">AppendMessageCallback</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="function"><span class="keyword">public</span> AppendMessageResult <span class="title">doAppend</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> fileFromOffset, <span class="keyword">final</span> ByteBuffer byteBuffer,  <span class="keyword">final</span> <span class="keyword">int</span> maxBlank, <span class="keyword">final</span> Object msg)</span> </span>{</div><div class="line"> <span class="number">4</span>:         <span class="comment">// ...&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">5</span>: </div><div class="line"> <span class="number">6</span>:         <span class="comment">// &#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406; </span></div><div class="line"> <span class="number">7</span>:         <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(msgInner.getSysFlag());</div><div class="line"> <span class="number">8</span>:         <span class="keyword">switch</span> (tranType) {</div><div class="line"> <span class="number">9</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionPreparedType: <span class="comment">// &#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF08;queueOffset&#xFF09;&#x4F7F;&#x7528; TranStateTable &#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x53EF;&#x5199;&#x5165;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF09; </span></div><div class="line"><span class="number">10</span>:             queueOffset = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getTransactionStateService().getTranStateTableOffset().get();</div><div class="line"><span class="number">11</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">12</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionRollbackType:</div><div class="line"><span class="number">13</span>:             queueOffset = msgInner.getQueueOffset();</div><div class="line"><span class="number">14</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">15</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionNotType:</div><div class="line"><span class="number">16</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionCommitType:</div><div class="line"><span class="number">17</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">18</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">19</span>:         }</div><div class="line"><span class="number">20</span>: </div><div class="line"><span class="number">21</span>:         <span class="comment">// ...&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"><span class="number">22</span>: </div><div class="line"><span class="number">23</span>:         <span class="keyword">switch</span> (tranType) {</div><div class="line"><span class="number">24</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionPreparedType:</div><div class="line"><span class="number">25</span>:             <span class="comment">// &#x66F4;&#x65B0; TranStateTable &#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x53EF;&#x5199;&#x5165;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF09; </span></div><div class="line"><span class="number">26</span>:             CommitLog.<span class="keyword">this</span>.defaultMessageStore.getTransactionStateService().getTranStateTableOffset().incrementAndGet();</div><div class="line"><span class="number">27</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">28</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionRollbackType:</div><div class="line"><span class="number">29</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">30</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionNotType:</div><div class="line"><span class="number">31</span>:         <span class="keyword">case</span> MessageSysFlag.TransactionCommitType:</div><div class="line"><span class="number">32</span>:             <span class="comment">// &#x66F4;&#x65B0;&#x4E0B;&#x4E00;&#x6B21;&#x7684;ConsumeQueue&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">33</span>:             CommitLog.<span class="keyword">this</span>.topicQueueTable.put(key, ++queueOffset);</div><div class="line"><span class="number">34</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">35</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">36</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">37</span>:         }</div><div class="line"><span class="number">38</span>: </div><div class="line"><span class="number">39</span>:         <span class="comment">// &#x8FD4;&#x56DE;&#x7ED3;&#x679C;</span></div><div class="line"><span class="number">40</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">41</span>:     }</div><div class="line"><span class="number">42</span>: }</div></pre></td></tr></table></figure>
<h4 id="3-1-1-2-&#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;"><a href="#3-1-1-2-&#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;" class="headerlink" title="3.1.1.2 &#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;"></a>3.1.1.2 &#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</h4><ul class="ui list">
<li>&#x1F985;&#x5904;&#x7406;&#x3010;Half&#x6D88;&#x606F;&#x3011;&#x65F6;&#xFF0C;&#x65B0;&#x589E;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;<code>TranStateTable</code>&#xFF09;&#x3002;</li>
<li>&#x1F985;&#x5904;&#x7406;&#x3010;Commit / Rollback&#x6D88;&#x606F;&#x3011;&#x65F6;&#xFF0C;&#x66F4;&#x65B0; &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;<code>TranStateTable</code>&#xFF09; COMMIT / ROLLBACK&#x3002;</li>
<li>&#x1F985;&#x6BCF;&#x6B21;<strong>&#x5199;&#x64CD;&#x4F5C;&#x3010;</strong>&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;<code>TranStateTable</code>&#xFF09;&#xFF0C;&#x8BB0;&#x5F55;&#x91CD;&#x653E;&#x65E5;&#x5FD7;&#xFF08;<code>TranRedoLog</code>&#xFF09;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DispatchMessageService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doDispatch</span><span class="params">()</span> </span>{</div><div class="line">  <span class="number">3</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.requestsRead.isEmpty()) {</div><div class="line">  <span class="number">4</span>:         <span class="keyword">for</span> (DispatchRequest req : <span class="keyword">this</span>.requestsRead) {</div><div class="line">  <span class="number">5</span>: </div><div class="line">  <span class="number">6</span>:             <span class="comment">// ...&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line">  <span class="number">7</span>: </div><div class="line">  <span class="number">8</span>:             <span class="comment">// 2&#x3001;&#x5199;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</span></div><div class="line">  <span class="number">9</span>:             <span class="keyword">if</span> (req.getProducerGroup() != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">10</span>:                 <span class="keyword">switch</span> (tranType) {</div><div class="line"> <span class="number">11</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionNotType:</div><div class="line"> <span class="number">12</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">13</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionPreparedType:</div><div class="line"> <span class="number">14</span>:                     <span class="comment">// &#x65B0;&#x589E; &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</span></div><div class="line"> <span class="number">15</span>:                     DefaultMessageStore.<span class="keyword">this</span>.getTransactionStateService().appendPreparedTransaction(</div><div class="line"> <span class="number">16</span>:                         req.getCommitLogOffset(), req.getMsgSize(), (<span class="keyword">int</span>) (req.getStoreTimestamp() / <span class="number">1000</span>), req.getProducerGroup().hashCode());</div><div class="line"> <span class="number">17</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">18</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionCommitType:</div><div class="line"> <span class="number">19</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionRollbackType:</div><div class="line"> <span class="number">20</span>:                     <span class="comment">// &#x66F4;&#x65B0; &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09; COMMIT / ROLLBACK</span></div><div class="line"> <span class="number">21</span>:                     DefaultMessageStore.<span class="keyword">this</span>.getTransactionStateService().updateTransactionState(</div><div class="line"> <span class="number">22</span>:                         req.getTranStateTableOffset(), req.getPreparedTransactionOffset(), req.getProducerGroup().hashCode(), tranType);</div><div class="line"> <span class="number">23</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">24</span>:                 }</div><div class="line"> <span class="number">25</span>:             }</div><div class="line"> <span class="number">26</span>:             <span class="comment">// 3&#x3001;&#x8BB0;&#x5F55; TranRedoLog</span></div><div class="line"> <span class="number">27</span>:             <span class="keyword">switch</span> (tranType) {</div><div class="line"> <span class="number">28</span>:             <span class="keyword">case</span> MessageSysFlag.TransactionNotType:</div><div class="line"> <span class="number">29</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">30</span>:             <span class="keyword">case</span> MessageSysFlag.TransactionPreparedType:</div><div class="line"> <span class="number">31</span>:                 <span class="comment">// &#x8BB0;&#x5F55; TranRedoLog</span></div><div class="line"> <span class="number">32</span>:                 DefaultMessageStore.<span class="keyword">this</span>.getTransactionStateService().getTranRedoLog().putMessagePostionInfoWrapper(</div><div class="line"> <span class="number">33</span>:                         req.getCommitLogOffset(), req.getMsgSize(), TransactionStateService.PreparedMessageTagsCode,</div><div class="line"> <span class="number">34</span>:                         req.getStoreTimestamp(), <span class="number">0L</span>);</div><div class="line"> <span class="number">35</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">36</span>:             <span class="keyword">case</span> MessageSysFlag.TransactionCommitType:</div><div class="line"> <span class="number">37</span>:             <span class="keyword">case</span> MessageSysFlag.TransactionRollbackType:</div><div class="line"> <span class="number">38</span>:                 <span class="comment">// &#x8BB0;&#x5F55; TranRedoLog</span></div><div class="line"> <span class="number">39</span>:                 DefaultMessageStore.<span class="keyword">this</span>.getTransactionStateService().getTranRedoLog().putMessagePostionInfoWrapper(</div><div class="line"> <span class="number">40</span>:                         req.getCommitLogOffset(), req.getMsgSize(), req.getPreparedTransactionOffset(),</div><div class="line"> <span class="number">41</span>:                         req.getStoreTimestamp(), <span class="number">0L</span>);</div><div class="line"> <span class="number">42</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">43</span>:             }</div><div class="line"> <span class="number">44</span>:         }</div><div class="line"> <span class="number">45</span>: </div><div class="line"> <span class="number">46</span>:         <span class="comment">// ...&#x7701;&#x7565;&#x4EE3;&#x7801;</span></div><div class="line"> <span class="number">47</span>:     }</div><div class="line"> <span class="number">48</span>: }</div><div class="line"> <span class="number">49</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;TransactionStateService.java&#x3011;</span></div><div class="line"> <span class="number">50</span>: <span class="comment">/**</span></div><div class="line"> 51:  * &#x65B0;&#x589E;&#x4E8B;&#x52A1;&#x72B6;&#x6001;</div><div class="line"> 52:  *</div><div class="line"> 53:  * <span class="doctag">@param</span> clOffset commitLog &#x7269;&#x7406;&#x4F4D;&#x7F6E;</div><div class="line"> 54:  * <span class="doctag">@param</span> size &#x6D88;&#x606F;&#x957F;&#x5EA6;</div><div class="line"> 55:  * <span class="doctag">@param</span> timestamp &#x6D88;&#x606F;&#x5B58;&#x50A8;&#x65F6;&#x95F4;</div><div class="line"> 56:  * <span class="doctag">@param</span> groupHashCode groupHashCode</div><div class="line"> 57:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line"> 58:  */</div><div class="line"> <span class="number">59</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">appendPreparedTransaction</span><span class="params">(//</span></span></div><div class="line"> <span class="number">60</span>:         <span class="keyword">final</span> <span class="keyword">long</span> clOffset,//</div><div class="line"> <span class="number">61</span>:         <span class="keyword">final</span> <span class="keyword">int</span> size,//</div><div class="line"> <span class="number">62</span>:         <span class="keyword">final</span> <span class="keyword">int</span> timestamp,//</div><div class="line"> <span class="number">63</span>:         <span class="keyword">final</span> <span class="keyword">int</span> groupHashCode//</div><div class="line"> <span class="number">64</span>: ) {</div><div class="line"> <span class="number">65</span>:     MapedFile mapedFile = <span class="keyword">this</span>.tranStateTable.getLastMapedFile();</div><div class="line"> <span class="number">66</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == mapedFile) {</div><div class="line"> <span class="number">67</span>:         log.error(<span class="string">&quot;appendPreparedTransaction: create mapedfile error.&quot;</span>);</div><div class="line"> <span class="number">68</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"> <span class="number">69</span>:     }</div><div class="line"> <span class="number">70</span>: </div><div class="line"> <span class="number">71</span>:     <span class="comment">// &#x9996;&#x6B21;&#x521B;&#x5EFA;&#xFF0C;&#x52A0;&#x5165;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x4E2D;</span></div><div class="line"> <span class="number">72</span>:     <span class="keyword">if</span> (<span class="number">0</span> == mapedFile.getWrotePostion()) {</div><div class="line"> <span class="number">73</span>:         <span class="keyword">this</span>.addTimerTask(mapedFile);</div><div class="line"> <span class="number">74</span>:     }</div><div class="line"> <span class="number">75</span>: </div><div class="line"> <span class="number">76</span>:     <span class="keyword">this</span>.byteBufferAppend.position(<span class="number">0</span>);</div><div class="line"> <span class="number">77</span>:     <span class="keyword">this</span>.byteBufferAppend.limit(TSStoreUnitSize);</div><div class="line"> <span class="number">78</span>: </div><div class="line"> <span class="number">79</span>:     <span class="comment">// Commit Log Offset</span></div><div class="line"> <span class="number">80</span>:     <span class="keyword">this</span>.byteBufferAppend.putLong(clOffset);</div><div class="line"> <span class="number">81</span>:     <span class="comment">// Message Size</span></div><div class="line"> <span class="number">82</span>:     <span class="keyword">this</span>.byteBufferAppend.putInt(size);</div><div class="line"> <span class="number">83</span>:     <span class="comment">// Timestamp</span></div><div class="line"> <span class="number">84</span>:     <span class="keyword">this</span>.byteBufferAppend.putInt(timestamp);</div><div class="line"> <span class="number">85</span>:     <span class="comment">// Producer Group Hashcode</span></div><div class="line"> <span class="number">86</span>:     <span class="keyword">this</span>.byteBufferAppend.putInt(groupHashCode);</div><div class="line"> <span class="number">87</span>:     <span class="comment">// Transaction State</span></div><div class="line"> <span class="number">88</span>:     <span class="keyword">this</span>.byteBufferAppend.putInt(MessageSysFlag.TransactionPreparedType);</div><div class="line"> <span class="number">89</span>: </div><div class="line"> <span class="number">90</span>:     <span class="keyword">return</span> mapedFile.appendMessage(<span class="keyword">this</span>.byteBufferAppend.array());</div><div class="line"> <span class="number">91</span>: }</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>: <span class="comment">/**</span></div><div class="line"> 94:  * &#x66F4;&#x65B0;&#x4E8B;&#x52A1;&#x72B6;&#x6001;</div><div class="line"> 95:  *</div><div class="line"> 96:  * <span class="doctag">@param</span> tsOffset tranStateTable &#x7269;&#x7406;&#x4F4D;&#x7F6E;</div><div class="line"> 97:  * <span class="doctag">@param</span> clOffset commitLog &#x7269;&#x7406;&#x4F4D;&#x7F6E;</div><div class="line"> 98:  * <span class="doctag">@param</span> groupHashCode groupHashCode</div><div class="line"> 99:  * <span class="doctag">@param</span> state &#x4E8B;&#x52A1;&#x72B6;&#x6001;</div><div class="line">100:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line">101:  */</div><div class="line"><span class="number">102</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateTransactionState</span><span class="params">(</span></span></div><div class="line"><span class="number">103</span>:         <span class="keyword">final</span> <span class="keyword">long</span> tsOffset,</div><div class="line"><span class="number">104</span>:         <span class="keyword">final</span> <span class="keyword">long</span> clOffset,</div><div class="line"><span class="number">105</span>:         <span class="keyword">final</span> <span class="keyword">int</span> groupHashCode,</div><div class="line"><span class="number">106</span>:         <span class="keyword">final</span> <span class="keyword">int</span> state) {</div><div class="line"><span class="number">107</span>:     SelectMapedBufferResult selectMapedBufferResult = <span class="keyword">this</span>.findTransactionBuffer(tsOffset);</div><div class="line"><span class="number">108</span>:     <span class="keyword">if</span> (selectMapedBufferResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">109</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">110</span>: </div><div class="line"><span class="number">111</span>:             <span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;&#xFF1A;&#x6821;&#x9A8C;&#x662F;&#x5426;&#x80FD;&#x591F;&#x66F4;&#x65B0;</span></div><div class="line"><span class="number">112</span>: </div><div class="line"><span class="number">113</span>:             <span class="comment">// &#x66F4;&#x65B0;&#x4E8B;&#x52A1;&#x72B6;&#x6001;</span></div><div class="line"><span class="number">114</span>:             selectMapedBufferResult.getByteBuffer().putInt(TS_STATE_POS, state);</div><div class="line"><span class="number">115</span>:         }</div><div class="line"><span class="number">116</span>:         <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">117</span>:             log.error(<span class="string">&quot;updateTransactionState exception&quot;</span>, e);</div><div class="line"><span class="number">118</span>:         }</div><div class="line"><span class="number">119</span>:         <span class="keyword">finally</span> {</div><div class="line"><span class="number">120</span>:             selectMapedBufferResult.release();</div><div class="line"><span class="number">121</span>:         }</div><div class="line"><span class="number">122</span>:     }</div><div class="line"><span class="number">123</span>: </div><div class="line"><span class="number">124</span>:     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">125</span>: }</div></pre></td></tr></table></figure>
<h4 id="3-1-1-3-&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;"><a href="#3-1-1-3-&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;" class="headerlink" title="3.1.1.3 &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;"></a>3.1.1.3 &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;</h4><ul class="ui list">
<li>&#x1F985;<code>TranStateTable</code> &#x6BCF;&#x4E2A; <code>MappedFile</code> &#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A; <code>Timer</code>&#x3002;<code>Timer</code> &#x56FA;&#x5B9A;&#x5468;&#x671F;&#xFF08;&#x9ED8;&#x8BA4;&#xFF1A;60s&#xFF09;&#x904D;&#x5386; <code>MappedFile</code>&#xFF0C;&#x67E5;&#x627E;&#x3010;half&#x6D88;&#x606F;&#x3011;&#xFF0C;&#x5411; <code>Producer</code> &#x53D1;&#x8D77;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;&#x8BF7;&#x6C42;&#x3002;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;&#x7ED3;&#x679C;&#x7684;&#x903B;&#x8F91;&#x4E0D;&#x5728;&#x6B64;&#x5904;&#x8FDB;&#x884C;&#xFF0C;&#x5728; <a href="#3112-&#x5199;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x72B6;&#x6001;&#x5B58;&#x50A8;transtatetable">CommitLog dispatch</a>&#x65F6;&#x6267;&#x884C;&#x3002;</li>
</ul>
<p>&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;TransactionStateService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x521D;&#x59CB;&#x5316;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;</div><div class="line">  4:  */</div><div class="line">  <span class="number">5</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initTimerTask</span><span class="params">()</span> </span>{</div><div class="line">  <span class="number">6</span>:     <span class="comment">//</span></div><div class="line">  <span class="number">7</span>:     <span class="keyword">final</span> List&lt;MapedFile&gt; mapedFiles = <span class="keyword">this</span>.tranStateTable.getMapedFiles();</div><div class="line">  <span class="number">8</span>:     <span class="keyword">for</span> (MapedFile mf : mapedFiles) {</div><div class="line">  <span class="number">9</span>:         <span class="keyword">this</span>.addTimerTask(mf);</div><div class="line"> <span class="number">10</span>:     }</div><div class="line"> <span class="number">11</span>: }</div><div class="line"> <span class="number">12</span>: </div><div class="line"> <span class="number">13</span>: <span class="comment">/**</span></div><div class="line"> 14:  * &#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x521D;&#x59CB;&#x5316;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;</div><div class="line"> 15:  * <span class="doctag">@param</span> mf &#x6587;&#x4EF6;</div><div class="line"> 16:  */</div><div class="line"> <span class="number">17</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addTimerTask</span><span class="params">(<span class="keyword">final</span> MapedFile mf)</span> </span>{</div><div class="line"> <span class="number">18</span>:     <span class="keyword">this</span>.timer.scheduleAtFixedRate(<span class="keyword">new</span> TimerTask() {</div><div class="line"> <span class="number">19</span>:         <span class="keyword">private</span> <span class="keyword">final</span> MapedFile mapedFile = mf;</div><div class="line"> <span class="number">20</span>:         <span class="keyword">private</span> <span class="keyword">final</span> TransactionCheckExecuter transactionCheckExecuter = TransactionStateService.<span class="keyword">this</span>.defaultMessageStore.getTransactionCheckExecuter();</div><div class="line"> <span class="number">21</span>:         <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> checkTransactionMessageAtleastInterval = TransactionStateService.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig()</div><div class="line"> <span class="number">22</span>:                     .getCheckTransactionMessageAtleastInterval();</div><div class="line"> <span class="number">23</span>:         <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> slave = TransactionStateService.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getBrokerRole() == BrokerRole.SLAVE;</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">26</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">27</span>:             <span class="comment">// Slave&#x4E0D;&#x9700;&#x8981;&#x56DE;&#x67E5;&#x4E8B;&#x52A1;&#x72B6;&#x6001;</span></div><div class="line"> <span class="number">28</span>:             <span class="keyword">if</span> (slave) {</div><div class="line"> <span class="number">29</span>:                 <span class="keyword">return</span>;</div><div class="line"> <span class="number">30</span>:             }</div><div class="line"> <span class="number">31</span>:             <span class="comment">// Check&#x529F;&#x80FD;&#x662F;&#x5426;&#x5F00;&#x542F;</span></div><div class="line"> <span class="number">32</span>:             <span class="keyword">if</span> (!TransactionStateService.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig()</div><div class="line"> <span class="number">33</span>:                 .isCheckTransactionMessageEnable()) {</div><div class="line"> <span class="number">34</span>:                 <span class="keyword">return</span>;</div><div class="line"> <span class="number">35</span>:             }</div><div class="line"> <span class="number">36</span>: </div><div class="line"> <span class="number">37</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">38</span>:                 SelectMapedBufferResult selectMapedBufferResult = mapedFile.selectMapedBuffer(<span class="number">0</span>);</div><div class="line"> <span class="number">39</span>:                 <span class="keyword">if</span> (selectMapedBufferResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">40</span>:                     <span class="keyword">long</span> preparedMessageCountInThisMapedFile = <span class="number">0</span>; <span class="comment">// &#x56DE;&#x67E5;&#x7684;&#x3010;half&#x6D88;&#x606F;&#x3011;&#x6570;&#x91CF;</span></div><div class="line"> <span class="number">41</span>:                     <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line"> <span class="number">42</span>:                     <span class="keyword">try</span> {</div><div class="line"> <span class="number">43</span>:                         <span class="comment">// &#x5FAA;&#x73AF;&#x6BCF;&#x6761;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#xFF0C;&#x5BF9;&#x3010;half&#x6D88;&#x606F;&#x3011;&#x8FDB;&#x884C;&#x56DE;&#x67E5;</span></div><div class="line"> <span class="number">44</span>:                         <span class="keyword">for</span> (; i &lt; selectMapedBufferResult.getSize(); i += TSStoreUnitSize) {</div><div class="line"> <span class="number">45</span>:                             selectMapedBufferResult.getByteBuffer().position(i);</div><div class="line"> <span class="number">46</span>: </div><div class="line"> <span class="number">47</span>:                             <span class="comment">// Commit Log Offset</span></div><div class="line"> <span class="number">48</span>:                             <span class="keyword">long</span> clOffset = selectMapedBufferResult.getByteBuffer().getLong();</div><div class="line"> <span class="number">49</span>:                             <span class="comment">// Message Size</span></div><div class="line"> <span class="number">50</span>:                             <span class="keyword">int</span> msgSize = selectMapedBufferResult.getByteBuffer().getInt();</div><div class="line"> <span class="number">51</span>:                             <span class="comment">// Timestamp</span></div><div class="line"> <span class="number">52</span>:                             <span class="keyword">int</span> timestamp = selectMapedBufferResult.getByteBuffer().getInt();</div><div class="line"> <span class="number">53</span>:                             <span class="comment">// Producer Group Hashcode</span></div><div class="line"> <span class="number">54</span>:                             <span class="keyword">int</span> groupHashCode = selectMapedBufferResult.getByteBuffer().getInt();</div><div class="line"> <span class="number">55</span>:                             <span class="comment">// Transaction State</span></div><div class="line"> <span class="number">56</span>:                             <span class="keyword">int</span> tranType = selectMapedBufferResult.getByteBuffer().getInt();</div><div class="line"> <span class="number">57</span>: </div><div class="line"> <span class="number">58</span>:                             <span class="comment">// &#x5DF2;&#x7ECF;&#x63D0;&#x4EA4;&#x6216;&#x8005;&#x56DE;&#x6EDA;&#x7684;&#x6D88;&#x606F;&#x8DF3;&#x8FC7;</span></div><div class="line"> <span class="number">59</span>:                             <span class="keyword">if</span> (tranType != MessageSysFlag.TransactionPreparedType) {</div><div class="line"> <span class="number">60</span>:                                 <span class="keyword">continue</span>;</div><div class="line"> <span class="number">61</span>:                             }</div><div class="line"> <span class="number">62</span>: </div><div class="line"> <span class="number">63</span>:                             <span class="comment">// &#x9047;&#x5230;&#x65F6;&#x95F4;&#x4E0D;&#x7B26;&#x5408;&#x6700;&#x5C0F;&#x8F6E;&#x8BE2;&#x95F4;&#x9694;&#xFF0C;&#x7EC8;&#x6B62;</span></div><div class="line"> <span class="number">64</span>:                             <span class="keyword">long</span> timestampLong = timestamp * <span class="number">1000</span>;</div><div class="line"> <span class="number">65</span>:                             <span class="keyword">long</span> diff = System.currentTimeMillis() - timestampLong;</div><div class="line"> <span class="number">66</span>:                             <span class="keyword">if</span> (diff &lt; checkTransactionMessageAtleastInterval) {</div><div class="line"> <span class="number">67</span>:                                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">68</span>:                             }</div><div class="line"> <span class="number">69</span>: </div><div class="line"> <span class="number">70</span>:                             preparedMessageCountInThisMapedFile++;</div><div class="line"> <span class="number">71</span>: </div><div class="line"> <span class="number">72</span>:                             <span class="comment">// &#x56DE;&#x67E5;Producer</span></div><div class="line"> <span class="number">73</span>:                             <span class="keyword">try</span> {</div><div class="line"> <span class="number">74</span>:                                 <span class="keyword">this</span>.transactionCheckExecuter.gotoCheck(groupHashCode, getTranStateOffset(i), clOffset, msgSize);</div><div class="line"> <span class="number">75</span>:                             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">76</span>:                                 tranlog.warn(<span class="string">&quot;gotoCheck Exception&quot;</span>, e);</div><div class="line"> <span class="number">77</span>:                             }</div><div class="line"> <span class="number">78</span>:                         }</div><div class="line"> <span class="number">79</span>: </div><div class="line"> <span class="number">80</span>:                         <span class="comment">// &#x65E0;&#x56DE;&#x67E5;&#x7684;&#x3010;half&#x6D88;&#x606F;&#x3011;&#x6570;&#x91CF;&#xFF0C;&#x4E14;&#x904D;&#x5386;&#x5B8C;&#xFF0C;&#x5219;&#x7EC8;&#x6B62;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;</span></div><div class="line"> <span class="number">81</span>:                         <span class="keyword">if</span> (<span class="number">0</span> == preparedMessageCountInThisMapedFile <span class="comment">//</span></div><div class="line"> <span class="number">82</span>:                                 &amp;&amp; i == mapedFile.getFileSize()) {</div><div class="line"> <span class="number">83</span>:                             tranlog.info(<span class="string">&quot;remove the transaction timer task, because no prepared message in this mapedfile[{}]&quot;</span>, mapedFile.getFileName());</div><div class="line"> <span class="number">84</span>:                             <span class="keyword">this</span>.cancel();</div><div class="line"> <span class="number">85</span>:                         }</div><div class="line"> <span class="number">86</span>:                     } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">87</span>:                         selectMapedBufferResult.release();</div><div class="line"> <span class="number">88</span>:                     }</div><div class="line"> <span class="number">89</span>: </div><div class="line"> <span class="number">90</span>:                     tranlog.info(<span class="string">&quot;the transaction timer task execute over in this period, {} Prepared Message: {} Check Progress: {}/{}&quot;</span>, mapedFile.getFileName(),<span class="comment">//</span></div><div class="line"> <span class="number">91</span>:                             preparedMessageCountInThisMapedFile, i / TSStoreUnitSize, mapedFile.getFileSize() / TSStoreUnitSize);</div><div class="line"> <span class="number">92</span>:                 } <span class="keyword">else</span> <span class="keyword">if</span> (mapedFile.isFull()) {</div><div class="line"> <span class="number">93</span>:                     tranlog.info(<span class="string">&quot;the mapedfile[{}] maybe deleted, cancel check transaction timer task&quot;</span>, mapedFile.getFileName());</div><div class="line"> <span class="number">94</span>:                     <span class="keyword">this</span>.cancel();</div><div class="line"> <span class="number">95</span>:                     <span class="keyword">return</span>;</div><div class="line"> <span class="number">96</span>:                 }</div><div class="line"> <span class="number">97</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">98</span>:                 log.error(<span class="string">&quot;check transaction timer task Exception&quot;</span>, e);</div><div class="line"> <span class="number">99</span>:             }</div><div class="line"><span class="number">100</span>:         }</div><div class="line"><span class="number">101</span>: </div><div class="line"><span class="number">102</span>: </div><div class="line"><span class="number">103</span>:         <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">getTranStateOffset</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> currentIndex)</span> </span>{</div><div class="line"><span class="number">104</span>:             <span class="keyword">long</span> offset = (<span class="keyword">this</span>.mapedFile.getFileFromOffset() + currentIndex) / TransactionStateService.TSStoreUnitSize;</div><div class="line"><span class="number">105</span>:             <span class="keyword">return</span> offset;</div><div class="line"><span class="number">106</span>:         }</div><div class="line"><span class="number">107</span>:     }, <span class="number">1000</span> * <span class="number">60</span>, <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getCheckTransactionMessageTimerInterval());</div><div class="line"><span class="number">108</span>: }</div><div class="line"><span class="number">109</span>: </div><div class="line"><span class="number">110</span>: <span class="comment">// &#x3010;DefaultTransactionCheckExecuter.java&#x3011;</span></div><div class="line"><span class="number">111</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">112</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gotoCheck</span><span class="params">(<span class="keyword">int</span> producerGroupHashCode, <span class="keyword">long</span> tranStateTableOffset, <span class="keyword">long</span> commitLogOffset,</span></span></div><div class="line"><span class="number">113</span>:         <span class="keyword">int</span> msgSize) {</div><div class="line"><span class="number">114</span>:     <span class="comment">// &#x7B2C;&#x4E00;&#x6B65;&#x3001;&#x67E5;&#x8BE2;Producer</span></div><div class="line"><span class="number">115</span>:     <span class="keyword">final</span> ClientChannelInfo clientChannelInfo = <span class="keyword">this</span>.brokerController.getProducerManager().pickProducerChannelRandomly(producerGroupHashCode);</div><div class="line"><span class="number">116</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == clientChannelInfo) {</div><div class="line"><span class="number">117</span>:         log.warn(<span class="string">&quot;check a producer transaction state, but not find any channel of this group[{}]&quot;</span>, producerGroupHashCode);</div><div class="line"><span class="number">118</span>:         <span class="keyword">return</span>;</div><div class="line"><span class="number">119</span>:     }</div><div class="line"><span class="number">120</span>: </div><div class="line"><span class="number">121</span>:     <span class="comment">// &#x7B2C;&#x4E8C;&#x6B65;&#x3001;&#x67E5;&#x8BE2;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">122</span>:     SelectMapedBufferResult selectMapedBufferResult = <span class="keyword">this</span>.brokerController.getMessageStore().selectOneMessageByOffset(commitLogOffset, msgSize);</div><div class="line"><span class="number">123</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == selectMapedBufferResult) {</div><div class="line"><span class="number">124</span>:         log.warn(<span class="string">&quot;check a producer transaction state, but not find message by commitLogOffset: {}, msgSize: &quot;</span>, commitLogOffset, msgSize);</div><div class="line"><span class="number">125</span>:         <span class="keyword">return</span>;</div><div class="line"><span class="number">126</span>:     }</div><div class="line"><span class="number">127</span>: </div><div class="line"><span class="number">128</span>:     <span class="comment">// &#x7B2C;&#x4E09;&#x6B65;&#x3001;&#x5411;Producer&#x53D1;&#x8D77;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">129</span>:     <span class="keyword">final</span> CheckTransactionStateRequestHeader requestHeader = <span class="keyword">new</span> CheckTransactionStateRequestHeader();</div><div class="line"><span class="number">130</span>:     requestHeader.setCommitLogOffset(commitLogOffset);</div><div class="line"><span class="number">131</span>:     requestHeader.setTranStateTableOffset(tranStateTableOffset);</div><div class="line"><span class="number">132</span>:     <span class="keyword">this</span>.brokerController.getBroker2Client().checkProducerTransactionState(clientChannelInfo.getChannel(), requestHeader, selectMapedBufferResult);</div><div class="line"><span class="number">133</span>: }</div></pre></td></tr></table></figure>
<h4 id="3-1-1-4-&#x521D;&#x59CB;&#x5316;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;"><a href="#3-1-1-4-&#x521D;&#x59CB;&#x5316;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;" class="headerlink" title="3.1.1.4 &#x521D;&#x59CB;&#x5316;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;"></a>3.1.1.4 &#x521D;&#x59CB;&#x5316;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF08;TranStateTable&#xFF09;</h4><ul class="ui list">
<li>&#x1F985;&#x6839;&#x636E;&#x6700;&#x540E; Broker &#x5173;&#x95ED;&#x662F;&#x5426;&#x6B63;&#x5E38;&#xFF0C;&#x4F1A;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x5F0F;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;TransactionStateService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x521D;&#x59CB;&#x5316; TranRedoLog</div><div class="line">  4:  * <span class="doctag">@param</span> lastExitOK &#x662F;&#x5426;&#x6B63;&#x5E38;&#x9000;&#x51FA;</div><div class="line">  5:  */</div><div class="line">  <span class="number">6</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recoverStateTable</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> lastExitOK)</span> </span>{</div><div class="line">  <span class="number">7</span>:     <span class="keyword">if</span> (lastExitOK) {</div><div class="line">  <span class="number">8</span>:         <span class="keyword">this</span>.recoverStateTableNormal();</div><div class="line">  <span class="number">9</span>:     } <span class="keyword">else</span> {</div><div class="line"> <span class="number">10</span>:         <span class="comment">// &#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x5220;&#x9664;State Table</span></div><div class="line"> <span class="number">11</span>:         <span class="keyword">this</span>.tranStateTable.destroy();</div><div class="line"> <span class="number">12</span>:         <span class="comment">// &#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x901A;&#x8FC7;RedoLog&#x5168;&#x91CF;&#x6062;&#x590D;StateTable</span></div><div class="line"> <span class="number">13</span>:         <span class="keyword">this</span>.recreateStateTable();</div><div class="line"> <span class="number">14</span>:     }</div><div class="line"> <span class="number">15</span>: }</div><div class="line"> <span class="number">16</span>: </div><div class="line"> <span class="number">17</span>: <span class="comment">/**</span></div><div class="line"> 18:  * &#x626B;&#x63CF; TranRedoLog &#x91CD;&#x5EFA; StateTable</div><div class="line"> 19:  */</div><div class="line"> <span class="number">20</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recreateStateTable</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">21</span>:     <span class="keyword">this</span>.tranStateTable = <span class="keyword">new</span> MapedFileQueue(StorePathConfigHelper.getTranStateTableStorePath(defaultMessageStore</div><div class="line"> <span class="number">22</span>:                 .getMessageStoreConfig().getStorePathRootDir()), defaultMessageStore</div><div class="line"> <span class="number">23</span>:                 .getMessageStoreConfig().getTranStateTableMapedFileSize(), <span class="keyword">null</span>);</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:     <span class="keyword">final</span> TreeSet&lt;Long&gt; preparedItemSet = <span class="keyword">new</span> TreeSet&lt;Long&gt;();</div><div class="line"> <span class="number">26</span>: </div><div class="line"> <span class="number">27</span>:     <span class="comment">// &#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x4ECE;&#x5934;&#x626B;&#x63CF;RedoLog</span></div><div class="line"> <span class="number">28</span>:     <span class="keyword">final</span> <span class="keyword">long</span> minOffset = <span class="keyword">this</span>.tranRedoLog.getMinOffsetInQuque();</div><div class="line"> <span class="number">29</span>:     <span class="keyword">long</span> processOffset = minOffset;</div><div class="line"> <span class="number">30</span>:     <span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line"> <span class="number">31</span>:         SelectMapedBufferResult bufferConsumeQueue = <span class="keyword">this</span>.tranRedoLog.getIndexBuffer(processOffset);</div><div class="line"> <span class="number">32</span>:         <span class="keyword">if</span> (bufferConsumeQueue != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">33</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">34</span>:                 <span class="keyword">long</span> i = <span class="number">0</span>;</div><div class="line"> <span class="number">35</span>:                 <span class="keyword">for</span> (; i &lt; bufferConsumeQueue.getSize(); i += ConsumeQueue.CQStoreUnitSize) {</div><div class="line"> <span class="number">36</span>:                     <span class="keyword">long</span> offsetMsg = bufferConsumeQueue.getByteBuffer().getLong();</div><div class="line"> <span class="number">37</span>:                     <span class="keyword">int</span> sizeMsg = bufferConsumeQueue.getByteBuffer().getInt();</div><div class="line"> <span class="number">38</span>:                     <span class="keyword">long</span> tagsCode = bufferConsumeQueue.getByteBuffer().getLong();</div><div class="line"> <span class="number">39</span>: </div><div class="line"> <span class="number">40</span>:                     <span class="keyword">if</span> (TransactionStateService.PreparedMessageTagsCode == tagsCode) { <span class="comment">// Prepared</span></div><div class="line"> <span class="number">41</span>:                         preparedItemSet.add(offsetMsg);</div><div class="line"> <span class="number">42</span>:                     } <span class="keyword">else</span> { <span class="comment">// Commit/Rollback</span></div><div class="line"> <span class="number">43</span>:                         preparedItemSet.remove(tagsCode);</div><div class="line"> <span class="number">44</span>:                     }</div><div class="line"> <span class="number">45</span>:                 }</div><div class="line"> <span class="number">46</span>: </div><div class="line"> <span class="number">47</span>:                 processOffset += i;</div><div class="line"> <span class="number">48</span>:             } <span class="keyword">finally</span> { <span class="comment">// &#x5FC5;&#x987B;&#x91CA;&#x653E;&#x8D44;&#x6E90;</span></div><div class="line"> <span class="number">49</span>:                 bufferConsumeQueue.release();</div><div class="line"> <span class="number">50</span>:             }</div><div class="line"> <span class="number">51</span>:         } <span class="keyword">else</span> {</div><div class="line"> <span class="number">52</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">53</span>:         }</div><div class="line"> <span class="number">54</span>:     }</div><div class="line"> <span class="number">55</span>:     log.info(<span class="string">&quot;scan transaction redolog over, End offset: {},  Prepared Transaction Count: {}&quot;</span>, processOffset, preparedItemSet.size());</div><div class="line"> <span class="number">56</span>: </div><div class="line"> <span class="number">57</span>:     <span class="comment">// &#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x91CD;&#x5EFA;StateTable</span></div><div class="line"> <span class="number">58</span>:     Iterator&lt;Long&gt; it = preparedItemSet.iterator();</div><div class="line"> <span class="number">59</span>:     <span class="keyword">while</span> (it.hasNext()) {</div><div class="line"> <span class="number">60</span>:         Long offset = it.next();</div><div class="line"> <span class="number">61</span>:         MessageExt msgExt = <span class="keyword">this</span>.defaultMessageStore.lookMessageByOffset(offset);</div><div class="line"> <span class="number">62</span>:         <span class="keyword">if</span> (msgExt != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">63</span>:             <span class="keyword">this</span>.appendPreparedTransaction(msgExt.getCommitLogOffset(), msgExt.getStoreSize(),</div><div class="line"> <span class="number">64</span>:                 (<span class="keyword">int</span>) (msgExt.getStoreTimestamp() / <span class="number">1000</span>),</div><div class="line"> <span class="number">65</span>:                 msgExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP).hashCode());</div><div class="line"> <span class="number">66</span>:             <span class="keyword">this</span>.tranStateTableOffset.incrementAndGet();</div><div class="line"> <span class="number">67</span>:         }</div><div class="line"> <span class="number">68</span>:     }</div><div class="line"> <span class="number">69</span>: }</div><div class="line"> <span class="number">70</span>: </div><div class="line"> <span class="number">71</span>: <span class="comment">/**</span></div><div class="line"> 72:  * &#x52A0;&#x8F7D;&#xFF08;&#x89E3;&#x6790;&#xFF09;TranStateTable &#x7684; MappedFile</div><div class="line"> 73:  * 1. &#x6E05;&#x7406;&#x591A;&#x4F59; MappedFile&#xFF0C;&#x8BBE;&#x7F6E;&#x6700;&#x540E;&#x4E00;&#x4E2A; MappedFile&#x7684;&#x5199;&#x5165;&#x4F4D;&#x7F6E;(position</div><div class="line"> 74:  * 2. &#x8BBE;&#x7F6E; TanStateTable &#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x53EF;&#x5199;&#x5165;&#x4F4D;&#x7F6E;&#xFF09;</div><div class="line"> 75:  */</div><div class="line"> <span class="number">76</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recoverStateTableNormal</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">77</span>:     <span class="keyword">final</span> List&lt;MapedFile&gt; mapedFiles = <span class="keyword">this</span>.tranStateTable.getMapedFiles();</div><div class="line"> <span class="number">78</span>:     <span class="keyword">if</span> (!mapedFiles.isEmpty()) {</div><div class="line"> <span class="number">79</span>:         <span class="comment">// &#x4ECE;&#x5012;&#x6570;&#x7B2C;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#x5F00;&#x59CB;&#x6062;&#x590D;</span></div><div class="line"> <span class="number">80</span>:         <span class="keyword">int</span> index = mapedFiles.size() - <span class="number">3</span>;</div><div class="line"> <span class="number">81</span>:         <span class="keyword">if</span> (index &lt; <span class="number">0</span>) {</div><div class="line"> <span class="number">82</span>:             index = <span class="number">0</span>;</div><div class="line"> <span class="number">83</span>:         }</div><div class="line"> <span class="number">84</span>: </div><div class="line"> <span class="number">85</span>:         <span class="keyword">int</span> mapedFileSizeLogics = <span class="keyword">this</span>.tranStateTable.getMapedFileSize();</div><div class="line"> <span class="number">86</span>:         MapedFile mapedFile = mapedFiles.get(index);</div><div class="line"> <span class="number">87</span>:         ByteBuffer byteBuffer = mapedFile.sliceByteBuffer();</div><div class="line"> <span class="number">88</span>:         <span class="keyword">long</span> processOffset = mapedFile.getFileFromOffset();</div><div class="line"> <span class="number">89</span>:         <span class="keyword">long</span> mapedFileOffset = <span class="number">0</span>;</div><div class="line"> <span class="number">90</span>:         <span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line"> <span class="number">91</span>:             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mapedFileSizeLogics; i += TSStoreUnitSize) {</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>:                 <span class="keyword">final</span> <span class="keyword">long</span> clOffset_read = byteBuffer.getLong();</div><div class="line"> <span class="number">94</span>:                 <span class="keyword">final</span> <span class="keyword">int</span> size_read = byteBuffer.getInt();</div><div class="line"> <span class="number">95</span>:                 <span class="keyword">final</span> <span class="keyword">int</span> timestamp_read = byteBuffer.getInt();</div><div class="line"> <span class="number">96</span>:                 <span class="keyword">final</span> <span class="keyword">int</span> groupHashCode_read = byteBuffer.getInt();</div><div class="line"> <span class="number">97</span>:                 <span class="keyword">final</span> <span class="keyword">int</span> state_read = byteBuffer.getInt();</div><div class="line"> <span class="number">98</span>: </div><div class="line"> <span class="number">99</span>:                 <span class="keyword">boolean</span> stateOK = <span class="keyword">false</span>;</div><div class="line"><span class="number">100</span>:                 <span class="keyword">switch</span> (state_read) {</div><div class="line"><span class="number">101</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionPreparedType:</div><div class="line"><span class="number">102</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionCommitType:</div><div class="line"><span class="number">103</span>:                 <span class="keyword">case</span> MessageSysFlag.TransactionRollbackType:</div><div class="line"><span class="number">104</span>:                     stateOK = <span class="keyword">true</span>;</div><div class="line"><span class="number">105</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">106</span>:                 <span class="keyword">default</span>:</div><div class="line"><span class="number">107</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">108</span>:                 }</div><div class="line"><span class="number">109</span>: </div><div class="line"><span class="number">110</span>:                 <span class="comment">// &#x8BF4;&#x660E;&#x5F53;&#x524D;&#x5B58;&#x50A8;&#x5355;&#x5143;&#x6709;&#x6548;</span></div><div class="line"><span class="number">111</span>:                 <span class="keyword">if</span> (clOffset_read &gt;= <span class="number">0</span> &amp;&amp; size_read &gt; <span class="number">0</span> &amp;&amp; stateOK) {</div><div class="line"><span class="number">112</span>:                     mapedFileOffset = i + TSStoreUnitSize;</div><div class="line"><span class="number">113</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">114</span>:                     log.info(<span class="string">&quot;recover current transaction state table file over,  &quot;</span> + mapedFile.getFileName() + <span class="string">&quot; &quot;</span></div><div class="line"><span class="number">115</span>:                             + clOffset_read + <span class="string">&quot; &quot;</span> + size_read + <span class="string">&quot; &quot;</span> + timestamp_read);</div><div class="line"><span class="number">116</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">117</span>:                 }</div><div class="line"><span class="number">118</span>:             }</div><div class="line"><span class="number">119</span>: </div><div class="line"><span class="number">120</span>:             <span class="comment">// &#x8D70;&#x5230;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#xFF0C;&#x5207;&#x6362;&#x81F3;&#x4E0B;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;</span></div><div class="line"><span class="number">121</span>:             <span class="keyword">if</span> (mapedFileOffset == mapedFileSizeLogics) {</div><div class="line"><span class="number">122</span>:                 index++;</div><div class="line"><span class="number">123</span>:                 <span class="keyword">if</span> (index &gt;= mapedFiles.size()) { <span class="comment">// &#x5FAA;&#x73AF;while&#x7ED3;&#x675F;</span></div><div class="line"><span class="number">124</span>:                     log.info(<span class="string">&quot;recover last transaction state table file over, last maped file &quot;</span> + mapedFile.getFileName());</div><div class="line"><span class="number">125</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">126</span>:                 } <span class="keyword">else</span> { <span class="comment">// &#x5207;&#x6362;&#x4E0B;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;</span></div><div class="line"><span class="number">127</span>:                     mapedFile = mapedFiles.get(index);</div><div class="line"><span class="number">128</span>:                     byteBuffer = mapedFile.sliceByteBuffer();</div><div class="line"><span class="number">129</span>:                     processOffset = mapedFile.getFileFromOffset();</div><div class="line"><span class="number">130</span>:                     mapedFileOffset = <span class="number">0</span>;</div><div class="line"><span class="number">131</span>:                     log.info(<span class="string">&quot;recover next transaction state table file, &quot;</span> + mapedFile.getFileName());</div><div class="line"><span class="number">132</span>:                 }</div><div class="line"><span class="number">133</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">134</span>:                 log.info(<span class="string">&quot;recover current transaction state table queue over &quot;</span> + mapedFile.getFileName() + <span class="string">&quot; &quot;</span> + (processOffset + mapedFileOffset));</div><div class="line"><span class="number">135</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">136</span>:             }</div><div class="line"><span class="number">137</span>:         }</div><div class="line"><span class="number">138</span>: </div><div class="line"><span class="number">139</span>:         <span class="comment">// &#x6E05;&#x7406;&#x591A;&#x4F59; MappedFile&#xFF0C;&#x8BBE;&#x7F6E;&#x6700;&#x540E;&#x4E00;&#x4E2A; MappedFile&#x7684;&#x5199;&#x5165;&#x4F4D;&#x7F6E;(position</span></div><div class="line"><span class="number">140</span>:         processOffset += mapedFileOffset;</div><div class="line"><span class="number">141</span>:         <span class="keyword">this</span>.tranStateTable.truncateDirtyFiles(processOffset);</div><div class="line"><span class="number">142</span>: </div><div class="line"><span class="number">143</span>:         <span class="comment">// &#x8BBE;&#x7F6E; TanStateTable &#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#xFF08;&#x53EF;&#x5199;&#x5165;&#x4F4D;&#x7F6E;&#xFF09;</span></div><div class="line"><span class="number">144</span>:         <span class="keyword">this</span>.tranStateTableOffset.set(<span class="keyword">this</span>.tranStateTable.getMaxOffset() / TSStoreUnitSize);</div><div class="line"><span class="number">145</span>:         log.info(<span class="string">&quot;recover normal over, transaction state table max offset: {}&quot;</span>, <span class="keyword">this</span>.tranStateTableOffset.get());</div><div class="line"><span class="number">146</span>:     }</div><div class="line"><span class="number">147</span>: }</div></pre></td></tr></table></figure>
<h4 id="3-1-1-5-&#x8865;&#x5145;"><a href="#3-1-1-5-&#x8865;&#x5145;" class="headerlink" title="3.1.1.5 &#x8865;&#x5145;"></a>3.1.1.5 &#x8865;&#x5145;</h4><ul class="ui list">
<li>&#x4E3A;&#x4EC0;&#x4E48; V3.1.5 &#x5F00;&#x59CB;&#xFF0C;&#x4F7F;&#x7528; &#x6570;&#x636E;&#x5E93; &#x5B9E;&#x73B0;&#x3010;&#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x3011;&#x7684;&#x5B58;&#x50A8;&#xFF1F;&#x5982;&#x4E0B;&#x662F;&#x6765;&#x81EA;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x8BF4;&#x660E;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x90E8;&#x5206;&#x539F;&#x56E0;&#xFF1A;</li>
</ul>
<blockquote>
<p>RocketMQ &#x8FD9;&#x79CD;&#x5B9E;&#x73B0;&#x4E8B;&#x52A1;&#x65B9;&#x5F0F;&#xFF0C;&#x6CA1;&#x6709;&#x901A;&#x8FC7; KV &#x5B58;&#x50A8;&#x505A;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7; Offset &#x65B9;&#x5F0F;&#xFF0C;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x663E;&#x8457;&#x7F3A;&#x9677;&#xFF0C;&#x5373;&#x901A;&#x8FC7; Offset &#x66F4;&#x6539;&#x6570;&#x636E;&#xFF0C;&#x4F1A;&#x4EE4;&#x7CFB;&#x7EDF;&#x7684;&#x810F;&#x9875;&#x8FC7;&#x591A;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x522B;&#x5173;&#x6CE8;&#x3002;</p>
</blockquote>
<h3 id="3-1-2-&#x5B98;&#x65B9;V4-0-0&#xFF1A;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;"><a href="#3-1-2-&#x5B98;&#x65B9;V4-0-0&#xFF1A;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;" class="headerlink" title="3.1.2 &#x5B98;&#x65B9;V4.0.0&#xFF1A;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;"></a>3.1.2 &#x5B98;&#x65B9;V4.0.0&#xFF1A;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;</h3><blockquote>
<p>&#x4ED3;&#x5E93;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/apache/incubator-rocketmq" target="_blank" rel="external">https://github.com/apache/incubator-rocketmq</a></p>
</blockquote>
<p>&#x5B98;&#x65B9;V4.0.0 &#x6682;&#x65F6;&#x672A;<strong>&#x5B8C;&#x5168;</strong>&#x5F00;&#x6E90;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;&#x529F;&#x80FD;&#xFF0C;<strong>So &#x6211;&#x4EEC;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x731C;&#x60F3;&#xFF0C;&#x53EF;&#x80FD;&#x4E0D;&#x4E00;&#x5B9A;&#x6B63;&#x786E;&#x1F608;</strong>&#x3002;</p>
<p>&#x1F606;&#x6211;&#x4EEC;&#x6765;&#x5BF9;&#x6BD4;&#x3010;&#x5B98;&#x65B9;V3.1.4&#xFF1A;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x3011;&#x7684;&#x5B9E;&#x73B0;&#x3002;</p>
<ul class="ui list">
<li>TransactionRecord &#xFF1A;&#x8BB0;&#x5F55;&#x6BCF;&#x6761;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x3002;&#x7C7B;&#x4F3C; <code>TranStateTable</code>&#x3002;</li>
</ul>
<table>
<thead>
<tr>
<th>TranStateTable</th>
<th>TransactionRecord</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>offset</td>
<td>offset</td>
<td></td>
</tr>
<tr>
<td>producerGroupHash</td>
<td>producerGroup</td>
<td></td>
</tr>
<tr>
<td>size</td>
<td>&#x65E0;</td>
<td>&#x975E;&#x5FC5;&#x987B;&#x5B57;&#x6BB5;&#xFF1A;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; offset &#x8BFB;&#x53D6; CommitLog &#x83B7;&#x5F97;&#x3002;</td>
</tr>
<tr>
<td>timestamp</td>
<td>&#x65E0;</td>
<td>&#x975E;&#x5FC5;&#x987B;&#x5B57;&#x6BB5;&#xFF1A;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x3011;&#x56DE;&#x67E5;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; offset &#x8BFB;&#x53D6; CommitLog &#x83B7;&#x5F97;&#x3002;</td>
</tr>
<tr>
<td>state</td>
<td>&#x65E0;</td>
<td>&#x975E;&#x5FC5;&#x987B;&#x5B57;&#x6BB5;&#xFF1A; &#x4E8B;&#x52A1;&#x5F00;&#x59CB;&#xFF0C;&#x589E;&#x52A0;&#x8BB0;&#x5F55;&#xFF1B;&#x4E8B;&#x52A1;&#x7ED3;&#x675F;&#xFF0C;&#x5220;&#x9664;&#x8BB0;&#x5F55;&#x3002;</td>
</tr>
</tbody>
</table>
<p>&#x53E6;&#x5916;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x672C;&#x8EAB;&#x4FDD;&#x8BC1;&#x4E86;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x7684;&#x53EF;&#x9760;&#x6027;&#xFF0C;&#x65E0;&#x9700; <code>TranRedoLog</code>&#x3002;</p>
<hr>
<p>&#x7B80;&#x5355;&#x624B;&#x7ED8;&#x903B;&#x8F91;&#x56FE;&#x5982;&#x4E0B;&#x1F608;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_21/02.jpeg"><img src="http://www.yunai.me/images/RocketMQ/2017_05_21/02.jpeg" alt="Broker_V4.0.0_&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x5E93;" class="ui centered image"></a></p>
<h2 id="3-2-Producer-&#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;"><a href="#3-2-Producer-&#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;" class="headerlink" title="3.2 Producer &#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;"></a>3.2 Producer &#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;</h2><ul class="ui list">
<li>&#x987A;&#x5E8F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_21/04.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_21/04.png" alt="Producer&#x63A5;&#x6536;&#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;" class="ui centered image"></a></p>
<ul class="ui list">
<li>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMQProducerImpl.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x68C0;&#x67E5;&#x3010;&#x4E8B;&#x52A1;&#x72B6;&#x6001;&#x3011;&#x72B6;&#x6001;</div><div class="line">  4:  *</div><div class="line">  5:  * <span class="doctag">@param</span> addr broker&#x5730;&#x5740;</div><div class="line">  6:  * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line">  7:  * <span class="doctag">@param</span> header &#x8BF7;&#x6C42;</div><div class="line">  8:  */</div><div class="line">  <span class="number">9</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">10</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkTransactionState</span><span class="params">(<span class="keyword">final</span> String addr, <span class="keyword">final</span> MessageExt msg, <span class="keyword">final</span> CheckTransactionStateRequestHeader header)</span> </span>{</div><div class="line"> <span class="number">11</span>:     Runnable request = <span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">12</span>:         <span class="keyword">private</span> <span class="keyword">final</span> String brokerAddr = addr;</div><div class="line"> <span class="number">13</span>:         <span class="keyword">private</span> <span class="keyword">final</span> MessageExt message = msg;</div><div class="line"> <span class="number">14</span>:         <span class="keyword">private</span> <span class="keyword">final</span> CheckTransactionStateRequestHeader checkRequestHeader = header;</div><div class="line"> <span class="number">15</span>:         <span class="keyword">private</span> <span class="keyword">final</span> String group = DefaultMQProducerImpl.<span class="keyword">this</span>.defaultMQProducer.getProducerGroup();</div><div class="line"> <span class="number">16</span>: </div><div class="line"> <span class="number">17</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">18</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">19</span>:             TransactionCheckListener transactionCheckListener = DefaultMQProducerImpl.<span class="keyword">this</span>.checkListener();</div><div class="line"> <span class="number">20</span>:             <span class="keyword">if</span> (transactionCheckListener != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">21</span>:                 <span class="comment">// &#x83B7;&#x53D6;&#x4E8B;&#x52A1;&#x6267;&#x884C;&#x72B6;&#x6001;</span></div><div class="line"> <span class="number">22</span>:                 LocalTransactionState localTransactionState = LocalTransactionState.UNKNOW;</div><div class="line"> <span class="number">23</span>:                 Throwable exception = <span class="keyword">null</span>;</div><div class="line"> <span class="number">24</span>:                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">25</span>:                     localTransactionState = transactionCheckListener.checkLocalTransactionState(message);</div><div class="line"> <span class="number">26</span>:                 } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">27</span>:                     log.error(<span class="string">&quot;Broker call checkTransactionState, but checkLocalTransactionState exception&quot;</span>, e);</div><div class="line"> <span class="number">28</span>:                     exception = e;</div><div class="line"> <span class="number">29</span>:                 }</div><div class="line"> <span class="number">30</span>: </div><div class="line"> <span class="number">31</span>:                 <span class="comment">// &#x5904;&#x7406;&#x4E8B;&#x52A1;&#x7ED3;&#x679C;&#xFF0C;&#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK</span></div><div class="line"> <span class="number">32</span>:                 <span class="keyword">this</span>.processTransactionState(<span class="comment">//</span></div><div class="line"> <span class="number">33</span>:                     localTransactionState, <span class="comment">//</span></div><div class="line"> <span class="number">34</span>:                     group, <span class="comment">//</span></div><div class="line"> <span class="number">35</span>:                     exception);</div><div class="line"> <span class="number">36</span>:             } <span class="keyword">else</span> {</div><div class="line"> <span class="number">37</span>:                 log.warn(<span class="string">&quot;checkTransactionState, pick transactionCheckListener by group[{}] failed&quot;</span>, group);</div><div class="line"> <span class="number">38</span>:             }</div><div class="line"> <span class="number">39</span>:         }</div><div class="line"> <span class="number">40</span>: </div><div class="line"> <span class="number">41</span>:         <span class="comment">/**</span></div><div class="line"> 42:          * &#x5904;&#x7406;&#x4E8B;&#x52A1;&#x7ED3;&#x679C;&#xFF0C;&#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK</div><div class="line"> 43:          *</div><div class="line"> 44:          * <span class="doctag">@param</span> localTransactionState &#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x72B6;&#x6001;</div><div class="line"> 45:          * <span class="doctag">@param</span> producerGroup producerGroup</div><div class="line"> 46:          * <span class="doctag">@param</span> exception &#x68C0;&#x67E5;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x7684;&#x5F02;&#x5E38;</div><div class="line"> 47:          */</div><div class="line"> <span class="number">48</span>:         <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processTransactionState</span><span class="params">(//</span></span></div><div class="line"> <span class="number">49</span>:             <span class="keyword">final</span> LocalTransactionState localTransactionState, //</div><div class="line"> <span class="number">50</span>:             <span class="keyword">final</span> String producerGroup, //</div><div class="line"> <span class="number">51</span>:             <span class="keyword">final</span> Throwable exception) {</div><div class="line"> <span class="number">52</span>:             <span class="keyword">final</span> EndTransactionRequestHeader thisHeader = <span class="keyword">new</span> EndTransactionRequestHeader();</div><div class="line"> <span class="number">53</span>:             thisHeader.setCommitLogOffset(checkRequestHeader.getCommitLogOffset());</div><div class="line"> <span class="number">54</span>:             thisHeader.setProducerGroup(producerGroup);</div><div class="line"> <span class="number">55</span>:             thisHeader.setTranStateTableOffset(checkRequestHeader.getTranStateTableOffset());</div><div class="line"> <span class="number">56</span>:             thisHeader.setFromTransactionCheck(<span class="keyword">true</span>);</div><div class="line"> <span class="number">57</span>: </div><div class="line"> <span class="number">58</span>:             <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x7F16;&#x53F7;</span></div><div class="line"> <span class="number">59</span>:             String uniqueKey = message.getProperties().get(MessageConst.PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX);</div><div class="line"> <span class="number">60</span>:             <span class="keyword">if</span> (uniqueKey == <span class="keyword">null</span>) {</div><div class="line"> <span class="number">61</span>:                 uniqueKey = message.getMsgId();</div><div class="line"> <span class="number">62</span>:             }</div><div class="line"> <span class="number">63</span>:             thisHeader.setMsgId(uniqueKey);</div><div class="line"> <span class="number">64</span>: </div><div class="line"> <span class="number">65</span>:             thisHeader.setTransactionId(checkRequestHeader.getTransactionId());</div><div class="line"> <span class="number">66</span>:             <span class="keyword">switch</span> (localTransactionState) {</div><div class="line"> <span class="number">67</span>:                 <span class="keyword">case</span> COMMIT_MESSAGE:</div><div class="line"> <span class="number">68</span>:                     thisHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_COMMIT_TYPE);</div><div class="line"> <span class="number">69</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">70</span>:                 <span class="keyword">case</span> ROLLBACK_MESSAGE:</div><div class="line"> <span class="number">71</span>:                     thisHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_ROLLBACK_TYPE);</div><div class="line"> <span class="number">72</span>:                     log.warn(<span class="string">&quot;when broker check, client rollback this transaction, {}&quot;</span>, thisHeader);</div><div class="line"> <span class="number">73</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">74</span>:                 <span class="keyword">case</span> UNKNOW:</div><div class="line"> <span class="number">75</span>:                     thisHeader.setCommitOrRollback(MessageSysFlag.TRANSACTION_NOT_TYPE);</div><div class="line"> <span class="number">76</span>:                     log.warn(<span class="string">&quot;when broker check, client does not know this transaction state, {}&quot;</span>, thisHeader);</div><div class="line"> <span class="number">77</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">78</span>:                 <span class="keyword">default</span>:</div><div class="line"> <span class="number">79</span>:                     <span class="keyword">break</span>;</div><div class="line"> <span class="number">80</span>:             }</div><div class="line"> <span class="number">81</span>: </div><div class="line"> <span class="number">82</span>:             String remark = <span class="keyword">null</span>;</div><div class="line"> <span class="number">83</span>:             <span class="keyword">if</span> (exception != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">84</span>:                 remark = <span class="string">&quot;checkLocalTransactionState Exception: &quot;</span> + RemotingHelper.exceptionSimpleDesc(exception);</div><div class="line"> <span class="number">85</span>:             }</div><div class="line"> <span class="number">86</span>: </div><div class="line"> <span class="number">87</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">88</span>:                 <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F; COMMIT / ROLLBACK</span></div><div class="line"> <span class="number">89</span>:                 DefaultMQProducerImpl.<span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().endTransactionOneway(brokerAddr, thisHeader, remark,</div><div class="line"> <span class="number">90</span>:                     <span class="number">3000</span>);</div><div class="line"> <span class="number">91</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">92</span>:                 log.error(<span class="string">&quot;endTransactionOneway exception&quot;</span>, e);</div><div class="line"> <span class="number">93</span>:             }</div><div class="line"> <span class="number">94</span>:         }</div><div class="line"> <span class="number">95</span>:     };</div><div class="line"> <span class="number">96</span>: </div><div class="line"> <span class="number">97</span>:     <span class="comment">// &#x63D0;&#x4EA4;&#x6267;&#x884C;</span></div><div class="line"> <span class="number">98</span>:     <span class="keyword">this</span>.checkExecutor.submit(request);</div><div class="line"> <span class="number">99</span>: }</div><div class="line"><span class="number">100</span>: </div><div class="line"><span class="number">101</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMQProducerImpl.java&#x3011;</span></div><div class="line"><span class="number">102</span>: <span class="comment">/**</span></div><div class="line">103:  * &#x3010;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x56DE;&#x67E5;&#x3011;&#x68C0;&#x67E5;&#x76D1;&#x542C;&#x5668;</div><div class="line">104:  */</div><div class="line"><span class="number">105</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransactionCheckListener</span> </span>{</div><div class="line"><span class="number">106</span>: </div><div class="line"><span class="number">107</span>:     <span class="comment">/**</span></div><div class="line">108:      * &#x83B7;&#x53D6;&#xFF08;&#x68C0;&#x67E5;&#xFF09;&#x3010;&#x672C;&#x5730;&#x4E8B;&#x52A1;&#x3011;&#x72B6;&#x6001;</div><div class="line">109:      *</div><div class="line">110:      * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line">111:      * <span class="doctag">@return</span> &#x4E8B;&#x52A1;&#x72B6;&#x6001;</div><div class="line">112:      */</div><div class="line"><span class="number">113</span>:     <span class="function">LocalTransactionState <span class="title">checkLocalTransactionState</span><span class="params">(<span class="keyword">final</span> MessageExt msg)</span></span>;</div><div class="line"><span class="number">114</span>: </div><div class="line"><span class="number">115</span>: }</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Filtersrv</title>
    <link href="http://www.yunai.me/RocketMQ/filtersrv/"/>
    <id>http://www.yunai.me/RocketMQ/filtersrv/</id>
    <published>2017-05-16T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. Filtersrv &#x6CE8;&#x518C;&#x5230; Broker</a></li>
<li><a href="#">3. &#x8FC7;&#x6EE4;&#x7C7B;</a><ul>
<li><a href="#">3.1 Consumer &#x8BA2;&#x9605;&#x65F6;&#x8BBE;&#x7F6E; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</a></li>
<li><a href="#">3.2 Consumer &#x4E0A;&#x4F20; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</a></li>
<li><a href="#">3.3 Filter &#x7F16;&#x8BD1; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</a></li>
</ul>
</li>
<li><a href="#">4. &#x8FC7;&#x6EE4;&#x6D88;&#x606F;</a><ul>
<li><a href="#">4.1 Consumer &#x4ECE; Filtersrv &#x62C9;&#x53D6;&#x6D88;&#x606F;</a></li>
<li><a href="#">4.2 Filtersrv &#x4ECE; Broker &#x62C9;&#x53D6;&#x6D88;&#x606F;</a></li>
</ul>
</li>
<li><a href="#">5. Filtersrv &#x9AD8;&#x53EF;&#x7528;</a></li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p><code>Filtersrv</code> &#xFF0C;&#x8D1F;&#x8D23;<strong>&#x81EA;&#x5B9A;&#x4E49;&#x89C4;&#x5219;</strong>&#x8FC7;&#x6EE4; <code>Consumer</code> &#x4ECE; <code>Broker</code> &#x62C9;&#x53D6;&#x7684;&#x6D88;&#x606F;&#x3002;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_17/Filtersrv.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_17/Filtersrv.png" alt="Filtersrv.png" class="ui centered image"></a></p>
<p>&#x4E3A;&#x4EC0;&#x4E48; <code>Broker</code> &#x4E0D;&#x63D0;&#x4F9B;&#x8FC7;&#x6EE4;&#x6D88;&#x606F;&#x7684;&#x529F;&#x80FD;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x5B98;&#x65B9;&#x7684;&#x8BF4;&#x6CD5;&#xFF1A;</p>
<blockquote>
<ul class="ui list">
<li>Broker &#x7AEF;&#x6D88;&#x606F;&#x8FC7;&#x6EE4;<br>&#x5728; Broker &#x4E2D;&#xFF0C;&#x6309;&#x7167; Consumer &#x7684;&#x8981;&#x6C42;&#x505A;&#x8FC7;&#x6EE4;&#xFF0C;&#x4F18;&#x70B9;&#x662F;&#x51CF;&#x5C11;&#x4E86;&#x5BF9;&#x4E8E; Consumer &#x65E0;&#x7528;&#x6D88;&#x606F;&#x7684;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x3002; &#x7F3A;&#x70B9;&#x662F;&#x589E;&#x52A0;&#x4E86; Broker &#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x5B9E;&#x73B0;&#x76F8;&#x5BF9;&#x590D;&#x6742;&#x3002;<br>(1). &#x6DD8;&#x5B9D; Notify &#x652F;&#x6301;&#x591A;&#x79CD;&#x8FC7;&#x6EE4;&#x65B9;&#x5F0F;&#xFF0C;&#x5305;&#x542B;&#x76F4;&#x63A5;&#x6309;&#x7167;&#x6D88;&#x606F;&#x7C7B;&#x578B;&#x8FC7;&#x6EE4;&#xFF0C;&#x7075;&#x6D3B;&#x7684;&#x8BED;&#x6CD5;&#x8868;&#x8FBE;&#x5F0F;&#x8FC7;&#x6EE4;&#xFF0C;&#x51E0;&#x4E4E;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x6700;&#x82DB;&#x523B;&#x7684;&#x8FC7;&#x6EE4;&#x9700;&#x6C42;&#x3002;<br>(2). &#x6DD8;&#x5B9D; RocketMQ &#x652F;&#x6301;&#x6309;&#x7167;&#x7B80;&#x5355;&#x7684; Message Tag &#x8FC7;&#x6EE4;&#xFF0C;&#x4E5F;&#x652F;&#x6301;&#x6309;&#x7167; Message Header&#x3001;body &#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x3002;<br>(3). CORBA Notification &#x89C4;&#x8303;&#x4E2D;&#x4E5F;&#x652F;&#x6301;&#x7075;&#x6D3B;&#x7684;&#x8BED;&#x6CD5;&#x8868;&#x8FBE;&#x5F0F;&#x8FC7;&#x6EE4;&#x3002;  </li>
<li>Consumer &#x7AEF;&#x6D88;&#x606F;&#x8FC7;&#x6EE4;<br>&#x8FD9;&#x79CD;&#x8FC7;&#x6EE4;&#x65B9;&#x5F0F;&#x53EF;&#x7531;&#x5E94;&#x7528;&#x5B8C;&#x5168;&#x81EA;&#x5B9A;&#x4E49;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x7F3A;&#x70B9;&#x662F;&#x5F88;&#x591A;&#x65E0;&#x7528;&#x7684;&#x6D88;&#x606F;&#x8981;&#x4F20;&#x8F93;&#x5230; Consumer &#x7AEF;&#x3002;</li>
</ul>
</blockquote>
<p><strong>&#x5C31;&#x662F;&#x5728;&#x8FD9;&#x79CD;&#x8003;&#x8651;&#x4E0B;&#xFF0C;<code>Filtersrv</code> &#x51FA;&#x73B0;&#x4E86;&#x3002;&#x51CF;&#x5C11;&#x4E86; <code>Broker</code> &#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x53C8;&#x51CF;&#x5C11;&#x4E86; <code>Consumer</code> &#x63A5;&#x6536;&#x65E0;&#x7528;&#x7684;&#x6D88;&#x606F;&#x3002;&#x5F53;&#x7136;&#x7F3A;&#x70B9;&#x4E5F;&#x662F;&#x6709;&#x7684;&#xFF0C;&#x591A;&#x4E86;&#x4E00;&#x5C42; <code>Filtersrv</code> &#x7F51;&#x7EDC;&#x5F00;&#x9500;&#x3002;</strong></p>
<h1 id="2-Filtersrv-&#x6CE8;&#x518C;&#x5230;-Broker"><a href="#2-Filtersrv-&#x6CE8;&#x518C;&#x5230;-Broker" class="headerlink" title="2. Filtersrv &#x6CE8;&#x518C;&#x5230; Broker"></a>2. Filtersrv &#x6CE8;&#x518C;&#x5230; Broker</h1><ul class="ui list">
<li>&#x1F985; &#x4E00;&#x4E2A; <code>Filtersrv</code> <strong>&#x53EA;</strong>&#x5BF9;&#x5E94;&#x4E00;&#x4E2A; <code>Broker</code>&#x3002;</li>
<li>&#x1F985; &#x4E00;&#x4E2A; <code>Broker</code> &#x53EF;&#x4EE5;&#x5BF9;&#x5E94;<strong>&#x591A;&#x4E2A;</strong> <code>Filtersrv</code>&#x3002;<strong><code>Filtersrv</code> &#x7684;&#x9AD8;&#x53EF;&#x7528;&#x901A;&#x8FC7;&#x542F;&#x52A8;&#x591A;&#x4E2A; <code>Filtersrv</code> &#x5B9E;&#x73B0;</strong>&#x3002;</li>
<li>&#x1F985; <code>Filtersrv</code> &#x6CE8;&#x518C;&#x5931;&#x8D25;&#x65F6;&#xFF0C;&#x4E3B;&#x52A8;<strong>&#x9000;&#x51FA;&#x5173;&#x95ED;</strong>&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FiltersrvController.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">initialize</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="comment">// &#x56FA;&#x5B9A;&#x95F4;&#x9694;&#x6CE8;&#x518C;&#x5230;Broker</span></div><div class="line"> <span class="number">6</span>:     <span class="keyword">this</span>.scheduledExecutorService.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">9</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">10</span>:             FiltersrvController.<span class="keyword">this</span>.registerFilterServerToBroker();</div><div class="line"><span class="number">11</span>:         }</div><div class="line"><span class="number">12</span>:     }, <span class="number">15</span>, <span class="number">10</span>, TimeUnit.SECONDS); <span class="comment">// TODO edit by &#x828B;&#x827F;&#xFF1A;initialDelay&#x65F6;&#x95F4;&#x592A;&#x77ED;&#xFF0C;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x521D;&#x59CB;&#x5316;&#x5931;&#x8D25;&#x3002;&#x4ECE;3=&#x300B;15</span></div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">15</span>: }</div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>: <span class="comment">/**</span></div><div class="line">18:  * &#x6CE8;&#x518C;Filtersrv &#x5230; Broker</div><div class="line">19:  * &#xFF01;&#xFF01;&#xFF01;&#x5982;&#x679C;&#x6CE8;&#x518C;&#x5931;&#x8D25;&#xFF0C;&#x5173;&#x95ED;Filtersrv</div><div class="line">20:  */</div><div class="line"><span class="number">21</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerFilterServerToBroker</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">22</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">23</span>:         RegisterFilterServerResponseHeader responseHeader =</div><div class="line"><span class="number">24</span>:             <span class="keyword">this</span>.filterServerOuterAPI.registerFilterServerToBroker(</div><div class="line"><span class="number">25</span>:                 <span class="keyword">this</span>.filtersrvConfig.getConnectWhichBroker(), <span class="keyword">this</span>.localAddr());</div><div class="line"><span class="number">26</span>:         <span class="keyword">this</span>.defaultMQPullConsumer.getDefaultMQPullConsumerImpl().getPullAPIWrapper()</div><div class="line"><span class="number">27</span>:             .setDefaultBrokerId(responseHeader.getBrokerId());</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == <span class="keyword">this</span>.brokerName) {</div><div class="line"><span class="number">30</span>:             <span class="keyword">this</span>.brokerName = responseHeader.getBrokerName();</div><div class="line"><span class="number">31</span>:         }</div><div class="line"><span class="number">32</span>: </div><div class="line"><span class="number">33</span>:         log.info(<span class="string">&quot;register filter server&lt;{}&gt; to broker&lt;{}&gt; OK, Return: {} {}&quot;</span>,</div><div class="line"><span class="number">34</span>:             <span class="keyword">this</span>.localAddr(),</div><div class="line"><span class="number">35</span>:             <span class="keyword">this</span>.filtersrvConfig.getConnectWhichBroker(),</div><div class="line"><span class="number">36</span>:             responseHeader.getBrokerName(),</div><div class="line"><span class="number">37</span>:             responseHeader.getBrokerId());</div><div class="line"><span class="number">38</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">39</span>:         log.warn(<span class="string">&quot;register filter server Exception&quot;</span>, e);</div><div class="line"><span class="number">40</span>: </div><div class="line"><span class="number">41</span>:         log.warn(<span class="string">&quot;access broker failed, kill oneself&quot;</span>);</div><div class="line"><span class="number">42</span>:         System.exit(-<span class="number">1</span>); <span class="comment">// &#x5F02;&#x5E38;&#x9000;&#x51FA;</span></div><div class="line"><span class="number">43</span>:     }</div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<h1 id="3-&#x8FC7;&#x6EE4;&#x7C7B;"><a href="#3-&#x8FC7;&#x6EE4;&#x7C7B;" class="headerlink" title="3. &#x8FC7;&#x6EE4;&#x7C7B;"></a>3. &#x8FC7;&#x6EE4;&#x7C7B;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_17/03.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_17/03.png" alt="Filtersrv&#x8FC7;&#x6EE4;&#x7C7B;" class="ui centered image"></a></p>
<h2 id="3-1-Consumer-&#x8BA2;&#x9605;&#x65F6;&#x8BBE;&#x7F6E;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"><a href="#3-1-Consumer-&#x8BA2;&#x9605;&#x65F6;&#x8BBE;&#x7F6E;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;" class="headerlink" title="3.1 Consumer &#x8BA2;&#x9605;&#x65F6;&#x8BBE;&#x7F6E; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"></a>3.1 Consumer &#x8BA2;&#x9605;&#x65F6;&#x8BBE;&#x7F6E; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</h2><ul class="ui list">
<li>&#x1F985; <code>Consumer</code> &#x9488;&#x5BF9;&#x6BCF;&#x4E2A; <code>Topic</code> &#x53EF;&#x4EE5;&#x8BA2;&#x9605;&#x4E0D;&#x540C;&#x7684; <code>&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</code>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMQPushConsumer.java&#x3011;</span></div><div class="line"><span class="number">2</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">3</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subscribe</span><span class="params">(String topic, String fullClassName, String filterClassSource)</span> <span class="keyword">throws</span> MQClientException </span>{</div><div class="line"><span class="number">4</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.subscribe(topic, fullClassName, filterClassSource);</div><div class="line"><span class="number">5</span>: }</div></pre></td></tr></table></figure>
<h2 id="3-2-Consumer-&#x4E0A;&#x4F20;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"><a href="#3-2-Consumer-&#x4E0A;&#x4F20;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;" class="headerlink" title="3.2 Consumer &#x4E0A;&#x4F20; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"></a>3.2 Consumer &#x4E0A;&#x4F20; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</h2><ul class="ui list">
<li>&#x1F985; <code>Consumer</code> &#x5FC3;&#x8DF3;&#x6CE8;&#x518C;&#x5230; <code>Broker</code> &#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E0A;&#x4F20; <code>&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</code> &#x5230; <code>Broker</code> &#x5BF9;&#x5E94;&#x7684;<strong>&#x6240;&#x6709;</strong> <code>Filtersrv</code>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;MQClientInstance.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x53D1;&#x9001;&#x5FC3;&#x8DF3;&#x5230;Broker&#xFF0C;&#x4E0A;&#x4F20;&#x8FC7;&#x6EE4;&#x7C7B;&#x6E90;&#x7801;&#x5230;Filtersrv</div><div class="line"> 4:  */</div><div class="line"> <span class="number">5</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendHeartbeatToAllBrokerWithLock</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">6</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.lockHeartbeat.tryLock()) {</div><div class="line"> <span class="number">7</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">8</span>:             <span class="keyword">this</span>.sendHeartbeatToAllBroker();</div><div class="line"> <span class="number">9</span>:             <span class="keyword">this</span>.uploadFilterClassSource();</div><div class="line"><span class="number">10</span>:         } <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) {</div><div class="line"><span class="number">11</span>:             log.error(<span class="string">&quot;sendHeartbeatToAllBroker exception&quot;</span>, e);</div><div class="line"><span class="number">12</span>:         } <span class="keyword">finally</span> {</div><div class="line"><span class="number">13</span>:             <span class="keyword">this</span>.lockHeartbeat.unlock();</div><div class="line"><span class="number">14</span>:         }</div><div class="line"><span class="number">15</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">16</span>:         log.warn(<span class="string">&quot;lock heartBeat, but failed.&quot;</span>);</div><div class="line"><span class="number">17</span>:     }</div><div class="line"><span class="number">18</span>: }</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>: <span class="comment">/**</span></div><div class="line">21:  * &#x4E0A;&#x4F20;&#x8FC7;&#x6EE4;&#x7C7B;&#x5230;Filtersrv</div><div class="line">22:  */</div><div class="line"><span class="number">23</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">uploadFilterClassSource</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">24</span>:     Iterator&lt;Entry&lt;String, MQConsumerInner&gt;&gt; it = <span class="keyword">this</span>.consumerTable.entrySet().iterator();</div><div class="line"><span class="number">25</span>:     <span class="keyword">while</span> (it.hasNext()) {</div><div class="line"><span class="number">26</span>:         Entry&lt;String, MQConsumerInner&gt; next = it.next();</div><div class="line"><span class="number">27</span>:         MQConsumerInner consumer = next.getValue();</div><div class="line"><span class="number">28</span>:         <span class="keyword">if</span> (ConsumeType.CONSUME_PASSIVELY == consumer.consumeType()) {</div><div class="line"><span class="number">29</span>:             Set&lt;SubscriptionData&gt; subscriptions = consumer.subscriptions();</div><div class="line"><span class="number">30</span>:             <span class="keyword">for</span> (SubscriptionData sub : subscriptions) {</div><div class="line"><span class="number">31</span>:                 <span class="keyword">if</span> (sub.isClassFilterMode() &amp;&amp; sub.getFilterClassSource() != <span class="keyword">null</span>) {</div><div class="line"><span class="number">32</span>:                     <span class="keyword">final</span> String consumerGroup = consumer.groupName();</div><div class="line"><span class="number">33</span>:                     <span class="keyword">final</span> String className = sub.getSubString();</div><div class="line"><span class="number">34</span>:                     <span class="keyword">final</span> String topic = sub.getTopic();</div><div class="line"><span class="number">35</span>:                     <span class="keyword">final</span> String filterClassSource = sub.getFilterClassSource();</div><div class="line"><span class="number">36</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">37</span>:                         <span class="keyword">this</span>.uploadFilterClassToAllFilterServer(consumerGroup, className, topic, filterClassSource);</div><div class="line"><span class="number">38</span>:                     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">39</span>:                         log.error(<span class="string">&quot;uploadFilterClassToAllFilterServer Exception&quot;</span>, e);</div><div class="line"><span class="number">40</span>:                     }</div><div class="line"><span class="number">41</span>:                 }</div><div class="line"><span class="number">42</span>:             }</div><div class="line"><span class="number">43</span>:         }</div><div class="line"><span class="number">44</span>:     }</div><div class="line"><span class="number">45</span>: }</div></pre></td></tr></table></figure>
<h2 id="3-3-Filter-&#x7F16;&#x8BD1;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"><a href="#3-3-Filter-&#x7F16;&#x8BD1;-&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;" class="headerlink" title="3.3 Filter &#x7F16;&#x8BD1; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;"></a>3.3 Filter &#x7F16;&#x8BD1; &#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</h2><ul class="ui list">
<li>&#x1F985; <code>Filtersrv</code> &#x5904;&#x7406; <code>Consumer</code> &#x4E0A;&#x4F20;&#x7684; <code>&#x8FC7;&#x6EE4;&#x7C7B;&#x4EE3;&#x7801;</code>&#xFF0C;&#x5E76;&#x8FDB;&#x884C;<strong>&#x7F16;&#x8BD1;</strong>&#x4F7F;&#x7528;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;FilterClassManager.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x6CE8;&#x518C;&#x8FC7;&#x6EE4;&#x7C7B;</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@param</span> consumerGroup &#x6D88;&#x8D39;&#x5206;&#x7EC4;</div><div class="line"> 6:  * <span class="doctag">@param</span> topic Topic</div><div class="line"> 7:  * <span class="doctag">@param</span> className &#x8FC7;&#x6EE4;&#x7C7B;&#x540D;</div><div class="line"> 8:  * <span class="doctag">@param</span> classCRC &#x8FC7;&#x6EE4;&#x7C7B;&#x6E90;&#x7801;CRC</div><div class="line"> 9:  * <span class="doctag">@param</span> filterSourceBinary &#x8FC7;&#x6EE4;&#x7C7B;&#x6E90;&#x7801;</div><div class="line">10:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6CE8;&#x518C;&#x6210;&#x529F;</div><div class="line">11:  */</div><div class="line"><span class="number">12</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">registerFilterClass</span><span class="params">(<span class="keyword">final</span> String consumerGroup, <span class="keyword">final</span> String topic,</span></span></div><div class="line"><span class="number">13</span>:     <span class="keyword">final</span> String className, <span class="keyword">final</span> <span class="keyword">int</span> classCRC, <span class="keyword">final</span> <span class="keyword">byte</span>[] filterSourceBinary) {</div><div class="line"><span class="number">14</span>:     <span class="keyword">final</span> String key = buildKey(consumerGroup, topic);</div><div class="line"><span class="number">15</span>:     <span class="comment">// &#x5224;&#x65AD;&#x662F;&#x5426;&#x8981;&#x6CE8;&#x518C;&#x65B0;&#x7684;&#x8FC7;&#x6EE4;&#x7C7B;</span></div><div class="line"><span class="number">16</span>:     <span class="keyword">boolean</span> registerNew = <span class="keyword">false</span>;</div><div class="line"><span class="number">17</span>:     FilterClassInfo filterClassInfoPrev = <span class="keyword">this</span>.filterClassTable.get(key);</div><div class="line"><span class="number">18</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == filterClassInfoPrev) {</div><div class="line"><span class="number">19</span>:         registerNew = <span class="keyword">true</span>;</div><div class="line"><span class="number">20</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">21</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.filtersrvController.getFiltersrvConfig().isClientUploadFilterClassEnable()) {</div><div class="line"><span class="number">22</span>:             <span class="keyword">if</span> (filterClassInfoPrev.getClassCRC() != classCRC &amp;&amp; classCRC != <span class="number">0</span>) { <span class="comment">// &#x7C7B;&#x6709;&#x53D8;&#x5316;</span></div><div class="line"><span class="number">23</span>:                 registerNew = <span class="keyword">true</span>;</div><div class="line"><span class="number">24</span>:             }</div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>:     <span class="comment">// &#x6CE8;&#x518C;&#x65B0;&#x7684;&#x8FC7;&#x6EE4;&#x7C7B;</span></div><div class="line"><span class="number">28</span>:     <span class="keyword">if</span> (registerNew) {</div><div class="line"><span class="number">29</span>:         <span class="keyword">synchronized</span> (<span class="keyword">this</span>.compileLock) {</div><div class="line"><span class="number">30</span>:             filterClassInfoPrev = <span class="keyword">this</span>.filterClassTable.get(key);</div><div class="line"><span class="number">31</span>:             <span class="keyword">if</span> (<span class="keyword">null</span> != filterClassInfoPrev &amp;&amp; filterClassInfoPrev.getClassCRC() == classCRC) {</div><div class="line"><span class="number">32</span>:                 <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">33</span>:             }</div><div class="line"><span class="number">34</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">35</span>:                 FilterClassInfo filterClassInfoNew = <span class="keyword">new</span> FilterClassInfo();</div><div class="line"><span class="number">36</span>:                 filterClassInfoNew.setClassName(className);</div><div class="line"><span class="number">37</span>:                 filterClassInfoNew.setClassCRC(<span class="number">0</span>);</div><div class="line"><span class="number">38</span>:                 filterClassInfoNew.setMessageFilter(<span class="keyword">null</span>);</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.filtersrvController.getFiltersrvConfig().isClientUploadFilterClassEnable()) {</div><div class="line"><span class="number">41</span>:                     String javaSource = <span class="keyword">new</span> String(filterSourceBinary, MixAll.DEFAULT_CHARSET);</div><div class="line"><span class="number">42</span>:                     <span class="comment">// &#x7F16;&#x8BD1;&#x65B0;&#x7684;&#x8FC7;&#x6EE4;&#x7C7B;</span></div><div class="line"><span class="number">43</span>:                     Class&lt;?&gt; newClass = DynaCode.compileAndLoadClass(className, javaSource);</div><div class="line"><span class="number">44</span>:                     <span class="comment">// &#x521B;&#x5EFA;&#x65B0;&#x7684;&#x8FC7;&#x6EE4;&#x7C7B;&#x5BF9;&#x8C61;</span></div><div class="line"><span class="number">45</span>:                     Object newInstance = newClass.newInstance();</div><div class="line"><span class="number">46</span>:                     filterClassInfoNew.setMessageFilter((MessageFilter) newInstance);</div><div class="line"><span class="number">47</span>:                     filterClassInfoNew.setClassCRC(classCRC);</div><div class="line"><span class="number">48</span>:                 }</div><div class="line"><span class="number">49</span>: </div><div class="line"><span class="number">50</span>:                 <span class="keyword">this</span>.filterClassTable.put(key, filterClassInfoNew);</div><div class="line"><span class="number">51</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">52</span>:                 String info = String.format(<span class="string">&quot;FilterServer, registerFilterClass Exception, consumerGroup: %s topic: %s className: %s&quot;</span>,</div><div class="line"><span class="number">53</span>:                             consumerGroup, topic, className);</div><div class="line"><span class="number">54</span>:                 log.error(info, e);</div><div class="line"><span class="number">55</span>:                 <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">56</span>:             }</div><div class="line"><span class="number">57</span>:         }</div><div class="line"><span class="number">58</span>:     }</div><div class="line"><span class="number">59</span>: </div><div class="line"><span class="number">60</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">61</span>: }</div></pre></td></tr></table></figure>
<hr>
<h1 id="4-&#x8FC7;&#x6EE4;&#x6D88;&#x606F;"><a href="#4-&#x8FC7;&#x6EE4;&#x6D88;&#x606F;" class="headerlink" title="4. &#x8FC7;&#x6EE4;&#x6D88;&#x606F;"></a>4. &#x8FC7;&#x6EE4;&#x6D88;&#x606F;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_17/Filtersrv.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_17/Filtersrv.png" alt="Filtersrv.png" class="ui centered image"></a></p>
<h2 id="4-1-Consumer-&#x4ECE;-Filtersrv-&#x62C9;&#x53D6;&#x6D88;&#x606F;"><a href="#4-1-Consumer-&#x4ECE;-Filtersrv-&#x62C9;&#x53D6;&#x6D88;&#x606F;" class="headerlink" title="4.1 Consumer &#x4ECE; Filtersrv &#x62C9;&#x53D6;&#x6D88;&#x606F;"></a>4.1 Consumer &#x4ECE; Filtersrv &#x62C9;&#x53D6;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x1F985; <code>Consumer</code> &#x62C9;&#x53D6; <strong>&#x4F7F;&#x7528;&#x8FC7;&#x6EE4;&#x7C7B;&#x65B9;&#x5F0F;&#x8BA2;&#x9605;</strong> &#x7684;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x4ECE; <code>Broker</code> &#x5BF9;&#x5E94;&#x7684; <code>Filtersrv</code> &#x5217;&#x8868;<strong>&#x968F;&#x673A;</strong>&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;<strong>&#x5982;&#x679C;&#x9009;&#x62E9;&#x4E0D;&#x5230; <code>Filtersrv</code>&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;&#x56E0;&#x6B64;&#xFF0C;<code>Filtersrv</code> &#x4E00;&#x5B9A;&#x8981;&#x505A;&#x9AD8;&#x53EF;&#x7528;</strong>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;PullAPIWrapper.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x561F;&#x5217;</div><div class="line"> 6:  * <span class="doctag">@param</span> subExpression &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;</div><div class="line"> 7:  * <span class="doctag">@param</span> subVersion &#x8BA2;&#x9605;&#x7248;&#x672C;&#x53F7;</div><div class="line"> 8:  * <span class="doctag">@param</span> offset &#x62C9;&#x53D6;&#x961F;&#x5217;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;</div><div class="line"> 9:  * <span class="doctag">@param</span> maxNums &#x6279;&#x91CF;&#x62C9; &#x53D6;&#x6D88;&#x606F;&#x6570;&#x91CF;</div><div class="line">10:  * <span class="doctag">@param</span> sysFlag &#x62C9;&#x53D6;&#x7CFB;&#x7EDF;&#x6807;&#x8BC6;</div><div class="line">11:  * <span class="doctag">@param</span> commitOffset &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line">12:  * <span class="doctag">@param</span> brokerSuspendMaxTimeMillis broker&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x6700;&#x5927;&#x65F6;&#x95F4;</div><div class="line">13:  * <span class="doctag">@param</span> timeoutMillis &#x8BF7;&#x6C42;broker&#x8D85;&#x65F6;&#x65F6;&#x95F4;</div><div class="line">14:  * <span class="doctag">@param</span> communicationMode &#x901A;&#x8BAF;&#x6A21;&#x5F0F;</div><div class="line">15:  * <span class="doctag">@param</span> pullCallback &#x62C9;&#x53D6;&#x56DE;&#x8C03;</div><div class="line">16:  * <span class="doctag">@return</span> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7ED3;&#x679C;&#x3002;&#x53EA;&#x6709;&#x901A;&#x8BAF;&#x6A21;&#x5F0F;&#x4E3A;&#x540C;&#x6B65;&#x65F6;&#xFF0C;&#x624D;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;null&#x3002;</div><div class="line">17:  * <span class="doctag">@throws</span> MQClientException &#x5F53;&#x5BFB;&#x627E;&#x4E0D;&#x5230; broker &#x65F6;&#xFF0C;&#x6216;&#x53D1;&#x751F;&#x5176;&#x4ED6;client&#x5F02;&#x5E38;</div><div class="line">18:  * <span class="doctag">@throws</span> RemotingException &#x5F53;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">19:  * <span class="doctag">@throws</span> MQBrokerException &#x5F53; broker &#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;&#x3002;&#x53EA;&#x6709;&#x901A;&#x8BAF;&#x6A21;&#x5F0F;&#x4E3A;&#x540C;&#x6B65;&#x65F6;&#x624D;&#x4F1A;&#x53D1;&#x751F;&#x8BE5;&#x5F02;&#x5E38;&#x3002;</div><div class="line">20:  * <span class="doctag">@throws</span> InterruptedException &#x5F53;&#x53D1;&#x751F;&#x4E2D;&#x65AD;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">21:  */</div><div class="line"><span class="number">22</span>: <span class="function"><span class="keyword">protected</span> PullResult <span class="title">pullKernelImpl</span><span class="params">(</span></span></div><div class="line"><span class="number">23</span>:     <span class="keyword">final</span> MessageQueue mq,</div><div class="line"><span class="number">24</span>:     <span class="keyword">final</span> String subExpression,</div><div class="line"><span class="number">25</span>:     <span class="keyword">final</span> <span class="keyword">long</span> subVersion,</div><div class="line"><span class="number">26</span>:     <span class="keyword">final</span> <span class="keyword">long</span> offset,</div><div class="line"><span class="number">27</span>:     <span class="keyword">final</span> <span class="keyword">int</span> maxNums,</div><div class="line"><span class="number">28</span>:     <span class="keyword">final</span> <span class="keyword">int</span> sysFlag,</div><div class="line"><span class="number">29</span>:     <span class="keyword">final</span> <span class="keyword">long</span> commitOffset,</div><div class="line"><span class="number">30</span>:     <span class="keyword">final</span> <span class="keyword">long</span> brokerSuspendMaxTimeMillis,</div><div class="line"><span class="number">31</span>:     <span class="keyword">final</span> <span class="keyword">long</span> timeoutMillis,</div><div class="line"><span class="number">32</span>:     <span class="keyword">final</span> CommunicationMode communicationMode,</div><div class="line"><span class="number">33</span>:     <span class="keyword">final</span> PullCallback pullCallback</div><div class="line"><span class="number">34</span>: ) <span class="keyword">throws</span> MQClientException, RemotingException, MQBrokerException, InterruptedException {</div><div class="line"><span class="number">35</span>:     <span class="comment">// // ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">36</span>:     <span class="comment">// &#x8BF7;&#x6C42;&#x62C9;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">37</span>:     <span class="keyword">if</span> (findBrokerResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">38</span>:         <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">39</span>:         <span class="comment">// &#x82E5;&#x8BA2;&#x9605;topic&#x4F7F;&#x7528;&#x8FC7;&#x6EE4;&#x7C7B;&#xFF0C;&#x4F7F;&#x7528;filtersrv&#x83B7;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">40</span>:         String brokerAddr = findBrokerResult.getBrokerAddr();</div><div class="line"><span class="number">41</span>:         <span class="keyword">if</span> (PullSysFlag.hasClassFilterFlag(sysFlagInner)) {</div><div class="line"><span class="number">42</span>:             brokerAddr = computPullFromWhichFilterServer(mq.getTopic(), brokerAddr);</div><div class="line"><span class="number">43</span>:         }</div><div class="line"><span class="number">44</span>: </div><div class="line"><span class="number">45</span>:         PullResult pullResult = <span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().pullMessage(</div><div class="line"><span class="number">46</span>:             brokerAddr,</div><div class="line"><span class="number">47</span>:             requestHeader,</div><div class="line"><span class="number">48</span>:             timeoutMillis,</div><div class="line"><span class="number">49</span>:             communicationMode,</div><div class="line"><span class="number">50</span>:             pullCallback);</div><div class="line"><span class="number">51</span>: </div><div class="line"><span class="number">52</span>:         <span class="keyword">return</span> pullResult;</div><div class="line"><span class="number">53</span>:     }</div><div class="line"><span class="number">54</span>: </div><div class="line"><span class="number">55</span>:     <span class="comment">// Broker&#x4FE1;&#x606F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x629B;&#x51FA;&#x5F02;&#x5E38;</span></div><div class="line"><span class="number">56</span>:     <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;The broker[&quot;</span> + mq.getBrokerName() + <span class="string">&quot;] not exist&quot;</span>, <span class="keyword">null</span>);</div><div class="line"><span class="number">57</span>: }</div><div class="line"><span class="number">58</span>: </div><div class="line"><span class="number">59</span>: <span class="comment">/**</span></div><div class="line">60:  * &#x8BA1;&#x7B97;filtersrv&#x5730;&#x5740;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;filtersrv&#xFF0C;&#x968F;&#x673A;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x3002;</div><div class="line">61:  *</div><div class="line">62:  * <span class="doctag">@param</span> topic Topic</div><div class="line">63:  * <span class="doctag">@param</span> brokerAddr broker&#x5730;&#x5740;</div><div class="line">64:  * <span class="doctag">@return</span> filtersrv&#x5730;&#x5740;</div><div class="line">65:  * <span class="doctag">@throws</span> MQClientException &#x5F53;filtersrv&#x4E0D;&#x5B58;&#x5728;&#x65F6;</div><div class="line">66:  */</div><div class="line"><span class="number">67</span>: <span class="function"><span class="keyword">private</span> String <span class="title">computPullFromWhichFilterServer</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> String brokerAddr)</span></span></div><div class="line">68:     <span class="keyword">throws</span> MQClientException {</div><div class="line"><span class="number">69</span>:     ConcurrentHashMap&lt;String, TopicRouteData&gt; topicRouteTable = <span class="keyword">this</span>.mQClientFactory.getTopicRouteTable();</div><div class="line"><span class="number">70</span>:     <span class="keyword">if</span> (topicRouteTable != <span class="keyword">null</span>) {</div><div class="line"><span class="number">71</span>:         TopicRouteData topicRouteData = topicRouteTable.get(topic);</div><div class="line"><span class="number">72</span>:         List&lt;String&gt; list = topicRouteData.getFilterServerTable().get(brokerAddr);</div><div class="line"><span class="number">73</span>:         <span class="keyword">if</span> (list != <span class="keyword">null</span> &amp;&amp; !list.isEmpty()) {</div><div class="line"><span class="number">74</span>:             <span class="keyword">return</span> list.get(randomNum() % list.size());</div><div class="line"><span class="number">75</span>:         }</div><div class="line"><span class="number">76</span>:     }</div><div class="line"><span class="number">77</span>:     <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;Find Filter Server Failed, Broker Addr: &quot;</span> + brokerAddr + <span class="string">&quot; topic: &quot;</span></div><div class="line"><span class="number">78</span>:         + topic, <span class="keyword">null</span>);</div><div class="line"><span class="number">79</span>: }</div></pre></td></tr></table></figure>
<h2 id="4-2-Filtersrv-&#x4ECE;-Broker-&#x62C9;&#x53D6;&#x6D88;&#x606F;"><a href="#4-2-Filtersrv-&#x4ECE;-Broker-&#x62C9;&#x53D6;&#x6D88;&#x606F;" class="headerlink" title="4.2 Filtersrv &#x4ECE; Broker &#x62C9;&#x53D6;&#x6D88;&#x606F;"></a>4.2 Filtersrv &#x4ECE; Broker &#x62C9;&#x53D6;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x1F985; <code>Filtersrv</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x540E;&#xFF0C;&#x4F1A;&#x5EFA;&#x8BAE; <code>Consumer</code> &#x5411; <code>Broker&#x4E3B;&#x8282;&#x70B9;</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x1F985; <code>Filtersrv</code> &#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x6210;&#x4E00;&#x4E2A; <code>Consumer</code>&#xFF0C;&#x5411; <code>Broker</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x7684; <code>DefaultMQPullConsumer.java</code> &#x7684;&#x65B9;&#x6CD5;&#x548C;&#x903B;&#x8F91;&#x3002;</li>
</ul>
<pre><code class="Java">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultRequestProcessor.java&#x3011;</span>
  <span class="number">2</span>: <span class="comment">/**
  3:  * &#x62C9;&#x53D6;&#x6D88;&#x606F;
  4:  *
  5:  * <span class="doctag">@param</span> ctx &#x62C9;&#x53D6;&#x6D88;&#x606F;context
  6:  * <span class="doctag">@param</span> request &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;
  7:  * <span class="doctag">@return</span> &#x54CD;&#x5E94;
  8:  * <span class="doctag">@throws</span> Exception &#x5F53;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;
  9:  */</span>
 <span class="number">10</span>: <span class="function"><span class="keyword">private</span> RemotingCommand <span class="title">pullMessageForward</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx, <span class="keyword">final</span> RemotingCommand request)</span> <span class="keyword">throws</span> Exception </span>{
 <span class="number">11</span>:     <span class="keyword">final</span> RemotingCommand response = RemotingCommand.createResponseCommand(PullMessageResponseHeader.class);
 <span class="number">12</span>:     <span class="keyword">final</span> PullMessageResponseHeader responseHeader = (PullMessageResponseHeader) response.readCustomHeader();
 <span class="number">13</span>:     <span class="keyword">final</span> PullMessageRequestHeader requestHeader =
 <span class="number">14</span>:         (PullMessageRequestHeader) request.decodeCommandCustomHeader(PullMessageRequestHeader.class);
 <span class="number">15</span>: 
 <span class="number">16</span>:     <span class="keyword">final</span> FilterContext filterContext = <span class="keyword">new</span> FilterContext();
 <span class="number">17</span>:     filterContext.setConsumerGroup(requestHeader.getConsumerGroup());
 <span class="number">18</span>: 
 <span class="number">19</span>:     response.setOpaque(request.getOpaque());
 <span class="number">20</span>: 
 <span class="number">21</span>:     DefaultMQPullConsumer pullConsumer = <span class="keyword">this</span>.filtersrvController.getDefaultMQPullConsumer();
 <span class="number">22</span>: 
 <span class="number">23</span>:     <span class="comment">// &#x6821;&#x9A8C;Topic&#x8FC7;&#x6EE4;&#x7C7B;&#x662F;&#x5426;&#x5B8C;&#x6574;</span>
 <span class="number">24</span>:     <span class="keyword">final</span> FilterClassInfo findFilterClass = <span class="keyword">this</span>.filtersrvController.getFilterClassManager().findFilterClass(requestHeader.getConsumerGroup(), requestHeader.getTopic());
 <span class="number">25</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == findFilterClass) {
 <span class="number">26</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);
 <span class="number">27</span>:         response.setRemark(<span class="string">&quot;Find Filter class failed, not registered&quot;</span>);
 <span class="number">28</span>:         <span class="keyword">return</span> response;
 <span class="number">29</span>:     }
 <span class="number">30</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == findFilterClass.getMessageFilter()) {
 <span class="number">31</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);
 <span class="number">32</span>:         response.setRemark(<span class="string">&quot;Find Filter class failed, registered but no class&quot;</span>);
 <span class="number">33</span>:         <span class="keyword">return</span> response;
 <span class="number">34</span>:     }
 <span class="number">35</span>: 
 <span class="number">36</span>:     <span class="comment">// &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x8BF7;&#x6C42;&#x4ECE; Broker&#x4E3B;&#x8282;&#x70B9;&#x3002;</span>
 <span class="number">37</span>:     responseHeader.setSuggestWhichBrokerId(MixAll.MASTER_ID);
 <span class="number">38</span>: 
 <span class="number">39</span>:     MessageQueue mq = <span class="keyword">new</span> MessageQueue();
 <span class="number">40</span>:     mq.setTopic(requestHeader.getTopic());
 <span class="number">41</span>:     mq.setQueueId(requestHeader.getQueueId());
 <span class="number">42</span>:     mq.setBrokerName(<span class="keyword">this</span>.filtersrvController.getBrokerName());
 <span class="number">43</span>:     <span class="keyword">long</span> offset = requestHeader.getQueueOffset();
 <span class="number">44</span>:     <span class="keyword">int</span> maxNums = requestHeader.getMaxMsgNums();
 <span class="number">45</span>: 
 <span class="number">46</span>:     <span class="keyword">final</span> PullCallback pullCallback = <span class="keyword">new</span> PullCallback() {
 <span class="number">47</span>: 
 <span class="number">48</span>:         <span class="meta">@Override</span>
 <span class="number">49</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(PullResult pullResult)</span> </span>{
 <span class="number">50</span>:             responseHeader.setMaxOffset(pullResult.getMaxOffset());
 <span class="number">51</span>:             responseHeader.setMinOffset(pullResult.getMinOffset());
 <span class="number">52</span>:             responseHeader.setNextBeginOffset(pullResult.getNextBeginOffset());
 <span class="number">53</span>:             response.setRemark(<span class="keyword">null</span>);
 <span class="number">54</span>: 
 <span class="number">55</span>:             <span class="keyword">switch</span> (pullResult.getPullStatus()) {
 <span class="number">56</span>:                 <span class="keyword">case</span> FOUND:
 <span class="number">57</span>:                     response.setCode(ResponseCode.SUCCESS);
 <span class="number">58</span>: 
 <span class="number">59</span>:                     List&lt;MessageExt&gt; msgListOK = <span class="keyword">new</span> ArrayList&lt;MessageExt&gt;();
 <span class="number">60</span>:                     <span class="keyword">try</span> {
 <span class="number">61</span>:                         <span class="keyword">for</span> (MessageExt msg : pullResult.getMsgFoundList()) {
 <span class="number">62</span>:                             <span class="comment">// &#x4F7F;&#x7528;&#x8FC7;&#x6EE4;&#x7C7B;&#x8FC7;&#x6EE4;&#x6D88;&#x606F;</span>
 <span class="number">63</span>:                             <span class="keyword">boolean</span> match = findFilterClass.getMessageFilter().match(msg, filterContext);
 <span class="number">64</span>:                             <span class="keyword">if</span> (match) {
 <span class="number">65</span>:                                 msgListOK.add(msg);
 <span class="number">66</span>:                             }
 <span class="number">67</span>:                         }
 <span class="number">68</span>: 
 <span class="number">69</span>:                         <span class="keyword">if</span> (!msgListOK.isEmpty()) {
 <span class="number">70</span>:                             returnResponse(requestHeader.getConsumerGroup(), requestHeader.getTopic(), ctx, response, msgListOK);
 <span class="number">71</span>:                             <span class="keyword">return</span>;
 <span class="number">72</span>:                         } <span class="keyword">else</span> {
 <span class="number">73</span>:                             response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);
 <span class="number">74</span>:                         }
 <span class="number">75</span>:                     } <span class="keyword">catch</span> (Throwable e) {
 <span class="number">76</span>:                         <span class="keyword">final</span> String error =
 <span class="number">77</span>:                             String.format(<span class="string">&quot;do Message Filter Exception, ConsumerGroup: %s Topic: %s &quot;</span>,
 <span class="number">78</span>:                                 requestHeader.getConsumerGroup(), requestHeader.getTopic());
 <span class="number">79</span>:                         log.error(error, e);
 <span class="number">80</span>: 
 <span class="number">81</span>:                         response.setCode(ResponseCode.SYSTEM_ERROR);
 <span class="number">82</span>:                         response.setRemark(error + RemotingHelper.exceptionSimpleDesc(e));
 <span class="number">83</span>:                         returnResponse(requestHeader.getConsumerGroup(), requestHeader.getTopic(), ctx, response, <span class="keyword">null</span>);
 <span class="number">84</span>:                         <span class="keyword">return</span>;
 <span class="number">85</span>:                     }
 <span class="number">86</span>: 
 <span class="number">87</span>:                     <span class="keyword">break</span>;
 <span class="number">88</span>:                 <span class="keyword">case</span> NO_MATCHED_MSG:
 <span class="number">89</span>:                     response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);
 <span class="number">90</span>:                     <span class="keyword">break</span>;
 <span class="number">91</span>:                 <span class="keyword">case</span> NO_NEW_MSG:
 <span class="number">92</span>:                     response.setCode(ResponseCode.PULL_NOT_FOUND);
 <span class="number">93</span>:                     <span class="keyword">break</span>;
 <span class="number">94</span>:                 <span class="keyword">case</span> OFFSET_ILLEGAL:
 <span class="number">95</span>:                     response.setCode(ResponseCode.PULL_OFFSET_MOVED);
 <span class="number">96</span>:                     <span class="keyword">break</span>;
 <span class="number">97</span>:                 <span class="keyword">default</span>:
 <span class="number">98</span>:                     <span class="keyword">break</span>;
 <span class="number">99</span>:             }
<span class="number">100</span>: 
<span class="number">101</span>:             returnResponse(requestHeader.getConsumerGroup(), requestHeader.getTopic(), ctx, response, <span class="keyword">null</span>);
<span class="number">102</span>:         }
<span class="number">103</span>: 
<span class="number">104</span>:         <span class="meta">@Override</span>
<span class="number">105</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onException</span><span class="params">(Throwable e)</span> </span>{
<span class="number">106</span>:             response.setCode(ResponseCode.SYSTEM_ERROR);
<span class="number">107</span>:             response.setRemark(<span class="string">&quot;Pull Callback Exception, &quot;</span> + RemotingHelper.exceptionSimpleDesc(e));
<span class="number">108</span>:             returnResponse(requestHeader.getConsumerGroup(), requestHeader.getTopic(), ctx, response, <span class="keyword">null</span>);
<span class="number">109</span>:             <span class="keyword">return</span>;
<span class="number">110</span>:         }
<span class="number">111</span>:     };
<span class="number">112</span>: 
<span class="number">113</span>:     <span class="comment">// &#x62C9;&#x53D6;&#x6D88;&#x606F;</span>
<span class="number">114</span>:     pullConsumer.pullBlockIfNotFound(mq, <span class="keyword">null</span>, offset, maxNums, pullCallback);
<span class="number">115</span>:     <span class="keyword">return</span> <span class="keyword">null</span>;
<span class="number">116</span>: }
</code></pre>
<h1 id="5-Filtersrv-&#x9AD8;&#x53EF;&#x7528;"><a href="#5-Filtersrv-&#x9AD8;&#x53EF;&#x7528;" class="headerlink" title="5. Filtersrv &#x9AD8;&#x53EF;&#x7528;"></a>5. Filtersrv &#x9AD8;&#x53EF;&#x7528;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_17/02.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_17/02.png" alt="Filtersrv&#x8FC7;&#x53EF;&#x7528;" class="ui centered image"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— 定时消息与消息重试</title>
    <link href="http://www.yunai.me/RocketMQ/message-schedule-and-retry/"/>
    <id>http://www.yunai.me/RocketMQ/message-schedule-and-retry/</id>
    <published>2017-05-14T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. &#x5B9A;&#x65F6;&#x6D88;&#x606F;</a><ul>
<li><a href="#">2.1 &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</a></li>
<li><a href="#">2.2 Producer &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</a></li>
<li><a href="#">2.3 Broker &#x5B58;&#x50A8;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</a></li>
<li><a href="#">2.4 Broker &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</a></li>
<li><a href="#">2.5 Broker &#x6301;&#x4E45;&#x5316;&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;</a></li>
</ul>
</li>
<li><a href="#">3. &#x6D88;&#x606F;&#x91CD;&#x8BD5;</a></li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p><strong>&#x5EFA;&#x8BAE;</strong>&#x524D;&#x7F6E;&#x9605;&#x8BFB;&#x5185;&#x5BB9;&#xFF1A;</p>
<ul class="ui list">
<li><a href="http://www.yunai.me/RocketMQ/message-send-and-receive/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x53D1;&#x9001;&#x4E0E;&#x63A5;&#x6536;&#x300B;</a></li>
<li><a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-second/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x62C9;&#x53D6;&#x4E0E;&#x6D88;&#x8D39;&#xFF08;&#x4E0B;&#xFF09;&#x300B;</a></li>
</ul>
<p>&#x1F608; &#x4E3A;&#x4EC0;&#x4E48;&#x628A;<strong>&#x5B9A;&#x65F6;&#x6D88;&#x606F;</strong>&#x4E0E;<strong>&#x6D88;&#x606F;&#x91CD;&#x8BD5;</strong>&#x653E;&#x5728;&#x4E00;&#x8D77;&#xFF1F;&#x4F60;&#x731C;&#x3002;<br>&#x1F47B; &#x4F60;&#x731C;&#x6211;&#x731C;&#x4E0D;&#x731C;&#x3002;</p>
<h1 id="2-&#x5B9A;&#x65F6;&#x6D88;&#x606F;"><a href="#2-&#x5B9A;&#x65F6;&#x6D88;&#x606F;" class="headerlink" title="2. &#x5B9A;&#x65F6;&#x6D88;&#x606F;"></a>2. &#x5B9A;&#x65F6;&#x6D88;&#x606F;</h1><blockquote>
<p><strong>&#x5B9A;&#x65F6;&#x6D88;&#x606F;</strong>&#x662F;&#x6307;&#x6D88;&#x606F;&#x53D1;&#x5230; Broker &#x540E;&#xFF0C;&#x4E0D;&#x80FD;&#x7ACB;&#x523B;&#x88AB; Consumer &#x6D88;&#x8D39;&#xFF0C;&#x8981;&#x5230;&#x7279;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#x6216;&#x8005;&#x7B49;&#x5F85;&#x7279;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x540E;&#x624D;&#x80FD;&#x88AB;&#x6D88;&#x8D39;&#x3002;</p>
</blockquote>
<p>&#x4E0B;&#x56FE;&#x662F;<strong>&#x5B9A;&#x65F6;&#x6D88;&#x606F;</strong>&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x56FE;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_15/02.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_15/02.png" alt="&#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x903B;&#x8F91;&#x56FE;.png" class="ui centered image"></a></p>
<h2 id="2-1-&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;"><a href="#2-1-&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;" class="headerlink" title="2.1 &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;"></a>2.1 &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</h2><p><code>RocketMQ</code> &#x76EE;&#x524D;&#x53EA;&#x652F;&#x6301;<strong>&#x56FA;&#x5B9A;&#x7CBE;&#x5EA6;</strong>&#x7684;&#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x3002;&#x5B98;&#x65B9;&#x8BF4;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<blockquote>
<p>&#x5982;&#x679C;&#x8981;&#x652F;&#x6301;&#x4EFB;&#x610F;&#x7684;&#x65F6;&#x95F4;&#x7CBE;&#x5EA6;&#xFF0C;&#x5728; Broker &#x5C42;&#x9762;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x505A;&#x6D88;&#x606F;&#x6392;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x518D;&#x6D89;&#x53CA;&#x5230;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x90A3;&#x4E48;&#x6D88;&#x606F;&#x6392;&#x5E8F;&#x8981;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x7684;&#x4EA7;&#x751F;&#x5DE8;&#x5927;&#x6027;&#x80FD;&#x5F00;&#x9500;&#x3002;</p>
</blockquote>
<ul class="ui list">
<li>&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;&#xFF1A;</li>
</ul>
<table>
<thead>
<tr>
<th>&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</th>
<th>&#x65F6;&#x95F4;</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>1s</td>
</tr>
<tr>
<td>2</td>
<td>5s</td>
</tr>
<tr>
<td>3</td>
<td>10s</td>
</tr>
<tr>
<td>4</td>
<td>30s</td>
</tr>
<tr>
<td>5</td>
<td>1m</td>
</tr>
<tr>
<td>6</td>
<td>2m</td>
</tr>
<tr>
<td>7</td>
<td>3m</td>
</tr>
<tr>
<td>8</td>
<td>4m</td>
</tr>
<tr>
<td>9</td>
<td>5m</td>
</tr>
<tr>
<td>10</td>
<td>6m</td>
</tr>
<tr>
<td>11</td>
<td>7m</td>
</tr>
<tr>
<td>12</td>
<td>8m</td>
</tr>
<tr>
<td>13</td>
<td>9m</td>
</tr>
<tr>
<td>14</td>
<td>10m</td>
</tr>
<tr>
<td>15</td>
<td>20m</td>
</tr>
<tr>
<td>16</td>
<td>30m</td>
</tr>
<tr>
<td>17</td>
<td>1h</td>
</tr>
<tr>
<td>18</td>
<td>2h</td>
</tr>
</tbody>
</table>
<ul class="ui list">
<li><p>&#x6838;&#x5FC3;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;MessageStoreConfig.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x6D88;&#x606F;&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;&#x5B57;&#x7B26;&#x4E32;&#x914D;&#x7F6E;</div><div class="line"> 4:  */</div><div class="line"> <span class="number">5</span>: <span class="keyword">private</span> String messageDelayLevel = <span class="string">&quot;1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h&quot;</span>;</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ScheduleMessageService.java&#x3011;</span></div><div class="line"> <span class="number">8</span>: <span class="comment">/**</span></div><div class="line"> 9:  * &#x89E3;&#x6790;&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</div><div class="line">10:  *</div><div class="line">11:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x89E3;&#x6790;&#x6210;&#x529F;</div><div class="line">12:  */</div><div class="line"><span class="number">13</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">parseDelayLevel</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">14</span>:     HashMap&lt;String, Long&gt; timeUnitTable = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line"><span class="number">15</span>:     timeUnitTable.put(<span class="string">&quot;s&quot;</span>, <span class="number">1000L</span>);</div><div class="line"><span class="number">16</span>:     timeUnitTable.put(<span class="string">&quot;m&quot;</span>, <span class="number">1000L</span> * <span class="number">60</span>);</div><div class="line"><span class="number">17</span>:     timeUnitTable.put(<span class="string">&quot;h&quot;</span>, <span class="number">1000L</span> * <span class="number">60</span> * <span class="number">60</span>);</div><div class="line"><span class="number">18</span>:     timeUnitTable.put(<span class="string">&quot;d&quot;</span>, <span class="number">1000L</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>:     String levelString = <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getMessageDelayLevel();</div><div class="line"><span class="number">21</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">22</span>:         String[] levelArray = levelString.split(<span class="string">&quot; &quot;</span>);</div><div class="line"><span class="number">23</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; levelArray.length; i++) {</div><div class="line"><span class="number">24</span>:             String value = levelArray[i];</div><div class="line"><span class="number">25</span>:             String ch = value.substring(value.length() - <span class="number">1</span>);</div><div class="line"><span class="number">26</span>:             Long tu = timeUnitTable.get(ch);</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>:             <span class="keyword">int</span> level = i + <span class="number">1</span>;</div><div class="line"><span class="number">29</span>:             <span class="keyword">if</span> (level &gt; <span class="keyword">this</span>.maxDelayLevel) {</div><div class="line"><span class="number">30</span>:                 <span class="keyword">this</span>.maxDelayLevel = level;</div><div class="line"><span class="number">31</span>:             }</div><div class="line"><span class="number">32</span>:             <span class="keyword">long</span> num = Long.parseLong(value.substring(<span class="number">0</span>, value.length() - <span class="number">1</span>));</div><div class="line"><span class="number">33</span>:             <span class="keyword">long</span> delayTimeMillis = tu * num;</div><div class="line"><span class="number">34</span>:             <span class="keyword">this</span>.delayLevelTable.put(level, delayTimeMillis);</div><div class="line"><span class="number">35</span>:         }</div><div class="line"><span class="number">36</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">37</span>:         log.error(<span class="string">&quot;parseDelayLevel exception&quot;</span>, e);</div><div class="line"><span class="number">38</span>:         log.info(<span class="string">&quot;levelString String = {}&quot;</span>, levelString);</div><div class="line"><span class="number">39</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">40</span>:     }</div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">43</span>: }</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="2-2-Producer-&#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"><a href="#2-2-Producer-&#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;" class="headerlink" title="2.2 Producer &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"></a>2.2 Producer &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x1F985;&#x53D1;&#x9001;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x7684;<strong>&#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</strong>&#x3002;</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">Message msg = <span class="keyword">new</span> Message(...);</div><div class="line">msg.setDelayTimeLevel(level);</div></pre></td></tr></table></figure>
<h2 id="2-3-Broker-&#x5B58;&#x50A8;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"><a href="#2-3-Broker-&#x5B58;&#x50A8;&#x5B9A;&#x65F6;&#x6D88;&#x606F;" class="headerlink" title="2.3 Broker &#x5B58;&#x50A8;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"></a>2.3 Broker &#x5B58;&#x50A8;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x1F985; &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x8FDB;&#x5165; <code>Topic</code> &#x4E3A; <code>SCHEDULE_TOPIC_XXXX</code>&#x3002;</li>
<li>&#x1F985; &#x5EF6;&#x8FDF;&#x7EA7;&#x522B; &#x4E0E; &#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7; &#x505A;<strong>&#x56FA;&#x5B9A;&#x6620;&#x5C04;&#xFF1A;QueueId = DelayLevel - 1</strong>&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;CommitLog.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x6DFB;&#x52A0;&#x6D88;&#x606F;&#xFF0C;&#x8FD4;&#x56DE;&#x6D88;&#x606F;&#x7ED3;&#x679C;</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line"> 6:  * <span class="doctag">@return</span> &#x7ED3;&#x679C;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="function"><span class="keyword">public</span> PutMessageResult <span class="title">putMessage</span><span class="params">(<span class="keyword">final</span> MessageExtBrokerInner msg)</span> </span>{</div><div class="line"> <span class="number">9</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;) </span></div><div class="line"><span class="number">10</span>: </div><div class="line"><span class="number">11</span>:     <span class="comment">// &#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x5904;&#x7406;</span></div><div class="line"><span class="number">12</span>:     <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(msg.getSysFlag());</div><div class="line"><span class="number">13</span>:     <span class="keyword">if</span> (tranType == MessageSysFlag.TRANSACTION_NOT_TYPE<span class="comment">//</span></div><div class="line"><span class="number">14</span>:         || tranType == MessageSysFlag.TRANSACTION_COMMIT_TYPE) {</div><div class="line"><span class="number">15</span>:         <span class="comment">// Delay Delivery</span></div><div class="line"><span class="number">16</span>:         <span class="keyword">if</span> (msg.getDelayTimeLevel() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">17</span>:             <span class="keyword">if</span> (msg.getDelayTimeLevel() &gt; <span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {</div><div class="line"><span class="number">18</span>:                 msg.setDelayTimeLevel(<span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel());</div><div class="line"><span class="number">19</span>:             }</div><div class="line"><span class="number">20</span>: </div><div class="line"><span class="number">21</span>:             <span class="comment">// &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x8FDB;&#x5165; `Topic` &#x4E3A; `SCHEDULE_TOPIC_XXXX` &#x3002;</span></div><div class="line"><span class="number">22</span>:             topic = ScheduleMessageService.SCHEDULE_TOPIC;</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:             <span class="comment">// &#x5EF6;&#x8FDF;&#x7EA7;&#x522B; &#x4E0E; &#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7; &#x505A;&#x56FA;&#x5B9A;&#x6620;&#x5C04;</span></div><div class="line"><span class="number">25</span>:             queueId = ScheduleMessageService.delayLevel2QueueId(msg.getDelayTimeLevel());</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>:             <span class="comment">// Backup real topic, queueId</span></div><div class="line"><span class="number">28</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_TOPIC, msg.getTopic());</div><div class="line"><span class="number">29</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_QUEUE_ID, String.valueOf(msg.getQueueId()));</div><div class="line"><span class="number">30</span>:             msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));</div><div class="line"><span class="number">31</span>: </div><div class="line"><span class="number">32</span>:             msg.setTopic(topic);</div><div class="line"><span class="number">33</span>:             msg.setQueueId(queueId);</div><div class="line"><span class="number">34</span>:         }</div><div class="line"><span class="number">35</span>:     }</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;) </span></div><div class="line"><span class="number">38</span>: }</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ScheduleMessageService.java&#x3011;</span></div><div class="line"><span class="number">41</span>: <span class="comment">/**</span></div><div class="line">42:  * &#x6839;&#x636E; &#x5EF6;&#x8FDF;&#x7EA7;&#x522B; &#x8BA1;&#x7B97; &#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">43:  * QueueId = DelayLevel - 1</div><div class="line">44:  *</div><div class="line">45:  * <span class="doctag">@param</span> delayLevel &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</div><div class="line">46:  * <span class="doctag">@return</span> &#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">47:  */</div><div class="line"><span class="number">48</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">delayLevel2QueueId</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> delayLevel)</span> </span>{</div><div class="line"><span class="number">49</span>:     <span class="keyword">return</span> delayLevel - <span class="number">1</span>;</div><div class="line"><span class="number">50</span>: }</div></pre></td></tr></table></figure>
<hr>
<ul class="ui list">
<li>&#x1F985; &#x751F;&#x6210; <code>ConsumeQueue</code> &#x65F6;&#xFF0C;&#x6BCF;&#x6761;&#x6D88;&#x606F;&#x7684; <code>tagsCode</code> &#x4F7F;&#x7528;&#x3010;&#x6D88;&#x606F;&#x8BA1;&#x5212;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x3011;&#x3002;&#x8FD9;&#x6837;&#xFF0C;<code>ScheduleMessageService</code> &#x5728;&#x8F6E;&#x8BE2; <code>ConsumeQueue</code> &#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <code>tagsCode</code> &#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;CommitLog.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * check the message and returns the message size</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@return</span> 0 Come the end of the file // &gt;0 Normal messages // -1 Message checksum failure</div><div class="line"> 6:  */</div><div class="line"> <span class="number">7</span>: <span class="function"><span class="keyword">public</span> DispatchRequest <span class="title">checkMessageAndReturnSize</span><span class="params">(ByteBuffer byteBuffer, <span class="keyword">final</span> <span class="keyword">boolean</span> checkCRC, <span class="keyword">final</span> <span class="keyword">boolean</span> readBody)</span> </span>{</div><div class="line"> <span class="number">8</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">9</span>:         <span class="comment">// // ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">10</span>: </div><div class="line"><span class="number">11</span>:         <span class="comment">// 17 properties</span></div><div class="line"><span class="number">12</span>:         <span class="keyword">short</span> propertiesLength = byteBuffer.getShort();</div><div class="line"><span class="number">13</span>:         <span class="keyword">if</span> (propertiesLength &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">14</span>:             <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">15</span>:             String tags = propertiesMap.get(MessageConst.PROPERTY_TAGS);</div><div class="line"><span class="number">16</span>:             <span class="keyword">if</span> (tags != <span class="keyword">null</span> &amp;&amp; tags.length() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">17</span>:                 tagsCode = MessageExtBrokerInner.tagsString2tagsCode(MessageExt.parseTopicFilterType(sysFlag), tags);</div><div class="line"><span class="number">18</span>:             }</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>:             <span class="comment">// Timing message processing</span></div><div class="line"><span class="number">21</span>:             {</div><div class="line"><span class="number">22</span>:                 String t = propertiesMap.get(MessageConst.PROPERTY_DELAY_TIME_LEVEL);</div><div class="line"><span class="number">23</span>:                 <span class="keyword">if</span> (ScheduleMessageService.SCHEDULE_TOPIC.equals(topic) &amp;&amp; t != <span class="keyword">null</span>) {</div><div class="line"><span class="number">24</span>:                     <span class="keyword">int</span> delayLevel = Integer.parseInt(t);</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:                     <span class="keyword">if</span> (delayLevel &gt; <span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {</div><div class="line"><span class="number">27</span>:                         delayLevel = <span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel();</div><div class="line"><span class="number">28</span>:                     }</div><div class="line"><span class="number">29</span>: </div><div class="line"><span class="number">30</span>:                     <span class="keyword">if</span> (delayLevel &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">31</span>:                         tagsCode = <span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().computeDeliverTimestamp(delayLevel,</div><div class="line"><span class="number">32</span>:                             storeTimestamp);</div><div class="line"><span class="number">33</span>:                     }</div><div class="line"><span class="number">34</span>:                 }</div><div class="line"><span class="number">35</span>:             }</div><div class="line"><span class="number">36</span>:         }</div><div class="line"><span class="number">37</span>: </div><div class="line"><span class="number">38</span>:         <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:         <span class="keyword">return</span> <span class="keyword">new</span> DispatchRequest(<span class="comment">//</span></div><div class="line"><span class="number">41</span>:             topic, <span class="comment">// 1</span></div><div class="line"><span class="number">42</span>:             queueId, <span class="comment">// 2</span></div><div class="line"><span class="number">43</span>:             physicOffset, <span class="comment">// 3</span></div><div class="line"><span class="number">44</span>:             totalSize, <span class="comment">// 4</span></div><div class="line"><span class="number">45</span>:             tagsCode, <span class="comment">// 5</span></div><div class="line"><span class="number">46</span>:             storeTimestamp, <span class="comment">// 6</span></div><div class="line"><span class="number">47</span>:             queueOffset, <span class="comment">// 7</span></div><div class="line"><span class="number">48</span>:             keys, <span class="comment">// 8</span></div><div class="line"><span class="number">49</span>:             uniqKey, <span class="comment">//9</span></div><div class="line"><span class="number">50</span>:             sysFlag, <span class="comment">// 9</span></div><div class="line"><span class="number">51</span>:             preparedTransactionOffset<span class="comment">// 10</span></div><div class="line"><span class="number">52</span>:         );</div><div class="line"><span class="number">53</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">54</span>:     }</div><div class="line"><span class="number">55</span>: </div><div class="line"><span class="number">56</span>:     <span class="keyword">return</span> <span class="keyword">new</span> DispatchRequest(-<span class="number">1</span>, <span class="keyword">false</span> <span class="comment">/* success */</span>);</div><div class="line"><span class="number">57</span>: }</div><div class="line"><span class="number">58</span>: </div><div class="line"><span class="number">59</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ScheduleMessageService.java&#x3011;</span></div><div class="line"><span class="number">60</span>: <span class="comment">/**</span></div><div class="line">61:  * &#x8BA1;&#x7B97; &#x6295;&#x9012;&#x65F6;&#x95F4;&#x3010;&#x8BA1;&#x5212;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x3011;</div><div class="line">62:  *</div><div class="line">63:  * <span class="doctag">@param</span> delayLevel &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</div><div class="line">64:  * <span class="doctag">@param</span> storeTimestamp &#x5B58;&#x50A8;&#x65F6;&#x95F4;</div><div class="line">65:  * <span class="doctag">@return</span> &#x6295;&#x9012;&#x65F6;&#x95F4;&#x3010;&#x8BA1;&#x5212;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x3011;</div><div class="line">66:  */</div><div class="line"><span class="number">67</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">computeDeliverTimestamp</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> delayLevel, <span class="keyword">final</span> <span class="keyword">long</span> storeTimestamp)</span> </span>{</div><div class="line"><span class="number">68</span>:     Long time = <span class="keyword">this</span>.delayLevelTable.get(delayLevel);</div><div class="line"><span class="number">69</span>:     <span class="keyword">if</span> (time != <span class="keyword">null</span>) {</div><div class="line"><span class="number">70</span>:         <span class="keyword">return</span> time + storeTimestamp;</div><div class="line"><span class="number">71</span>:     }</div><div class="line"><span class="number">72</span>: </div><div class="line"><span class="number">73</span>:     <span class="keyword">return</span> storeTimestamp + <span class="number">1000</span>;</div><div class="line"><span class="number">74</span>: }</div></pre></td></tr></table></figure>
<h2 id="2-4-Broker-&#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"><a href="#2-4-Broker-&#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;" class="headerlink" title="2.4 Broker &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;"></a>2.4 Broker &#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;</h2><ul class="ui list">
<li>&#x1F985; &#x5BF9; <code>SCHEDULE_TOPIC_XXXX</code> &#x6BCF;&#x6761;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x5BF9;&#x5E94;<strong>&#x5355;&#x72EC;&#x4E00;&#x4E2A;</strong>&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x8FDB;&#x884C;&#x8F6E;&#x8BE2;&#xFF0C;&#x53D1;&#x9001; <strong>&#x5230;&#x8FBE;&#x6295;&#x9012;&#x65F6;&#x95F4;&#x3010;&#x8BA1;&#x5212;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x3011;</strong> &#x7684;&#x6D88;&#x606F;&#x3002;</li>
</ul>
<p>&#x4E0B;&#x56FE;&#x662F;&#x53D1;&#x9001;&#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x7684;&#x5904;&#x7406;&#x903B;&#x8F91;&#x56FE;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_15/01.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_15/01.png" alt="&#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x5B9A;&#x65F6;&#x903B;&#x8F91;" class="ui centered image"></a></p>
<p>&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">/**</span></div><div class="line">  2:  * &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F; &#x53D1;&#x9001;&#xFF08;&#x6295;&#x9012;&#xFF09;&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;</div><div class="line">  3:  */</div><div class="line">  <span class="number">4</span>: <span class="class"><span class="keyword">class</span> <span class="title">DeliverDelayedMessageTimerTask</span> <span class="keyword">extends</span> <span class="title">TimerTask</span> </span>{</div><div class="line">  <span class="number">5</span>:     <span class="comment">/**</span></div><div class="line">  6:      * &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</div><div class="line">  7:      */</div><div class="line">  <span class="number">8</span>:     <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> delayLevel;</div><div class="line">  <span class="number">9</span>:     <span class="comment">/**</span></div><div class="line"> 10:      * &#x4F4D;&#x7F6E;</div><div class="line"> 11:      */</div><div class="line"> <span class="number">12</span>:     <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> offset;</div><div class="line"> <span class="number">13</span>: </div><div class="line"> <span class="number">14</span>:     <span class="function"><span class="keyword">public</span> <span class="title">DeliverDelayedMessageTimerTask</span><span class="params">(<span class="keyword">int</span> delayLevel, <span class="keyword">long</span> offset)</span> </span>{</div><div class="line"> <span class="number">15</span>:         <span class="keyword">this</span>.delayLevel = delayLevel;</div><div class="line"> <span class="number">16</span>:         <span class="keyword">this</span>.offset = offset;</div><div class="line"> <span class="number">17</span>:     }</div><div class="line"> <span class="number">18</span>: </div><div class="line"> <span class="number">19</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">20</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">21</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">22</span>:             <span class="keyword">this</span>.executeOnTimeup();</div><div class="line"> <span class="number">23</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">24</span>:             <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"> <span class="number">25</span>:             log.error(<span class="string">&quot;ScheduleMessageService, executeOnTimeup exception&quot;</span>, e);</div><div class="line"> <span class="number">26</span>:             ScheduleMessageService.<span class="keyword">this</span>.timer.schedule(<span class="keyword">new</span> DeliverDelayedMessageTimerTask(</div><div class="line"> <span class="number">27</span>:                 <span class="keyword">this</span>.delayLevel, <span class="keyword">this</span>.offset), DELAY_FOR_A_PERIOD);</div><div class="line"> <span class="number">28</span>:         }</div><div class="line"> <span class="number">29</span>:     }</div><div class="line"> <span class="number">30</span>: </div><div class="line"> <span class="number">31</span>:     <span class="comment">/**</span></div><div class="line"> 32:      * &#x7EA0;&#x6B63;&#x53EF;&#x6295;&#x9012;&#x65F6;&#x95F4;&#x3002;</div><div class="line"> 33:      * &#x56E0;&#x4E3A;&#x53D1;&#x9001;&#x7EA7;&#x522B;&#x5BF9;&#x5E94;&#x7684;&#x53D1;&#x9001;&#x95F4;&#x9694;&#x53EF;&#x4EE5;&#x8C03;&#x6574;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x8FC7;&#x5F53;&#x524D;&#x95F4;&#x9694;&#xFF0C;&#x5219;&#x4FEE;&#x6B63;&#x6210;&#x5F53;&#x524D;&#x914D;&#x7F6E;&#xFF0C;&#x907F;&#x514D;&#x540E;&#x9762;&#x7684;&#x6D88;&#x606F;&#x65E0;&#x6CD5;&#x53D1;&#x9001;&#x3002;</div><div class="line"> 34:      *</div><div class="line"> 35:      * <span class="doctag">@param</span> now &#x5F53;&#x524D;&#x65F6;&#x95F4;</div><div class="line"> 36:      * <span class="doctag">@param</span> deliverTimestamp &#x6295;&#x9012;&#x65F6;&#x95F4;</div><div class="line"> 37:      * <span class="doctag">@return</span> &#x7EA0;&#x6B63;&#x7ED3;&#x679C;</div><div class="line"> 38:      */</div><div class="line"> <span class="number">39</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">correctDeliverTimestamp</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> now, <span class="keyword">final</span> <span class="keyword">long</span> deliverTimestamp)</span> </span>{</div><div class="line"> <span class="number">40</span>:         <span class="keyword">long</span> result = deliverTimestamp;</div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:         <span class="keyword">long</span> maxTimestamp = now + ScheduleMessageService.<span class="keyword">this</span>.delayLevelTable.get(<span class="keyword">this</span>.delayLevel);</div><div class="line"> <span class="number">43</span>:         <span class="keyword">if</span> (deliverTimestamp &gt; maxTimestamp) {</div><div class="line"> <span class="number">44</span>:             result = now;</div><div class="line"> <span class="number">45</span>:         }</div><div class="line"> <span class="number">46</span>: </div><div class="line"> <span class="number">47</span>:         <span class="keyword">return</span> result;</div><div class="line"> <span class="number">48</span>:     }</div><div class="line"> <span class="number">49</span>: </div><div class="line"> <span class="number">50</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeOnTimeup</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">51</span>:         ConsumeQueue cq = ScheduleMessageService.<span class="keyword">this</span>.defaultMessageStore.findConsumeQueue(SCHEDULE_TOPIC,  delayLevel2QueueId(delayLevel));</div><div class="line"> <span class="number">52</span>: </div><div class="line"> <span class="number">53</span>:         <span class="keyword">long</span> failScheduleOffset = offset;</div><div class="line"> <span class="number">54</span>: </div><div class="line"> <span class="number">55</span>:         <span class="keyword">if</span> (cq != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">56</span>:             SelectMappedBufferResult bufferCQ = cq.getIndexBuffer(<span class="keyword">this</span>.offset);</div><div class="line"> <span class="number">57</span>:             <span class="keyword">if</span> (bufferCQ != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">58</span>:                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">59</span>:                     <span class="keyword">long</span> nextOffset = offset;</div><div class="line"> <span class="number">60</span>:                     <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line"> <span class="number">61</span>:                     <span class="keyword">for</span> (; i &lt; bufferCQ.getSize(); i += ConsumeQueue.CQ_STORE_UNIT_SIZE) {</div><div class="line"> <span class="number">62</span>:                         <span class="keyword">long</span> offsetPy = bufferCQ.getByteBuffer().getLong();</div><div class="line"> <span class="number">63</span>:                         <span class="keyword">int</span> sizePy = bufferCQ.getByteBuffer().getInt();</div><div class="line"> <span class="number">64</span>:                         <span class="keyword">long</span> tagsCode = bufferCQ.getByteBuffer().getLong();</div><div class="line"> <span class="number">65</span>: </div><div class="line"> <span class="number">66</span>:                         <span class="keyword">long</span> now = System.currentTimeMillis();</div><div class="line"> <span class="number">67</span>:                         <span class="keyword">long</span> deliverTimestamp = <span class="keyword">this</span>.correctDeliverTimestamp(now, tagsCode);</div><div class="line"> <span class="number">68</span>: </div><div class="line"> <span class="number">69</span>:                         nextOffset = offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);</div><div class="line"> <span class="number">70</span>: </div><div class="line"> <span class="number">71</span>:                         <span class="keyword">long</span> countdown = deliverTimestamp - now;</div><div class="line"> <span class="number">72</span>: </div><div class="line"> <span class="number">73</span>:                         <span class="keyword">if</span> (countdown &lt;= <span class="number">0</span>) { <span class="comment">// &#x6D88;&#x606F;&#x5230;&#x8FBE;&#x53EF;&#x53D1;&#x9001;&#x65F6;&#x95F4;</span></div><div class="line"> <span class="number">74</span>:                             MessageExt msgExt = ScheduleMessageService.<span class="keyword">this</span>.defaultMessageStore.lookMessageByOffset(offsetPy, sizePy);</div><div class="line"> <span class="number">75</span>:                             <span class="keyword">if</span> (msgExt != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">76</span>:                                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">77</span>:                                     <span class="comment">// &#x53D1;&#x9001;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">78</span>:                                     MessageExtBrokerInner msgInner = <span class="keyword">this</span>.messageTimeup(msgExt);</div><div class="line"> <span class="number">79</span>:                                     PutMessageResult putMessageResult = ScheduleMessageService.<span class="keyword">this</span>.defaultMessageStore.putMessage(msgInner);</div><div class="line"> <span class="number">80</span>:                                     <span class="keyword">if</span> (putMessageResult != <span class="keyword">null</span> &amp;&amp; putMessageResult.getPutMessageStatus() == PutMessageStatus.PUT_OK) { <span class="comment">// &#x53D1;&#x9001;&#x6210;&#x529F;</span></div><div class="line"> <span class="number">81</span>:                                         <span class="keyword">continue</span>;</div><div class="line"> <span class="number">82</span>:                                     } <span class="keyword">else</span> { <span class="comment">// &#x53D1;&#x9001;&#x5931;&#x8D25;</span></div><div class="line"> <span class="number">83</span>:                                         <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"> <span class="number">84</span>:                                         log.error(<span class="string">&quot;ScheduleMessageService, a message time up, but reput it failed, topic: {} msgId {}&quot;</span>, msgExt.getTopic(), msgExt.getMsgId());</div><div class="line"> <span class="number">85</span>: </div><div class="line"> <span class="number">86</span>:                                         <span class="comment">// &#x5B89;&#x6392;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1;</span></div><div class="line"> <span class="number">87</span>:                                         ScheduleMessageService.<span class="keyword">this</span>.timer.schedule(<span class="keyword">new</span> DeliverDelayedMessageTimerTask(<span class="keyword">this</span>.delayLevel, nextOffset), DELAY_FOR_A_PERIOD);</div><div class="line"> <span class="number">88</span>: </div><div class="line"> <span class="number">89</span>:                                         <span class="comment">// &#x66F4;&#x65B0;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">90</span>:                                         ScheduleMessageService.<span class="keyword">this</span>.updateOffset(<span class="keyword">this</span>.delayLevel, nextOffset);</div><div class="line"> <span class="number">91</span>:                                         <span class="keyword">return</span>;</div><div class="line"> <span class="number">92</span>:                                     }</div><div class="line"> <span class="number">93</span>:                                 } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">94</span>:                                     <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"> <span class="number">95</span>:                                     log.error(<span class="string">&quot;ScheduleMessageService, messageTimeup execute error, drop it. msgExt=&quot;</span></div><div class="line"> <span class="number">96</span>:                                             + msgExt + <span class="string">&quot;, nextOffset=&quot;</span> + nextOffset + <span class="string">&quot;,offsetPy=&quot;</span> + offsetPy + <span class="string">&quot;,sizePy=&quot;</span> + sizePy, e);</div><div class="line"> <span class="number">97</span>:                                 }</div><div class="line"> <span class="number">98</span>:                             }</div><div class="line"> <span class="number">99</span>:                         } <span class="keyword">else</span> {</div><div class="line"><span class="number">100</span>:                             <span class="comment">// &#x5B89;&#x6392;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1;</span></div><div class="line"><span class="number">101</span>:                             ScheduleMessageService.<span class="keyword">this</span>.timer.schedule(<span class="keyword">new</span> DeliverDelayedMessageTimerTask(<span class="keyword">this</span>.delayLevel, nextOffset), countdown);</div><div class="line"><span class="number">102</span>: </div><div class="line"><span class="number">103</span>:                             <span class="comment">// &#x66F4;&#x65B0;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">104</span>:                             ScheduleMessageService.<span class="keyword">this</span>.updateOffset(<span class="keyword">this</span>.delayLevel, nextOffset);</div><div class="line"><span class="number">105</span>:                             <span class="keyword">return</span>;</div><div class="line"><span class="number">106</span>:                         }</div><div class="line"><span class="number">107</span>:                     } <span class="comment">// end of for</span></div><div class="line"><span class="number">108</span>: </div><div class="line"><span class="number">109</span>:                     nextOffset = offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);</div><div class="line"><span class="number">110</span>: </div><div class="line"><span class="number">111</span>:                     <span class="comment">// &#x5B89;&#x6392;&#x4E0B;&#x4E00;&#x6B21;&#x4EFB;&#x52A1;</span></div><div class="line"><span class="number">112</span>:                     ScheduleMessageService.<span class="keyword">this</span>.timer.schedule(<span class="keyword">new</span> DeliverDelayedMessageTimerTask(<span class="keyword">this</span>.delayLevel, nextOffset), DELAY_FOR_A_WHILE);</div><div class="line"><span class="number">113</span>: </div><div class="line"><span class="number">114</span>:                     <span class="comment">// &#x66F4;&#x65B0;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">115</span>:                     ScheduleMessageService.<span class="keyword">this</span>.updateOffset(<span class="keyword">this</span>.delayLevel, nextOffset);</div><div class="line"><span class="number">116</span>:                     <span class="keyword">return</span>;</div><div class="line"><span class="number">117</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">118</span>:                     bufferCQ.release();</div><div class="line"><span class="number">119</span>:                 }</div><div class="line"><span class="number">120</span>:             } <span class="comment">// end of if (bufferCQ != null)</span></div><div class="line"><span class="number">121</span>:             <span class="keyword">else</span> { <span class="comment">// &#x6D88;&#x8D39;&#x961F;&#x5217;&#x5DF2;&#x7ECF;&#x88AB;&#x5220;&#x9664;&#x90E8;&#x5206;&#xFF0C;&#x8DF3;&#x8F6C;&#x5230;&#x6700;&#x5C0F;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">122</span>:                 <span class="keyword">long</span> cqMinOffset = cq.getMinOffsetInQueue();</div><div class="line"><span class="number">123</span>:                 <span class="keyword">if</span> (offset &lt; cqMinOffset) {</div><div class="line"><span class="number">124</span>:                     failScheduleOffset = cqMinOffset;</div><div class="line"><span class="number">125</span>:                     log.error(<span class="string">&quot;schedule CQ offset invalid. offset=&quot;</span> + offset + <span class="string">&quot;, cqMinOffset=&quot;</span></div><div class="line"><span class="number">126</span>:                         + cqMinOffset + <span class="string">&quot;, queueId=&quot;</span> + cq.getQueueId());</div><div class="line"><span class="number">127</span>:                 }</div><div class="line"><span class="number">128</span>:             }</div><div class="line"><span class="number">129</span>:         } <span class="comment">// end of if (cq != null)</span></div><div class="line"><span class="number">130</span>: </div><div class="line"><span class="number">131</span>:         ScheduleMessageService.<span class="keyword">this</span>.timer.schedule(<span class="keyword">new</span> DeliverDelayedMessageTimerTask(<span class="keyword">this</span>.delayLevel, failScheduleOffset), DELAY_FOR_A_WHILE);</div><div class="line"><span class="number">132</span>:     }</div><div class="line"><span class="number">133</span>: </div><div class="line"><span class="number">134</span>:     <span class="comment">/**</span></div><div class="line">135:      * &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5185;&#x5BB9;</div><div class="line">136:      *</div><div class="line">137:      * <span class="doctag">@param</span> msgExt &#x6D88;&#x606F;</div><div class="line">138:      * <span class="doctag">@return</span> &#x6D88;&#x606F;</div><div class="line">139:      */</div><div class="line"><span class="number">140</span>:     <span class="function"><span class="keyword">private</span> MessageExtBrokerInner <span class="title">messageTimeup</span><span class="params">(MessageExt msgExt)</span> </span>{</div><div class="line"><span class="number">141</span>:         MessageExtBrokerInner msgInner = <span class="keyword">new</span> MessageExtBrokerInner();</div><div class="line"><span class="number">142</span>:         msgInner.setBody(msgExt.getBody());</div><div class="line"><span class="number">143</span>:         msgInner.setFlag(msgExt.getFlag());</div><div class="line"><span class="number">144</span>:         MessageAccessor.setProperties(msgInner, msgExt.getProperties());</div><div class="line"><span class="number">145</span>: </div><div class="line"><span class="number">146</span>:         TopicFilterType topicFilterType = MessageExt.parseTopicFilterType(msgInner.getSysFlag());</div><div class="line"><span class="number">147</span>:         <span class="keyword">long</span> tagsCodeValue =</div><div class="line"><span class="number">148</span>:             MessageExtBrokerInner.tagsString2tagsCode(topicFilterType, msgInner.getTags());</div><div class="line"><span class="number">149</span>:         msgInner.setTagsCode(tagsCodeValue);</div><div class="line"><span class="number">150</span>:         msgInner.setPropertiesString(MessageDecoder.messageProperties2String(msgExt.getProperties()));</div><div class="line"><span class="number">151</span>: </div><div class="line"><span class="number">152</span>:         msgInner.setSysFlag(msgExt.getSysFlag());</div><div class="line"><span class="number">153</span>:         msgInner.setBornTimestamp(msgExt.getBornTimestamp());</div><div class="line"><span class="number">154</span>:         msgInner.setBornHost(msgExt.getBornHost());</div><div class="line"><span class="number">155</span>:         msgInner.setStoreHost(msgExt.getStoreHost());</div><div class="line"><span class="number">156</span>:         msgInner.setReconsumeTimes(msgExt.getReconsumeTimes());</div><div class="line"><span class="number">157</span>: </div><div class="line"><span class="number">158</span>:         msgInner.setWaitStoreMsgOK(<span class="keyword">false</span>);</div><div class="line"><span class="number">159</span>:         MessageAccessor.clearProperty(msgInner, MessageConst.PROPERTY_DELAY_TIME_LEVEL);</div><div class="line"><span class="number">160</span>: </div><div class="line"><span class="number">161</span>:         msgInner.setTopic(msgInner.getProperty(MessageConst.PROPERTY_REAL_TOPIC));</div><div class="line"><span class="number">162</span>: </div><div class="line"><span class="number">163</span>:         String queueIdStr = msgInner.getProperty(MessageConst.PROPERTY_REAL_QUEUE_ID);</div><div class="line"><span class="number">164</span>:         <span class="keyword">int</span> queueId = Integer.parseInt(queueIdStr);</div><div class="line"><span class="number">165</span>:         msgInner.setQueueId(queueId);</div><div class="line"><span class="number">166</span>: </div><div class="line"><span class="number">167</span>:         <span class="keyword">return</span> msgInner;</div><div class="line"><span class="number">168</span>:     }</div><div class="line"><span class="number">169</span>: }</div></pre></td></tr></table></figure>
<h2 id="2-5-Broker-&#x6301;&#x4E45;&#x5316;&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;"><a href="#2-5-Broker-&#x6301;&#x4E45;&#x5316;&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;" class="headerlink" title="2.5 Broker &#x6301;&#x4E45;&#x5316;&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;"></a>2.5 Broker &#x6301;&#x4E45;&#x5316;&#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;</h2><ul class="ui list">
<li>&#x1F985; &#x5B9A;&#x65F6;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;&#x5B58;&#x50A8;&#x5728;&#x6587;&#x4EF6;(<code>../config/delayOffset.json</code>)&#x91CC;</li>
<li>&#x1F985; &#x6BCF; 10s &#x5B9A;&#x65F6;&#x6301;&#x4E45;&#x5316;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ScheduleMessageService.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3: public void start() {</div><div class="line"> 4:     // &#x5B9A;&#x65F6;&#x53D1;&#x9001;&#x6D88;&#x606F;</div><div class="line"> 5:     for (Map.Entry&lt;Integer, Long&gt; entry : this.delayLevelTable.entrySet()) {</div><div class="line"> 6:         Integer level = entry.getKey();</div><div class="line"> 7:         Long timeDelay = entry.getValue();</div><div class="line"> 8:         Long offset = this.offsetTable.get(level);</div><div class="line"> 9:         if (null == offset) {</div><div class="line">10:             offset = 0L;</div><div class="line">11:         }</div><div class="line">12: </div><div class="line">13:         if (timeDelay != null) {</div><div class="line">14:             this.timer.schedule(new DeliverDelayedMessageTimerTask(level, offset), FIRST_DELAY_TIME);</div><div class="line">15:         }</div><div class="line">16:     }</div><div class="line">17: </div><div class="line">18:     // &#x5B9A;&#x65F6;&#x6301;&#x4E45;&#x5316;&#x53D1;&#x9001;&#x8FDB;&#x5EA6;</div><div class="line">19:     this.timer.scheduleAtFixedRate(new TimerTask() {</div><div class="line">20: </div><div class="line">21:         <span class="doctag">@Override</span></div><div class="line">22:         public void run() {</div><div class="line">23:             try {</div><div class="line">24:                 ScheduleMessageService.this.persist();</div><div class="line">25:             } catch (Exception e) {</div><div class="line">26:                 log.error(&quot;scheduleAtFixedRate flush exception&quot;, e);</div><div class="line">27:             }</div><div class="line">28:         }</div><div class="line">29:     }, 10000, this.defaultMessageStore.getMessageStoreConfig().getFlushDelayOffsetInterval());</div><div class="line">30: }</div></pre></td></tr></table></figure>
<h1 id="3-&#x6D88;&#x606F;&#x91CD;&#x8BD5;"><a href="#3-&#x6D88;&#x606F;&#x91CD;&#x8BD5;" class="headerlink" title="3. &#x6D88;&#x606F;&#x91CD;&#x8BD5;"></a>3. &#x6D88;&#x606F;&#x91CD;&#x8BD5;</h1><blockquote>
<p>Consumer &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x5931;&#x8D25;&#x540E;&#xFF0C;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x91CD;&#x8BD5;&#x673A;&#x5236;&#xFF0C;&#x4EE4;&#x6D88;&#x606F;&#x518D;&#x6D88;&#x8D39;&#x4E00;&#x6B21;&#x3002;</p>
</blockquote>
<ul class="ui list">
<li>&#x1F985; <code>Consumer</code> &#x5C06;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x56DE; <code>Broker</code>&#xFF0C;&#x8FDB;&#x5165;<strong>&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x961F;&#x5217;</strong>&#x3002;&#x5373;&#xFF0C;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x6D88;&#x8D39;&#x3002;</li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;SendMessageProcessor.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x6D88;&#x8D39;&#x8005;&#x53D1;&#x56DE;&#x6D88;&#x606F;</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@param</span> ctx ctx</div><div class="line"> 6:  * <span class="doctag">@param</span> request &#x8BF7;&#x6C42;</div><div class="line"> 7:  * <span class="doctag">@return</span> &#x54CD;&#x5E94;</div><div class="line"> 8:  * <span class="doctag">@throws</span> RemotingCommandException &#x5F53;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x5F02;&#x5E38;</div><div class="line"> 9:  */</div><div class="line"><span class="number">10</span>: <span class="function"><span class="keyword">private</span> RemotingCommand <span class="title">consumerSendMsgBack</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx, <span class="keyword">final</span> RemotingCommand request)</span></span></div><div class="line">11:     <span class="keyword">throws</span> RemotingCommandException {</div><div class="line"><span class="number">12</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">13</span>:     <span class="comment">// &#x5904;&#x7406; delayLevel&#xFF08;&#x72EC;&#x6709;&#xFF09;&#x3002;</span></div><div class="line"><span class="number">14</span>:     <span class="keyword">int</span> delayLevel = requestHeader.getDelayLevel();</div><div class="line"><span class="number">15</span>:     <span class="keyword">int</span> maxReconsumeTimes = subscriptionGroupConfig.getRetryMaxTimes();</div><div class="line"><span class="number">16</span>:     <span class="keyword">if</span> (request.getVersion() &gt;= MQVersion.Version.V3_4_9.ordinal()) {</div><div class="line"><span class="number">17</span>:         maxReconsumeTimes = requestHeader.getMaxReconsumeTimes();</div><div class="line"><span class="number">18</span>:     }</div><div class="line"><span class="number">19</span>:     <span class="keyword">if</span> (msgExt.getReconsumeTimes() &gt;= maxReconsumeTimes<span class="comment">//</span></div><div class="line"><span class="number">20</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">21</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">22</span>:         <span class="keyword">if</span> (<span class="number">0</span> == delayLevel) {</div><div class="line"><span class="number">23</span>:             delayLevel = <span class="number">3</span> + msgExt.getReconsumeTimes();</div><div class="line"><span class="number">24</span>:         }</div><div class="line"><span class="number">25</span>:         msgExt.setDelayTimeLevel(delayLevel);</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>:     <span class="comment">// ....(&#x7701;&#x7565;&#x4EE3;&#x7801;)</span></div><div class="line"><span class="number">29</span>:     <span class="keyword">return</span> response;</div><div class="line"><span class="number">30</span>: }</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— 高可用</title>
    <link href="http://www.yunai.me/RocketMQ/high-availability/"/>
    <id>http://www.yunai.me/RocketMQ/high-availability/</id>
    <published>2017-05-13T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. Namesrv &#x9AD8;&#x53EF;&#x7528;</a><ul>
<li><a href="#">2.1 Broker &#x6CE8;&#x518C;&#x5230; Namesrv</a></li>
<li><a href="#">2.2 Producer&#x3001;Consumer &#x8BBF;&#x95EE; Namesrv</a></li>
</ul>
</li>
<li><a href="#">3. Broker &#x9AD8;&#x53EF;&#x7528;</a><ul>
<li><a href="#">3.2 Broker &#x4E3B;&#x4ECE;</a><ul>
<li><a href="#">3.1.1 &#x914D;&#x7F6E;</a></li>
<li><a href="#">3.1.2 &#x7EC4;&#x4EF6;</a></li>
<li><a href="#">3.1.3 &#x901A;&#x4FE1;&#x534F;&#x8BAE;</a></li>
<li><a href="#">3.1.4 Slave</a></li>
<li><a href="#">3.1.5 Master</a></li>
<li><a href="#">3.1.6 Master_SYNC</a></li>
</ul>
</li>
<li><a href="#">3.2 Producer &#x53D1;&#x9001;&#x6D88;&#x606F;</a></li>
<li><a href="#">3.3 Consumer &#x6D88;&#x8D39;&#x6D88;&#x606F;</a></li>
</ul>
</li>
<li><a href="#">4. &#x603B;&#x7ED3;</a></li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x89E3;&#x6790; <code>Namesrv</code>&#x3001;<code>Broker</code> &#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x9AD8;&#x53EF;&#x7528;&#xFF0C;<code>Producer</code>&#x3001;<code>Consumer</code> &#x600E;&#x4E48;&#x4E0E;&#x5B83;&#x4EEC;&#x901A;&#x4FE1;&#x4FDD;&#x8BC1;&#x9AD8;&#x53EF;&#x7528;&#x3002;</p>
<h1 id="2-Namesrv-&#x9AD8;&#x53EF;&#x7528;"><a href="#2-Namesrv-&#x9AD8;&#x53EF;&#x7528;" class="headerlink" title="2. Namesrv &#x9AD8;&#x53EF;&#x7528;"></a>2. Namesrv &#x9AD8;&#x53EF;&#x7528;</h1><p><strong>&#x542F;&#x52A8;&#x591A;&#x4E2A; <code>Namesrv</code> &#x5B9E;&#x73B0;&#x9AD8;&#x53EF;&#x7528;&#x3002;</strong><br>&#x76F8;&#x8F83;&#x4E8E; <code>Zookeeper</code>&#x3001;<code>Consul</code>&#x3001;<code>Etcd</code> &#x7B49;&#xFF0C;<code>Namesrv</code> &#x662F;&#x4E00;&#x4E2A;<strong>&#x8D85;&#x8F7B;&#x91CF;&#x7EA7;</strong>&#x7684;&#x6CE8;&#x518C;&#x4E2D;&#x5FC3;&#xFF0C;&#x63D0;&#x4F9B;<strong>&#x547D;&#x540D;&#x670D;&#x52A1;</strong>&#x3002;</p>
<h2 id="2-1-Broker-&#x6CE8;&#x518C;&#x5230;-Namesrv"><a href="#2-1-Broker-&#x6CE8;&#x518C;&#x5230;-Namesrv" class="headerlink" title="2.1 Broker &#x6CE8;&#x518C;&#x5230; Namesrv"></a>2.1 Broker &#x6CE8;&#x518C;&#x5230; Namesrv</h2><ul class="ui list">
<li>&#x1F4CC; <strong>&#x591A;&#x4E2A; <code>Namesrv</code> &#x4E4B;&#x95F4;&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5173;&#x7CFB;&#xFF08;&#x4E0D;&#x5B58;&#x5728;&#x7C7B;&#x4F3C; <code>Zookeeper</code> &#x7684; <code>Leader</code>/<code>Follower</code> &#x7B49;&#x89D2;&#x8272;&#xFF09;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x4E0E;&#x6570;&#x636E;&#x540C;&#x6B65;&#x3002;&#x901A;&#x8FC7; <code>Broker</code> &#x5FAA;&#x73AF;&#x6CE8;&#x518C;&#x591A;&#x4E2A; <code>Namesrv</code>&#x3002;</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;BrokerOuterAPI.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> RegisterBrokerResult <span class="title">registerBrokerAll</span><span class="params">(</span></span></div><div class="line"> <span class="number">3</span>:     <span class="keyword">final</span> String clusterName,</div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> String brokerAddr,</div><div class="line"> <span class="number">5</span>:     <span class="keyword">final</span> String brokerName,</div><div class="line"> <span class="number">6</span>:     <span class="keyword">final</span> <span class="keyword">long</span> brokerId,</div><div class="line"> <span class="number">7</span>:     <span class="keyword">final</span> String haServerAddr,</div><div class="line"> <span class="number">8</span>:     <span class="keyword">final</span> TopicConfigSerializeWrapper topicConfigWrapper,</div><div class="line"> <span class="number">9</span>:     <span class="keyword">final</span> List&lt;String&gt; filterServerList,</div><div class="line"><span class="number">10</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> oneway,</div><div class="line"><span class="number">11</span>:     <span class="keyword">final</span> <span class="keyword">int</span> timeoutMills) {</div><div class="line"><span class="number">12</span>:     RegisterBrokerResult registerBrokerResult = <span class="keyword">null</span>;</div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>:     List&lt;String&gt; nameServerAddressList = <span class="keyword">this</span>.remotingClient.getNameServerAddressList();</div><div class="line"><span class="number">15</span>:     <span class="keyword">if</span> (nameServerAddressList != <span class="keyword">null</span>) {</div><div class="line"><span class="number">16</span>:         <span class="keyword">for</span> (String namesrvAddr : nameServerAddressList) { <span class="comment">// &#x5FAA;&#x73AF;&#x591A;&#x4E2A; Namesrv</span></div><div class="line"><span class="number">17</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">18</span>:                 RegisterBrokerResult result = <span class="keyword">this</span>.registerBroker(namesrvAddr, clusterName, brokerAddr, brokerName, brokerId,</div><div class="line"><span class="number">19</span>:                     haServerAddr, topicConfigWrapper, filterServerList, oneway, timeoutMills);</div><div class="line"><span class="number">20</span>:                 <span class="keyword">if</span> (result != <span class="keyword">null</span>) {</div><div class="line"><span class="number">21</span>:                     registerBrokerResult = result;</div><div class="line"><span class="number">22</span>:                 }</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:                 log.info(<span class="string">&quot;register broker to name server {} OK&quot;</span>, namesrvAddr);</div><div class="line"><span class="number">25</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">26</span>:                 log.warn(<span class="string">&quot;registerBroker Exception, {}&quot;</span>, namesrvAddr, e);</div><div class="line"><span class="number">27</span>:             }</div><div class="line"><span class="number">28</span>:         }</div><div class="line"><span class="number">29</span>:     }</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:     <span class="keyword">return</span> registerBrokerResult;</div><div class="line"><span class="number">32</span>: }</div></pre></td></tr></table></figure>
<h2 id="2-2-Producer&#x3001;Consumer-&#x8BBF;&#x95EE;-Namesrv"><a href="#2-2-Producer&#x3001;Consumer-&#x8BBF;&#x95EE;-Namesrv" class="headerlink" title="2.2 Producer&#x3001;Consumer &#x8BBF;&#x95EE; Namesrv"></a>2.2 Producer&#x3001;Consumer &#x8BBF;&#x95EE; Namesrv</h2><ul class="ui list">
<li>&#x1F4CC; <strong><code>Producer</code>&#x3001;<code>Consumer</code> &#x4ECE; <code>Namesrv</code>&#x5217;&#x8868;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x53EF;&#x8FDE;&#x63A5;&#x7684;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x3002;</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;NettyRemotingClient.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">private</span> Channel <span class="title">getAndCreateNameserverChannel</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</div><div class="line"> <span class="number">3</span>:     <span class="comment">// &#x8FD4;&#x56DE;&#x5DF2;&#x9009;&#x62E9;&#x3001;&#x53EF;&#x8FDE;&#x63A5;Namesrv</span></div><div class="line"> <span class="number">4</span>:     String addr = <span class="keyword">this</span>.namesrvAddrChoosed.get();</div><div class="line"> <span class="number">5</span>:     <span class="keyword">if</span> (addr != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">6</span>:         ChannelWrapper cw = <span class="keyword">this</span>.channelTables.get(addr);</div><div class="line"> <span class="number">7</span>:         <span class="keyword">if</span> (cw != <span class="keyword">null</span> &amp;&amp; cw.isOK()) {</div><div class="line"> <span class="number">8</span>:             <span class="keyword">return</span> cw.getChannel();</div><div class="line"> <span class="number">9</span>:         }</div><div class="line"><span class="number">10</span>:     }</div><div class="line"><span class="number">11</span>:     <span class="comment">//</span></div><div class="line"><span class="number">12</span>:     <span class="keyword">final</span> List&lt;String&gt; addrList = <span class="keyword">this</span>.namesrvAddrList.get();</div><div class="line"><span class="number">13</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.lockNamesrvChannel.tryLock(LOCK_TIMEOUT_MILLIS, TimeUnit.MILLISECONDS)) {</div><div class="line"><span class="number">14</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">15</span>:             <span class="comment">// &#x8FD4;&#x56DE;&#x5DF2;&#x9009;&#x62E9;&#x3001;&#x53EF;&#x8FDE;&#x63A5;&#x7684;Namesrv</span></div><div class="line"><span class="number">16</span>:             addr = <span class="keyword">this</span>.namesrvAddrChoosed.get();</div><div class="line"><span class="number">17</span>:             <span class="keyword">if</span> (addr != <span class="keyword">null</span>) {</div><div class="line"><span class="number">18</span>:                 ChannelWrapper cw = <span class="keyword">this</span>.channelTables.get(addr);</div><div class="line"><span class="number">19</span>:                 <span class="keyword">if</span> (cw != <span class="keyword">null</span> &amp;&amp; cw.isOK()) {</div><div class="line"><span class="number">20</span>:                     <span class="keyword">return</span> cw.getChannel();</div><div class="line"><span class="number">21</span>:                 }</div><div class="line"><span class="number">22</span>:             }</div><div class="line"><span class="number">23</span>:             <span class="comment">// &#x4ECE;&#x3010;Namesrv&#x5217;&#x8868;&#x3011;&#x4E2D;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x7684;&#x8FD4;&#x56DE;</span></div><div class="line"><span class="number">24</span>:             <span class="keyword">if</span> (addrList != <span class="keyword">null</span> &amp;&amp; !addrList.isEmpty()) {</div><div class="line"><span class="number">25</span>:                 <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addrList.size(); i++) {</div><div class="line"><span class="number">26</span>:                     <span class="keyword">int</span> index = <span class="keyword">this</span>.namesrvIndex.incrementAndGet();</div><div class="line"><span class="number">27</span>:                     index = Math.abs(index);</div><div class="line"><span class="number">28</span>:                     index = index % addrList.size();</div><div class="line"><span class="number">29</span>:                     String newAddr = addrList.get(index);</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:                     <span class="keyword">this</span>.namesrvAddrChoosed.set(newAddr);</div><div class="line"><span class="number">32</span>:                     Channel channelNew = <span class="keyword">this</span>.createChannel(newAddr);</div><div class="line"><span class="number">33</span>:                     <span class="keyword">if</span> (channelNew != <span class="keyword">null</span>)</div><div class="line"><span class="number">34</span>:                         <span class="keyword">return</span> channelNew;</div><div class="line"><span class="number">35</span>:                 }</div><div class="line"><span class="number">36</span>:             }</div><div class="line"><span class="number">37</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">38</span>:             log.error(<span class="string">&quot;getAndCreateNameserverChannel: create name server channel exception&quot;</span>, e);</div><div class="line"><span class="number">39</span>:         } <span class="keyword">finally</span> {</div><div class="line"><span class="number">40</span>:             <span class="keyword">this</span>.lockNamesrvChannel.unlock();</div><div class="line"><span class="number">41</span>:         }</div><div class="line"><span class="number">42</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">43</span>:         log.warn(<span class="string">&quot;getAndCreateNameserverChannel: try to lock name server, but timeout, {}ms&quot;</span>, LOCK_TIMEOUT_MILLIS);</div><div class="line"><span class="number">44</span>:     }</div><div class="line"><span class="number">45</span>: </div><div class="line"><span class="number">46</span>:     <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"><span class="number">47</span>: }</div></pre></td></tr></table></figure>
<h1 id="3-Broker-&#x9AD8;&#x53EF;&#x7528;"><a href="#3-Broker-&#x9AD8;&#x53EF;&#x7528;" class="headerlink" title="3. Broker &#x9AD8;&#x53EF;&#x7528;"></a>3. Broker &#x9AD8;&#x53EF;&#x7528;</h1><p><strong>&#x542F;&#x52A8;&#x591A;&#x4E2A; <code>Broker&#x5206;&#x7EC4;</code> &#x5F62;&#x6210; <code>&#x96C6;&#x7FA4;</code> &#x5B9E;&#x73B0;&#x9AD8;&#x53EF;&#x7528;&#x3002;</strong><br><strong><code>Broker&#x5206;&#x7EC4;</code> = <code>Master&#x8282;&#x70B9;</code>x1 + <code>Slave&#x8282;&#x70B9;</code>xN&#x3002;</strong><br>&#x7C7B;&#x4F3C; <code>MySQL</code>&#xFF0C;<code>Master&#x8282;&#x70B9;</code> &#x63D0;&#x4F9B;<strong>&#x8BFB;&#x5199;</strong>&#x670D;&#x52A1;&#xFF0C;<code>Slave&#x8282;&#x70B9;</code> &#x53EA;&#x63D0;&#x4F9B;<strong>&#x8BFB;</strong>&#x670D;&#x52A1;&#x3002;  </p>
<h2 id="3-2-Broker-&#x4E3B;&#x4ECE;"><a href="#3-2-Broker-&#x4E3B;&#x4ECE;" class="headerlink" title="3.2 Broker &#x4E3B;&#x4ECE;"></a>3.2 Broker &#x4E3B;&#x4ECE;</h2><ul class="ui list">
<li><strong>&#x6BCF;&#x4E2A;&#x5206;&#x7EC4;&#xFF0C;<code>Master</code>&#x8282;&#x70B9; &#x4E0D;&#x65AD;&#x53D1;&#x9001;&#x65B0;&#x7684; <code>CommitLog</code> &#x7ED9; <code>Slave</code>&#x8282;&#x70B9;&#x3002; <code>Slave</code>&#x8282;&#x70B9; &#x4E0D;&#x65AD;&#x4E0A;&#x62A5;&#x672C;&#x5730;&#x7684; <code>CommitLog</code> &#x5DF2;&#x7ECF;&#x540C;&#x6B65;&#x5230;&#x7684;&#x4F4D;&#x7F6E;&#x7ED9; <code>Master</code>&#x8282;&#x70B9;&#x3002;</strong></li>
<li><strong><code>Broker&#x5206;&#x7EC4;</code> &#x4E0E; <code>Broker&#x5206;&#x7EC4;</code> &#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5173;&#x7CFB;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x4E0E;&#x6570;&#x636E;&#x540C;&#x6B65;&#x3002;</strong></li>
<li><strong>&#x6D88;&#x8D39;&#x8FDB;&#x5EA6; &#x76EE;&#x524D;&#x4E0D;&#x652F;&#x6301; <code>Master</code>/<code>Slave</code> &#x540C;&#x6B65;&#x3002;</strong></li>
</ul>
<p>&#x96C6;&#x7FA4;&#x5185;&#xFF0C;<code>Master</code>&#x8282;&#x70B9; &#x6709;<strong>&#x4E24;&#x79CD;</strong>&#x7C7B;&#x578B;&#xFF1A;<code>Master_SYNC</code>&#x3001;<code>Master_ASYNC</code>&#xFF1A;&#x524D;&#x8005;&#x5728; <code>Producer</code> &#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x7B49;&#x5F85; <code>Slave</code>&#x8282;&#x70B9; &#x5B58;&#x50A8;&#x5B8C;&#x6BD5;&#x540E;&#x518D;&#x8FD4;&#x56DE;&#x53D1;&#x9001;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x4E0D;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x3002;</p>
<h3 id="3-1-1-&#x914D;&#x7F6E;"><a href="#3-1-1-&#x914D;&#x7F6E;" class="headerlink" title="3.1.1 &#x914D;&#x7F6E;"></a>3.1.1 &#x914D;&#x7F6E;</h3><p>&#x76EE;&#x524D;&#x5B98;&#x65B9;&#x63D0;&#x4F9B;&#x4E09;&#x5957;&#x914D;&#x7F6E;&#xFF1A;</p>
<ul class="ui list">
<li><strong>2m-2s-async</strong></li>
</ul>
<table>
<thead>
<tr>
<th>brokerClusterName</th>
<th>brokerName</th>
<th>brokerRole</th>
<th>brokerId</th>
</tr>
</thead>
<tbody>
<tr>
<td>DefaultCluster</td>
<td>broker-a</td>
<td>ASYNC_MASTER</td>
<td>0</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-a</td>
<td>SLAVE</td>
<td>1</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-b</td>
<td>ASYNC_MASTER</td>
<td>0</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-b</td>
<td>SLAVE</td>
<td>1</td>
</tr>
</tbody>
</table>
<ul class="ui list">
<li><strong>2m-2s-sync</strong></li>
</ul>
<table>
<thead>
<tr>
<th>brokerClusterName</th>
<th>brokerName</th>
<th>brokerRole</th>
<th>brokerId</th>
</tr>
</thead>
<tbody>
<tr>
<td>DefaultCluster</td>
<td>broker-a</td>
<td>SYNC_MASTER</td>
<td>0</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-a</td>
<td>SLAVE</td>
<td>1</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-b</td>
<td>SYNC_MASTER</td>
<td>0</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-b</td>
<td>SLAVE</td>
<td>1</td>
</tr>
</tbody>
</table>
<ul class="ui list">
<li><strong>2m-noslave</strong></li>
</ul>
<table>
<thead>
<tr>
<th>brokerClusterName</th>
<th>brokerName</th>
<th>brokerRole</th>
<th>brokerId</th>
</tr>
</thead>
<tbody>
<tr>
<td>DefaultCluster</td>
<td>broker-a</td>
<td>ASYNC_MASTER</td>
<td>0</td>
</tr>
<tr>
<td>DefaultCluster</td>
<td>broker-b</td>
<td>ASYNC_MASTER</td>
<td>0</td>
</tr>
</tbody>
</table>
<h3 id="3-1-2-&#x7EC4;&#x4EF6;"><a href="#3-1-2-&#x7EC4;&#x4EF6;" class="headerlink" title="3.1.2 &#x7EC4;&#x4EF6;"></a>3.1.2 &#x7EC4;&#x4EF6;</h3><p>&#x518D;&#x770B;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B; <code>Master</code>/<code>Slave</code>&#x8282;&#x70B9; &#x5305;&#x542B;&#x7684;&#x7EC4;&#x4EF6;&#xFF1A;<br><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_14/04.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_14/04.png" alt="HA&#x7EC4;&#x4EF6;&#x56FE;.png" class="ui centered image"></a></p>
<ul class="ui list">
<li><code>Master</code>&#x8282;&#x70B9;<ul>
<li><code>AcceptSocketService</code> &#xFF1A;&#x63A5;&#x6536; <code>Slave</code>&#x8282;&#x70B9; &#x8FDE;&#x63A5;&#x3002;</li>
<li><code>HAConnection</code><ul>
<li><code>ReadSocketService</code> &#xFF1A;<strong>&#x8BFB;</strong>&#x6765;&#x81EA; <code>Slave</code>&#x8282;&#x70B9; &#x7684;&#x6570;&#x636E;&#x3002; </li>
<li><code>WriteSocketService</code> &#xFF1A;<strong>&#x5199;</strong>&#x5230;&#x5F80; <code>Slave</code>&#x8282;&#x70B9; &#x7684;&#x6570;&#x636E;&#x3002;</li>
</ul>
</li>
</ul>
</li>
<li><code>Slave</code>&#x8282;&#x70B9;<ul>
<li><code>HAClient</code> &#xFF1A;&#x5BF9; <code>Master</code>&#x8282;&#x70B9; &#x8FDE;&#x63A5;&#x3001;&#x8BFB;&#x5199;&#x6570;&#x636E;&#x3002;</li>
</ul>
</li>
</ul>
<h3 id="3-1-3-&#x901A;&#x4FE1;&#x534F;&#x8BAE;"><a href="#3-1-3-&#x901A;&#x4FE1;&#x534F;&#x8BAE;" class="headerlink" title="3.1.3 &#x901A;&#x4FE1;&#x534F;&#x8BAE;"></a>3.1.3 &#x901A;&#x4FE1;&#x534F;&#x8BAE;</h3><p><code>Master</code>&#x8282;&#x70B9; &#x4E0E; <code>Slave</code>&#x8282;&#x70B9; <strong>&#x901A;&#x4FE1;&#x534F;&#x8BAE;</strong>&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x6709;&#x5982;&#x4E0B;&#x4E24;&#x6761;&#x3002;</p>
<table>
<thead>
<tr>
<th style="text-align:left">&#x5BF9;&#x8C61;</th>
<th style="text-align:left">&#x7528;&#x9014;</th>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Slave=&gt;Master</td>
<td style="text-align:left">&#x4E0A;&#x62A5;CommitLog<strong>&#x5DF2;&#x7ECF;</strong>&#x540C;&#x6B65;&#x5230;&#x7684;<strong>&#x7269;&#x7406;</strong>&#x4F4D;&#x7F6E;</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">0</td>
<td style="text-align:left">maxPhyOffset</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
<td style="text-align:left">CommitLog&#x6700;&#x5927;&#x7269;&#x7406;&#x4F4D;&#x7F6E;</td>
</tr>
<tr>
<td style="text-align:left">Master=&gt;Slave</td>
<td style="text-align:left">&#x4F20;&#x8F93;&#x65B0;&#x7684; <code>CommitLog</code> &#x6570;&#x636E;</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">0</td>
<td style="text-align:left">fromPhyOffset</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
<td style="text-align:left">CommitLog&#x5F00;&#x59CB;&#x7269;&#x7406;&#x4F4D;&#x7F6E;</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">1</td>
<td style="text-align:left">size</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
<td style="text-align:left">&#x4F20;&#x8F93;CommitLog&#x6570;&#x636E;&#x957F;&#x5EA6;</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">2</td>
<td style="text-align:left">body</td>
<td style="text-align:left">Bytes</td>
<td style="text-align:left">size</td>
<td style="text-align:left">&#x4F20;&#x8F93;CommitLog&#x6570;&#x636E;</td>
</tr>
</tbody>
</table>
<h3 id="3-1-4-Slave"><a href="#3-1-4-Slave" class="headerlink" title="3.1.4 Slave"></a>3.1.4 Slave</h3><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_14/02.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_14/02.png" alt="HAClient&#x987A;&#x5E8F;&#x56FE;" class="ui centered image"></a></p>
<hr>
<ul class="ui list">
<li><strong><code>Slave</code> &#x4E3B;&#x5FAA;&#x73AF;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;</strong>&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;<strong>&#x4ECE; <code>Master</code> &#x4F20;&#x8F93; <code>CommitLog</code> &#x6570;&#x636E;&#xFF0C;&#x4E0A;&#x4F20; <code>Master</code> &#x81EA;&#x5DF1;&#x672C;&#x5730;&#x7684; <code>CommitLog</code> &#x5DF2;&#x7ECF;&#x540C;&#x6B65;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x3002;</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;HAClient.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">3</span>:     log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"> <span class="number">6</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">7</span>:             <span class="keyword">if</span> (<span class="keyword">this</span>.connectMaster()) {</div><div class="line"> <span class="number">8</span>:                 <span class="comment">// &#x82E5;&#x5230;&#x6EE1;&#x8DB3;&#x4E0A;&#x62A5;&#x95F4;&#x9694;&#xFF0C;&#x4E0A;&#x62A5;&#x5230;Master&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">9</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.isTimeToReportOffset()) {</div><div class="line"><span class="number">10</span>:                     <span class="keyword">boolean</span> result = <span class="keyword">this</span>.reportSlaveMaxOffset(<span class="keyword">this</span>.currentReportedOffset);</div><div class="line"><span class="number">11</span>:                     <span class="keyword">if</span> (!result) {</div><div class="line"><span class="number">12</span>:                         <span class="keyword">this</span>.closeMaster();</div><div class="line"><span class="number">13</span>:                     }</div><div class="line"><span class="number">14</span>:                 }</div><div class="line"><span class="number">15</span>: </div><div class="line"><span class="number">16</span>:                 <span class="keyword">this</span>.selector.select(<span class="number">1000</span>);</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:                 <span class="comment">// &#x5904;&#x7406;&#x8BFB;&#x53D6;&#x4E8B;&#x4EF6;</span></div><div class="line"><span class="number">19</span>:                 <span class="keyword">boolean</span> ok = <span class="keyword">this</span>.processReadEvent();</div><div class="line"><span class="number">20</span>:                 <span class="keyword">if</span> (!ok) {</div><div class="line"><span class="number">21</span>:                     <span class="keyword">this</span>.closeMaster();</div><div class="line"><span class="number">22</span>:                 }</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:                 <span class="comment">// &#x82E5;&#x8FDB;&#x5EA6;&#x6709;&#x53D8;&#x5316;&#xFF0C;&#x4E0A;&#x62A5;&#x5230;Master&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">25</span>:                 <span class="keyword">if</span> (!reportSlaveMaxOffsetPlus()) {</div><div class="line"><span class="number">26</span>:                     <span class="keyword">continue</span>;</div><div class="line"><span class="number">27</span>:                 }</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:                 <span class="comment">// Master&#x8FC7;&#x4E45;&#x672A;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#xFF0C;&#x5173;&#x95ED;&#x8FDE;&#x63A5;</span></div><div class="line"><span class="number">30</span>:                 <span class="keyword">long</span> interval = HAService.<span class="keyword">this</span>.getDefaultMessageStore().getSystemClock().now() - <span class="keyword">this</span>.lastWriteTimestamp;</div><div class="line"><span class="number">31</span>:                 <span class="keyword">if</span> (interval &gt; HAService.<span class="keyword">this</span>.getDefaultMessageStore().getMessageStoreConfig()</div><div class="line"><span class="number">32</span>:                     .getHaHousekeepingInterval()) {</div><div class="line"><span class="number">33</span>:                     log.warn(<span class="string">&quot;HAClient, housekeeping, found this connection[&quot;</span> + <span class="keyword">this</span>.masterAddress</div><div class="line"><span class="number">34</span>:                         + <span class="string">&quot;] expired, &quot;</span> + interval);</div><div class="line"><span class="number">35</span>:                     <span class="keyword">this</span>.closeMaster();</div><div class="line"><span class="number">36</span>:                     log.warn(<span class="string">&quot;HAClient, master not response some time, so close connection&quot;</span>);</div><div class="line"><span class="number">37</span>:                 }</div><div class="line"><span class="number">38</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">39</span>:                 <span class="keyword">this</span>.waitForRunning(<span class="number">1000</span> * <span class="number">5</span>);</div><div class="line"><span class="number">40</span>:             }</div><div class="line"><span class="number">41</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">42</span>:             log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"><span class="number">43</span>:             <span class="keyword">this</span>.waitForRunning(<span class="number">1000</span> * <span class="number">5</span>);</div><div class="line"><span class="number">44</span>:         }</div><div class="line"><span class="number">45</span>:     }</div><div class="line"><span class="number">46</span>: </div><div class="line"><span class="number">47</span>:     log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">48</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 8 &#x81F3; 14 &#x884C; &#xFF1A;<strong>&#x56FA;&#x5B9A;&#x95F4;&#x9694;&#xFF08;&#x9ED8;&#x8BA4;5s&#xFF09;</strong>&#x5411; <code>Master</code> &#x4E0A;&#x62A5; <code>Slave</code> &#x672C;&#x5730; <code>CommitLog</code> &#x5DF2;&#x7ECF;&#x540C;&#x6B65;&#x5230;&#x7684;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x3002;&#x8BE5;&#x64CD;&#x4F5C;&#x8FD8;&#x6709;<strong>&#x5FC3;&#x8DF3;</strong>&#x7684;&#x4F5C;&#x7528;&#x3002;</li>
<li>&#x7B2C; 16 &#x81F3; 22 &#x884C; &#xFF1A;&#x5904;&#x7406; <code>Master</code> &#x4F20;&#x8F93; <code>Slave</code> &#x7684; <code>CommitLog</code> &#x6570;&#x636E;&#x3002;</li>
</ul>
<hr>
<ul class="ui list">
<li><strong>&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B; <code>#dispatchReadRequest(...)</code> &#x4E0E; <code>#reportSlaveMaxOffset(...)</code> &#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x3002;</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x3010;HAClient.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x8BFB;&#x53D6;Master&#x4F20;&#x8F93;&#x7684;CommitLog&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x662F;&#x5F02;&#x5E38;</div><div class="line"> 4:  * &#x5982;&#x679C;&#x8BFB;&#x53D6;&#x5230;&#x6570;&#x636E;&#xFF0C;&#x5199;&#x5165;CommitLog</div><div class="line"> 5:  * &#x5F02;&#x5E38;&#x539F;&#x56E0;&#xFF1A;</div><div class="line"> 6:  *   1. Master&#x4F20;&#x8F93;&#x6765;&#x7684;&#x6570;&#x636E;offset &#x4E0D;&#x7B49;&#x4E8E; Slave&#x7684;CommitLog&#x6570;&#x636E;&#x6700;&#x5927;offset</div><div class="line"> 7:  *   2. &#x4E0A;&#x62A5;&#x5230;Master&#x8FDB;&#x5EA6;&#x5931;&#x8D25;</div><div class="line"> 8:  *</div><div class="line"> 9:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x5F02;&#x5E38;</div><div class="line">10:  */</div><div class="line"><span class="number">11</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">dispatchReadRequest</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">12</span>:     <span class="keyword">final</span> <span class="keyword">int</span> msgHeaderSize = <span class="number">8</span> + <span class="number">4</span>; <span class="comment">// phyoffset + size</span></div><div class="line"><span class="number">13</span>:     <span class="keyword">int</span> readSocketPos = <span class="keyword">this</span>.byteBufferRead.position();</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:     <span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line"><span class="number">16</span>:         <span class="comment">// &#x8BFB;&#x53D6;&#x5230;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">17</span>:         <span class="keyword">int</span> diff = <span class="keyword">this</span>.byteBufferRead.position() - <span class="keyword">this</span>.dispatchPostion;</div><div class="line"><span class="number">18</span>:         <span class="keyword">if</span> (diff &gt;= msgHeaderSize) {</div><div class="line"><span class="number">19</span>:             <span class="comment">// &#x8BFB;&#x53D6;masterPhyOffset&#x3001;bodySize&#x3002;&#x4F7F;&#x7528;dispatchPostion&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x5904;&#x7406;&#x6570;&#x636E;&#x201C;&#x7C98;&#x5305;&#x201D;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x8BFB;&#x53D6;&#x4E0D;&#x5B8C;&#x6574;&#x3002;</span></div><div class="line"><span class="number">20</span>:             <span class="keyword">long</span> masterPhyOffset = <span class="keyword">this</span>.byteBufferRead.getLong(<span class="keyword">this</span>.dispatchPostion);</div><div class="line"><span class="number">21</span>:             <span class="keyword">int</span> bodySize = <span class="keyword">this</span>.byteBufferRead.getInt(<span class="keyword">this</span>.dispatchPostion + <span class="number">8</span>);</div><div class="line"><span class="number">22</span>:             <span class="comment">// &#x6821;&#x9A8C; Master&#x4F20;&#x8F93;&#x6765;&#x7684;&#x6570;&#x636E;offset &#x662F;&#x5426;&#x548C; Slave&#x7684;CommitLog&#x6570;&#x636E;&#x6700;&#x5927;offset &#x662F;&#x5426;&#x76F8;&#x540C;&#x3002;</span></div><div class="line"><span class="number">23</span>:             <span class="keyword">long</span> slavePhyOffset = HAService.<span class="keyword">this</span>.defaultMessageStore.getMaxPhyOffset();</div><div class="line"><span class="number">24</span>:             <span class="keyword">if</span> (slavePhyOffset != <span class="number">0</span>) {</div><div class="line"><span class="number">25</span>:                 <span class="keyword">if</span> (slavePhyOffset != masterPhyOffset) {</div><div class="line"><span class="number">26</span>:                     log.error(<span class="string">&quot;master pushed offset not equal the max phy offset in slave, SLAVE: &quot;</span></div><div class="line"><span class="number">27</span>:                         + slavePhyOffset + <span class="string">&quot; MASTER: &quot;</span> + masterPhyOffset);</div><div class="line"><span class="number">28</span>:                     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">29</span>:                 }</div><div class="line"><span class="number">30</span>:             }</div><div class="line"><span class="number">31</span>:             <span class="comment">// &#x8BFB;&#x53D6;&#x5230;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">32</span>:             <span class="keyword">if</span> (diff &gt;= (msgHeaderSize + bodySize)) {</div><div class="line"><span class="number">33</span>:                 <span class="comment">// &#x5199;&#x5165;CommitLog</span></div><div class="line"><span class="number">34</span>:                 <span class="keyword">byte</span>[] bodyData = <span class="keyword">new</span> <span class="keyword">byte</span>[bodySize];</div><div class="line"><span class="number">35</span>:                 <span class="keyword">this</span>.byteBufferRead.position(<span class="keyword">this</span>.dispatchPostion + msgHeaderSize);</div><div class="line"><span class="number">36</span>:                 <span class="keyword">this</span>.byteBufferRead.get(bodyData);</div><div class="line"><span class="number">37</span>:                 HAService.<span class="keyword">this</span>.defaultMessageStore.appendToCommitLog(masterPhyOffset, bodyData);</div><div class="line"><span class="number">38</span>:                 <span class="comment">// &#x8BBE;&#x7F6E;&#x5904;&#x7406;&#x5230;&#x7684;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">39</span>:                 <span class="keyword">this</span>.byteBufferRead.position(readSocketPos);</div><div class="line"><span class="number">40</span>:                 <span class="keyword">this</span>.dispatchPostion += msgHeaderSize + bodySize;</div><div class="line"><span class="number">41</span>:                 <span class="comment">// &#x4E0A;&#x62A5;&#x5230;Master&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">42</span>:                 <span class="keyword">if</span> (!reportSlaveMaxOffsetPlus()) {</div><div class="line"><span class="number">43</span>:                     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">44</span>:                 }</div><div class="line"><span class="number">45</span>:                 <span class="comment">// &#x7EE7;&#x7EED;&#x5FAA;&#x73AF;</span></div><div class="line"><span class="number">46</span>:                 <span class="keyword">continue</span>;</div><div class="line"><span class="number">47</span>:             }</div><div class="line"><span class="number">48</span>:         }</div><div class="line"><span class="number">49</span>: </div><div class="line"><span class="number">50</span>:         <span class="comment">// &#x7A7A;&#x95F4;&#x5199;&#x6EE1;&#xFF0C;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x7A7A;&#x95F4;</span></div><div class="line"><span class="number">51</span>:         <span class="keyword">if</span> (!<span class="keyword">this</span>.byteBufferRead.hasRemaining()) {</div><div class="line"><span class="number">52</span>:             <span class="keyword">this</span>.reallocateByteBuffer();</div><div class="line"><span class="number">53</span>:         }</div><div class="line"><span class="number">54</span>: </div><div class="line"><span class="number">55</span>:         <span class="keyword">break</span>;</div><div class="line"><span class="number">56</span>:     }</div><div class="line"><span class="number">57</span>: </div><div class="line"><span class="number">58</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">59</span>: }</div><div class="line"><span class="number">60</span>: </div><div class="line"><span class="number">61</span>: <span class="comment">/**</span></div><div class="line">62:  * &#x4E0A;&#x62A5;&#x8FDB;&#x5EA6;</div><div class="line">63:  *</div><div class="line">64:  * <span class="doctag">@param</span> maxOffset &#x8FDB;&#x5EA6;</div><div class="line">65:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x4E0A;&#x62A5;&#x6210;&#x529F;</div><div class="line">66:  */</div><div class="line"><span class="number">67</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">reportSlaveMaxOffset</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> maxOffset)</span> </span>{</div><div class="line"><span class="number">68</span>:     <span class="keyword">this</span>.reportOffset.position(<span class="number">0</span>);</div><div class="line"><span class="number">69</span>:     <span class="keyword">this</span>.reportOffset.limit(<span class="number">8</span>);</div><div class="line"><span class="number">70</span>:     <span class="keyword">this</span>.reportOffset.putLong(maxOffset);</div><div class="line"><span class="number">71</span>:     <span class="keyword">this</span>.reportOffset.position(<span class="number">0</span>);</div><div class="line"><span class="number">72</span>:     <span class="keyword">this</span>.reportOffset.limit(<span class="number">8</span>);</div><div class="line"><span class="number">73</span>: </div><div class="line"><span class="number">74</span>:     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span> &amp;&amp; <span class="keyword">this</span>.reportOffset.hasRemaining(); i++) {</div><div class="line"><span class="number">75</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">76</span>:             <span class="keyword">this</span>.socketChannel.write(<span class="keyword">this</span>.reportOffset);</div><div class="line"><span class="number">77</span>:         } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">78</span>:             log.error(<span class="keyword">this</span>.getServiceName()</div><div class="line"><span class="number">79</span>:                 + <span class="string">&quot;reportSlaveMaxOffset this.socketChannel.write exception&quot;</span>, e);</div><div class="line"><span class="number">80</span>:             <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">81</span>:         }</div><div class="line"><span class="number">82</span>:     }</div><div class="line"><span class="number">83</span>: </div><div class="line"><span class="number">84</span>:     <span class="keyword">return</span> !<span class="keyword">this</span>.reportOffset.hasRemaining();</div><div class="line"><span class="number">85</span>: }</div></pre></td></tr></table></figure>
<h3 id="3-1-5-Master"><a href="#3-1-5-Master" class="headerlink" title="3.1.5 Master"></a>3.1.5 Master</h3><ul class="ui list">
<li><strong><code>ReadSocketService</code> &#x903B;&#x8F91;&#x540C; <code>HAClient#processReadEvent(...)</code> &#x57FA;&#x672C;&#x76F8;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x770B;&#x4EE3;&#x7801;&#x3002;</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ReadSocketService.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">processReadEvent</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">int</span> readSizeZeroTimes = <span class="number">0</span>;</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="comment">// &#x6E05;&#x7A7A;byteBufferRead</span></div><div class="line"> <span class="number">6</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.byteBufferRead.hasRemaining()) {</div><div class="line"> <span class="number">7</span>:         <span class="keyword">this</span>.byteBufferRead.flip();</div><div class="line"> <span class="number">8</span>:         <span class="keyword">this</span>.processPostion = <span class="number">0</span>;</div><div class="line"> <span class="number">9</span>:     }</div><div class="line"><span class="number">10</span>: </div><div class="line"><span class="number">11</span>:     <span class="keyword">while</span> (<span class="keyword">this</span>.byteBufferRead.hasRemaining()) {</div><div class="line"><span class="number">12</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">13</span>:             <span class="keyword">int</span> readSize = <span class="keyword">this</span>.socketChannel.read(<span class="keyword">this</span>.byteBufferRead);</div><div class="line"><span class="number">14</span>:             <span class="keyword">if</span> (readSize &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">15</span>:                 readSizeZeroTimes = <span class="number">0</span>;</div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>:                 <span class="comment">// &#x8BBE;&#x7F6E;&#x6700;&#x540E;&#x8BFB;&#x53D6;&#x65F6;&#x95F4;</span></div><div class="line"><span class="number">18</span>:                 <span class="keyword">this</span>.lastReadTimestamp = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getSystemClock().now();</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>:                 <span class="keyword">if</span> ((<span class="keyword">this</span>.byteBufferRead.position() - <span class="keyword">this</span>.processPostion) &gt;= <span class="number">8</span>) {</div><div class="line"><span class="number">21</span>:                     <span class="comment">// &#x8BFB;&#x53D6;Slave &#x8BF7;&#x6C42;&#x6765;&#x7684;CommitLog&#x7684;&#x6700;&#x5927;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">22</span>:                     <span class="keyword">int</span> pos = <span class="keyword">this</span>.byteBufferRead.position() - (<span class="keyword">this</span>.byteBufferRead.position() % <span class="number">8</span>);</div><div class="line"><span class="number">23</span>:                     <span class="keyword">long</span> readOffset = <span class="keyword">this</span>.byteBufferRead.getLong(pos - <span class="number">8</span>);</div><div class="line"><span class="number">24</span>:                     <span class="keyword">this</span>.processPostion = pos;</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:                     <span class="comment">// &#x8BBE;&#x7F6E;Slave CommitLog&#x7684;&#x6700;&#x5927;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">27</span>:                     HAConnection.<span class="keyword">this</span>.slaveAckOffset = readOffset;</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:                     <span class="comment">// &#x8BBE;&#x7F6E;Slave &#x7B2C;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#x7684;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">30</span>:                     <span class="keyword">if</span> (HAConnection.<span class="keyword">this</span>.slaveRequestOffset &lt; <span class="number">0</span>) {</div><div class="line"><span class="number">31</span>:                         HAConnection.<span class="keyword">this</span>.slaveRequestOffset = readOffset;</div><div class="line"><span class="number">32</span>:                         log.info(<span class="string">&quot;slave[&quot;</span> + HAConnection.<span class="keyword">this</span>.clientAddr + <span class="string">&quot;] request offset &quot;</span> + readOffset);</div><div class="line"><span class="number">33</span>:                     }</div><div class="line"><span class="number">34</span>: </div><div class="line"><span class="number">35</span>:                     <span class="comment">// &#x901A;&#x77E5;&#x76EE;&#x524D;Slave&#x8FDB;&#x5EA6;&#x3002;&#x4E3B;&#x8981;&#x7528;&#x4E8E;Master&#x8282;&#x70B9;&#x4E3A;&#x540C;&#x6B65;&#x7C7B;&#x578B;&#x7684;&#x3002;</span></div><div class="line"><span class="number">36</span>:                     HAConnection.<span class="keyword">this</span>.haService.notifyTransferSome(HAConnection.<span class="keyword">this</span>.slaveAckOffset);</div><div class="line"><span class="number">37</span>:                 }</div><div class="line"><span class="number">38</span>:             } <span class="keyword">else</span> <span class="keyword">if</span> (readSize == <span class="number">0</span>) {</div><div class="line"><span class="number">39</span>:                 <span class="keyword">if</span> (++readSizeZeroTimes &gt;= <span class="number">3</span>) {</div><div class="line"><span class="number">40</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">41</span>:                 }</div><div class="line"><span class="number">42</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">43</span>:                 log.error(<span class="string">&quot;read socket[&quot;</span> + HAConnection.<span class="keyword">this</span>.clientAddr + <span class="string">&quot;] &lt; 0&quot;</span>);</div><div class="line"><span class="number">44</span>:                 <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">45</span>:             }</div><div class="line"><span class="number">46</span>:         } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">47</span>:             log.error(<span class="string">&quot;processReadEvent exception&quot;</span>, e);</div><div class="line"><span class="number">48</span>:             <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">49</span>:         }</div><div class="line"><span class="number">50</span>:     }</div><div class="line"><span class="number">51</span>: </div><div class="line"><span class="number">52</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">53</span>: }</div></pre></td></tr></table></figure>
<hr>
<ul class="ui list">
<li><strong><code>WriteSocketService</code> &#x8BA1;&#x7B97; <code>Slave</code>&#x5F00;&#x59CB;&#x540C;&#x6B65;&#x7684;&#x4F4D;&#x7F6E;&#x540E;&#xFF0C;&#x4E0D;&#x65AD;&#x5411; <code>Slave</code> &#x4F20;&#x8F93;&#x65B0;&#x7684; <code>CommitLog</code>&#x6570;&#x636E;&#x3002;</strong></li>
</ul>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_14/01.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_14/01.png" alt="HA.WriteSocketService&#x6D41;&#x7A0B;&#x56FE;" class="ui centered image"></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;WriteSocketService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="meta">@Override</span></div><div class="line">  <span class="number">3</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line">  <span class="number">4</span>:     HAConnection.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line">  <span class="number">5</span>: </div><div class="line">  <span class="number">6</span>:     <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line">  <span class="number">7</span>:         <span class="keyword">try</span> {</div><div class="line">  <span class="number">8</span>:             <span class="keyword">this</span>.selector.select(<span class="number">1000</span>);</div><div class="line">  <span class="number">9</span>: </div><div class="line"> <span class="number">10</span>:             <span class="comment">// &#x672A;&#x83B7;&#x5F97;Slave&#x8BFB;&#x53D6;&#x8FDB;&#x5EA6;&#x8BF7;&#x6C42;&#xFF0C;sleep&#x7B49;&#x5F85;&#x3002;</span></div><div class="line"> <span class="number">11</span>:             <span class="keyword">if</span> (-<span class="number">1</span> == HAConnection.<span class="keyword">this</span>.slaveRequestOffset) {</div><div class="line"> <span class="number">12</span>:                 Thread.sleep(<span class="number">10</span>);</div><div class="line"> <span class="number">13</span>:                 <span class="keyword">continue</span>;</div><div class="line"> <span class="number">14</span>:             }</div><div class="line"> <span class="number">15</span>: </div><div class="line"> <span class="number">16</span>:             <span class="comment">// &#x8BA1;&#x7B97;&#x521D;&#x59CB;&#x5316;nextTransferFromWhere</span></div><div class="line"> <span class="number">17</span>:             <span class="keyword">if</span> (-<span class="number">1</span> == <span class="keyword">this</span>.nextTransferFromWhere) {</div><div class="line"> <span class="number">18</span>:                 <span class="keyword">if</span> (<span class="number">0</span> == HAConnection.<span class="keyword">this</span>.slaveRequestOffset) {</div><div class="line"> <span class="number">19</span>:                     <span class="keyword">long</span> masterOffset = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getCommitLog().getMaxOffset();</div><div class="line"> <span class="number">20</span>:                     masterOffset = masterOffset - (masterOffset % HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getMessageStoreConfig().getMapedFileSizeCommitLog());</div><div class="line"> <span class="number">21</span>:                     <span class="keyword">if</span> (masterOffset &lt; <span class="number">0</span>) {</div><div class="line"> <span class="number">22</span>:                         masterOffset = <span class="number">0</span>;</div><div class="line"> <span class="number">23</span>:                     }</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:                     <span class="keyword">this</span>.nextTransferFromWhere = masterOffset;</div><div class="line"> <span class="number">26</span>:                 } <span class="keyword">else</span> {</div><div class="line"> <span class="number">27</span>:                     <span class="keyword">this</span>.nextTransferFromWhere = HAConnection.<span class="keyword">this</span>.slaveRequestOffset;</div><div class="line"> <span class="number">28</span>:                 }</div><div class="line"> <span class="number">29</span>: </div><div class="line"> <span class="number">30</span>:                 log.info(<span class="string">&quot;master transfer data from &quot;</span> + <span class="keyword">this</span>.nextTransferFromWhere + <span class="string">&quot; to slave[&quot;</span> + HAConnection.<span class="keyword">this</span>.clientAddr</div><div class="line"> <span class="number">31</span>:                     + <span class="string">&quot;], and slave request &quot;</span> + HAConnection.<span class="keyword">this</span>.slaveRequestOffset);</div><div class="line"> <span class="number">32</span>:             }</div><div class="line"> <span class="number">33</span>: </div><div class="line"> <span class="number">34</span>:             <span class="keyword">if</span> (<span class="keyword">this</span>.lastWriteOver) {</div><div class="line"> <span class="number">35</span>:                 <span class="keyword">long</span> interval = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getSystemClock().now() - <span class="keyword">this</span>.lastWriteTimestamp;</div><div class="line"> <span class="number">36</span>:                 <span class="keyword">if</span> (interval &gt; HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getMessageStoreConfig().getHaSendHeartbeatInterval()) { <span class="comment">// &#x5FC3;&#x8DF3;</span></div><div class="line"> <span class="number">37</span>: </div><div class="line"> <span class="number">38</span>:                     <span class="comment">// Build Header</span></div><div class="line"> <span class="number">39</span>:                     <span class="keyword">this</span>.byteBufferHeader.position(<span class="number">0</span>);</div><div class="line"> <span class="number">40</span>:                     <span class="keyword">this</span>.byteBufferHeader.limit(headerSize);</div><div class="line"> <span class="number">41</span>:                     <span class="keyword">this</span>.byteBufferHeader.putLong(<span class="keyword">this</span>.nextTransferFromWhere);</div><div class="line"> <span class="number">42</span>:                     <span class="keyword">this</span>.byteBufferHeader.putInt(<span class="number">0</span>);</div><div class="line"> <span class="number">43</span>:                     <span class="keyword">this</span>.byteBufferHeader.flip();</div><div class="line"> <span class="number">44</span>: </div><div class="line"> <span class="number">45</span>:                     <span class="keyword">this</span>.lastWriteOver = <span class="keyword">this</span>.transferData();</div><div class="line"> <span class="number">46</span>:                     <span class="keyword">if</span> (!<span class="keyword">this</span>.lastWriteOver)</div><div class="line"> <span class="number">47</span>:                         <span class="keyword">continue</span>;</div><div class="line"> <span class="number">48</span>:                 }</div><div class="line"> <span class="number">49</span>:             } <span class="keyword">else</span> { <span class="comment">// &#x672A;&#x4F20;&#x8F93;&#x5B8C;&#x6210;&#xFF0C;&#x7EE7;&#x7EED;&#x4F20;&#x8F93;</span></div><div class="line"> <span class="number">50</span>:                 <span class="keyword">this</span>.lastWriteOver = <span class="keyword">this</span>.transferData();</div><div class="line"> <span class="number">51</span>:                 <span class="keyword">if</span> (!<span class="keyword">this</span>.lastWriteOver)</div><div class="line"> <span class="number">52</span>:                     <span class="keyword">continue</span>;</div><div class="line"> <span class="number">53</span>:             }</div><div class="line"> <span class="number">54</span>: </div><div class="line"> <span class="number">55</span>:             <span class="comment">// &#x9009;&#x62E9;&#x65B0;&#x7684;CommitLog&#x6570;&#x636E;&#x8FDB;&#x884C;&#x4F20;&#x8F93;</span></div><div class="line"> <span class="number">56</span>:             SelectMappedBufferResult selectResult =</div><div class="line"> <span class="number">57</span>:                 HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getCommitLogData(<span class="keyword">this</span>.nextTransferFromWhere);</div><div class="line"> <span class="number">58</span>:             <span class="keyword">if</span> (selectResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">59</span>:                 <span class="keyword">int</span> size = selectResult.getSize();</div><div class="line"> <span class="number">60</span>:                 <span class="keyword">if</span> (size &gt; HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getMessageStoreConfig().getHaTransferBatchSize()) {</div><div class="line"> <span class="number">61</span>:                     size = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getMessageStoreConfig().getHaTransferBatchSize();</div><div class="line"> <span class="number">62</span>:                 }</div><div class="line"> <span class="number">63</span>: </div><div class="line"> <span class="number">64</span>:                 <span class="keyword">long</span> thisOffset = <span class="keyword">this</span>.nextTransferFromWhere;</div><div class="line"> <span class="number">65</span>:                 <span class="keyword">this</span>.nextTransferFromWhere += size;</div><div class="line"> <span class="number">66</span>: </div><div class="line"> <span class="number">67</span>:                 selectResult.getByteBuffer().limit(size);</div><div class="line"> <span class="number">68</span>:                 <span class="keyword">this</span>.selectMappedBufferResult = selectResult;</div><div class="line"> <span class="number">69</span>: </div><div class="line"> <span class="number">70</span>:                 <span class="comment">// Build Header</span></div><div class="line"> <span class="number">71</span>:                 <span class="keyword">this</span>.byteBufferHeader.position(<span class="number">0</span>);</div><div class="line"> <span class="number">72</span>:                 <span class="keyword">this</span>.byteBufferHeader.limit(headerSize);</div><div class="line"> <span class="number">73</span>:                 <span class="keyword">this</span>.byteBufferHeader.putLong(thisOffset);</div><div class="line"> <span class="number">74</span>:                 <span class="keyword">this</span>.byteBufferHeader.putInt(size);</div><div class="line"> <span class="number">75</span>:                 <span class="keyword">this</span>.byteBufferHeader.flip();</div><div class="line"> <span class="number">76</span>: </div><div class="line"> <span class="number">77</span>:                 <span class="keyword">this</span>.lastWriteOver = <span class="keyword">this</span>.transferData();</div><div class="line"> <span class="number">78</span>:             } <span class="keyword">else</span> { <span class="comment">// &#x6CA1;&#x65B0;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x6302;&#x8D77;&#x7B49;&#x5F85;</span></div><div class="line"> <span class="number">79</span>:                 HAConnection.<span class="keyword">this</span>.haService.getWaitNotifyObject().allWaitForRunning(<span class="number">100</span>);</div><div class="line"> <span class="number">80</span>:             }</div><div class="line"> <span class="number">81</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">82</span>: </div><div class="line"> <span class="number">83</span>:             HAConnection.log.error(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception.&quot;</span>, e);</div><div class="line"> <span class="number">84</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">85</span>:         }</div><div class="line"> <span class="number">86</span>:     }</div><div class="line"> <span class="number">87</span>: </div><div class="line"> <span class="number">88</span>:     <span class="comment">// &#x65AD;&#x5F00;&#x8FDE;&#x63A5; &amp; &#x6682;&#x505C;&#x5199;&#x7EBF;&#x7A0B; &amp; &#x6682;&#x505C;&#x8BFB;&#x7EBF;&#x7A0B; &amp; &#x91CA;&#x653E;CommitLog</span></div><div class="line"> <span class="number">89</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.selectMappedBufferResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">90</span>:         <span class="keyword">this</span>.selectMappedBufferResult.release();</div><div class="line"> <span class="number">91</span>:     }</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>:     <span class="keyword">this</span>.makeStop();</div><div class="line"> <span class="number">94</span>: </div><div class="line"> <span class="number">95</span>:     readSocketService.makeStop();</div><div class="line"> <span class="number">96</span>: </div><div class="line"> <span class="number">97</span>:     haService.removeConnection(HAConnection.<span class="keyword">this</span>);</div><div class="line"> <span class="number">98</span>: </div><div class="line"> <span class="number">99</span>:     SelectionKey sk = <span class="keyword">this</span>.socketChannel.keyFor(<span class="keyword">this</span>.selector);</div><div class="line"><span class="number">100</span>:     <span class="keyword">if</span> (sk != <span class="keyword">null</span>) {</div><div class="line"><span class="number">101</span>:         sk.cancel();</div><div class="line"><span class="number">102</span>:     }</div><div class="line"><span class="number">103</span>: </div><div class="line"><span class="number">104</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">105</span>:         <span class="keyword">this</span>.selector.close();</div><div class="line"><span class="number">106</span>:         <span class="keyword">this</span>.socketChannel.close();</div><div class="line"><span class="number">107</span>:     } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">108</span>:         HAConnection.log.error(<span class="string">&quot;&quot;</span>, e);</div><div class="line"><span class="number">109</span>:     }</div><div class="line"><span class="number">110</span>: </div><div class="line"><span class="number">111</span>:     HAConnection.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">112</span>: }</div><div class="line"><span class="number">113</span>: </div><div class="line"><span class="number">114</span>: <span class="comment">/**</span></div><div class="line">115:  * &#x4F20;&#x8F93;&#x6570;&#x636E;</div><div class="line">116:  */</div><div class="line"><span class="number">117</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">transferData</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</div><div class="line"><span class="number">118</span>:     <span class="keyword">int</span> writeSizeZeroTimes = <span class="number">0</span>;</div><div class="line"><span class="number">119</span>:     <span class="comment">// Write Header</span></div><div class="line"><span class="number">120</span>:     <span class="keyword">while</span> (<span class="keyword">this</span>.byteBufferHeader.hasRemaining()) {</div><div class="line"><span class="number">121</span>:         <span class="keyword">int</span> writeSize = <span class="keyword">this</span>.socketChannel.write(<span class="keyword">this</span>.byteBufferHeader);</div><div class="line"><span class="number">122</span>:         <span class="keyword">if</span> (writeSize &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">123</span>:             writeSizeZeroTimes = <span class="number">0</span>;</div><div class="line"><span class="number">124</span>:             <span class="keyword">this</span>.lastWriteTimestamp = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getSystemClock().now();</div><div class="line"><span class="number">125</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (writeSize == <span class="number">0</span>) {</div><div class="line"><span class="number">126</span>:             <span class="keyword">if</span> (++writeSizeZeroTimes &gt;= <span class="number">3</span>) {</div><div class="line"><span class="number">127</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">128</span>:             }</div><div class="line"><span class="number">129</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">130</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;ha master write header error &lt; 0&quot;</span>);</div><div class="line"><span class="number">131</span>:         }</div><div class="line"><span class="number">132</span>:     }</div><div class="line"><span class="number">133</span>: </div><div class="line"><span class="number">134</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == <span class="keyword">this</span>.selectMappedBufferResult) {</div><div class="line"><span class="number">135</span>:         <span class="keyword">return</span> !<span class="keyword">this</span>.byteBufferHeader.hasRemaining();</div><div class="line"><span class="number">136</span>:     }</div><div class="line"><span class="number">137</span>: </div><div class="line"><span class="number">138</span>:     writeSizeZeroTimes = <span class="number">0</span>;</div><div class="line"><span class="number">139</span>: </div><div class="line"><span class="number">140</span>:     <span class="comment">// Write Body</span></div><div class="line"><span class="number">141</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.byteBufferHeader.hasRemaining()) {</div><div class="line"><span class="number">142</span>:         <span class="keyword">while</span> (<span class="keyword">this</span>.selectMappedBufferResult.getByteBuffer().hasRemaining()) {</div><div class="line"><span class="number">143</span>:             <span class="keyword">int</span> writeSize = <span class="keyword">this</span>.socketChannel.write(<span class="keyword">this</span>.selectMappedBufferResult.getByteBuffer());</div><div class="line"><span class="number">144</span>:             <span class="keyword">if</span> (writeSize &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">145</span>:                 writeSizeZeroTimes = <span class="number">0</span>;</div><div class="line"><span class="number">146</span>:                 <span class="keyword">this</span>.lastWriteTimestamp = HAConnection.<span class="keyword">this</span>.haService.getDefaultMessageStore().getSystemClock().now();</div><div class="line"><span class="number">147</span>:             } <span class="keyword">else</span> <span class="keyword">if</span> (writeSize == <span class="number">0</span>) {</div><div class="line"><span class="number">148</span>:                 <span class="keyword">if</span> (++writeSizeZeroTimes &gt;= <span class="number">3</span>) {</div><div class="line"><span class="number">149</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">150</span>:                 }</div><div class="line"><span class="number">151</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">152</span>:                 <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;ha master write body error &lt; 0&quot;</span>);</div><div class="line"><span class="number">153</span>:             }</div><div class="line"><span class="number">154</span>:         }</div><div class="line"><span class="number">155</span>:     }</div><div class="line"><span class="number">156</span>: </div><div class="line"><span class="number">157</span>:     <span class="keyword">boolean</span> result = !<span class="keyword">this</span>.byteBufferHeader.hasRemaining() &amp;&amp; !<span class="keyword">this</span>.selectMappedBufferResult.getByteBuffer().hasRemaining();</div><div class="line"><span class="number">158</span>: </div><div class="line"><span class="number">159</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.selectMappedBufferResult.getByteBuffer().hasRemaining()) {</div><div class="line"><span class="number">160</span>:         <span class="keyword">this</span>.selectMappedBufferResult.release();</div><div class="line"><span class="number">161</span>:         <span class="keyword">this</span>.selectMappedBufferResult = <span class="keyword">null</span>;</div><div class="line"><span class="number">162</span>:     }</div><div class="line"><span class="number">163</span>: </div><div class="line"><span class="number">164</span>:     <span class="keyword">return</span> result;</div><div class="line"><span class="number">165</span>: }</div></pre></td></tr></table></figure>
<h3 id="3-1-6-Master-SYNC"><a href="#3-1-6-Master-SYNC" class="headerlink" title="3.1.6 Master_SYNC"></a>3.1.6 Master_SYNC</h3><ul class="ui list">
<li><strong><code>Producer</code> &#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#xFF0C;<code>Master_SYNC</code>&#x8282;&#x70B9; &#x4F1A;&#x7B49;&#x5F85; <code>Slave</code>&#x8282;&#x70B9; &#x5B58;&#x50A8;&#x5B8C;&#x6BD5;&#x540E;&#x518D;&#x8FD4;&#x56DE;&#x53D1;&#x9001;&#x7ED3;&#x679C;&#x3002;</strong></li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;CommitLog.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> PutMessageResult <span class="title">putMessage</span><span class="params">(<span class="keyword">final</span> MessageExtBrokerInner msg)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="comment">// ....&#x7701;&#x7565;&#x5904;&#x7406;&#x53D1;&#x9001;&#x4EE3;&#x7801; </span></div><div class="line"> <span class="number">4</span>:     <span class="comment">// Synchronous write double &#x5982;&#x679C;&#x662F;&#x540C;&#x6B65;Master&#xFF0C;&#x540C;&#x6B65;&#x5230;&#x4ECE;&#x8282;&#x70B9;</span></div><div class="line"> <span class="number">5</span>:     <span class="keyword">if</span> (BrokerRole.SYNC_MASTER == <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getBrokerRole()) {</div><div class="line"> <span class="number">6</span>:         HAService service = <span class="keyword">this</span>.defaultMessageStore.getHaService();</div><div class="line"> <span class="number">7</span>:         <span class="keyword">if</span> (msg.isWaitStoreMsgOK()) {</div><div class="line"> <span class="number">8</span>:             <span class="comment">// Determine whether to wait</span></div><div class="line"> <span class="number">9</span>:             <span class="keyword">if</span> (service.isSlaveOK(result.getWroteOffset() + result.getWroteBytes())) {</div><div class="line"><span class="number">10</span>:                 <span class="keyword">if</span> (<span class="keyword">null</span> == request) {</div><div class="line"><span class="number">11</span>:                     request = <span class="keyword">new</span> GroupCommitRequest(result.getWroteOffset() + result.getWroteBytes());</div><div class="line"><span class="number">12</span>:                 }</div><div class="line"><span class="number">13</span>:                 service.putRequest(request);</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:                 <span class="comment">// &#x5524;&#x9192;WriteSocketService</span></div><div class="line"><span class="number">16</span>:                 service.getWaitNotifyObject().wakeupAll();</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:                 <span class="keyword">boolean</span> flushOK = request.waitForFlush(<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getSyncFlushTimeout());</div><div class="line"><span class="number">19</span>:                 <span class="keyword">if</span> (!flushOK) {</div><div class="line"><span class="number">20</span>:                     log.error(<span class="string">&quot;do sync transfer other node, wait return, but failed, topic: &quot;</span> + msg.getTopic() + <span class="string">&quot; tags: &quot;</span></div><div class="line"><span class="number">21</span>:                         + msg.getTags() + <span class="string">&quot; client address: &quot;</span> + msg.getBornHostString());</div><div class="line"><span class="number">22</span>:                     putMessageResult.setPutMessageStatus(PutMessageStatus.FLUSH_SLAVE_TIMEOUT);</div><div class="line"><span class="number">23</span>:                 }</div><div class="line"><span class="number">24</span>:             }</div><div class="line"><span class="number">25</span>:             <span class="comment">// Slave problem</span></div><div class="line"><span class="number">26</span>:             <span class="keyword">else</span> {</div><div class="line"><span class="number">27</span>:                 <span class="comment">// Tell the producer, slave not available</span></div><div class="line"><span class="number">28</span>:                 putMessageResult.setPutMessageStatus(PutMessageStatus.SLAVE_NOT_AVAILABLE);</div><div class="line"><span class="number">29</span>:             }</div><div class="line"><span class="number">30</span>:         }</div><div class="line"><span class="number">31</span>:     }</div><div class="line"><span class="number">32</span>: </div><div class="line"><span class="number">33</span>:     <span class="keyword">return</span> putMessageResult;</div><div class="line"><span class="number">34</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 16 &#x884C; &#xFF1A;&#x5524;&#x9192; <code>WriteSocketService</code>&#x3002;<ul>
<li>&#x5524;&#x9192;&#x540E;&#xFF0C;<code>WriteSocketService</code> &#x6302;&#x8D77;&#x7B49;&#x5F85;&#x65B0;&#x6D88;&#x606F;&#x7ED3;&#x675F;&#xFF0C;<code>Master</code> &#x4F20;&#x8F93; <code>Slave</code> &#x65B0;&#x7684; <code>CommitLog</code> &#x6570;&#x636E;&#x3002;</li>
<li><code>Slave</code> &#x6536;&#x5230;&#x6570;&#x636E;&#x540E;&#xFF0C;<strong>&#x7ACB;&#x5373;</strong>&#x4E0A;&#x62A5;&#x6700;&#x65B0;&#x7684; <code>CommitLog</code> &#x540C;&#x6B65;&#x8FDB;&#x5EA6;&#x5230; <code>Master</code>&#x3002;<code>ReadSocketService</code> &#x5524;&#x9192;<strong>&#x7B2C; 18 &#x884C;</strong>&#xFF1A;<code>request#waitForFlush(...)</code>&#x3002;</li>
</ul>
</li>
</ul>
<p>&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B; <code>GroupTransferService</code> &#x7684;&#x6838;&#x5FC3;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;GroupTransferService.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doWaitTransfer</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">synchronized</span> (<span class="keyword">this</span>.requestsRead) {</div><div class="line"> <span class="number">4</span>:         <span class="keyword">if</span> (!<span class="keyword">this</span>.requestsRead.isEmpty()) {</div><div class="line"> <span class="number">5</span>:             <span class="keyword">for</span> (CommitLog.GroupCommitRequest req : <span class="keyword">this</span>.requestsRead) {</div><div class="line"> <span class="number">6</span>:                 <span class="comment">// &#x7B49;&#x5F85;Slave&#x4E0A;&#x4F20;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">7</span>:                 <span class="keyword">boolean</span> transferOK = HAService.<span class="keyword">this</span>.push2SlaveMaxOffset.get() &gt;= req.getNextOffset();</div><div class="line"> <span class="number">8</span>:                 <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; !transferOK &amp;&amp; i &lt; <span class="number">5</span>; i++) {</div><div class="line"> <span class="number">9</span>:                     <span class="keyword">this</span>.notifyTransferObject.waitForRunning(<span class="number">1000</span>); <span class="comment">// &#x5524;&#x9192;</span></div><div class="line"><span class="number">10</span>:                     transferOK = HAService.<span class="keyword">this</span>.push2SlaveMaxOffset.get() &gt;= req.getNextOffset();</div><div class="line"><span class="number">11</span>:                 }</div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:                 <span class="keyword">if</span> (!transferOK) {</div><div class="line"><span class="number">14</span>:                     log.warn(<span class="string">&quot;transfer messsage to slave timeout, &quot;</span> + req.getNextOffset());</div><div class="line"><span class="number">15</span>:                 }</div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>:                 <span class="comment">// &#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x662F;&#x5426;Slave&#x540C;&#x6B65;&#x6210;&#x529F;</span></div><div class="line"><span class="number">18</span>:                 req.wakeupCustomer(transferOK);</div><div class="line"><span class="number">19</span>:             }</div><div class="line"><span class="number">20</span>: </div><div class="line"><span class="number">21</span>:             <span class="keyword">this</span>.requestsRead.clear();</div><div class="line"><span class="number">22</span>:         }</div><div class="line"><span class="number">23</span>:     }</div><div class="line"><span class="number">24</span>: }</div></pre></td></tr></table></figure>
<h2 id="3-2-Producer-&#x53D1;&#x9001;&#x6D88;&#x606F;"><a href="#3-2-Producer-&#x53D1;&#x9001;&#x6D88;&#x606F;" class="headerlink" title="3.2 Producer &#x53D1;&#x9001;&#x6D88;&#x606F;"></a>3.2 Producer &#x53D1;&#x9001;&#x6D88;&#x606F;</h2><ul class="ui list">
<li><strong><code>Producer</code> &#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x4F1A;&#x5BF9; <code>Broker</code>&#x96C6;&#x7FA4; &#x7684;&#x6240;&#x6709;&#x961F;&#x5217;&#x8FDB;&#x884C;&#x9009;&#x62E9;&#x3002;</strong></li>
</ul>
<p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;DefaultMQProducerImpl.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">private</span> SendResult <span class="title">sendDefaultImpl</span><span class="params">(//</span></span></div><div class="line"> <span class="number">3</span>:     Message msg, //</div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> CommunicationMode communicationMode, //</div><div class="line"> <span class="number">5</span>:     <span class="keyword">final</span> SendCallback sendCallback, //</div><div class="line"> <span class="number">6</span>:     <span class="keyword">final</span> <span class="keyword">long</span> timeout//</div><div class="line"> <span class="number">7</span>: ) <span class="keyword">throws</span> MQClientException, RemotingException, MQBrokerException, InterruptedException {</div><div class="line"> <span class="number">8</span>:     <span class="comment">// .... &#x7701;&#x7565;&#xFF1A;&#x5904;&#x7406;&#x3010;&#x6821;&#x9A8C;&#x903B;&#x8F91;&#x3011;</span></div><div class="line"> <span class="number">9</span>:     <span class="comment">// &#x83B7;&#x53D6; Topic&#x8DEF;&#x7531;&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">10</span>:     TopicPublishInfo topicPublishInfo = <span class="keyword">this</span>.tryToFindTopicPublishInfo(msg.getTopic());</div><div class="line"><span class="number">11</span>:     <span class="keyword">if</span> (topicPublishInfo != <span class="keyword">null</span> &amp;&amp; topicPublishInfo.ok()) {</div><div class="line"><span class="number">12</span>:         MessageQueue mq = <span class="keyword">null</span>; <span class="comment">// &#x6700;&#x540E;&#x9009;&#x62E9;&#x6D88;&#x606F;&#x8981;&#x53D1;&#x9001;&#x5230;&#x7684;&#x961F;&#x5217;</span></div><div class="line"><span class="number">13</span>:         Exception exception = <span class="keyword">null</span>;</div><div class="line"><span class="number">14</span>:         SendResult sendResult = <span class="keyword">null</span>; <span class="comment">// &#x6700;&#x540E;&#x4E00;&#x6B21;&#x53D1;&#x9001;&#x7ED3;&#x679C;</span></div><div class="line"><span class="number">15</span>:         <span class="keyword">int</span> timesTotal = communicationMode == CommunicationMode.SYNC ? <span class="number">1</span> + <span class="keyword">this</span>.defaultMQProducer.getRetryTimesWhenSendFailed() : <span class="number">1</span>; <span class="comment">// &#x540C;&#x6B65;&#x591A;&#x6B21;&#x8C03;&#x7528;</span></div><div class="line"><span class="number">16</span>:         <span class="keyword">int</span> times = <span class="number">0</span>; <span class="comment">// &#x7B2C;&#x51E0;&#x6B21;&#x53D1;&#x9001;</span></div><div class="line"><span class="number">17</span>:         String[] brokersSent = <span class="keyword">new</span> String[timesTotal]; <span class="comment">// &#x5B58;&#x50A8;&#x6BCF;&#x6B21;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x9009;&#x62E9;&#x7684;broker&#x540D;</span></div><div class="line"><span class="number">18</span>:         <span class="comment">// &#x5FAA;&#x73AF;&#x8C03;&#x7528;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x76F4;&#x5230;&#x6210;&#x529F;</span></div><div class="line"><span class="number">19</span>:         <span class="keyword">for</span> (; times &lt; timesTotal; times++) {</div><div class="line"><span class="number">20</span>:             String lastBrokerName = <span class="keyword">null</span> == mq ? <span class="keyword">null</span> : mq.getBrokerName();</div><div class="line"><span class="number">21</span>:             MessageQueue tmpmq = <span class="keyword">this</span>.selectOneMessageQueue(topicPublishInfo, lastBrokerName); <span class="comment">// &#x9009;&#x62E9;&#x6D88;&#x606F;&#x8981;&#x53D1;&#x9001;&#x5230;&#x7684;&#x961F;&#x5217;</span></div><div class="line"><span class="number">22</span>:             <span class="keyword">if</span> (tmpmq != <span class="keyword">null</span>) {</div><div class="line"><span class="number">23</span>:                 mq = tmpmq;</div><div class="line"><span class="number">24</span>:                 brokersSent[times] = mq.getBrokerName();</div><div class="line"><span class="number">25</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">26</span>:                     beginTimestampPrev = System.currentTimeMillis();</div><div class="line"><span class="number">27</span>:                     <span class="comment">// &#x8C03;&#x7528;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;</span></div><div class="line"><span class="number">28</span>:                     sendResult = <span class="keyword">this</span>.sendKernelImpl(msg, mq, communicationMode, sendCallback, topicPublishInfo, timeout);</div><div class="line"><span class="number">29</span>:                     endTimestamp = System.currentTimeMillis();</div><div class="line"><span class="number">30</span>:                     <span class="comment">// &#x66F4;&#x65B0;Broker&#x53EF;&#x7528;&#x6027;&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">31</span>:                     <span class="keyword">this</span>.updateFaultItem(mq.getBrokerName(), endTimestamp - beginTimestampPrev, <span class="keyword">false</span>);</div><div class="line"><span class="number">32</span>:                     <span class="comment">// .... &#x7701;&#x7565;&#xFF1A;&#x5904;&#x7406;&#x3010;&#x53D1;&#x9001;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3011;</span></div><div class="line"><span class="number">33</span>:                     }</div><div class="line"><span class="number">34</span>:                 } <span class="keyword">catch</span> (e) { <span class="comment">// .... &#x7701;&#x7565;&#xFF1A;&#x5904;&#x7406;&#x3010;&#x5F02;&#x5E38;&#x3011;</span></div><div class="line"><span class="number">35</span>:                     </div><div class="line"><span class="number">36</span>:                 }</div><div class="line"><span class="number">37</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">38</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">39</span>:             }</div><div class="line"><span class="number">40</span>:         }</div><div class="line"><span class="number">41</span>:         <span class="comment">// .... &#x7701;&#x7565;&#xFF1A;&#x5904;&#x7406;&#x3010;&#x53D1;&#x9001;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3011;</span></div><div class="line"><span class="number">42</span>:     }</div><div class="line"><span class="number">43</span>:     <span class="comment">// .... &#x7701;&#x7565;&#xFF1A;&#x5904;&#x7406;&#x3010;&#x627E;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#x8DEF;&#x7531;&#x3011;</span></div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<p>&#x5982;&#x4E0B;&#x662F;&#x8C03;&#x8BD5; <code>#sendDefaultImpl(...)</code> &#x65F6; <code>TopicPublishInfo</code> &#x7684;&#x7ED3;&#x679C;&#xFF0C;<code>Producer</code> &#x83B7;&#x5F97;&#x5230;&#x4E86; <code>broker-a</code>,<code>broker-b</code> &#x4E24;&#x4E2A; <code>Broker</code>&#x5206;&#x7EC4; &#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF1A;<br><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_14/05.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_14/05.png" alt="Producer.TopicPublishInfo.&#x8C03;&#x8BD5;.png" class="ui centered image"></a></p>
<h2 id="3-3-Consumer-&#x6D88;&#x8D39;&#x6D88;&#x606F;"><a href="#3-3-Consumer-&#x6D88;&#x8D39;&#x6D88;&#x606F;" class="headerlink" title="3.3 Consumer &#x6D88;&#x8D39;&#x6D88;&#x606F;"></a>3.3 Consumer &#x6D88;&#x8D39;&#x6D88;&#x606F;</h2><ul class="ui list">
<li><strong><code>Consumer</code> &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x4F1A;&#x5BF9; <code>Broker</code>&#x96C6;&#x7FA4; &#x7684;&#x6240;&#x6709;&#x961F;&#x5217;&#x8FDB;&#x884C;&#x9009;&#x62E9;&#x3002;</strong></li>
</ul>
<h1 id="4-&#x603B;&#x7ED3;"><a href="#4-&#x603B;&#x7ED3;" class="headerlink" title="4. &#x603B;&#x7ED3;"></a>4. &#x603B;&#x7ED3;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_14/03.jpeg"><img src="http://www.yunai.me/images/RocketMQ/2017_05_14/03.jpeg" alt="HA&#x603B;&#x7ED3;.jpeg" class="ui centered image"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Message 顺序发送与消费</title>
    <link href="http://www.yunai.me/RocketMQ/message-send-and-consume-orderly/"/>
    <id>http://www.yunai.me/RocketMQ/message-send-and-consume-orderly/</id>
    <published>2017-05-12T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1. &#x6982;&#x8FF0;</a></li>
<li><a href="#">2. Producer &#x987A;&#x5E8F;&#x53D1;&#x9001;</a></li>
<li><a href="#">3. Consumer &#x987A;&#x5E8F;&#x6D88;&#x8D39;</a><ul>
<li><a href="#">3.1 &#x83B7;&#x5F97;(&#x9501;&#x5B9A;)&#x6D88;&#x606F;&#x961F;&#x5217;</a></li>
<li><a href="#">3.2 &#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;</a></li>
<li><a href="#">3.3 &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;</a><ul>
<li><a href="#">3.1.1 &#x6D88;&#x8D39;&#x6D88;&#x606F;</a></li>
<li><a href="#">3.1.2 &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;</a></li>
<li><a href="#">3.13 &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="1-&#x6982;&#x8FF0;"><a href="#1-&#x6982;&#x8FF0;" class="headerlink" title="1. &#x6982;&#x8FF0;"></a>1. &#x6982;&#x8FF0;</h1><p><strong>&#x5EFA;&#x8BAE;</strong>&#x524D;&#x7F6E;&#x9605;&#x8BFB;&#x5185;&#x5BB9;&#xFF1A;</p>
<ul class="ui list">
<li><a href="http://www.yunai.me/RocketMQ/message-send-and-receive/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x53D1;&#x9001;&#x4E0E;&#x63A5;&#x6536;&#x300B;</a></li>
<li><a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-second/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x62C9;&#x53D6;&#x4E0E;&#x6D88;&#x8D39;&#xFF08;&#x4E0B;&#xFF09;&#x300B;</a></li>
</ul>
<p>&#x5F53;&#x7136;&#x5BF9; <code>Message</code> &#x53D1;&#x9001;&#x4E0E;&#x6D88;&#x8D39;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x5B9A;&#x4E86;&#x89E3;&#x7684;&#x540C;&#x5B66;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x8DF3;&#x8FC7;&#x3002;</p>
<hr>
<p><code>RocketMQ</code> &#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x79CD;&#x987A;&#x5E8F;&#x7EA7;&#x522B;&#xFF1A;</p>
<ul class="ui list">
<li>&#x666E;&#x901A;&#x987A;&#x5E8F;&#x6D88;&#x606F; &#xFF1A;<code>Producer</code> &#x5C06;&#x76F8;&#x5173;&#x8054;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x5230;&#x76F8;&#x540C;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x5B8C;&#x5168;&#x4E25;&#x683C;&#x987A;&#x5E8F; &#xFF1A;&#x5728; <code>&#x666E;&#x901A;&#x987A;&#x5E8F;&#x6D88;&#x606F;</code> &#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;<code>Consumer</code> &#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x3002;</li>
</ul>
<p>&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x573A;&#x666F;&#x4E0B;&#x53EA;&#x9700;&#x8981;&#x7528;&#x5230;<strong>&#x666E;&#x901A;&#x987A;&#x5E8F;&#x6D88;&#x606F;</strong>&#x3002;<br>&#x4F8B;&#x5982;&#x8BF4;&#xFF1A;&#x7ED9;&#x7528;&#x6237;&#x53D1;&#x9001;&#x77ED;&#x4FE1;&#x6D88;&#x606F; + &#x53D1;&#x9001;&#x63A8;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x5C06;&#x4E24;&#x6761;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x82E5;&#x5176;&#x4E2D;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x8F83;&#x6162;&#x9020;&#x6210;&#x5835;&#x585E;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x80FD;&#x4F1A;&#x6536;&#x5230;&#x4E24;&#x6761;&#x6D88;&#x606F;&#x4F1A;&#x5B58;&#x5728;&#x4E00;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5DEE;&#xFF0C;&#x5E26;&#x6765;&#x7684;&#x4F53;&#x9A8C;&#x4F1A;&#x76F8;&#x5BF9;&#x8F83;&#x5DEE;&#x3002;&#x5F53;&#x7136;&#x7C7B;&#x4F3C;&#x8FD9;&#x79CD;&#x573A;&#x666F;&#xFF0C;&#x5373;&#x4F7F;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5DEE;&#xFF0C;<strong>&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x7CFB;&#x7EDF;&#x903B;&#x8F91;&#x4E0A;BUG</strong>&#x3002;&#x53E6;&#x5916;&#xFF0C;<code>&#x666E;&#x901A;&#x987A;&#x5E8F;&#x6D88;&#x606F;</code>&#x6027;&#x80FD;&#x80FD;&#x66F4;&#x52A0;&#x597D;&#x3002;<br>&#x90A3;&#x4E48;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x4F7F;&#x7528;<strong>&#x5B8C;&#x5168;&#x4E25;&#x683C;&#x987A;&#x5E8F;</strong>&#xFF1F;&#x5982;&#x4E0B;&#x662F;&#x6765;&#x81EA;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x8BF4;&#x660E;&#xFF1A;</p>
<blockquote>
<p>&#x76EE;&#x524D;&#x5DF2;&#x77E5;&#x7684;&#x5E94;&#x7528;&#x53EA;&#x6709;&#x6570;&#x636E;&#x5E93; <code>binlog</code> &#x540C;&#x6B65;&#x5F3A;&#x4F9D;&#x8D56;&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x606F;&#xFF0C;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x53EF;&#x4EE5;&#x5BB9;&#x5FCD;&#x77ED;&#x6682;&#x4E71;&#x5E8F;&#xFF0C;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x666E;&#x901A;&#x7684;&#x987A;&#x5E8F;&#x6D88;&#x606F;</p>
</blockquote>
<hr>
<p>&#x1F608;&#x4E0A;&#x4EE3;&#x7801;&#xFF01;&#xFF01;&#xFF01;</p>
<h1 id="2-Producer-&#x987A;&#x5E8F;&#x53D1;&#x9001;"><a href="#2-Producer-&#x987A;&#x5E8F;&#x53D1;&#x9001;" class="headerlink" title="2. Producer &#x987A;&#x5E8F;&#x53D1;&#x9001;"></a>2. <code>Producer</code> &#x987A;&#x5E8F;&#x53D1;&#x9001;</h1><p>&#x5B98;&#x65B9;&#x53D1;&#x9001;&#x987A;&#x5E8F;&#x6D88;&#x606F;&#x7684;<strong>&#x4F8B;&#x5B50;</strong>&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">package</span> org.apache.rocketmq.example.ordermessage;</div><div class="line"> <span class="number">2</span>: </div><div class="line"> <span class="number">3</span>: <span class="keyword">import</span> java.io.UnsupportedEncodingException;</div><div class="line"> <span class="number">4</span>: <span class="keyword">import</span> java.util.List;</div><div class="line"> <span class="number">5</span>: <span class="keyword">import</span> org.apache.rocketmq.client.exception.MQBrokerException;</div><div class="line"> <span class="number">6</span>: <span class="keyword">import</span> org.apache.rocketmq.client.exception.MQClientException;</div><div class="line"> <span class="number">7</span>: <span class="keyword">import</span> org.apache.rocketmq.client.producer.DefaultMQProducer;</div><div class="line"> <span class="number">8</span>: <span class="keyword">import</span> org.apache.rocketmq.client.producer.MQProducer;</div><div class="line"> <span class="number">9</span>: <span class="keyword">import</span> org.apache.rocketmq.client.producer.MessageQueueSelector;</div><div class="line"><span class="number">10</span>: <span class="keyword">import</span> org.apache.rocketmq.client.producer.SendResult;</div><div class="line"><span class="number">11</span>: <span class="keyword">import</span> org.apache.rocketmq.common.message.Message;</div><div class="line"><span class="number">12</span>: <span class="keyword">import</span> org.apache.rocketmq.common.message.MessageQueue;</div><div class="line"><span class="number">13</span>: <span class="keyword">import</span> org.apache.rocketmq.remoting.common.RemotingHelper;</div><div class="line"><span class="number">14</span>: <span class="keyword">import</span> org.apache.rocketmq.remoting.exception.RemotingException;</div><div class="line"><span class="number">15</span>: </div><div class="line"><span class="number">16</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>{</div><div class="line"><span class="number">17</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>{</div><div class="line"><span class="number">18</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">19</span>:             MQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</div><div class="line"><span class="number">20</span>:             producer.start();</div><div class="line"><span class="number">21</span>: </div><div class="line"><span class="number">22</span>:             String[] tags = <span class="keyword">new</span> String[] {<span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;TagB&quot;</span>, <span class="string">&quot;TagC&quot;</span>, <span class="string">&quot;TagD&quot;</span>, <span class="string">&quot;TagE&quot;</span>};</div><div class="line"><span class="number">23</span>:             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) {</div><div class="line"><span class="number">24</span>:                 <span class="keyword">int</span> orderId = i % <span class="number">10</span>;</div><div class="line"><span class="number">25</span>:                 Message msg =</div><div class="line"><span class="number">26</span>:                     <span class="keyword">new</span> Message(<span class="string">&quot;TopicTestjjj&quot;</span>, tags[i % tags.length], <span class="string">&quot;KEY&quot;</span> + i,</div><div class="line"><span class="number">27</span>:                         (<span class="string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET));</div><div class="line"><span class="number">28</span>:                 SendResult sendResult = producer.send(msg, <span class="keyword">new</span> MessageQueueSelector() {</div><div class="line"><span class="number">29</span>:                     <span class="meta">@Override</span></div><div class="line"><span class="number">30</span>:                     <span class="function"><span class="keyword">public</span> MessageQueue <span class="title">select</span><span class="params">(List&lt;MessageQueue&gt; mqs, Message msg, Object arg)</span> </span>{</div><div class="line"><span class="number">31</span>:                         Integer id = (Integer) arg;</div><div class="line"><span class="number">32</span>:                         <span class="keyword">int</span> index = id % mqs.size();</div><div class="line"><span class="number">33</span>:                         <span class="keyword">return</span> mqs.get(index);</div><div class="line"><span class="number">34</span>:                     }</div><div class="line"><span class="number">35</span>:                 }, orderId);</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:                 System.out.printf(<span class="string">&quot;%s%n&quot;</span>, sendResult);</div><div class="line"><span class="number">38</span>:             }</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:             producer.shutdown();</div><div class="line"><span class="number">41</span>:         } <span class="keyword">catch</span> (MQClientException | RemotingException | MQBrokerException | InterruptedException e) {</div><div class="line"><span class="number">42</span>:             e.printStackTrace();</div><div class="line"><span class="number">43</span>:         }</div><div class="line"><span class="number">44</span>:     }</div><div class="line"><span class="number">45</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 28 &#x81F3; 35 &#x884C; &#xFF1A;&#x5B9E;&#x73B0;&#x4E86;&#x6839;&#x636E; <code>id % mqs.size()</code> &#x6765;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x9009;&#x62E9;&#x3002;&#x5F53;&#x524D;&#x4F8B;&#x5B50;&#xFF0C;<strong>&#x6211;&#x4EEC;&#x4F20;&#x9012; <code>orderId</code> &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x76F8;&#x540C;&#x7684; <code>orderId</code> &#x80FD;&#x591F;&#x8FDB;&#x5165;&#x76F8;&#x540C;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</strong>&#x3002;</li>
</ul>
<hr>
<p><code>MessageQueueSelector</code> &#x63A5;&#x53E3;&#x7684;<strong>&#x6E90;&#x7801;</strong>&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MessageQueueSelector</span> </span>{</div><div class="line"> <span class="number">2</span>: </div><div class="line"> <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line"> 4:      * &#x9009;&#x62E9;&#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 5:      *</div><div class="line"> 6:      * <span class="doctag">@param</span> mqs &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 7:      * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line"> 8:      * <span class="doctag">@param</span> arg &#x53C2;&#x6570;</div><div class="line"> 9:      * <span class="doctag">@return</span> &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line">10:      */</div><div class="line"><span class="number">11</span>:     <span class="function">MessageQueue <span class="title">select</span><span class="params">(<span class="keyword">final</span> List&lt;MessageQueue&gt; mqs, <span class="keyword">final</span> Message msg, <span class="keyword">final</span> Object arg)</span></span>;</div><div class="line"><span class="number">12</span>: }</div></pre></td></tr></table></figure>
<hr>
<p><code>Producer</code> &#x9009;&#x62E9;&#x961F;&#x5217;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x65B9;&#x6CD5;&#x7684;<strong>&#x6E90;&#x7801;</strong>&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">16</span>: <span class="function"><span class="keyword">private</span> SendResult <span class="title">sendSelectImpl</span><span class="params">(//</span></span></div><div class="line"><span class="number">17</span>:     Message msg, //</div><div class="line"><span class="number">18</span>:     MessageQueueSelector selector, //</div><div class="line"><span class="number">19</span>:     Object arg, //</div><div class="line"><span class="number">20</span>:     <span class="keyword">final</span> CommunicationMode communicationMode, //</div><div class="line"><span class="number">21</span>:     <span class="keyword">final</span> SendCallback sendCallback, <span class="keyword">final</span> <span class="keyword">long</span> timeout//</div><div class="line"><span class="number">22</span>: ) <span class="keyword">throws</span> MQClientException, RemotingException, MQBrokerException, InterruptedException {</div><div class="line"><span class="number">23</span>:     <span class="keyword">this</span>.makeSureStateOK();</div><div class="line"><span class="number">24</span>:     Validators.checkMessage(msg, <span class="keyword">this</span>.defaultMQProducer);</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:     TopicPublishInfo topicPublishInfo = <span class="keyword">this</span>.tryToFindTopicPublishInfo(msg.getTopic());</div><div class="line"><span class="number">27</span>:     <span class="keyword">if</span> (topicPublishInfo != <span class="keyword">null</span> &amp;&amp; topicPublishInfo.ok()) {</div><div class="line"><span class="number">28</span>:         MessageQueue mq = <span class="keyword">null</span>;</div><div class="line"><span class="number">29</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">30</span>:             mq = selector.select(topicPublishInfo.getMessageQueueList(), msg, arg);</div><div class="line"><span class="number">31</span>:         } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">32</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;select message queue throwed exception.&quot;</span>, e);</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>: </div><div class="line"><span class="number">35</span>:         <span class="keyword">if</span> (mq != <span class="keyword">null</span>) {</div><div class="line"><span class="number">36</span>:             <span class="keyword">return</span> <span class="keyword">this</span>.sendKernelImpl(msg, mq, communicationMode, sendCallback, <span class="keyword">null</span>, timeout);</div><div class="line"><span class="number">37</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">38</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;select message queue return null.&quot;</span>, <span class="keyword">null</span>);</div><div class="line"><span class="number">39</span>:         }</div><div class="line"><span class="number">40</span>:     }</div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>:     <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;No route info for this topic, &quot;</span> + msg.getTopic(), <span class="keyword">null</span>);</div><div class="line"><span class="number">43</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 30 &#x884C; &#xFF1A;&#x9009;&#x62E9;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7B2C; 36 &#x884C; &#xFF1A;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x3002;</li>
</ul>
<h1 id="3-Consumer-&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;"><a href="#3-Consumer-&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;" class="headerlink" title="3. Consumer &#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;"></a>3. <code>Consumer</code> &#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;</h1><p><code>Consumer</code> &#x5728;&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x65F6;&#xFF0C;&#x901A;&#x8FC7; <strong>&#x4E09;</strong> &#x628A;&#x9501;&#x4FDD;&#x8BC1;&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x3002;</p>
<ul class="ui list">
<li><code>Broker</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#xFF08;<strong>&#x5206;&#x5E03;&#x5F0F;&#x9501;</strong>&#xFF09; &#xFF1A;<ul>
<li>&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;<code>Consumer</code> &#x4ECE; <code>Broker</code> &#x83B7;&#x5F97;&#x8BE5;&#x9501;&#x540E;&#xFF0C;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x3001;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;<code>Consumer</code> &#x65E0;&#x9700;&#x8BE5;&#x9501;&#x3002;</li>
</ul>
</li>
<li><code>Consumer</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#xFF08;<strong>&#x672C;&#x5730;&#x9501;</strong>&#xFF09; &#xFF1A;<code>Consumer</code> &#x83B7;&#x5F97;&#x8BE5;&#x9501;&#x624D;&#x80FD;&#x64CD;&#x4F5C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li><code>Consumer</code> &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;&#xFF08;<strong>&#x672C;&#x5730;&#x9501;</strong>&#xFF09; &#xFF1A;<code>Consumer</code> &#x83B7;&#x5F97;&#x8BE5;&#x9501;&#x624D;&#x80FD;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
<p><strong>&#x53EF;&#x80FD;&#x540C;&#x5B66;&#x6709;&#x7591;&#x95EE;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6709; <code>Consumer</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x8FD8;&#x9700;&#x8981;&#x6709; <code>Consumer</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;&#x5462;</strong>&#xFF1F;&#x1F608;&#x8BA9;&#x6211;&#x4EEC;&#x5E26;&#x7740;&#x7591;&#x95EE;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;&#x3002;</p>
<hr>
<h2 id="3-1-&#x83B7;&#x5F97;-&#x9501;&#x5B9A;-&#x6D88;&#x606F;&#x961F;&#x5217;"><a href="#3-1-&#x83B7;&#x5F97;-&#x9501;&#x5B9A;-&#x6D88;&#x606F;&#x961F;&#x5217;" class="headerlink" title="3.1 &#x83B7;&#x5F97;(&#x9501;&#x5B9A;)&#x6D88;&#x606F;&#x961F;&#x5217;"></a>3.1 &#x83B7;&#x5F97;(&#x9501;&#x5B9A;)&#x6D88;&#x606F;&#x961F;&#x5217;</h2><p><strong>&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;</strong>&#x4E0B;&#xFF0C;<code>Consumer</code> &#x66F4;&#x65B0;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65F6;&#xFF0C;&#x4F1A;&#x5411; <code>Broker</code> &#x9501;&#x5B9A;&#x8BE5;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF08;<em>&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#x4E0B;&#x4E0D;&#x9700;&#x8981;</em>&#xFF09;&#x3002;&#x5982;&#x679C;&#x9501;&#x5B9A;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x66F4;&#x65B0;&#x5931;&#x8D25;&#xFF0C;&#x5373;&#x8BE5;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4E0D;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#xFF0C;&#x4E0D;&#x80FD;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RebalanceImpl.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">updateProcessQueueTableInRebalance</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> Set&lt;MessageQueue&gt; mqSet, <span class="keyword">final</span> <span class="keyword">boolean</span> isOrder)</span> </span>{</div><div class="line"> <span class="number">3</span>: <span class="comment">// ..... &#x6B64;&#x5904;&#x7701;&#x7565;&#x90E8;&#x5206;&#x4EE3;&#x7801; </span></div><div class="line"> <span class="number">4</span>:     <span class="comment">// &#x589E;&#x52A0; &#x4E0D;&#x5728;processQueueTable &amp;&amp; &#x5B58;&#x5728;&#x4E8E;mqSet &#x91CC;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</span></div><div class="line"> <span class="number">5</span>:     List&lt;PullRequest&gt; pullRequestList = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// &#x62C9;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x6570;&#x7EC4;</span></div><div class="line"> <span class="number">6</span>:     <span class="keyword">for</span> (MessageQueue mq : mqSet) {</div><div class="line"> <span class="number">7</span>:         <span class="keyword">if</span> (!<span class="keyword">this</span>.processQueueTable.containsKey(mq)) {</div><div class="line"> <span class="number">8</span>:             <span class="keyword">if</span> (isOrder &amp;&amp; !<span class="keyword">this</span>.lock(mq)) { <span class="comment">// &#x987A;&#x5E8F;&#x6D88;&#x606F;&#x9501;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">9</span>:                 log.warn(<span class="string">&quot;doRebalance, {}, add a new mq failed, {}, because lock failed&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">10</span>:                 <span class="keyword">continue</span>;</div><div class="line"><span class="number">11</span>:             }</div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:             <span class="keyword">this</span>.removeDirtyOffset(mq);</div><div class="line"><span class="number">14</span>:             ProcessQueue pq = <span class="keyword">new</span> ProcessQueue();</div><div class="line"><span class="number">15</span>:             <span class="keyword">long</span> nextOffset = <span class="keyword">this</span>.computePullFromWhere(mq);</div><div class="line"><span class="number">16</span>:             <span class="keyword">if</span> (nextOffset &gt;= <span class="number">0</span>) {</div><div class="line"><span class="number">17</span>:                 ProcessQueue pre = <span class="keyword">this</span>.processQueueTable.putIfAbsent(mq, pq);</div><div class="line"><span class="number">18</span>:                 <span class="keyword">if</span> (pre != <span class="keyword">null</span>) {</div><div class="line"><span class="number">19</span>:                     log.info(<span class="string">&quot;doRebalance, {}, mq already exists, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">20</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">21</span>:                     log.info(<span class="string">&quot;doRebalance, {}, add a new mq, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">22</span>:                     PullRequest pullRequest = <span class="keyword">new</span> PullRequest();</div><div class="line"><span class="number">23</span>:                     pullRequest.setConsumerGroup(consumerGroup);</div><div class="line"><span class="number">24</span>:                     pullRequest.setNextOffset(nextOffset);</div><div class="line"><span class="number">25</span>:                     pullRequest.setMessageQueue(mq);</div><div class="line"><span class="number">26</span>:                     pullRequest.setProcessQueue(pq);</div><div class="line"><span class="number">27</span>:                     pullRequestList.add(pullRequest);</div><div class="line"><span class="number">28</span>:                     changed = <span class="keyword">true</span>;</div><div class="line"><span class="number">29</span>:                 }</div><div class="line"><span class="number">30</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">31</span>:                 log.warn(<span class="string">&quot;doRebalance, {}, add new mq failed, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">32</span>:             }</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>:     }</div><div class="line"><span class="number">35</span>: </div><div class="line"><span class="number">36</span>: <span class="comment">// ..... &#x6B64;&#x5904;&#x7701;&#x7565;&#x90E8;&#x5206;&#x4EE3;&#x7801; </span></div><div class="line"><span class="number">37</span>: }</div><div class="line"><span class="number">38</span>: </div><div class="line"><span class="number">39</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RebalanceImpl.java&#x3011;</span></div><div class="line"><span class="number">40</span>: <span class="comment">/**</span></div><div class="line">41:  * &#x8BF7;&#x6C42;Broker&#x83B7;&#x5F97;&#x6307;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x9501;</div><div class="line">42:  *</div><div class="line">43:  * <span class="doctag">@param</span> mq &#x961F;&#x5217;</div><div class="line">44:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line">45:  */</div><div class="line"><span class="number">46</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">lock</span><span class="params">(<span class="keyword">final</span> MessageQueue mq)</span> </span>{</div><div class="line"><span class="number">47</span>:     FindBrokerResult findBrokerResult = <span class="keyword">this</span>.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(), MixAll.MASTER_ID, <span class="keyword">true</span>);</div><div class="line"><span class="number">48</span>:     <span class="keyword">if</span> (findBrokerResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">49</span>:         LockBatchRequestBody requestBody = <span class="keyword">new</span> LockBatchRequestBody();</div><div class="line"><span class="number">50</span>:         requestBody.setConsumerGroup(<span class="keyword">this</span>.consumerGroup);</div><div class="line"><span class="number">51</span>:         requestBody.setClientId(<span class="keyword">this</span>.mQClientFactory.getClientId());</div><div class="line"><span class="number">52</span>:         requestBody.getMqSet().add(mq);</div><div class="line"><span class="number">53</span>: </div><div class="line"><span class="number">54</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">55</span>:             <span class="comment">// &#x8BF7;&#x6C42;Broker&#x83B7;&#x5F97;&#x6307;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x9501;</span></div><div class="line"><span class="number">56</span>:             Set&lt;MessageQueue&gt; lockedMq =</div><div class="line"><span class="number">57</span>:                 <span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().lockBatchMQ(findBrokerResult.getBrokerAddr(), requestBody, <span class="number">1000</span>);</div><div class="line"><span class="number">58</span>: </div><div class="line"><span class="number">59</span>:             <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x9501;&#x5B9A;&#x6210;&#x529F;&#x3002;&#x9501;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6210;&#x529F;&#xFF0C;&#x53EF;&#x80FD;&#x672C;&#x5730;&#x6CA1;&#x6709;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#xFF0C;&#x8BBE;&#x7F6E;&#x9501;&#x5B9A;&#x6210;&#x529F;&#x4F1A;&#x5728;lockAll()&#x65B9;&#x6CD5;&#x3002;</span></div><div class="line"><span class="number">60</span>:             <span class="keyword">for</span> (MessageQueue mmqq : lockedMq) {</div><div class="line"><span class="number">61</span>:                 ProcessQueue processQueue = <span class="keyword">this</span>.processQueueTable.get(mmqq);</div><div class="line"><span class="number">62</span>:                 <span class="keyword">if</span> (processQueue != <span class="keyword">null</span>) {</div><div class="line"><span class="number">63</span>:                     processQueue.setLocked(<span class="keyword">true</span>);</div><div class="line"><span class="number">64</span>:                     processQueue.setLastLockTimestamp(System.currentTimeMillis());</div><div class="line"><span class="number">65</span>:                 }</div><div class="line"><span class="number">66</span>:             }</div><div class="line"><span class="number">67</span>: </div><div class="line"><span class="number">68</span>:             <span class="keyword">boolean</span> lockOK = lockedMq.contains(mq);</div><div class="line"><span class="number">69</span>:             log.info(<span class="string">&quot;the message queue lock {}, {} {}&quot;</span>,</div><div class="line"><span class="number">70</span>:                 lockOK ? <span class="string">&quot;OK&quot;</span> : <span class="string">&quot;Failed&quot;</span>,</div><div class="line"><span class="number">71</span>:                 <span class="keyword">this</span>.consumerGroup,</div><div class="line"><span class="number">72</span>:                 mq);</div><div class="line"><span class="number">73</span>:             <span class="keyword">return</span> lockOK;</div><div class="line"><span class="number">74</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">75</span>:             log.error(<span class="string">&quot;lockBatchMQ exception, &quot;</span> + mq, e);</div><div class="line"><span class="number">76</span>:         }</div><div class="line"><span class="number">77</span>:     }</div><div class="line"><span class="number">78</span>: </div><div class="line"><span class="number">79</span>:     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">80</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;</li>
<li>&#x7B2C; 8 &#x81F3; 11 &#x884C; &#xFF1A;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x65F6;&#xFF0C;&#x9501;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x5982;&#x679C;&#x9501;&#x5B9A;&#x5931;&#x8D25;&#xFF0C;&#x65B0;&#x589E;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x5931;&#x8D25;&#x3002;</li>
</ul>
<hr>
<p><code>Broker</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x4F1A;&#x8FC7;&#x671F;&#xFF0C;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E; 30s&#x3002;&#x56E0;&#x6B64;&#xFF0C;<code>Consumer</code> &#x9700;&#x8981;&#x4E0D;&#x65AD;&#x5411; <code>Broker</code> &#x5237;&#x65B0;&#x8BE5;&#x9501;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#xFF0C;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E; 20s &#x5237;&#x65B0;&#x4E00;&#x6B21;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ConsumeMessageOrderlyService.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (MessageModel.CLUSTERING.equals(ConsumeMessageOrderlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())) {</div><div class="line"> <span class="number">4</span>:         <span class="keyword">this</span>.scheduledExecutorService.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">5</span>:             <span class="meta">@Override</span></div><div class="line"> <span class="number">6</span>:             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">7</span>:                 ConsumeMessageOrderlyService.<span class="keyword">this</span>.lockMQPeriodically();</div><div class="line"> <span class="number">8</span>:             }</div><div class="line"> <span class="number">9</span>:         }, <span class="number">1000</span> * <span class="number">1</span>, ProcessQueue.REBALANCE_LOCK_INTERVAL, TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">10</span>:     }</div><div class="line"><span class="number">11</span>: }</div></pre></td></tr></table></figure>
<h2 id="3-2-&#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;"><a href="#3-2-&#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;" class="headerlink" title="3.2 &#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;"></a>3.2 &#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;</h2><p>&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;<code>Consumer</code> &#x79FB;&#x9664;&#x81EA;&#x5DF1;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65F6;&#xFF0C;&#x4F1A;&#x5411; <code>Broker</code> &#x89E3;&#x9501;&#x8BE5;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF08;&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#x4E0B;&#x4E0D;&#x9700;&#x8981;&#xFF09;&#x3002;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RebalancePushImpl.java&#x3011;</span></div><div class="line"> <span class="number">2</span>: <span class="comment">/**</span></div><div class="line"> 3:  * &#x79FB;&#x9664;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x961F;&#x5217;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;</div><div class="line"> 4:  * 1. &#x6301;&#x4E45;&#x5316;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x5E76;&#x79FB;&#x9664;&#x4E4B;</div><div class="line"> 5:  * 2. &#x987A;&#x5E8F;&#x6D88;&#x8D39;&amp;&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;&#xFF0C;&#x89E3;&#x9501;&#x5BF9;&#x8BE5;&#x961F;&#x5217;&#x7684;&#x9501;&#x5B9A;</div><div class="line"> 6:  *</div><div class="line"> 7:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 8:  * <span class="doctag">@param</span> pq &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line"> 9:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x79FB;&#x9664;&#x6210;&#x529F;</div><div class="line">10:  */</div><div class="line"><span class="number">11</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">12</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeUnnecessaryMessageQueue</span><span class="params">(MessageQueue mq, ProcessQueue pq)</span> </span>{</div><div class="line"><span class="number">13</span>:     <span class="comment">// &#x540C;&#x6B65;&#x961F;&#x5217;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x5E76;&#x79FB;&#x9664;&#x4E4B;&#x3002;</span></div><div class="line"><span class="number">14</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().persist(mq);</div><div class="line"><span class="number">15</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().removeOffset(mq);</div><div class="line"><span class="number">16</span>:     <span class="comment">// &#x96C6;&#x7FA4;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x79FB;&#x9664;&#x65F6;&#xFF0C;&#x89E3;&#x9501;&#x5BF9;&#x961F;&#x5217;&#x7684;&#x9501;&#x5B9A;</span></div><div class="line"><span class="number">17</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.defaultMQPushConsumerImpl.isConsumeOrderly()</div><div class="line"><span class="number">18</span>:         &amp;&amp; MessageModel.CLUSTERING.equals(<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())) {</div><div class="line"><span class="number">19</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">20</span>:             <span class="keyword">if</span> (pq.getLockConsume().tryLock(<span class="number">1000</span>, TimeUnit.MILLISECONDS)) {</div><div class="line"><span class="number">21</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">22</span>:                     <span class="keyword">return</span> <span class="keyword">this</span>.unlockDelay(mq, pq);</div><div class="line"><span class="number">23</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">24</span>:                     pq.getLockConsume().unlock();</div><div class="line"><span class="number">25</span>:                 }</div><div class="line"><span class="number">26</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">27</span>:                 log.warn(<span class="string">&quot;[WRONG]mq is consuming, so can not unlock it, {}. maybe hanged for a while, {}&quot;</span>, <span class="comment">//</span></div><div class="line"><span class="number">28</span>:                     mq, <span class="comment">//</span></div><div class="line"><span class="number">29</span>:                     pq.getTryUnlockTimes());</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:                 pq.incTryUnlockTimes();</div><div class="line"><span class="number">32</span>:             }</div><div class="line"><span class="number">33</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">34</span>:             log.error(<span class="string">&quot;removeUnnecessaryMessageQueue Exception&quot;</span>, e);</div><div class="line"><span class="number">35</span>:         }</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">38</span>:     }</div><div class="line"><span class="number">39</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">40</span>: }</div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;RebalancePushImpl.java&#x3011;</span></div><div class="line"><span class="number">43</span>: <span class="comment">/**</span></div><div class="line">44:  * &#x5EF6;&#x8FDF;&#x89E3;&#x9501; Broker &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;</div><div class="line">45:  * &#x5F53;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E0D;&#x5B58;&#x5728;&#x6D88;&#x606F;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x89E3;&#x9501;</div><div class="line">46:  *</div><div class="line">47:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line">48:  * <span class="doctag">@param</span> pq &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line">49:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x89E3;&#x9501;&#x6210;&#x529F;</div><div class="line">50:  */</div><div class="line"><span class="number">51</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">unlockDelay</span><span class="params">(<span class="keyword">final</span> MessageQueue mq, <span class="keyword">final</span> ProcessQueue pq)</span> </span>{</div><div class="line"><span class="number">52</span>:     <span class="keyword">if</span> (pq.hasTempMessage()) { <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5EF6;&#x8FDF;&#x79FB;&#x9664;</span></div><div class="line"><span class="number">53</span>:         log.info(<span class="string">&quot;[{}]unlockDelay, begin {} &quot;</span>, mq.hashCode(), mq);</div><div class="line"><span class="number">54</span>:         <span class="keyword">this</span>.defaultMQPushConsumerImpl.getmQClientFactory().getScheduledExecutorService().schedule(<span class="keyword">new</span> Runnable() {</div><div class="line"><span class="number">55</span>:             <span class="meta">@Override</span></div><div class="line"><span class="number">56</span>:             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">57</span>:                 log.info(<span class="string">&quot;[{}]unlockDelay, execute at once {}&quot;</span>, mq.hashCode(), mq);</div><div class="line"><span class="number">58</span>:                 RebalancePushImpl.<span class="keyword">this</span>.unlock(mq, <span class="keyword">true</span>);</div><div class="line"><span class="number">59</span>:             }</div><div class="line"><span class="number">60</span>:         }, UNLOCK_DELAY_TIME_MILLS, TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">61</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">62</span>:         <span class="keyword">this</span>.unlock(mq, <span class="keyword">true</span>);</div><div class="line"><span class="number">63</span>:     }</div><div class="line"><span class="number">64</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">65</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;</li>
<li>&#x7B2C; 20 &#x81F3; 32 &#x884C; &#xFF1A;&#x83B7;&#x53D6;<strong>&#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;</strong>&#xFF0C;&#x907F;&#x514D;&#x548C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x51B2;&#x7A81;&#x3002;&#x5982;&#x679C;&#x83B7;&#x53D6;&#x9501;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5931;&#x8D25;&#xFF0C;&#x7B49;&#x5F85;&#x4E0B;&#x6B21;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x65F6;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x79FB;&#x9664;&#x3002;&#x5982;&#x679C;&#x672A;&#x83B7;&#x5F97;&#x9501;&#x800C;&#x8FDB;&#x884C;&#x79FB;&#x9664;&#xFF0C;&#x5219;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x53E6;&#x5916;&#x7684;  <code>Consumer</code> &#x548C;&#x5F53;&#x524D; <code>Consumer</code> &#x540C;&#x65F6;&#x6D88;&#x8D39;&#x8BE5;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x5BFC;&#x81F4;&#x6D88;&#x606F;&#x65E0;&#x6CD5;&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x7B2C; 51 &#x81F3; 64 &#x884C; &#xFF1A;&#x89E3;&#x9501; <code>Broker</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x3002;&#x5982;&#x679C;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x5B58;&#x5728;&#x5269;&#x4F59;&#x6D88;&#x606F;&#xFF0C;&#x5219;&#x5EF6;&#x8FDF;&#x89E3;&#x9501; <code>Broker</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x3002;&#x2753;&#x4E3A;&#x4EC0;&#x4E48;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x5B58;&#x5728;&#x5269;&#x4F59;&#x6D88;&#x606F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x89E3;&#x9501;&#x5462;&#xFF1F;&#x1F608;&#x6211;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x767E;&#x601D;&#x4E0D;&#x5F97;&#x5176;&#x89E3;&#x3002;&#x5982;&#x679C;&#x6709;&#x77E5;&#x9053;&#x7684;&#x540C;&#x5B66;&#x9EBB;&#x70E6;&#x6559;&#x80B2;&#x4E0B;&#x4FFA;&#x3002;</li>
</ul>
<h2 id="3-3-&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;"><a href="#3-3-&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;" class="headerlink" title="3.3 &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;"></a>3.3 &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x961F;&#x5217;</h2><p>&#x1F60F;&#x672C;&#x8282;&#x4F1A;&#x7C7B;&#x6BD4;<strong>&#x5E76;&#x53D1;&#x6D88;&#x8D39;&#x6D88;&#x8D39;&#x961F;&#x5217;</strong>&#xFF0C;&#x5EFA;&#x8BAE;&#x5BF9;&#x7167; <a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-second/#6&#x3001;PushConsumer-&#x6D88;&#x8D39;&#x6D88;&#x606F;">PushConsumer&#x5E76;&#x53D1;&#x6D88;&#x8D39;&#x6D88;&#x606F;</a> &#x4E00;&#x8D77;&#x7406;&#x89E3;&#x3002;</p>
<h3 id="3-1-1-&#x6D88;&#x8D39;&#x6D88;&#x606F;"><a href="#3-1-1-&#x6D88;&#x8D39;&#x6D88;&#x606F;" class="headerlink" title="3.1.1 &#x6D88;&#x8D39;&#x6D88;&#x606F;"></a>3.1.1 &#x6D88;&#x8D39;&#x6D88;&#x606F;</h3><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_13/01.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_13/01.png" alt="&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x6D3B;&#x52A8;&#x56FE;-&#x6D88;&#x8D39;&#x6D88;&#x606F;" class="ui centered image"></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ConsumeMessageOrderlyService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="class"><span class="keyword">class</span> <span class="title">ConsumeRequest</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">  <span class="number">3</span>: </div><div class="line">  <span class="number">4</span>:     <span class="comment">/**</span></div><div class="line">  5:      * &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line">  6:      */</div><div class="line">  <span class="number">7</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ProcessQueue processQueue;</div><div class="line">  <span class="number">8</span>:     <span class="comment">/**</span></div><div class="line">  9:      * &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 10:      */</div><div class="line"> <span class="number">11</span>:     <span class="keyword">private</span> <span class="keyword">final</span> MessageQueue messageQueue;</div><div class="line"> <span class="number">12</span>: </div><div class="line"> <span class="number">13</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">14</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">15</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.processQueue.isDropped()) {</div><div class="line"> <span class="number">16</span>:             log.warn(<span class="string">&quot;run, the message queue not be able to consume, because it&apos;s dropped. {}&quot;</span>, <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">17</span>:             <span class="keyword">return</span>;</div><div class="line"> <span class="number">18</span>:         }</div><div class="line"> <span class="number">19</span>: </div><div class="line"> <span class="number">20</span>:         <span class="comment">// &#x83B7;&#x5F97; Consumer &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;</span></div><div class="line"> <span class="number">21</span>:         <span class="keyword">final</span> Object objLock = messageQueueLock.fetchLockObject(<span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">22</span>:         <span class="keyword">synchronized</span> (objLock) {</div><div class="line"> <span class="number">23</span>:             <span class="comment">// (&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;) &#x6216;&#x8005; (&#x96C6;&#x7FA4;&#x6A21;&#x5F0F; &amp;&amp; Broker&#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x6709;&#x6548;)</span></div><div class="line"> <span class="number">24</span>:             <span class="keyword">if</span> (MessageModel.BROADCASTING.equals(ConsumeMessageOrderlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())</div><div class="line"> <span class="number">25</span>:                 || (<span class="keyword">this</span>.processQueue.isLocked() &amp;&amp; !<span class="keyword">this</span>.processQueue.isLockExpired())) {</div><div class="line"> <span class="number">26</span>:                 <span class="keyword">final</span> <span class="keyword">long</span> beginTime = System.currentTimeMillis();</div><div class="line"> <span class="number">27</span>:                 <span class="comment">// &#x5FAA;&#x73AF;</span></div><div class="line"> <span class="number">28</span>:                 <span class="keyword">for</span> (<span class="keyword">boolean</span> continueConsume = <span class="keyword">true</span>; continueConsume; ) {</div><div class="line"> <span class="number">29</span>:                     <span class="keyword">if</span> (<span class="keyword">this</span>.processQueue.isDropped()) {</div><div class="line"> <span class="number">30</span>:                         log.warn(<span class="string">&quot;the message queue not be able to consume, because it&apos;s dropped. {}&quot;</span>, <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">31</span>:                         <span class="keyword">break</span>;</div><div class="line"> <span class="number">32</span>:                     }</div><div class="line"> <span class="number">33</span>: </div><div class="line"> <span class="number">34</span>:                     <span class="comment">// &#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x5E03;&#x5F0F;&#x9501;&#x672A;&#x9501;&#x5B9A;&#xFF0C;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x83B7;&#x5F97;&#x9501;&#x5E76;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">35</span>:                     <span class="keyword">if</span> (MessageModel.CLUSTERING.equals(ConsumeMessageOrderlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())</div><div class="line"> <span class="number">36</span>:                         &amp;&amp; !<span class="keyword">this</span>.processQueue.isLocked()) {</div><div class="line"> <span class="number">37</span>:                         log.warn(<span class="string">&quot;the message queue not locked, so consume later, {}&quot;</span>, <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">38</span>:                         ConsumeMessageOrderlyService.<span class="keyword">this</span>.tryLockLaterAndReconsume(<span class="keyword">this</span>.messageQueue, <span class="keyword">this</span>.processQueue, <span class="number">10</span>);</div><div class="line"> <span class="number">39</span>:                         <span class="keyword">break</span>;</div><div class="line"> <span class="number">40</span>:                     }</div><div class="line"> <span class="number">41</span>:                     <span class="comment">// &#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x5E03;&#x5F0F;&#x9501;&#x5DF2;&#x7ECF;&#x8FC7;&#x671F;&#xFF0C;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x83B7;&#x5F97;&#x9501;&#x5E76;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">42</span>:                     <span class="keyword">if</span> (MessageModel.CLUSTERING.equals(ConsumeMessageOrderlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())</div><div class="line"> <span class="number">43</span>:                         &amp;&amp; <span class="keyword">this</span>.processQueue.isLockExpired()) {</div><div class="line"> <span class="number">44</span>:                         log.warn(<span class="string">&quot;the message queue lock expired, so consume later, {}&quot;</span>, <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">45</span>:                         ConsumeMessageOrderlyService.<span class="keyword">this</span>.tryLockLaterAndReconsume(<span class="keyword">this</span>.messageQueue, <span class="keyword">this</span>.processQueue, <span class="number">10</span>);</div><div class="line"> <span class="number">46</span>:                         <span class="keyword">break</span>;</div><div class="line"> <span class="number">47</span>:                     }</div><div class="line"> <span class="number">48</span>: </div><div class="line"> <span class="number">49</span>:                     <span class="comment">// &#x5F53;&#x524D;&#x5468;&#x671F;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;&#x8FDE;&#x7EED;&#x65F6;&#x957F;&#xFF0C;&#x9ED8;&#x8BA4;&#xFF1A;60s&#xFF0C;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6BCF;&#x6D88;&#x8D39;1&#x5206;&#x949F;&#x4F11;&#x606F;10ms&#x3002;</span></div><div class="line"> <span class="number">50</span>:                     <span class="keyword">long</span> interval = System.currentTimeMillis() - beginTime;</div><div class="line"> <span class="number">51</span>:                     <span class="keyword">if</span> (interval &gt; MAX_TIME_CONSUME_CONTINUOUSLY) {</div><div class="line"> <span class="number">52</span>:                         ConsumeMessageOrderlyService.<span class="keyword">this</span>.submitConsumeRequestLater(processQueue, messageQueue, <span class="number">10</span>);</div><div class="line"> <span class="number">53</span>:                         <span class="keyword">break</span>;</div><div class="line"> <span class="number">54</span>:                     }</div><div class="line"> <span class="number">55</span>: </div><div class="line"> <span class="number">56</span>:                     <span class="comment">// &#x83B7;&#x53D6;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x3002;&#x6B64;&#x5904;&#x548C;&#x5E76;&#x53D1;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x4E0D;&#x540C;&#xFF0C;&#x5E76;&#x53D1;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x5DF2;&#x7ECF;&#x5E26;&#x4E86;&#x6D88;&#x8D39;&#x54EA;&#x4E9B;&#x6D88;&#x606F;&#x3002;</span></div><div class="line"> <span class="number">57</span>:                     <span class="keyword">final</span> <span class="keyword">int</span> consumeBatchSize = ConsumeMessageOrderlyService.<span class="keyword">this</span>.defaultMQPushConsumer.getConsumeMessageBatchMaxSize();</div><div class="line"> <span class="number">58</span>:                     List&lt;MessageExt&gt; msgs = <span class="keyword">this</span>.processQueue.takeMessags(consumeBatchSize);</div><div class="line"> <span class="number">59</span>:                     <span class="keyword">if</span> (!msgs.isEmpty()) {</div><div class="line"> <span class="number">60</span>:                         <span class="keyword">final</span> ConsumeOrderlyContext context = <span class="keyword">new</span> ConsumeOrderlyContext(<span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">61</span>: </div><div class="line"> <span class="number">62</span>:                         ConsumeOrderlyStatus status = <span class="keyword">null</span>;</div><div class="line"> <span class="number">63</span>: </div><div class="line"> <span class="number">64</span>:                         <span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;&#xFF1A;Hook&#xFF1A;before</span></div><div class="line"> <span class="number">65</span>: </div><div class="line"> <span class="number">66</span>:                         <span class="comment">// &#x6267;&#x884C;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">67</span>:                         <span class="keyword">long</span> beginTimestamp = System.currentTimeMillis();</div><div class="line"> <span class="number">68</span>:                         ConsumeReturnType returnType = ConsumeReturnType.SUCCESS;</div><div class="line"> <span class="number">69</span>:                         <span class="keyword">boolean</span> hasException = <span class="keyword">false</span>;</div><div class="line"> <span class="number">70</span>:                         <span class="keyword">try</span> {</div><div class="line"> <span class="number">71</span>:                             <span class="keyword">this</span>.processQueue.getLockConsume().lock(); <span class="comment">// &#x9501;&#x5B9A;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;</span></div><div class="line"> <span class="number">72</span>: </div><div class="line"> <span class="number">73</span>:                             <span class="keyword">if</span> (<span class="keyword">this</span>.processQueue.isDropped()) {</div><div class="line"> <span class="number">74</span>:                                 log.warn(<span class="string">&quot;consumeMessage, the message queue not be able to consume, because it&apos;s dropped. {}&quot;</span>,</div><div class="line"> <span class="number">75</span>:                                     <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">76</span>:                                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">77</span>:                             }</div><div class="line"> <span class="number">78</span>: </div><div class="line"> <span class="number">79</span>:                             status = messageListener.consumeMessage(Collections.unmodifiableList(msgs), context);</div><div class="line"> <span class="number">80</span>:                         } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">81</span>:                             log.warn(<span class="string">&quot;consumeMessage exception: {} Group: {} Msgs: {} MQ: {}&quot;</span>, <span class="comment">//</span></div><div class="line"> <span class="number">82</span>:                                 RemotingHelper.exceptionSimpleDesc(e), <span class="comment">//</span></div><div class="line"> <span class="number">83</span>:                                 ConsumeMessageOrderlyService.<span class="keyword">this</span>.consumerGroup, <span class="comment">//</span></div><div class="line"> <span class="number">84</span>:                                 msgs, <span class="comment">//</span></div><div class="line"> <span class="number">85</span>:                                 messageQueue);</div><div class="line"> <span class="number">86</span>:                             hasException = <span class="keyword">true</span>;</div><div class="line"> <span class="number">87</span>:                         } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">88</span>:                             <span class="keyword">this</span>.processQueue.getLockConsume().unlock(); <span class="comment">// &#x9501;&#x5B9A;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;</span></div><div class="line"> <span class="number">89</span>:                         }</div><div class="line"> <span class="number">90</span>: </div><div class="line"> <span class="number">91</span>:                         <span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;&#xFF1A;&#x89E3;&#x6790;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;</span></div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>:                         <span class="comment">// ....&#x7701;&#x7565;&#x4EE3;&#x7801;&#xFF1A;Hook&#xFF1A;after</span></div><div class="line"> <span class="number">94</span>: </div><div class="line"> <span class="number">95</span>:                         ConsumeMessageOrderlyService.<span class="keyword">this</span>.getConsumerStatsManager()</div><div class="line"> <span class="number">96</span>:                             .incConsumeRT(ConsumeMessageOrderlyService.<span class="keyword">this</span>.consumerGroup, messageQueue.getTopic(), consumeRT);</div><div class="line"> <span class="number">97</span>: </div><div class="line"> <span class="number">98</span>:                         <span class="comment">// &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;</span></div><div class="line"> <span class="number">99</span>:                         continueConsume = ConsumeMessageOrderlyService.<span class="keyword">this</span>.processConsumeResult(msgs, status, context, <span class="keyword">this</span>);</div><div class="line"><span class="number">100</span>:                     } <span class="keyword">else</span> {</div><div class="line"><span class="number">101</span>:                         continueConsume = <span class="keyword">false</span>;</div><div class="line"><span class="number">102</span>:                     }</div><div class="line"><span class="number">103</span>:                 }</div><div class="line"><span class="number">104</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">105</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.processQueue.isDropped()) {</div><div class="line"><span class="number">106</span>:                     log.warn(<span class="string">&quot;the message queue not be able to consume, because it&apos;s dropped. {}&quot;</span>, <span class="keyword">this</span>.messageQueue);</div><div class="line"><span class="number">107</span>:                     <span class="keyword">return</span>;</div><div class="line"><span class="number">108</span>:                 }</div><div class="line"><span class="number">109</span>: </div><div class="line"><span class="number">110</span>:                 ConsumeMessageOrderlyService.<span class="keyword">this</span>.tryLockLaterAndReconsume(<span class="keyword">this</span>.messageQueue, <span class="keyword">this</span>.processQueue, <span class="number">100</span>);</div><div class="line"><span class="number">111</span>:             }</div><div class="line"><span class="number">112</span>:         }</div><div class="line"><span class="number">113</span>:     }</div><div class="line"><span class="number">114</span>: </div><div class="line"><span class="number">115</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;</li>
<li>&#x7B2C; 20 &#x884C; &#xFF1A;&#x83B7;&#x5F97; <code>Consumer</code> &#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x3002;</li>
<li>&#x7B2C; 58 &#x884C; &#xFF1A;&#x4ECE;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x987A;&#x5E8F;&#x83B7;&#x5F97;&#x6D88;&#x606F;&#x3002;<strong>&#x548C;&#x5E76;&#x53D1;&#x6D88;&#x8D39;&#x83B7;&#x5F97;&#x6D88;&#x606F;&#x4E0D;&#x540C;&#x3002;&#x5E76;&#x53D1;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x5728;&#x8BF7;&#x6C42;&#x521B;&#x5EFA;&#x65F6;&#xFF0C;&#x5DF2;&#x7ECF;&#x8BBE;&#x7F6E;&#x597D;&#x6D88;&#x8D39;&#x54EA;&#x4E9B;&#x6D88;&#x606F;&#x3002;</strong></li>
<li>&#x7B2C; 71 &#x884C; &#xFF1A;&#x83B7;&#x5F97; <code>Consumer</code> &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;&#x3002;&#x76F8;&#x6BD4;&#x3010;<code>Consumer</code>&#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x3011;&#xFF0C;&#x5176;&#x7C92;&#x5EA6;&#x8F83;&#x5C0F;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684;&#x2753;<strong>&#x4E3A;&#x4EC0;&#x4E48;&#x6709;<code>Consumer</code>&#x6D88;&#x606F;&#x961F;&#x5217;&#x9501;&#x8FD8;&#x9700;&#x8981;&#x6709; Consumer &#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x9501;&#x5462;</strong>&#x7684;&#x539F;&#x56E0;&#x3002;</li>
<li>&#x7B2C; 79 &#x884C; &#xFF1A;<strong>&#x6267;&#x884C;&#x6D88;&#x8D39;</strong>&#x3002;</li>
<li>&#x7B2C; 99 &#x884C; &#xFF1A;&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x3002;</li>
</ul>
<h3 id="3-1-2-&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;"><a href="#3-1-2-&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;" class="headerlink" title="3.1.2 &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;"></a>3.1.2 &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;</h3><p>&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x7ED3;&#x679C; (<code>ConsumeOrderlyStatus</code>) &#x6709;&#x56DB;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p>
<ul class="ui list">
<li><code>SUCCESS</code> &#xFF1A;&#x6D88;&#x8D39;&#x6210;&#x529F;<strong>&#x4F46;&#x4E0D;&#x63D0;&#x4EA4;</strong>&#x3002;</li>
<li><code>ROLLBACK</code> &#xFF1A;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#xFF0C;&#x6D88;&#x8D39;&#x56DE;&#x6EDA;&#x3002;</li>
<li><code>COMMIT</code> &#xFF1A;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x63D0;&#x4EA4;&#x5E76;&#x4E14;&#x63D0;&#x4EA4;&#x3002;</li>
<li><code>SUSPEND_CURRENT_QUEUE_A_MOMENT</code> &#xFF1A;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#xFF0C;&#x6302;&#x8D77;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x4E00;&#x4F1A;&#x4F1A;&#xFF0C;&#x7A0D;&#x540E;&#x7EE7;&#x7EED;&#x6D88;&#x8D39;&#x3002;</li>
</ul>
<p>&#x8003;&#x8651;&#x5230; <code>ROLLBACK</code> &#x3001;<code>COMMIT</code> &#x6682;&#x65F6;&#x53EA;&#x4F7F;&#x7528;&#x5728; <code>MySQL binlog</code> &#x573A;&#x666F;&#xFF0C;&#x5B98;&#x65B9;&#x5C06;&#x8FD9;&#x4E24;&#x72B6;&#x6001;&#x6807;&#x8BB0;&#x4E3A; <code>@Deprecated</code>&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x4F9D;&#x7136;&#x4FDD;&#x7559;&#x3002;</p>
<p>&#x5728;<strong>&#x5E76;&#x53D1;&#x6D88;&#x8D39;</strong>&#x573A;&#x666F;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#xFF0C;<code>Consumer</code> &#x4F1A;&#x5C06;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;&#x53D1;&#x56DE;&#x5230; <code>Broker</code> &#x91CD;&#x8BD5;&#x961F;&#x5217;&#xFF0C;&#x8DF3;&#x8FC7;&#x5F53;&#x524D;&#x6D88;&#x606F;&#xFF0C;&#x7B49;&#x5F85;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x8BE5;&#x6D88;&#x606F;&#x518D;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x3002;</p>
<p>&#x4F46;&#x662F;&#x5728;<strong>&#x5B8C;&#x5168;&#x4E25;&#x683C;&#x987A;&#x5E8F;&#x6D88;&#x8D39;</strong>&#x6D88;&#x8D39;&#x65F6;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x663E;&#x7136;&#x4E0D;&#x884C;&#x3002;&#x4E5F;&#x56E0;&#x6B64;&#xFF0C;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x4F1A;&#x6302;&#x8D77;&#x961F;&#x5217;&#x4E00;&#x4F1A;&#x4F1A;&#xFF0C;&#x7A0D;&#x540E;&#x7EE7;&#x7EED;&#x6D88;&#x8D39;&#x3002; </p>
<p>&#x4E0D;&#x8FC7;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#x4E00;&#x76F4;&#x5931;&#x8D25;&#xFF0C;&#x4E5F;&#x4E0D;&#x53EF;&#x80FD;&#x4E00;&#x76F4;&#x6D88;&#x8D39;&#x3002;&#x5F53;&#x8D85;&#x8FC7;&#x6D88;&#x8D39;&#x91CD;&#x8BD5;&#x4E0A;&#x9650;&#x65F6;&#xFF0C;<code>Consumer</code> &#x4F1A;&#x5C06;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x8D85;&#x8FC7;&#x4E0A;&#x9650;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x56DE;&#x5230; <code>Broker</code> &#x6B7B;&#x4FE1;&#x961F;&#x5217;&#x3002;</p>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x4EE3;&#x7801;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ConsumeMessageOrderlyService.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x7EE7;&#x7EED;&#x6D88;&#x8D39;</div><div class="line">  4:  *</div><div class="line">  5:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;</div><div class="line">  6:  * <span class="doctag">@param</span> status &#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;</div><div class="line">  7:  * <span class="doctag">@param</span> context &#x6D88;&#x8D39;Context</div><div class="line">  8:  * <span class="doctag">@param</span> consumeRequest &#x6D88;&#x8D39;&#x8BF7;&#x6C42;</div><div class="line">  9:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x7EE7;&#x7EED;&#x6D88;&#x8D39;</div><div class="line"> 10:  */</div><div class="line"> <span class="number">11</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processConsumeResult</span><span class="params">(//</span></span></div><div class="line"> <span class="number">12</span>:     <span class="keyword">final</span> List&lt;MessageExt&gt; msgs, //</div><div class="line"> <span class="number">13</span>:     <span class="keyword">final</span> ConsumeOrderlyStatus status, //</div><div class="line"> <span class="number">14</span>:     <span class="keyword">final</span> ConsumeOrderlyContext context, //</div><div class="line"> <span class="number">15</span>:     <span class="keyword">final</span> ConsumeRequest consumeRequest//</div><div class="line"> <span class="number">16</span>: ) {</div><div class="line"> <span class="number">17</span>:     <span class="keyword">boolean</span> continueConsume = <span class="keyword">true</span>;</div><div class="line"> <span class="number">18</span>:     <span class="keyword">long</span> commitOffset = -<span class="number">1L</span>;</div><div class="line"> <span class="number">19</span>:     <span class="keyword">if</span> (context.isAutoCommit()) {</div><div class="line"> <span class="number">20</span>:         <span class="keyword">switch</span> (status) {</div><div class="line"> <span class="number">21</span>:             <span class="keyword">case</span> COMMIT:</div><div class="line"> <span class="number">22</span>:             <span class="keyword">case</span> ROLLBACK:</div><div class="line"> <span class="number">23</span>:                 log.warn(<span class="string">&quot;the message queue consume result is illegal, we think you want to ack these message {}&quot;</span>, consumeRequest.getMessageQueue());</div><div class="line"> <span class="number">24</span>:             <span class="keyword">case</span> SUCCESS:</div><div class="line"> <span class="number">25</span>:                 <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5DF2;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x5230;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">26</span>:                 commitOffset = consumeRequest.getProcessQueue().commit();</div><div class="line"> <span class="number">27</span>:                 <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"> <span class="number">28</span>:                 <span class="keyword">this</span>.getConsumerStatsManager().incConsumeOKTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), msgs.size());</div><div class="line"> <span class="number">29</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">30</span>:             <span class="keyword">case</span> SUSPEND_CURRENT_QUEUE_A_MOMENT:</div><div class="line"> <span class="number">31</span>:                 <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"> <span class="number">32</span>:                 <span class="keyword">this</span>.getConsumerStatsManager().incConsumeFailedTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), msgs.size());</div><div class="line"> <span class="number">33</span>:                 <span class="keyword">if</span> (checkReconsumeTimes(msgs)) { <span class="comment">// &#x8BA1;&#x7B97;&#x662F;&#x5426;&#x6682;&#x65F6;&#x6302;&#x8D77;&#xFF08;&#x6682;&#x505C;&#xFF09;&#x6D88;&#x8D39;N&#x6BEB;&#x79D2;&#xFF0C;&#x9ED8;&#x8BA4;&#xFF1A;10ms</span></div><div class="line"> <span class="number">34</span>:                     <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">35</span>:                     consumeRequest.getProcessQueue().makeMessageToCosumeAgain(msgs);</div><div class="line"> <span class="number">36</span>:                     <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">37</span>:                     <span class="keyword">this</span>.submitConsumeRequestLater(<span class="comment">//</span></div><div class="line"> <span class="number">38</span>:                         consumeRequest.getProcessQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">39</span>:                         consumeRequest.getMessageQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">40</span>:                         context.getSuspendCurrentQueueTimeMillis());</div><div class="line"> <span class="number">41</span>:                     continueConsume = <span class="keyword">false</span>;</div><div class="line"> <span class="number">42</span>:                 } <span class="keyword">else</span> {</div><div class="line"> <span class="number">43</span>:                     commitOffset = consumeRequest.getProcessQueue().commit();</div><div class="line"> <span class="number">44</span>:                 }</div><div class="line"> <span class="number">45</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">46</span>:             <span class="keyword">default</span>:</div><div class="line"> <span class="number">47</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">48</span>:         }</div><div class="line"> <span class="number">49</span>:     } <span class="keyword">else</span> {</div><div class="line"> <span class="number">50</span>:         <span class="keyword">switch</span> (status) {</div><div class="line"> <span class="number">51</span>:             <span class="keyword">case</span> SUCCESS:</div><div class="line"> <span class="number">52</span>:                 <span class="keyword">this</span>.getConsumerStatsManager().incConsumeOKTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), msgs.size());</div><div class="line"> <span class="number">53</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">54</span>:             <span class="keyword">case</span> COMMIT:</div><div class="line"> <span class="number">55</span>:                 <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5DF2;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x5230;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">56</span>:                 commitOffset = consumeRequest.getProcessQueue().commit();</div><div class="line"> <span class="number">57</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">58</span>:             <span class="keyword">case</span> ROLLBACK:</div><div class="line"> <span class="number">59</span>:                 <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">60</span>:                 consumeRequest.getProcessQueue().rollback();</div><div class="line"> <span class="number">61</span>:                 <span class="keyword">this</span>.submitConsumeRequestLater(<span class="comment">//</span></div><div class="line"> <span class="number">62</span>:                     consumeRequest.getProcessQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">63</span>:                     consumeRequest.getMessageQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">64</span>:                     context.getSuspendCurrentQueueTimeMillis());</div><div class="line"> <span class="number">65</span>:                 continueConsume = <span class="keyword">false</span>;</div><div class="line"> <span class="number">66</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">67</span>:             <span class="keyword">case</span> SUSPEND_CURRENT_QUEUE_A_MOMENT: <span class="comment">// &#x8BA1;&#x7B97;&#x662F;&#x5426;&#x6682;&#x65F6;&#x6302;&#x8D77;&#xFF08;&#x6682;&#x505C;&#xFF09;&#x6D88;&#x8D39;N&#x6BEB;&#x79D2;&#xFF0C;&#x9ED8;&#x8BA4;&#xFF1A;10ms</span></div><div class="line"> <span class="number">68</span>:                 <span class="keyword">this</span>.getConsumerStatsManager().incConsumeFailedTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), msgs.size());</div><div class="line"> <span class="number">69</span>:                 <span class="keyword">if</span> (checkReconsumeTimes(msgs)) {</div><div class="line"> <span class="number">70</span>:                     <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">71</span>:                     consumeRequest.getProcessQueue().makeMessageToCosumeAgain(msgs);</div><div class="line"> <span class="number">72</span>:                     <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">73</span>:                     <span class="keyword">this</span>.submitConsumeRequestLater(<span class="comment">//</span></div><div class="line"> <span class="number">74</span>:                         consumeRequest.getProcessQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">75</span>:                         consumeRequest.getMessageQueue(), <span class="comment">//</span></div><div class="line"> <span class="number">76</span>:                         context.getSuspendCurrentQueueTimeMillis());</div><div class="line"> <span class="number">77</span>:                     continueConsume = <span class="keyword">false</span>;</div><div class="line"> <span class="number">78</span>:                 }</div><div class="line"> <span class="number">79</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">80</span>:             <span class="keyword">default</span>:</div><div class="line"> <span class="number">81</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">82</span>:         }</div><div class="line"> <span class="number">83</span>:     }</div><div class="line"> <span class="number">84</span>: </div><div class="line"> <span class="number">85</span>:     <span class="comment">// &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x672A;dropped&#xFF0C;&#x63D0;&#x4EA4;&#x6709;&#x6548;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">86</span>:     <span class="keyword">if</span> (commitOffset &gt;= <span class="number">0</span> &amp;&amp; !consumeRequest.getProcessQueue().isDropped()) {</div><div class="line"> <span class="number">87</span>:         <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().updateOffset(consumeRequest.getMessageQueue(), commitOffset, <span class="keyword">false</span>);</div><div class="line"> <span class="number">88</span>:     }</div><div class="line"> <span class="number">89</span>: </div><div class="line"> <span class="number">90</span>:     <span class="keyword">return</span> continueConsume;</div><div class="line"> <span class="number">91</span>: }</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getMaxReconsumeTimes</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">94</span>:     <span class="comment">// default reconsume times: Integer.MAX_VALUE</span></div><div class="line"> <span class="number">95</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.defaultMQPushConsumer.getMaxReconsumeTimes() == -<span class="number">1</span>) {</div><div class="line"> <span class="number">96</span>:         <span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line"> <span class="number">97</span>:     } <span class="keyword">else</span> {</div><div class="line"> <span class="number">98</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.defaultMQPushConsumer.getMaxReconsumeTimes();</div><div class="line"> <span class="number">99</span>:     }</div><div class="line"><span class="number">100</span>: }</div><div class="line"><span class="number">101</span>: </div><div class="line"><span class="number">102</span>: <span class="comment">/**</span></div><div class="line">103:  * &#x8BA1;&#x7B97;&#x662F;&#x5426;&#x8981;&#x6682;&#x505C;&#x6D88;&#x8D39;</div><div class="line">104:  * &#x4E0D;&#x6682;&#x505C;&#x6761;&#x4EF6;&#xFF1A;&#x5B58;&#x5728;&#x6D88;&#x606F;&#x90FD;&#x8D85;&#x8FC7;&#x6700;&#x5927;&#x6D88;&#x8D39;&#x6B21;&#x6570;&#x5E76;&#x4E14;&#x90FD;&#x53D1;&#x56DE;broker&#x6210;&#x529F;</div><div class="line">105:  *</div><div class="line">106:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;</div><div class="line">107:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x8981;&#x6682;&#x505C;</div><div class="line">108:  */</div><div class="line"><span class="number">109</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkReconsumeTimes</span><span class="params">(List&lt;MessageExt&gt; msgs)</span> </span>{</div><div class="line"><span class="number">110</span>:     <span class="keyword">boolean</span> suspend = <span class="keyword">false</span>;</div><div class="line"><span class="number">111</span>:     <span class="keyword">if</span> (msgs != <span class="keyword">null</span> &amp;&amp; !msgs.isEmpty()) {</div><div class="line"><span class="number">112</span>:         <span class="keyword">for</span> (MessageExt msg : msgs) {</div><div class="line"><span class="number">113</span>:             <span class="keyword">if</span> (msg.getReconsumeTimes() &gt;= getMaxReconsumeTimes()) {</div><div class="line"><span class="number">114</span>:                 MessageAccessor.setReconsumeTime(msg, String.valueOf(msg.getReconsumeTimes()));</div><div class="line"><span class="number">115</span>:                 <span class="keyword">if</span> (!sendMessageBack(msg)) { <span class="comment">// &#x53D1;&#x56DE;&#x5931;&#x8D25;&#xFF0C;&#x4E2D;&#x65AD;</span></div><div class="line"><span class="number">116</span>:                     suspend = <span class="keyword">true</span>;</div><div class="line"><span class="number">117</span>:                     msg.setReconsumeTimes(msg.getReconsumeTimes() + <span class="number">1</span>);</div><div class="line"><span class="number">118</span>:                 }</div><div class="line"><span class="number">119</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">120</span>:                 suspend = <span class="keyword">true</span>;</div><div class="line"><span class="number">121</span>:                 msg.setReconsumeTimes(msg.getReconsumeTimes() + <span class="number">1</span>);</div><div class="line"><span class="number">122</span>:             }</div><div class="line"><span class="number">123</span>:         }</div><div class="line"><span class="number">124</span>:     }</div><div class="line"><span class="number">125</span>:     <span class="keyword">return</span> suspend;</div><div class="line"><span class="number">126</span>: }</div><div class="line"><span class="number">127</span>: </div><div class="line"><span class="number">128</span>: <span class="comment">/**</span></div><div class="line">129:  * &#x53D1;&#x56DE;&#x6D88;&#x606F;&#x3002;</div><div class="line">130:  * &#x6D88;&#x606F;&#x53D1;&#x56DE;broker&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x662F;&#x6B7B;&#x4FE1;&#x961F;&#x5217;&#x3002;</div><div class="line">131:  *</div><div class="line">132:  * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line">133:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x53D1;&#x9001;&#x6210;&#x529F;</div><div class="line">134:  */</div><div class="line"><span class="number">135</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">sendMessageBack</span><span class="params">(<span class="keyword">final</span> MessageExt msg)</span> </span>{</div><div class="line"><span class="number">136</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">137</span>:         <span class="comment">// max reconsume times exceeded then send to dead letter queue.</span></div><div class="line"><span class="number">138</span>:         Message newMsg = <span class="keyword">new</span> Message(MixAll.getRetryTopic(<span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup()), msg.getBody());</div><div class="line"><span class="number">139</span>:         String originMsgId = MessageAccessor.getOriginMessageId(msg);</div><div class="line"><span class="number">140</span>:         MessageAccessor.setOriginMessageId(newMsg, UtilAll.isBlank(originMsgId) ? msg.getMsgId() : originMsgId);</div><div class="line"><span class="number">141</span>:         newMsg.setFlag(msg.getFlag());</div><div class="line"><span class="number">142</span>:         MessageAccessor.setProperties(newMsg, msg.getProperties());</div><div class="line"><span class="number">143</span>:         MessageAccessor.putProperty(newMsg, MessageConst.PROPERTY_RETRY_TOPIC, msg.getTopic());</div><div class="line"><span class="number">144</span>:         MessageAccessor.setReconsumeTime(newMsg, String.valueOf(msg.getReconsumeTimes()));</div><div class="line"><span class="number">145</span>:         MessageAccessor.setMaxReconsumeTimes(newMsg, String.valueOf(getMaxReconsumeTimes()));</div><div class="line"><span class="number">146</span>:         newMsg.setDelayTimeLevel(<span class="number">3</span> + msg.getReconsumeTimes());</div><div class="line"><span class="number">147</span>: </div><div class="line"><span class="number">148</span>:         <span class="keyword">this</span>.defaultMQPushConsumer.getDefaultMQPushConsumerImpl().getmQClientFactory().getDefaultMQProducer().send(newMsg);</div><div class="line"><span class="number">149</span>:         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">150</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">151</span>:         log.error(<span class="string">&quot;sendMessageBack exception, group: &quot;</span> + <span class="keyword">this</span>.consumerGroup + <span class="string">&quot; msg: &quot;</span> + msg.toString(), e);</div><div class="line"><span class="number">152</span>:     }</div><div class="line"><span class="number">153</span>: </div><div class="line"><span class="number">154</span>:     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">155</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;&#x2B06;&#xFE0F;</li>
<li>&#x7B2C; 21 &#x81F3; 29 &#x884C; &#xFF1A;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x3002;&#x5728;&#x81EA;&#x52A8;&#x63D0;&#x4EA4;&#x8FDB;&#x5EA6;( <code>AutoCommit</code> )&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;<code>COMMIT</code>&#x3001;<code>ROLLBACK</code>&#x3001;<code>SUCCESS</code> &#x903B;&#x8F91;<strong>&#x5DF2;&#x7ECF;&#x7EDF;&#x4E00;</strong>&#x3002;</li>
<li>&#x7B2C; 30 &#x81F3; 45 &#x884C; &#xFF1A;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x3002;&#x5F53;&#x6D88;&#x606F;&#x91CD;&#x8BD5;&#x6B21;&#x6570;&#x8D85;&#x8FC7;&#x4E0A;&#x9650;&#xFF08;&#x9ED8;&#x8BA4; &#xFF1A;16&#x6B21;&#xFF09;&#x65F6;&#xFF0C;&#x5C06;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x5230; <code>Broker</code> &#x6B7B;&#x4FE1;&#x961F;&#x5217;&#xFF0C;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65E0;&#x9700;&#x6302;&#x8D77;&#xFF0C;&#x7EE7;&#x7EED;&#x6D88;&#x8D39;&#x540E;&#x9762;&#x7684;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 85 &#x81F3; 88 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
</ul>
<h3 id="3-13-&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;"><a href="#3-13-&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;" class="headerlink" title="3.13 &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;"></a>3.13 &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;</h3><p>&#x1F608;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x56DB;&#x4E2A;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">// &#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x2B07;&#xFE0F;&#x3010;ProcessQueue.java&#x3011;</span></div><div class="line">  <span class="number">2</span>: <span class="comment">/**</span></div><div class="line">  3:  * &#x6D88;&#x606F;&#x6620;&#x5C04;</div><div class="line">  4:  * key&#xFF1A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line">  5:  */</div><div class="line">  <span class="number">6</span>: <span class="keyword">private</span> <span class="keyword">final</span> TreeMap&lt;Long, MessageExt&gt; msgTreeMap = <span class="keyword">new</span> TreeMap&lt;&gt;();    <span class="comment">/**</span></div><div class="line">  7:  * &#x6D88;&#x606F;&#x6620;&#x5C04;&#x4E34;&#x65F6;&#x5B58;&#x50A8;&#xFF08;&#x6D88;&#x8D39;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#xFF09;</div><div class="line">  8:  */</div><div class="line">  <span class="number">9</span>: <span class="keyword">private</span> <span class="keyword">final</span> TreeMap&lt;Long, MessageExt&gt; msgTreeMapTemp = <span class="keyword">new</span> TreeMap&lt;&gt;();</div><div class="line"> <span class="number">10</span>: </div><div class="line"> <span class="number">11</span>: <span class="comment">/**</span></div><div class="line"> 12:  * &#x56DE;&#x6EDA;&#x6D88;&#x8D39;&#x4E2D;&#x7684;&#x6D88;&#x606F;</div><div class="line"> 13:  * &#x903B;&#x8F91;&#x7C7B;&#x4F3C;&#x4E8E;{<span class="doctag">@link</span> #makeMessageToCosumeAgain(List)}</div><div class="line"> 14:  */</div><div class="line"> <span class="number">15</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">16</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">17</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"> <span class="number">18</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">19</span>:             <span class="keyword">this</span>.msgTreeMap.putAll(<span class="keyword">this</span>.msgTreeMapTemp);</div><div class="line"> <span class="number">20</span>:             <span class="keyword">this</span>.msgTreeMapTemp.clear();</div><div class="line"> <span class="number">21</span>:         } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">22</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"> <span class="number">23</span>:         }</div><div class="line"> <span class="number">24</span>:     } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">25</span>:         log.error(<span class="string">&quot;rollback exception&quot;</span>, e);</div><div class="line"> <span class="number">26</span>:     }</div><div class="line"> <span class="number">27</span>: }</div><div class="line"> <span class="number">28</span>: </div><div class="line"> <span class="number">29</span>: <span class="comment">/**</span></div><div class="line"> 30:  * &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x5DF2;&#x6D88;&#x8D39;&#x6210;&#x529F;&#xFF0C;&#x8FD4;&#x56DE;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line"> 31:  *</div><div class="line"> 32:  * <span class="doctag">@return</span> &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line"> 33:  */</div><div class="line"> <span class="number">34</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">commit</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">35</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">36</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"> <span class="number">37</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">38</span>:             <span class="comment">// &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">39</span>:             Long offset = <span class="keyword">this</span>.msgTreeMapTemp.lastKey();</div><div class="line"> <span class="number">40</span>: </div><div class="line"> <span class="number">41</span>:             <span class="comment">//</span></div><div class="line"> <span class="number">42</span>:             msgCount.addAndGet(<span class="keyword">this</span>.msgTreeMapTemp.size() * (-<span class="number">1</span>));</div><div class="line"> <span class="number">43</span>: </div><div class="line"> <span class="number">44</span>:             <span class="comment">//</span></div><div class="line"> <span class="number">45</span>:             <span class="keyword">this</span>.msgTreeMapTemp.clear();</div><div class="line"> <span class="number">46</span>: </div><div class="line"> <span class="number">47</span>:             <span class="comment">// &#x8FD4;&#x56DE;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">48</span>:             <span class="keyword">if</span> (offset != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">49</span>:                 <span class="keyword">return</span> offset + <span class="number">1</span>;</div><div class="line"> <span class="number">50</span>:             }</div><div class="line"> <span class="number">51</span>:         } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">52</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"> <span class="number">53</span>:         }</div><div class="line"> <span class="number">54</span>:     } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">55</span>:         log.error(<span class="string">&quot;commit exception&quot;</span>, e);</div><div class="line"> <span class="number">56</span>:     }</div><div class="line"> <span class="number">57</span>: </div><div class="line"> <span class="number">58</span>:     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"> <span class="number">59</span>: }</div><div class="line"> <span class="number">60</span>: </div><div class="line"> <span class="number">61</span>: <span class="comment">/**</span></div><div class="line"> 62:  * &#x6307;&#x5B9A;&#x6D88;&#x606F;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</div><div class="line"> 63:  * &#x903B;&#x8F91;&#x7C7B;&#x4F3C;&#x4E8E;{<span class="doctag">@link</span> #rollback()}</div><div class="line"> 64:  *</div><div class="line"> 65:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;</div><div class="line"> 66:  */</div><div class="line"> <span class="number">67</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">makeMessageToCosumeAgain</span><span class="params">(List&lt;MessageExt&gt; msgs)</span> </span>{</div><div class="line"> <span class="number">68</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">69</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"> <span class="number">70</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">71</span>:             <span class="keyword">for</span> (MessageExt msg : msgs) {</div><div class="line"> <span class="number">72</span>:                 <span class="keyword">this</span>.msgTreeMapTemp.remove(msg.getQueueOffset());</div><div class="line"> <span class="number">73</span>:                 <span class="keyword">this</span>.msgTreeMap.put(msg.getQueueOffset(), msg);</div><div class="line"> <span class="number">74</span>:             }</div><div class="line"> <span class="number">75</span>:         } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">76</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"> <span class="number">77</span>:         }</div><div class="line"> <span class="number">78</span>:     } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">79</span>:         log.error(<span class="string">&quot;makeMessageToCosumeAgain exception&quot;</span>, e);</div><div class="line"> <span class="number">80</span>:     }</div><div class="line"> <span class="number">81</span>: }</div><div class="line"> <span class="number">82</span>: </div><div class="line"> <span class="number">83</span>: <span class="comment">/**</span></div><div class="line"> 84:  * &#x83B7;&#x5F97;&#x6301;&#x6709;&#x6D88;&#x606F;&#x524D;N&#x6761;</div><div class="line"> 85:  *</div><div class="line"> 86:  * <span class="doctag">@param</span> batchSize &#x6761;&#x6570;</div><div class="line"> 87:  * <span class="doctag">@return</span> &#x6D88;&#x606F;</div><div class="line"> 88:  */</div><div class="line"> <span class="number">89</span>: <span class="function"><span class="keyword">public</span> List&lt;MessageExt&gt; <span class="title">takeMessags</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> batchSize)</span> </span>{</div><div class="line"> <span class="number">90</span>:     List&lt;MessageExt&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;(batchSize);</div><div class="line"> <span class="number">91</span>:     <span class="keyword">final</span> <span class="keyword">long</span> now = System.currentTimeMillis();</div><div class="line"> <span class="number">92</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">93</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"> <span class="number">94</span>:         <span class="keyword">this</span>.lastConsumeTimestamp = now;</div><div class="line"> <span class="number">95</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">96</span>:             <span class="keyword">if</span> (!<span class="keyword">this</span>.msgTreeMap.isEmpty()) {</div><div class="line"> <span class="number">97</span>:                 <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; batchSize; i++) {</div><div class="line"> <span class="number">98</span>:                     Map.Entry&lt;Long, MessageExt&gt; entry = <span class="keyword">this</span>.msgTreeMap.pollFirstEntry();</div><div class="line"> <span class="number">99</span>:                     <span class="keyword">if</span> (entry != <span class="keyword">null</span>) {</div><div class="line"><span class="number">100</span>:                         result.add(entry.getValue());</div><div class="line"><span class="number">101</span>:                         msgTreeMapTemp.put(entry.getKey(), entry.getValue());</div><div class="line"><span class="number">102</span>:                     } <span class="keyword">else</span> {</div><div class="line"><span class="number">103</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">104</span>:                     }</div><div class="line"><span class="number">105</span>:                 }</div><div class="line"><span class="number">106</span>:             }</div><div class="line"><span class="number">107</span>: </div><div class="line"><span class="number">108</span>:             <span class="keyword">if</span> (result.isEmpty()) {</div><div class="line"><span class="number">109</span>:                 consuming = <span class="keyword">false</span>;</div><div class="line"><span class="number">110</span>:             }</div><div class="line"><span class="number">111</span>:         } <span class="keyword">finally</span> {</div><div class="line"><span class="number">112</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"><span class="number">113</span>:         }</div><div class="line"><span class="number">114</span>:     } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"><span class="number">115</span>:         log.error(<span class="string">&quot;take Messages exception&quot;</span>, e);</div><div class="line"><span class="number">116</span>:     }</div><div class="line"><span class="number">117</span>: </div><div class="line"><span class="number">118</span>:     <span class="keyword">return</span> result;</div><div class="line"><span class="number">119</span>: }</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Store 初始化与关闭</title>
    <link href="http://www.yunai.me/RocketMQ/store-init-and-shutdown/"/>
    <id>http://www.yunai.me/RocketMQ/store-init-and-shutdown/</id>
    <published>2017-05-11T16:00:00.000Z</published>
    <updated>2017-07-20T15:02:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Message 拉取与消费（下）</title>
    <link href="http://www.yunai.me/RocketMQ/message-pull-and-consume-second/"/>
    <id>http://www.yunai.me/RocketMQ/message-pull-and-consume-second/</id>
    <published>2017-05-10T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1&#x3001;&#x6982;&#x8FF0;</a></li>
<li><a href="#">2&#x3001;Consumer</a></li>
<li><a href="#">3&#x3001;PushConsumer &#x4E00;&#x89C8;</a></li>
<li><a href="#">4&#x3001;PushConsumer &#x8BA2;&#x9605;</a><ul>
<li><a href="#">DefaultMQPushConsumerImpl#subscribe(&#x2026;)</a><ul>
<li><a href="#">FilterAPI.buildSubscriptionData(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">DefaultMQPushConsumer#registerMessageListener(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">5&#x3001;PushConsumer &#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;</a><ul>
<li><a href="#">RebalanceService</a></li>
<li><a href="#">MQClientInstance#doRebalance(&#x2026;)</a></li>
<li><a href="#">DefaultMQPushConsumerImpl#doRebalance(&#x2026;)</a></li>
<li><a href="#">RebalanceImpl#doRebalance(&#x2026;)</a><ul>
<li><a href="#">RebalanceImpl#rebalanceByTopic(&#x2026;)</a></li>
<li><a href="#">RebalanceImpl#removeUnnecessaryMessageQueue(&#x2026;)</a><ul>
<li><a href="#">RebalancePushImpl#removeUnnecessaryMessageQueue(&#x2026;)</a></li>
<li><a href="#">[PullConsumer] RebalancePullImpl#removeUnnecessaryMessageQueue(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">RebalancePushImpl#dispatchPullRequest(&#x2026;)</a><ul>
<li><a href="#">DefaultMQPushConsumerImpl#executePullRequestImmediately(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">AllocateMessageQueueStrategy</a><ul>
<li><a href="#">AllocateMessageQueueAveragely</a></li>
<li><a href="#">AllocateMessageQueueByMachineRoom</a></li>
<li><a href="#">AllocateMessageQueueAveragelyByCircle</a></li>
<li><a href="#">AllocateMessageQueueByConfig</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#">5&#x3001;PushConsumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x8BFB;&#x53D6;</a><ul>
<li><a href="#">RebalancePushImpl#computePullFromWhere(&#x2026;)</a></li>
<li><a href="#">[PullConsumer] RebalancePullImpl#computePullFromWhere(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">6&#x3001;PushConsumer &#x62C9;&#x53D6;&#x6D88;&#x606F;</a><ul>
<li><a href="#">PullMessageService</a></li>
<li><a href="#">DefaultMQPushConsumerImpl#pullMessage(&#x2026;)</a><ul>
<li><a href="#">PullAPIWrapper#pullKernelImpl(&#x2026;)</a><ul>
<li><a href="#">PullAPIWrapper#recalculatePullFromWhichNode(&#x2026;)</a></li>
<li><a href="#">MQClientInstance#findBrokerAddressInSubscribe(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">PullAPIWrapper#processPullResult(&#x2026;)</a></li>
<li><a href="#">ProcessQueue#putMessage(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">&#x603B;&#x7ED3;</a></li>
</ul>
</li>
<li><a href="#">6&#x3001;PushConsumer &#x6D88;&#x8D39;&#x6D88;&#x606F;</a><ul>
<li><a href="#">ConsumeMessageConcurrentlyService &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</a><ul>
<li><a href="#">ConsumeMessageConcurrentlyService#submitConsumeRequest(&#x2026;)</a></li>
<li><a href="#">ConsumeMessageConcurrentlyService#submitConsumeRequestLater</a></li>
</ul>
</li>
<li><a href="#">ConsumeRequest</a></li>
<li><a href="#">ConsumeMessageConcurrentlyService#processConsumeResult(&#x2026;)</a><ul>
<li><a href="#">ProcessQueue#removeMessage(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">ConsumeMessageConcurrentlyService#cleanExpireMsg(&#x2026;)</a><ul>
<li><a href="#">ProcessQueue#cleanExpiredMsg(&#x2026;)</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#">7&#x3001;PushConsumer &#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;</a><ul>
<li><a href="#">DefaultMQPushConsumerImpl#sendMessageBack(&#x2026;)</a><ul>
<li><a href="#">MQClientAPIImpl#consumerSendMessageBack(&#x2026;)</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#">8&#x3001;Consumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</a><ul>
<li><a href="#">OffsetStore</a><ul>
<li><a href="#">OffsetStore#load(&#x2026;)</a><ul>
<li><a href="#">LocalFileOffsetStore#load(&#x2026;)</a><ul>
<li><a href="#">OffsetSerializeWrapper</a></li>
</ul>
</li>
<li><a href="#">RemoteBrokerOffsetStore#load(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">OffsetStore#readOffset(&#x2026;)</a><ul>
<li><a href="#">LocalFileOffsetStore#readOffset(&#x2026;)</a></li>
<li><a href="#">RemoteBrokerOffsetStore#readOffset(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">OffsetStore#updateOffset(&#x2026;)</a></li>
<li><a href="#">OffsetStore#persistAll(&#x2026;)</a><ul>
<li><a href="#">LocalFileOffsetStore#persistAll(&#x2026;)</a></li>
<li><a href="#">RemoteBrokerOffsetStore#persistAll(&#x2026;)</a></li>
<li><a href="#">MQClientInstance#persistAllConsumerOffset(&#x2026;)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#">9&#x3001;&#x7ED3;&#x5C3E;</a></li>
</ul>
<hr>
<h1 id="1&#x3001;&#x6982;&#x8FF0;"><a href="#1&#x3001;&#x6982;&#x8FF0;" class="headerlink" title="1&#x3001;&#x6982;&#x8FF0;"></a>1&#x3001;&#x6982;&#x8FF0;</h1><p>&#x672C;&#x6587;&#x63A5;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x62C9;&#x53D6;&#x4E0E;&#x6D88;&#x8D39;&#xFF08;&#x4E0A;&#xFF09;&#x300B;</a>&#x3002;</p>
<p>&#x4E3B;&#x8981;&#x89E3;&#x6790; <code>Consumer</code> &#x5728; <strong>&#x6D88;&#x8D39;</strong> &#x903B;&#x8F91;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x6E90;&#x7801;&#x3002;</p>
<h1 id="2&#x3001;Consumer"><a href="#2&#x3001;Consumer" class="headerlink" title="2&#x3001;Consumer"></a>2&#x3001;Consumer</h1><p>MQ &#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x7C7B;&#x6D88;&#x8D39;&#x8005;&#xFF1A;</p>
<ul class="ui list">
<li>PushConsumer&#xFF1A;<ul>
<li>&#x5728;&#x5927;&#x591A;&#x6570;&#x573A;&#x666F;&#x4E0B;&#x4F7F;&#x7528;&#x3002;</li>
<li>&#x540D;&#x5B57;&#x867D;&#x7136;&#x662F; <code>Push</code> &#x5F00;&#x5934;&#xFF0C;&#x5B9E;&#x9645;&#x5728;&#x5B9E;&#x73B0;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; <code>Pull</code> &#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x3002;&#x901A;&#x8FC7; <code>Pull</code> <strong>&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;</strong>&#x8F6E;&#x8BE2; <code>Broker</code> &#x83B7;&#x53D6;&#x6D88;&#x606F;&#x3002;&#x5F53;&#x4E0D;&#x5B58;&#x5728;&#x65B0;&#x6D88;&#x606F;&#x65F6;&#xFF0C;<code>Broker</code> &#x4F1A;<strong>&#x6302;&#x8D77;&#x8BF7;&#x6C42;</strong>&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x4EA7;&#x751F;&#xFF0C;&#x53D6;&#x6D88;&#x6302;&#x8D77;&#xFF0C;&#x8FD4;&#x56DE;&#x65B0;&#x6D88;&#x606F;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x57FA;&#x672C;&#x548C; <code>Broker</code> &#x4E3B;&#x52A8; <code>Push</code> &#x505A;&#x5230;<strong>&#x63A5;&#x8FD1;</strong>&#x7684;&#x5B9E;&#x65F6;&#x6027;&#xFF08;&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x662F;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x5B9E;&#x65F6;&#x6027;&#x635F;&#x5931;&#xFF09;&#x3002;&#x539F;&#x7406;&#x7C7B;&#x4F3C; <strong><a href="https://www.ibm.com/developerworks/cn/web/wa-lo-comet/" rel="external nofollow noopener noreferrer" target="_blank">&#x957F;&#x8F6E;&#x8BE2;( <code>Long-Polling</code> )</a></strong>&#x3002;</li>
</ul>
</li>
<li>PullConsumer</li>
</ul>
<p><strong>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x8BB2;&#x89E3;<code>PushConsumer</code>&#xFF0C;&#x90E8;&#x5206;&#x8BB2;&#x89E3;<code>PullConsumer</code>&#xFF0C;&#x8DF3;&#x8FC7;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code>&#x3002;</strong><br><strong>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x8BB2;&#x89E3;<code>PushConsumer</code>&#xFF0C;&#x90E8;&#x5206;&#x8BB2;&#x89E3;<code>PullConsumer</code>&#xFF0C;&#x8DF3;&#x8FC7;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code>&#x3002;</strong><br><strong>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x8BB2;&#x89E3;<code>PushConsumer</code>&#xFF0C;&#x90E8;&#x5206;&#x8BB2;&#x89E3;<code>PullConsumer</code>&#xFF0C;&#x8DF3;&#x8FC7;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code>&#x3002;</strong>  </p>
<h1 id="3&#x3001;PushConsumer-&#x4E00;&#x89C8;"><a href="#3&#x3001;PushConsumer-&#x4E00;&#x89C8;" class="headerlink" title="3&#x3001;PushConsumer &#x4E00;&#x89C8;"></a>3&#x3001;PushConsumer &#x4E00;&#x89C8;</h1><p>&#x5148;&#x770B;&#x4E00;&#x5F20; <code>PushConsumer</code> &#x5305;&#x542B;&#x7684;&#x7EC4;&#x4EF6;&#x4EE5;&#x53CA;&#x7EC4;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x56FE;&#xFF1A;</p>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/09.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/09.png" alt="PushConsumer&#x624B;&#x7ED8;&#x56FE;.png" class="ui centered image"></a></p>
<ul class="ui list">
<li><code>RebalanceService</code>&#xFF1A;&#x5747;&#x8861;&#x6D88;&#x606F;&#x961F;&#x5217;&#x670D;&#x52A1;&#xFF0C;&#x8D1F;&#x8D23;&#x5206;&#x914D;&#x5F53;&#x524D; <code>Consumer</code> &#x53EF;&#x6D88;&#x8D39;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;( <code>MessageQueue</code> )&#x3002;&#x5F53;&#x6709;&#x65B0;&#x7684; <code>Consumer</code> &#x7684;&#x52A0;&#x5165;&#x6216;&#x79FB;&#x9664;&#xFF0C;&#x90FD;&#x4F1A;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li><code>PullMessageService</code>&#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x670D;&#x52A1;&#xFF0C;<strong>&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;</strong>&#x4ECE; <code>Broker</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x4EFB;&#x52A1;&#x5230; <code>ConsumeMessageService</code>&#x3002;</li>
<li><code>ConsumeMessageService</code>&#xFF1A;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x670D;&#x52A1;&#xFF0C;<strong>&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;</strong>&#x6D88;&#x8D39;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x3002;</li>
<li><code>RemoteBrokerOffsetStore</code>&#xFF1A;<code>Consumer</code> &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x7BA1;&#x7406;&#xFF0C;&#x8D1F;&#x8D23;&#x4ECE; <code>Broker</code> &#x83B7;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x540C;&#x6B65;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5230; <code>Broker</code>&#x3002;</li>
<li><code>ProcessQueue</code> &#xFF1A;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002;</li>
<li><code>MQClientInstance</code> &#xFF1A;&#x5C01;&#x88C5;&#x5BF9; <code>Namesrv</code>&#xFF0C;<code>Broker</code> &#x7684; API&#x8C03;&#x7528;&#xFF0C;&#x63D0;&#x4F9B;&#x7ED9; <code>Producer</code>&#x3001;<code>Consumer</code> &#x4F7F;&#x7528;&#x3002;</li>
</ul>
<h1 id="4&#x3001;PushConsumer-&#x8BA2;&#x9605;"><a href="#4&#x3001;PushConsumer-&#x8BA2;&#x9605;" class="headerlink" title="4&#x3001;PushConsumer &#x8BA2;&#x9605;"></a>4&#x3001;PushConsumer &#x8BA2;&#x9605;</h1><h2 id="DefaultMQPushConsumerImpl-subscribe-&#x2026;"><a href="#DefaultMQPushConsumerImpl-subscribe-&#x2026;" class="headerlink" title="DefaultMQPushConsumerImpl#subscribe(&#x2026;)"></a>DefaultMQPushConsumerImpl#subscribe(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subscribe</span><span class="params">(String topic, String subExpression)</span> <span class="keyword">throws</span> MQClientException </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">3</span>:         <span class="comment">// &#x521B;&#x5EFA;&#x8BA2;&#x9605;&#x6570;&#x636E;</span></div><div class="line"> <span class="number">4</span>:         SubscriptionData subscriptionData = FilterAPI.buildSubscriptionData(<span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup(), <span class="comment">//</span></div><div class="line"> <span class="number">5</span>:             topic, subExpression);</div><div class="line"> <span class="number">6</span>:         <span class="keyword">this</span>.rebalanceImpl.getSubscriptionInner().put(topic, subscriptionData);</div><div class="line"> <span class="number">7</span>:         <span class="comment">// &#x901A;&#x8FC7;&#x5FC3;&#x8DF3;&#x540C;&#x6B65;Consumer&#x4FE1;&#x606F;&#x5230;Broker</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.mQClientFactory != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">9</span>:             <span class="keyword">this</span>.mQClientFactory.sendHeartbeatToAllBrokerWithLock();</div><div class="line"><span class="number">10</span>:         }</div><div class="line"><span class="number">11</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">12</span>:         <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;subscription exception&quot;</span>, e);</div><div class="line"><span class="number">13</span>:     }</div><div class="line"><span class="number">14</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x8BA2;&#x9605; <code>Topic</code> &#x3002;</li>
<li>&#x7B2C; 3 &#x81F3; 6 &#x884C; &#xFF1A;&#x521B;&#x5EFA;&#x8BA2;&#x9605;&#x6570;&#x636E;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#filterapibuildsubscriptiondata">FilterAPI.buildSubscriptionData(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 7 &#x81F3; 10 &#x884C; &#xFF1A;&#x901A;&#x8FC7;&#x5FC3;&#x8DF3;&#x540C;&#x6B65; <code>Consumer</code> &#x4FE1;&#x606F;&#x5230; <code>Broker</code>&#x3002;</li>
</ul>
<h3 id="FilterAPI-buildSubscriptionData-&#x2026;"><a href="#FilterAPI-buildSubscriptionData-&#x2026;" class="headerlink" title="FilterAPI.buildSubscriptionData(&#x2026;)"></a>FilterAPI.buildSubscriptionData(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SubscriptionData <span class="title">buildSubscriptionData</span><span class="params">(<span class="keyword">final</span> String consumerGroup, String topic,</span></span></div><div class="line"> <span class="number">2</span>:     String subString) <span class="keyword">throws</span> Exception {</div><div class="line"> <span class="number">3</span>:     SubscriptionData subscriptionData = <span class="keyword">new</span> SubscriptionData();</div><div class="line"> <span class="number">4</span>:     subscriptionData.setTopic(topic);</div><div class="line"> <span class="number">5</span>:     subscriptionData.setSubString(subString);</div><div class="line"> <span class="number">6</span>:     <span class="comment">// &#x5904;&#x7406;&#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;</span></div><div class="line"> <span class="number">7</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == subString || subString.equals(SubscriptionData.SUB_ALL) || subString.length() == <span class="number">0</span>) {</div><div class="line"> <span class="number">8</span>:         subscriptionData.setSubString(SubscriptionData.SUB_ALL);</div><div class="line"> <span class="number">9</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">10</span>:         String[] tags = subString.split(<span class="string">&quot;\\|\\|&quot;</span>);</div><div class="line"><span class="number">11</span>:         <span class="keyword">if</span> (tags.length &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">12</span>:             <span class="keyword">for</span> (String tag : tags) {</div><div class="line"><span class="number">13</span>:                 <span class="keyword">if</span> (tag.length() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">14</span>:                     String trimString = tag.trim();</div><div class="line"><span class="number">15</span>:                     <span class="keyword">if</span> (trimString.length() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">16</span>:                         subscriptionData.getTagsSet().add(trimString);</div><div class="line"><span class="number">17</span>:                         subscriptionData.getCodeSet().add(trimString.hashCode());</div><div class="line"><span class="number">18</span>:                     }</div><div class="line"><span class="number">19</span>:                 }</div><div class="line"><span class="number">20</span>:             }</div><div class="line"><span class="number">21</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">22</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;subString split error&quot;</span>);</div><div class="line"><span class="number">23</span>:         }</div><div class="line"><span class="number">24</span>:     }</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:     <span class="keyword">return</span> subscriptionData;</div><div class="line"><span class="number">27</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6839;&#x636E; <code>Topic</code> &#x548C; &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F; &#x521B;&#x5EFA;&#x8BA2;&#x9605;&#x6570;&#x636E;</li>
<li>subscriptionData.subVersion = System.currentTimeMillis()&#x3002;</li>
</ul>
<h2 id="DefaultMQPushConsumer-registerMessageListener-&#x2026;"><a href="#DefaultMQPushConsumer-registerMessageListener-&#x2026;" class="headerlink" title="DefaultMQPushConsumer#registerMessageListener(&#x2026;)"></a>DefaultMQPushConsumer#registerMessageListener(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerMessageListener</span><span class="params">(MessageListenerConcurrently messageListener)</span> </span>{</div><div class="line"><span class="number">2</span>:     <span class="keyword">this</span>.messageListener = messageListener;</div><div class="line"><span class="number">3</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.registerMessageListener(messageListener);</div><div class="line"><span class="number">4</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6CE8;&#x518C;&#x6D88;&#x606F;&#x76D1;&#x542C;&#x5668;&#x3002;</li>
</ul>
<h1 id="5&#x3001;PushConsumer-&#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;"><a href="#5&#x3001;PushConsumer-&#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;" class="headerlink" title="5&#x3001;PushConsumer &#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;"></a>5&#x3001;PushConsumer &#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/10.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/10.png" alt="RebalanceService&amp;PushConsumer&#x5206;&#x914D;&#x961F;&#x5217;" class="ui centered image"></a></p>
<h2 id="RebalanceService"><a href="#RebalanceService" class="headerlink" title="RebalanceService"></a>RebalanceService</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RebalanceService</span> <span class="keyword">extends</span> <span class="title">ServiceThread</span> </span>{</div><div class="line"> <span class="number">2</span>: </div><div class="line"> <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line"> 4:      * &#x7B49;&#x5F85;&#x95F4;&#x9694;&#xFF0C;&#x5355;&#x4F4D;&#xFF1A;&#x6BEB;&#x79D2;</div><div class="line"> 5:      */</div><div class="line"> <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> waitInterval =</div><div class="line"> <span class="number">7</span>:         Long.parseLong(System.getProperty(</div><div class="line"> <span class="number">8</span>:             <span class="string">&quot;rocketmq.client.rebalance.waitInterval&quot;</span>, <span class="string">&quot;20000&quot;</span>));</div><div class="line"> <span class="number">9</span>: </div><div class="line"><span class="number">10</span>:     <span class="keyword">private</span> <span class="keyword">final</span> Logger log = ClientLogger.getLog();</div><div class="line"><span class="number">11</span>:     <span class="comment">/**</span></div><div class="line">12:      * MQClient&#x5BF9;&#x8C61;</div><div class="line">13:      */</div><div class="line"><span class="number">14</span>:     <span class="keyword">private</span> <span class="keyword">final</span> MQClientInstance mqClientFactory;</div><div class="line"><span class="number">15</span>: </div><div class="line"><span class="number">16</span>:     <span class="function"><span class="keyword">public</span> <span class="title">RebalanceService</span><span class="params">(MQClientInstance mqClientFactory)</span> </span>{</div><div class="line"><span class="number">17</span>:         <span class="keyword">this</span>.mqClientFactory = mqClientFactory;</div><div class="line"><span class="number">18</span>:     }</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">21</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">22</span>:         log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"><span class="number">25</span>:             <span class="keyword">this</span>.waitForRunning(waitInterval);</div><div class="line"><span class="number">26</span>:             <span class="keyword">this</span>.mqClientFactory.doRebalance();</div><div class="line"><span class="number">27</span>:         }</div><div class="line"><span class="number">28</span>: </div><div class="line"><span class="number">29</span>:         log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">30</span>:     }</div><div class="line"><span class="number">31</span>: </div><div class="line"><span class="number">32</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">33</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">34</span>:         <span class="keyword">return</span> RebalanceService.class.getSimpleName();</div><div class="line"><span class="number">35</span>:     }</div><div class="line"><span class="number">36</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5747;&#x8861;&#x6D88;&#x606F;&#x961F;&#x5217;&#x670D;&#x52A1;&#xFF0C;&#x8D1F;&#x8D23;&#x5206;&#x914D;&#x5F53;&#x524D; <code>Consumer</code> &#x53EF;&#x6D88;&#x8D39;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;( <code>MessageQueue</code> )&#x3002;</li>
<li><p>&#x7B2C; 26 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>MQClientInstance#doRebalance(...)</code> &#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x76EE;&#x524D;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x60C5;&#x51B5;&#x4E0B;&#x89E6;&#x53D1;&#xFF1A;</p>
<ul>
<li>&#x5982; <code>&#x7B2C; 25 &#x884C;</code> &#x7B49;&#x5F85;&#x8D85;&#x65F6;&#xFF0C;&#x6BCF; 20s &#x8C03;&#x7528;&#x4E00;&#x6B21;&#x3002;</li>
<li><code>PushConsumer</code> &#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x8C03;&#x7528; <code>rebalanceService#wakeup(...)</code> &#x89E6;&#x53D1;&#x3002;</li>
<li><code>Broker</code> &#x901A;&#x77E5; <code>Consumer</code> &#x52A0;&#x5165; &#x6216; &#x79FB;&#x9664;&#x65F6;&#xFF0C;<code>Consumer</code> &#x54CD;&#x5E94;&#x901A;&#x77E5;&#xFF0C;&#x8C03;&#x7528; <code>rebalanceService#wakeup(...)</code> &#x89E6;&#x53D1;&#x3002;</li>
</ul>
<p>&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#mqclientinstancedorebalance">MQClientInstance#doRebalance(&#x2026;)</a>&#x3002;</p>
</li>
</ul>
<h2 id="MQClientInstance-doRebalance-&#x2026;"><a href="#MQClientInstance-doRebalance-&#x2026;" class="headerlink" title="MQClientInstance#doRebalance(&#x2026;)"></a>MQClientInstance#doRebalance(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doRebalance</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">for</span> (Map.Entry&lt;String, MQConsumerInner&gt; entry : <span class="keyword">this</span>.consumerTable.entrySet()) {</div><div class="line"> <span class="number">3</span>:         MQConsumerInner impl = entry.getValue();</div><div class="line"> <span class="number">4</span>:         <span class="keyword">if</span> (impl != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">5</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">6</span>:                 impl.doRebalance();</div><div class="line"> <span class="number">7</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">8</span>:                 log.error(<span class="string">&quot;doRebalance exception&quot;</span>, e);</div><div class="line"> <span class="number">9</span>:             }</div><div class="line"><span class="number">10</span>:         }</div><div class="line"><span class="number">11</span>:     }</div><div class="line"><span class="number">12</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x904D;&#x5386;&#x5F53;&#x524D; <code>Client</code> &#x5305;&#x542B;&#x7684; <code>consumerTable</code>( <code>Consumer</code>&#x96C6;&#x5408; )&#xFF0C;&#x6267;&#x884C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;&#x3002;</li>
<li><strong>&#x7591;&#x95EE;</strong>&#xFF1A;&#x76EE;&#x524D;&#x4EE3;&#x7801;&#x8C03;&#x8BD5;&#x4E0B;&#x6765;&#xFF0C;<code>consumerTable</code> &#x53EA;&#x5305;&#x542B; <code>Consumer</code> &#x81EA;&#x5DF1;&#x3002;&#x1F608;&#x6709;&#x5927;&#x5927;&#x5BF9;&#x8FD9;&#x4E2A;&#x7591;&#x95EE;&#x6709;&#x89E3;&#x7B54;&#x7684;&#xFF0C;&#x70E6;&#x8BF7;&#x89E3;&#x7B54;&#x4E0B;&#x3002;</li>
<li>&#x7B2C; 6 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>MQConsumerInner#doRebalance(...)</code> &#x8FDB;&#x884C;&#x961F;&#x5217;&#x5206;&#x914D;&#x3002;<code>DefaultMQPushConsumerImpl</code>&#x3001;<code>DefaultMQPullConsumerImpl</code> &#x5206;&#x522B;&#x5BF9;&#x8BE5;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x4E86;&#x5B9E;&#x73B0;&#x3002;<code>DefaultMQPushConsumerImpl#doRebalance(...)</code> &#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="defaultmqpushconsumerimpldorebalance">DefaultMQPushConsumerImpl#doRebalance(&#x2026;)</a>&#x3002;</li>
</ul>
<h2 id="DefaultMQPushConsumerImpl-doRebalance-&#x2026;"><a href="#DefaultMQPushConsumerImpl-doRebalance-&#x2026;" class="headerlink" title="DefaultMQPushConsumerImpl#doRebalance(&#x2026;)"></a>DefaultMQPushConsumerImpl#doRebalance(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doRebalance</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">2</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.pause) {</div><div class="line"><span class="number">3</span>:         <span class="keyword">this</span>.rebalanceImpl.doRebalance(<span class="keyword">this</span>.isConsumeOrderly());</div><div class="line"><span class="number">4</span>:     }</div><div class="line"><span class="number">5</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x6267;&#x884C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5206;&#x914D;&#x3002;</li>
<li>&#x7B2C; 3 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>RebalanceImpl#doRebalance(...)</code> &#x8FDB;&#x884C;&#x961F;&#x5217;&#x5206;&#x914D;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#rebalancepushimpldorebalance">RebalancePushImpl#doRebalance(&#x2026;)</a>&#x3002;</li>
</ul>
<h2 id="RebalanceImpl-doRebalance-&#x2026;"><a href="#RebalanceImpl-doRebalance-&#x2026;" class="headerlink" title="RebalanceImpl#doRebalance(&#x2026;)"></a>RebalanceImpl#doRebalance(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x6267;&#x884C;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 3:  *</div><div class="line"> 4:  * <span class="doctag">@param</span> isOrder &#x662F;&#x5426;&#x987A;&#x5E8F;&#x6D88;&#x606F;</div><div class="line"> 5:  */</div><div class="line"> <span class="number">6</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doRebalance</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isOrder)</span> </span>{</div><div class="line"> <span class="number">7</span>:     <span class="comment">// &#x5206;&#x914D;&#x6BCF;&#x4E2A; topic &#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">8</span>:     Map&lt;String, SubscriptionData&gt; subTable = <span class="keyword">this</span>.getSubscriptionInner();</div><div class="line"> <span class="number">9</span>:     <span class="keyword">if</span> (subTable != <span class="keyword">null</span>) {</div><div class="line"><span class="number">10</span>:         <span class="keyword">for</span> (<span class="keyword">final</span> Map.Entry&lt;String, SubscriptionData&gt; entry : subTable.entrySet()) {</div><div class="line"><span class="number">11</span>:             <span class="keyword">final</span> String topic = entry.getKey();</div><div class="line"><span class="number">12</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">13</span>:                 <span class="keyword">this</span>.rebalanceByTopic(topic, isOrder);</div><div class="line"><span class="number">14</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">15</span>:                 <span class="keyword">if</span> (!topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {</div><div class="line"><span class="number">16</span>:                     log.warn(<span class="string">&quot;rebalanceByTopic Exception&quot;</span>, e);</div><div class="line"><span class="number">17</span>:                 }</div><div class="line"><span class="number">18</span>:             }</div><div class="line"><span class="number">19</span>:         }</div><div class="line"><span class="number">20</span>:     }</div><div class="line"><span class="number">21</span>:     <span class="comment">// &#x79FB;&#x9664;&#x672A;&#x8BA2;&#x9605;&#x7684;topic&#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"><span class="number">22</span>:     <span class="keyword">this</span>.truncateMessageQueueNotMyTopic();</div><div class="line"><span class="number">23</span>: }</div><div class="line"><span class="number">24</span>: </div><div class="line"><span class="number">25</span>: <span class="comment">/**</span></div><div class="line">26:  * &#x79FB;&#x9664;&#x672A;&#x8BA2;&#x9605;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line">27:  */</div><div class="line"><span class="number">28</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">truncateMessageQueueNotMyTopic</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">29</span>:     Map&lt;String, SubscriptionData&gt; subTable = <span class="keyword">this</span>.getSubscriptionInner();</div><div class="line"><span class="number">30</span>:     <span class="keyword">for</span> (MessageQueue mq : <span class="keyword">this</span>.processQueueTable.keySet()) {</div><div class="line"><span class="number">31</span>:         <span class="keyword">if</span> (!subTable.containsKey(mq.getTopic())) {</div><div class="line"><span class="number">32</span>: </div><div class="line"><span class="number">33</span>:             ProcessQueue pq = <span class="keyword">this</span>.processQueueTable.remove(mq);</div><div class="line"><span class="number">34</span>:             <span class="keyword">if</span> (pq != <span class="keyword">null</span>) {</div><div class="line"><span class="number">35</span>:                 pq.setDropped(<span class="keyword">true</span>);</div><div class="line"><span class="number">36</span>:                 log.info(<span class="string">&quot;doRebalance, {}, truncateMessageQueueNotMyTopic remove unnecessary mq, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">37</span>:             }</div><div class="line"><span class="number">38</span>:         }</div><div class="line"><span class="number">39</span>:     }</div><div class="line"><span class="number">40</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>#doRebalance(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x6267;&#x884C;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7B2C; 7 &#x81F3; 20 &#x884C; &#xFF1A;&#x5FAA;&#x73AF;&#x8BA2;&#x9605;&#x4E3B;&#x9898;&#x96C6;&#x5408;( <code>subscriptionInner</code> )&#xFF0C;&#x5206;&#x914D;&#x6BCF;&#x4E00;&#x4E2A; <code>Topic</code> &#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7B2C; 22 &#x884C; &#xFF1A;&#x79FB;&#x9664;&#x672A;&#x8BA2;&#x9605;&#x7684; <code>Topic</code> &#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
</li>
<li><code>#truncateMessageQueueNotMyTopic(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x79FB;&#x9664;&#x672A;&#x8BA2;&#x9605;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<strong>&#x5F53;&#x8C03;&#x7528; <code>DefaultMQPushConsumer#unsubscribe(topic)</code> &#x65F6;&#xFF0C;&#x53EA;&#x79FB;&#x9664;&#x8BA2;&#x9605;&#x4E3B;&#x9898;&#x96C6;&#x5408;( <code>subscriptionInner</code> )&#xFF0C;&#x5BF9;&#x5E94;&#x6D88;&#x606F;&#x961F;&#x5217;&#x79FB;&#x9664;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x3002;</strong></li>
</ul>
<h3 id="RebalanceImpl-rebalanceByTopic-&#x2026;"><a href="#RebalanceImpl-rebalanceByTopic-&#x2026;" class="headerlink" title="RebalanceImpl#rebalanceByTopic(&#x2026;)"></a>RebalanceImpl#rebalanceByTopic(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">rebalanceByTopic</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">boolean</span> isOrder)</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="keyword">switch</span> (messageModel) {</div><div class="line">  <span class="number">3</span>:         <span class="keyword">case</span> BROADCASTING: {</div><div class="line">  <span class="number">4</span>:             Set&lt;MessageQueue&gt; mqSet = <span class="keyword">this</span>.topicSubscribeInfoTable.get(topic);</div><div class="line">  <span class="number">5</span>:             <span class="keyword">if</span> (mqSet != <span class="keyword">null</span>) {</div><div class="line">  <span class="number">6</span>:                 <span class="keyword">boolean</span> changed = <span class="keyword">this</span>.updateProcessQueueTableInRebalance(topic, mqSet, isOrder);</div><div class="line">  <span class="number">7</span>:                 <span class="keyword">if</span> (changed) {</div><div class="line">  <span class="number">8</span>:                     <span class="keyword">this</span>.messageQueueChanged(topic, mqSet, mqSet);</div><div class="line">  <span class="number">9</span>:                     log.info(<span class="string">&quot;messageQueueChanged {} {} {} {}&quot;</span>, <span class="comment">//</span></div><div class="line"> <span class="number">10</span>:                         consumerGroup, <span class="comment">//</span></div><div class="line"> <span class="number">11</span>:                         topic, <span class="comment">//</span></div><div class="line"> <span class="number">12</span>:                         mqSet, <span class="comment">//</span></div><div class="line"> <span class="number">13</span>:                         mqSet);</div><div class="line"> <span class="number">14</span>:                 }</div><div class="line"> <span class="number">15</span>:             } <span class="keyword">else</span> {</div><div class="line"> <span class="number">16</span>:                 log.warn(<span class="string">&quot;doRebalance, {}, but the topic[{}] not exist.&quot;</span>, consumerGroup, topic);</div><div class="line"> <span class="number">17</span>:             }</div><div class="line"> <span class="number">18</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">19</span>:         }</div><div class="line"> <span class="number">20</span>:         <span class="keyword">case</span> CLUSTERING: {</div><div class="line"> <span class="number">21</span>:             <span class="comment">// &#x83B7;&#x53D6; topic &#x5BF9;&#x5E94;&#x7684; &#x961F;&#x5217; &#x548C; consumer&#x4FE1;&#x606F;</span></div><div class="line"> <span class="number">22</span>:             Set&lt;MessageQueue&gt; mqSet = <span class="keyword">this</span>.topicSubscribeInfoTable.get(topic);</div><div class="line"> <span class="number">23</span>:             List&lt;String&gt; cidAll = <span class="keyword">this</span>.mQClientFactory.findConsumerIdList(topic, consumerGroup);</div><div class="line"> <span class="number">24</span>:             <span class="keyword">if</span> (<span class="keyword">null</span> == mqSet) {</div><div class="line"> <span class="number">25</span>:                 <span class="keyword">if</span> (!topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {</div><div class="line"> <span class="number">26</span>:                     log.warn(<span class="string">&quot;doRebalance, {}, but the topic[{}] not exist.&quot;</span>, consumerGroup, topic);</div><div class="line"> <span class="number">27</span>:                 }</div><div class="line"> <span class="number">28</span>:             }</div><div class="line"> <span class="number">29</span>: </div><div class="line"> <span class="number">30</span>:             <span class="keyword">if</span> (<span class="keyword">null</span> == cidAll) {</div><div class="line"> <span class="number">31</span>:                 log.warn(<span class="string">&quot;doRebalance, {} {}, get consumer id list failed&quot;</span>, consumerGroup, topic);</div><div class="line"> <span class="number">32</span>:             }</div><div class="line"> <span class="number">33</span>: </div><div class="line"> <span class="number">34</span>:             <span class="keyword">if</span> (mqSet != <span class="keyword">null</span> &amp;&amp; cidAll != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">35</span>:                 <span class="comment">// &#x6392;&#x5E8F; &#x6D88;&#x606F;&#x961F;&#x5217; &#x548C; &#x6D88;&#x8D39;&#x8005;&#x6570;&#x7EC4;&#x3002;&#x56E0;&#x4E3A;&#x662F;&#x5728;Client&#x8FDB;&#x884C;&#x5206;&#x914D;&#x961F;&#x5217;&#xFF0C;&#x6392;&#x5E8F;&#x540E;&#xFF0C;&#x5404;Client&#x7684;&#x987A;&#x5E8F;&#x624D;&#x80FD;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002;</span></div><div class="line"> <span class="number">36</span>:                 List&lt;MessageQueue&gt; mqAll = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"> <span class="number">37</span>:                 mqAll.addAll(mqSet);</div><div class="line"> <span class="number">38</span>: </div><div class="line"> <span class="number">39</span>:                 Collections.sort(mqAll);</div><div class="line"> <span class="number">40</span>:                 Collections.sort(cidAll);</div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:                 AllocateMessageQueueStrategy strategy = <span class="keyword">this</span>.allocateMessageQueueStrategy;</div><div class="line"> <span class="number">43</span>: </div><div class="line"> <span class="number">44</span>:                 <span class="comment">// &#x6839;&#x636E; &#x961F;&#x5217;&#x5206;&#x914D;&#x7B56;&#x7565; &#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">45</span>:                 List&lt;MessageQueue&gt; allocateResult;</div><div class="line"> <span class="number">46</span>:                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">47</span>:                     allocateResult = strategy.allocate(<span class="comment">//</span></div><div class="line"> <span class="number">48</span>:                         <span class="keyword">this</span>.consumerGroup, <span class="comment">//</span></div><div class="line"> <span class="number">49</span>:                         <span class="keyword">this</span>.mQClientFactory.getClientId(), <span class="comment">//</span></div><div class="line"> <span class="number">50</span>:                         mqAll, <span class="comment">//</span></div><div class="line"> <span class="number">51</span>:                         cidAll);</div><div class="line"> <span class="number">52</span>:                 } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">53</span>:                     log.error(<span class="string">&quot;AllocateMessageQueueStrategy.allocate Exception. allocateMessageQueueStrategyName={}&quot;</span>, strategy.getName(),</div><div class="line"> <span class="number">54</span>:                         e);</div><div class="line"> <span class="number">55</span>:                     <span class="keyword">return</span>;</div><div class="line"> <span class="number">56</span>:                 }</div><div class="line"> <span class="number">57</span>: </div><div class="line"> <span class="number">58</span>:                 Set&lt;MessageQueue&gt; allocateResultSet = <span class="keyword">new</span> HashSet&lt;&gt;();</div><div class="line"> <span class="number">59</span>:                 <span class="keyword">if</span> (allocateResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">60</span>:                     allocateResultSet.addAll(allocateResult);</div><div class="line"> <span class="number">61</span>:                 }</div><div class="line"> <span class="number">62</span>: </div><div class="line"> <span class="number">63</span>:                 <span class="comment">// &#x66F4;&#x65B0;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">64</span>:                 <span class="keyword">boolean</span> changed = <span class="keyword">this</span>.updateProcessQueueTableInRebalance(topic, allocateResultSet, isOrder);</div><div class="line"> <span class="number">65</span>:                 <span class="keyword">if</span> (changed) {</div><div class="line"> <span class="number">66</span>:                     log.info(</div><div class="line"> <span class="number">67</span>:                         <span class="string">&quot;rebalanced result changed. allocateMessageQueueStrategyName={}, group={}, topic={}, clientId={}, mqAllSize={}, cidAllSize={}, rebalanceResultSize={}, rebalanceResultSet={}&quot;</span>,</div><div class="line"> <span class="number">68</span>:                         strategy.getName(), consumerGroup, topic, <span class="keyword">this</span>.mQClientFactory.getClientId(), mqSet.size(), cidAll.size(),</div><div class="line"> <span class="number">69</span>:                         allocateResultSet.size(), allocateResultSet);</div><div class="line"> <span class="number">70</span>:                     <span class="keyword">this</span>.messageQueueChanged(topic, mqSet, allocateResultSet);</div><div class="line"> <span class="number">71</span>:                 }</div><div class="line"> <span class="number">72</span>:             }</div><div class="line"> <span class="number">73</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">74</span>:         }</div><div class="line"> <span class="number">75</span>:         <span class="keyword">default</span>:</div><div class="line"> <span class="number">76</span>:             <span class="keyword">break</span>;</div><div class="line"> <span class="number">77</span>:     }</div><div class="line"> <span class="number">78</span>: }</div><div class="line"> <span class="number">79</span>: </div><div class="line"> <span class="number">80</span>: <span class="comment">/**</span></div><div class="line"> 81:  * &#x5F53;&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x65F6;&#xFF0C;&#x66F4;&#x65B0; &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line"> 82:  * - &#x79FB;&#x9664; &#x5728;processQueueTable &amp;&amp; &#x4E0D;&#x5B58;&#x5728;&#x4E8E; mqSet &#x91CC;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 83:  * - &#x589E;&#x52A0; &#x4E0D;&#x5728;processQueueTable &amp;&amp; &#x5B58;&#x5728;&#x4E8E;mqSet &#x91CC;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 84:  *</div><div class="line"> 85:  * <span class="doctag">@param</span> topic Topic</div><div class="line"> 86:  * <span class="doctag">@param</span> mqSet &#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7ED3;&#x679C;&#x540E;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6570;&#x7EC4;</div><div class="line"> 87:  * <span class="doctag">@param</span> isOrder &#x662F;&#x5426;&#x987A;&#x5E8F;</div><div class="line"> 88:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x53D8;&#x66F4;</div><div class="line"> 89:  */</div><div class="line"> <span class="number">90</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">updateProcessQueueTableInRebalance</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> Set&lt;MessageQueue&gt; mqSet, <span class="keyword">final</span> <span class="keyword">boolean</span> isOrder)</span> </span>{</div><div class="line"> <span class="number">91</span>:     <span class="keyword">boolean</span> changed = <span class="keyword">false</span>;</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>:     <span class="comment">// &#x79FB;&#x9664; &#x5728;processQueueTable &amp;&amp; &#x4E0D;&#x5B58;&#x5728;&#x4E8E; mqSet &#x91CC;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">94</span>:     Iterator&lt;Entry&lt;MessageQueue, ProcessQueue&gt;&gt; it = <span class="keyword">this</span>.processQueueTable.entrySet().iterator();</div><div class="line"> <span class="number">95</span>:     <span class="keyword">while</span> (it.hasNext()) { <span class="comment">// TODO &#x5F85;&#x8BFB;&#xFF1A;</span></div><div class="line"> <span class="number">96</span>:         Entry&lt;MessageQueue, ProcessQueue&gt; next = it.next();</div><div class="line"> <span class="number">97</span>:         MessageQueue mq = next.getKey();</div><div class="line"> <span class="number">98</span>:         ProcessQueue pq = next.getValue();</div><div class="line"> <span class="number">99</span>: </div><div class="line"><span class="number">100</span>:         <span class="keyword">if</span> (mq.getTopic().equals(topic)) {</div><div class="line"><span class="number">101</span>:             <span class="keyword">if</span> (!mqSet.contains(mq)) { <span class="comment">// &#x4E0D;&#x5305;&#x542B;&#x7684;&#x961F;&#x5217;</span></div><div class="line"><span class="number">102</span>:                 pq.setDropped(<span class="keyword">true</span>);</div><div class="line"><span class="number">103</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.removeUnnecessaryMessageQueue(mq, pq)) {</div><div class="line"><span class="number">104</span>:                     it.remove();</div><div class="line"><span class="number">105</span>:                     changed = <span class="keyword">true</span>;</div><div class="line"><span class="number">106</span>:                     log.info(<span class="string">&quot;doRebalance, {}, remove unnecessary mq, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">107</span>:                 }</div><div class="line"><span class="number">108</span>:             } <span class="keyword">else</span> <span class="keyword">if</span> (pq.isPullExpired()) { <span class="comment">// &#x961F;&#x5217;&#x62C9;&#x53D6;&#x8D85;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x6E05;&#x7406;</span></div><div class="line"><span class="number">109</span>:                 <span class="keyword">switch</span> (<span class="keyword">this</span>.consumeType()) {</div><div class="line"><span class="number">110</span>:                     <span class="keyword">case</span> CONSUME_ACTIVELY:</div><div class="line"><span class="number">111</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">112</span>:                     <span class="keyword">case</span> CONSUME_PASSIVELY:</div><div class="line"><span class="number">113</span>:                         pq.setDropped(<span class="keyword">true</span>);</div><div class="line"><span class="number">114</span>:                         <span class="keyword">if</span> (<span class="keyword">this</span>.removeUnnecessaryMessageQueue(mq, pq)) {</div><div class="line"><span class="number">115</span>:                             it.remove();</div><div class="line"><span class="number">116</span>:                             changed = <span class="keyword">true</span>;</div><div class="line"><span class="number">117</span>:                             log.error(<span class="string">&quot;[BUG]doRebalance, {}, remove unnecessary mq, {}, because pull is pause, so try to fixed it&quot;</span>,</div><div class="line"><span class="number">118</span>:                                 consumerGroup, mq);</div><div class="line"><span class="number">119</span>:                         }</div><div class="line"><span class="number">120</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">121</span>:                     <span class="keyword">default</span>:</div><div class="line"><span class="number">122</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">123</span>:                 }</div><div class="line"><span class="number">124</span>:             }</div><div class="line"><span class="number">125</span>:         }</div><div class="line"><span class="number">126</span>:     }</div><div class="line"><span class="number">127</span>: </div><div class="line"><span class="number">128</span>:     <span class="comment">// &#x589E;&#x52A0; &#x4E0D;&#x5728;processQueueTable &amp;&amp; &#x5B58;&#x5728;&#x4E8E;mqSet &#x91CC;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</span></div><div class="line"><span class="number">129</span>:     List&lt;PullRequest&gt; pullRequestList = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// &#x62C9;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x6570;&#x7EC4;</span></div><div class="line"><span class="number">130</span>:     <span class="keyword">for</span> (MessageQueue mq : mqSet) {</div><div class="line"><span class="number">131</span>:         <span class="keyword">if</span> (!<span class="keyword">this</span>.processQueueTable.containsKey(mq)) {</div><div class="line"><span class="number">132</span>:             <span class="keyword">if</span> (isOrder &amp;&amp; !<span class="keyword">this</span>.lock(mq)) {</div><div class="line"><span class="number">133</span>:                 log.warn(<span class="string">&quot;doRebalance, {}, add a new mq failed, {}, because lock failed&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">134</span>:                 <span class="keyword">continue</span>;</div><div class="line"><span class="number">135</span>:             }</div><div class="line"><span class="number">136</span>: </div><div class="line"><span class="number">137</span>:             <span class="keyword">this</span>.removeDirtyOffset(mq);</div><div class="line"><span class="number">138</span>:             ProcessQueue pq = <span class="keyword">new</span> ProcessQueue();</div><div class="line"><span class="number">139</span>:             <span class="keyword">long</span> nextOffset = <span class="keyword">this</span>.computePullFromWhere(mq);</div><div class="line"><span class="number">140</span>:             <span class="keyword">if</span> (nextOffset &gt;= <span class="number">0</span>) {</div><div class="line"><span class="number">141</span>:                 ProcessQueue pre = <span class="keyword">this</span>.processQueueTable.putIfAbsent(mq, pq);</div><div class="line"><span class="number">142</span>:                 <span class="keyword">if</span> (pre != <span class="keyword">null</span>) {</div><div class="line"><span class="number">143</span>:                     log.info(<span class="string">&quot;doRebalance, {}, mq already exists, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">144</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">145</span>:                     log.info(<span class="string">&quot;doRebalance, {}, add a new mq, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">146</span>:                     PullRequest pullRequest = <span class="keyword">new</span> PullRequest();</div><div class="line"><span class="number">147</span>:                     pullRequest.setConsumerGroup(consumerGroup);</div><div class="line"><span class="number">148</span>:                     pullRequest.setNextOffset(nextOffset);</div><div class="line"><span class="number">149</span>:                     pullRequest.setMessageQueue(mq);</div><div class="line"><span class="number">150</span>:                     pullRequest.setProcessQueue(pq);</div><div class="line"><span class="number">151</span>:                     pullRequestList.add(pullRequest);</div><div class="line"><span class="number">152</span>:                     changed = <span class="keyword">true</span>;</div><div class="line"><span class="number">153</span>:                 }</div><div class="line"><span class="number">154</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">155</span>:                 log.warn(<span class="string">&quot;doRebalance, {}, add new mq failed, {}&quot;</span>, consumerGroup, mq);</div><div class="line"><span class="number">156</span>:             }</div><div class="line"><span class="number">157</span>:         }</div><div class="line"><span class="number">158</span>:     }</div><div class="line"><span class="number">159</span>: </div><div class="line"><span class="number">160</span>:     <span class="comment">// &#x53D1;&#x8D77;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">161</span>:     <span class="keyword">this</span>.dispatchPullRequest(pullRequestList);</div><div class="line"><span class="number">162</span>: </div><div class="line"><span class="number">163</span>:     <span class="keyword">return</span> changed;</div><div class="line"><span class="number">164</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>#rebalanceByTopic(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x5206;&#x914D; <code>Topic</code> &#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7B2C; 3 &#x81F3; 19 &#x884C; &#xFF1A;&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;( <code>BROADCASTING</code> ) &#x4E0B;&#xFF0C;&#x5206;&#x914D; <code>Topic</code> &#x5BF9;&#x5E94;&#x7684;<strong>&#x6240;&#x6709;</strong>&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;   </li>
<li>&#x7B2C; 20 &#x81F3; 74 &#x884C; &#xFF1A;&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;( <code>CLUSTERING</code> ) &#x4E0B;&#xFF0C;&#x5206;&#x914D; <code>Topic</code> &#x5BF9;&#x5E94;&#x7684;<strong>&#x90E8;&#x5206;</strong>&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7B2C; 21 &#x81F3; 40 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>Topic</code> &#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x548C;&#x6D88;&#x8D39;&#x8005;&#x4EEC;&#xFF0C;&#x5E76;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;&#x56E0;&#x4E3A;&#x5404; <code>Consumer</code> &#x662F;&#x5728;&#x672C;&#x5730;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x6392;&#x5E8F;&#x540E;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x5404; <code>Consumer</code> &#x987A;&#x5E8F;&#x4E00;&#x81F4;&#x3002;</li>
<li>&#x7B2C; 42 &#x81F3; 61 &#x884C; &#xFF1A;&#x6839;&#x636E; &#x961F;&#x5217;&#x5206;&#x914D;&#x7B56;&#x7565;( <code>AllocateMessageQueueStrategy</code> ) &#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#allocatemessagequeuestrategy">AllocateMessageQueueStrategy</a>&#x3002;</li>
<li>&#x7B2C; 63 &#x81F3; 72 &#x884C; &#xFF1A;&#x66F4;&#x65B0; <code>Topic</code> &#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
</li>
</ul>
</li>
<li><code>#updateProcessQueueTableInRebalance(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x5F53;&#x5206;&#x914D;&#x961F;&#x5217;&#x65F6;&#xFF0C;&#x66F4;&#x65B0; <code>Topic</code> &#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x6709;&#x53D8;&#x66F4;&#x3002;<ul>
<li>&#x7B2C; 93 &#x81F3; 126 &#x884C; &#xFF1A;&#x79FB;&#x9664;&#x4E0D;&#x5B58;&#x5728;&#x4E8E;&#x5206;&#x914D;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;( <code>mqSet</code> ) &#x7684; &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;( <code>processQueueTable</code> )&#x3002;<ul>
<li>&#x7B2C; 103 &#x884C; &#xFF1A;&#x79FB;&#x9664;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#rebalancepushimplremoveunnecessarymessagequeue">RebalancePushImpl#removeUnnecessaryMessageQueue(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 108 &#x81F3; 120 &#x884C; &#xFF1A;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x8D85;&#x65F6;&#xFF0C;&#x5373; <code>&#x5F53;&#x524D;&#x65F6;&#x95F4; - &#x6700;&#x540E;&#x4E00;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#x95F4; &gt; 120s</code> ( 120s &#x53EF;&#x914D;&#x7F6E;)&#xFF0C;&#x5224;&#x5B9A;&#x53D1;&#x751F; <strong>BUG</strong>&#xFF0C;&#x8FC7;&#x4E45;&#x672A;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x79FB;&#x9664;&#x540E;&#xFF0C;&#x4E0B;&#x9762;<strong>#&#x65B0;&#x589E;&#x961F;&#x5217;&#x903B;&#x8F91;#</strong>&#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x52A0;&#x5165;&#x65B0;&#x7684;&#x8BE5;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 128 &#x81F3; 158 &#x884C; &#xFF1A;&#x589E;&#x52A0; &#x5206;&#x914D;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;( <code>mqSet</code> ) &#x65B0;&#x589E;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7B2C; 132 &#x81F3; 135 &#x884C; &#xFF1A;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code> &#x76F8;&#x5173;&#x8DF3;&#x8FC7;&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-send-and-consume-orderly/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x987A;&#x5E8F;&#x53D1;&#x9001;&#x4E0E;&#x6D88;&#x8D39;&#x300B;</a>&#x3002;</li>
<li>&#x7B2C; 137 &#x884C; &#xFF1A;&#x79FB;&#x9664;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
<li>&#x7B2C; 139 &#x884C; &#xFF1A;&#x83B7;&#x53D6;&#x961F;&#x5217;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#rebalancepushimplcomputepullfromwhere">RebalancePushImpl#computePullFromWhere(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 140 &#x81F3; 156 &#x884C; &#xFF1A;<strong>&#x6DFB;&#x52A0;&#x65B0;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;&#xFF0C;&#x6DFB;&#x52A0;&#x6D88;&#x8D39;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</strong>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 161 &#x884C; &#xFF1A;<strong>&#x53D1;&#x8D77;&#x65B0;&#x589E;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;</strong>&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#rebalancepushimpldispatchpullrequest">RebalancePushImpl#dispatchPullRequest(&#x2026;)</a>&#x3002;</li>
</ul>
</li>
</ul>
<h3 id="RebalanceImpl-removeUnnecessaryMessageQueue-&#x2026;"><a href="#RebalanceImpl-removeUnnecessaryMessageQueue-&#x2026;" class="headerlink" title="RebalanceImpl#removeUnnecessaryMessageQueue(&#x2026;)"></a>RebalanceImpl#removeUnnecessaryMessageQueue(&#x2026;)</h3><h4 id="RebalancePushImpl-removeUnnecessaryMessageQueue-&#x2026;"><a href="#RebalancePushImpl-removeUnnecessaryMessageQueue-&#x2026;" class="headerlink" title="RebalancePushImpl#removeUnnecessaryMessageQueue(&#x2026;)"></a>RebalancePushImpl#removeUnnecessaryMessageQueue(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeUnnecessaryMessageQueue</span><span class="params">(MessageQueue mq, ProcessQueue pq)</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">// &#x540C;&#x6B65;&#x961F;&#x5217;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x5E76;&#x79FB;&#x9664;&#x4E4B;&#x3002;</span></div><div class="line"> <span class="number">3</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().persist(mq);</div><div class="line"> <span class="number">4</span>:     <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().removeOffset(mq);</div><div class="line"> <span class="number">5</span>:     <span class="comment">// TODO &#x987A;&#x5E8F;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">6</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.defaultMQPushConsumerImpl.isConsumeOrderly()</div><div class="line"> <span class="number">7</span>:         &amp;&amp; MessageModel.CLUSTERING.equals(<span class="keyword">this</span>.defaultMQPushConsumerImpl.messageModel())) {</div><div class="line"> <span class="number">8</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">9</span>:             <span class="keyword">if</span> (pq.getLockConsume().tryLock(<span class="number">1000</span>, TimeUnit.MILLISECONDS)) {</div><div class="line"><span class="number">10</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">11</span>:                     <span class="keyword">return</span> <span class="keyword">this</span>.unlockDelay(mq, pq);</div><div class="line"><span class="number">12</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">13</span>:                     pq.getLockConsume().unlock();</div><div class="line"><span class="number">14</span>:                 }</div><div class="line"><span class="number">15</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">16</span>:                 log.warn(<span class="string">&quot;[WRONG]mq is consuming, so can not unlock it, {}. maybe hanged for a while, {}&quot;</span>, <span class="comment">//</span></div><div class="line"><span class="number">17</span>:                     mq, <span class="comment">//</span></div><div class="line"><span class="number">18</span>:                     pq.getTryUnlockTimes());</div><div class="line"><span class="number">19</span>: </div><div class="line"><span class="number">20</span>:                 pq.incTryUnlockTimes();</div><div class="line"><span class="number">21</span>:             }</div><div class="line"><span class="number">22</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">23</span>:             log.error(<span class="string">&quot;removeUnnecessaryMessageQueue Exception&quot;</span>, e);</div><div class="line"><span class="number">24</span>:         }</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">27</span>:     }</div><div class="line"><span class="number">28</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">29</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x79FB;&#x9664;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x79FB;&#x9664;&#x6210;&#x529F;&#x3002;</li>
<li>&#x7B2C; 2 &#x81F3; 4 &#x884C; &#xFF1A;<strong>&#x540C;&#x6B65;</strong>&#x961F;&#x5217;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x5E76;&#x79FB;&#x9664;&#x4E4B;&#x3002;</li>
<li>&#x7B2C; 5 &#x81F3; 27 &#x884C; &#xFF1A;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code> &#x76F8;&#x5173;&#x8DF3;&#x8FC7;&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-send-and-consume-orderly/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x987A;&#x5E8F;&#x53D1;&#x9001;&#x4E0E;&#x6D88;&#x8D39;&#x300B;</a>&#x3002;</li>
</ul>
<h4 id="PullConsumer-RebalancePullImpl-removeUnnecessaryMessageQueue-&#x2026;"><a href="#PullConsumer-RebalancePullImpl-removeUnnecessaryMessageQueue-&#x2026;" class="headerlink" title="[PullConsumer] RebalancePullImpl#removeUnnecessaryMessageQueue(&#x2026;)"></a><code>[PullConsumer]</code> RebalancePullImpl#removeUnnecessaryMessageQueue(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeUnnecessaryMessageQueue</span><span class="params">(MessageQueue mq, ProcessQueue pq)</span> </span>{</div><div class="line"><span class="number">2</span>:     <span class="keyword">this</span>.defaultMQPullConsumerImpl.getOffsetStore().persist(mq);</div><div class="line"><span class="number">3</span>:     <span class="keyword">this</span>.defaultMQPullConsumerImpl.getOffsetStore().removeOffset(mq);</div><div class="line"><span class="number">4</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">5</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x79FB;&#x9664;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x79FB;&#x9664;&#x6210;&#x529F;&#x3002;<strong>&#x548C;<code>RebalancePushImpl#removeUnnecessaryMessageQueue(...)</code>&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x3002;</strong></li>
</ul>
<h3 id="RebalancePushImpl-dispatchPullRequest-&#x2026;"><a href="#RebalancePushImpl-dispatchPullRequest-&#x2026;" class="headerlink" title="RebalancePushImpl#dispatchPullRequest(&#x2026;)"></a>RebalancePushImpl#dispatchPullRequest(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dispatchPullRequest</span><span class="params">(List&lt;PullRequest&gt; pullRequestList)</span> </span>{</div><div class="line"><span class="number">2</span>:     <span class="keyword">for</span> (PullRequest pullRequest : pullRequestList) {</div><div class="line"><span class="number">3</span>:         <span class="keyword">this</span>.defaultMQPushConsumerImpl.executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">4</span>:         log.info(<span class="string">&quot;doRebalance, {}, add a new pull request {}&quot;</span>, consumerGroup, pullRequest);</div><div class="line"><span class="number">5</span>:     }</div><div class="line"><span class="number">6</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x53D1;&#x8D77;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x3002;<strong>&#x8BE5;&#x8C03;&#x7528;&#x662F;<code>PushConsumer</code>&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x8D77;&#x70B9;</strong>&#x3002;</li>
</ul>
<h4 id="DefaultMQPushConsumerImpl-executePullRequestImmediately-&#x2026;"><a href="#DefaultMQPushConsumerImpl-executePullRequestImmediately-&#x2026;" class="headerlink" title="DefaultMQPushConsumerImpl#executePullRequestImmediately(&#x2026;)"></a>DefaultMQPushConsumerImpl#executePullRequestImmediately(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executePullRequestImmediately</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line"><span class="number">2</span>:     <span class="keyword">this</span>.mQClientFactory.getPullMessageService().executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">3</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x3002;&#x63D0;&#x4EA4;&#x540E;&#xFF0C;<code>PullMessageService</code> <strong>&#x5F02;&#x6B65;&#x6267;&#x884C;</strong>&#xFF0C;<strong>&#x975E;&#x963B;&#x585E;</strong>&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="pullmessageservice">PullMessageService</a>&#x3002;</li>
</ul>
<h3 id="AllocateMessageQueueStrategy"><a href="#AllocateMessageQueueStrategy" class="headerlink" title="AllocateMessageQueueStrategy"></a>AllocateMessageQueueStrategy</h3><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/01.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/01.png" alt="AllocateMessageQueueStrategy&#x7C7B;&#x56FE;" class="ui centered image"></a></p>
<h4 id="AllocateMessageQueueAveragely"><a href="#AllocateMessageQueueAveragely" class="headerlink" title="AllocateMessageQueueAveragely"></a>AllocateMessageQueueAveragely</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllocateMessageQueueAveragely</span> <span class="keyword">implements</span> <span class="title">AllocateMessageQueueStrategy</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> <span class="keyword">final</span> Logger log = ClientLogger.getLog();</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> List&lt;MessageQueue&gt; <span class="title">allocate</span><span class="params">(String consumerGroup, String currentCID, List&lt;MessageQueue&gt; mqAll,</span></span></div><div class="line"> <span class="number">6</span>:         List&lt;String&gt; cidAll) {</div><div class="line"> <span class="number">7</span>:         <span class="comment">// &#x6821;&#x9A8C;&#x53C2;&#x6570;&#x662F;&#x5426;&#x6B63;&#x786E;</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">if</span> (currentCID == <span class="keyword">null</span> || currentCID.length() &lt; <span class="number">1</span>) {</div><div class="line"> <span class="number">9</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;currentCID is empty&quot;</span>);</div><div class="line"><span class="number">10</span>:         }</div><div class="line"><span class="number">11</span>:         <span class="keyword">if</span> (mqAll == <span class="keyword">null</span> || mqAll.isEmpty()) {</div><div class="line"><span class="number">12</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;mqAll is null or mqAll empty&quot;</span>);</div><div class="line"><span class="number">13</span>:         }</div><div class="line"><span class="number">14</span>:         <span class="keyword">if</span> (cidAll == <span class="keyword">null</span> || cidAll.isEmpty()) {</div><div class="line"><span class="number">15</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;cidAll is null or cidAll empty&quot;</span>);</div><div class="line"><span class="number">16</span>:         }</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:         List&lt;MessageQueue&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"><span class="number">19</span>:         <span class="keyword">if</span> (!cidAll.contains(currentCID)) {</div><div class="line"><span class="number">20</span>:             log.info(<span class="string">&quot;[BUG] ConsumerGroup: {} The consumerId: {} not in cidAll: {}&quot;</span>,</div><div class="line"><span class="number">21</span>:                 consumerGroup,</div><div class="line"><span class="number">22</span>:                 currentCID,</div><div class="line"><span class="number">23</span>:                 cidAll);</div><div class="line"><span class="number">24</span>:             <span class="keyword">return</span> result;</div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>:         <span class="comment">// &#x5E73;&#x5747;&#x5206;&#x914D;</span></div><div class="line"><span class="number">27</span>:         <span class="keyword">int</span> index = cidAll.indexOf(currentCID); <span class="comment">// &#x7B2C;&#x51E0;&#x4E2A;consumer&#x3002;</span></div><div class="line"><span class="number">28</span>:         <span class="keyword">int</span> mod = mqAll.size() % cidAll.size(); <span class="comment">// &#x4F59;&#x6570;&#xFF0C;&#x5373;&#x591A;&#x5C11;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65E0;&#x6CD5;&#x5E73;&#x5747;&#x5206;&#x914D;&#x3002;</span></div><div class="line"><span class="number">29</span>:         <span class="keyword">int</span> averageSize =</div><div class="line"><span class="number">30</span>:             mqAll.size() &lt;= cidAll.size() ? <span class="number">1</span> : (mod &gt; <span class="number">0</span> &amp;&amp; index &lt; mod ? mqAll.size() / cidAll.size()</div><div class="line"><span class="number">31</span>:                 + <span class="number">1</span> : mqAll.size() / cidAll.size());</div><div class="line"><span class="number">32</span>:         <span class="keyword">int</span> startIndex = (mod &gt; <span class="number">0</span> &amp;&amp; index &lt; mod) ? index * averageSize : index * averageSize + mod; <span class="comment">// &#x6709;&#x4F59;&#x6570;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;[0, mod) &#x5E73;&#x5206;&#x4F59;&#x6570;&#xFF0C;&#x5373;&#x6BCF;consumer&#x591A;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF1B;&#x7B2C;index&#x5F00;&#x59CB;&#xFF0C;&#x8DF3;&#x8FC7;&#x524D;mod&#x4F59;&#x6570;&#x3002;</span></div><div class="line"><span class="number">33</span>:         <span class="keyword">int</span> range = Math.min(averageSize, mqAll.size() - startIndex); <span class="comment">// &#x5206;&#x914D;&#x961F;&#x5217;&#x6570;&#x91CF;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x8981;Math.min()&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF0C;mqAll.size() &lt;= cidAll.size()&#xFF0C;&#x90E8;&#x5206;consumer&#x5206;&#x914D;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</span></div><div class="line"><span class="number">34</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; range; i++) {</div><div class="line"><span class="number">35</span>:             result.add(mqAll.get((startIndex + i) % mqAll.size()));</div><div class="line"><span class="number">36</span>:         }</div><div class="line"><span class="number">37</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">38</span>:     }</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">41</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">42</span>:         <span class="keyword">return</span> <span class="string">&quot;AVG&quot;</span>;</div><div class="line"><span class="number">43</span>:     }</div><div class="line"><span class="number">44</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;<strong>&#x5E73;&#x5747;</strong>&#x5206;&#x914D;&#x961F;&#x5217;&#x7B56;&#x7565;&#x3002;</li>
<li>&#x7B2C; 7 &#x81F3; 25 &#x884C; &#xFF1A;&#x53C2;&#x6570;&#x6821;&#x9A8C;&#x3002;</li>
<li>&#x7B2C; 26 &#x81F3; 36 &#x884C; &#xFF1A;&#x5E73;&#x5747;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7B2C; 27 &#x884C; &#xFF1A;<code>index</code> &#xFF1A;&#x5F53;&#x524D; <code>Consumer</code> &#x5728;&#x6D88;&#x8D39;&#x96C6;&#x7FA4;&#x91CC;&#x662F;&#x7B2C;&#x51E0;&#x4E2A;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x5BF9;&#x4F20;&#x5165;&#x7684; <code>cidAll</code> &#x53C2;&#x6570;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x7684;&#x539F;&#x56E0;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x6392;&#x5E8F;&#xFF0C;<code>Consumer</code> &#x5728;&#x672C;&#x5730;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684; <code>index</code> &#x65E0;&#x6CD5;&#x4E00;&#x81F4;&#xFF0C;&#x5F71;&#x54CD;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x3002;</li>
<li>&#x7B2C; 28 &#x884C; &#xFF1A;<code>mod</code> &#xFF1A;&#x4F59;&#x6570;&#xFF0C;&#x5373;&#x591A;&#x5C11;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65E0;&#x6CD5;&#x5E73;&#x5747;&#x5206;&#x914D;&#x3002;</li>
<li>&#x7B2C; 29 &#x81F3; 31 &#x884C; &#xFF1A;<code>averageSize</code> &#xFF1A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x7B80;&#x5316;&#x6210; <code>(mod &gt; 0 &amp;&amp; index &lt; mod ? mqAll.size() / cidAll.size() + 1 : mqAll.size() / cidAll.size())</code>&#x3002;<ul>
<li><code>[ 0, mod )</code> &#xFF1A;<code>mqAll.size() / cidAll.size() + 1</code>&#x3002;&#x524D;&#x9762; <code>mod</code> &#x4E2A; <code>Consumer</code> &#x5E73;&#x5206;&#x4F59;&#x6570;&#xFF0C;&#x591A;&#x83B7;&#x5F97; 1 &#x4E2A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li><code>[ mod, cidAll.size() )</code> &#xFF1A;<code>mqAll.size() / cidAll.size()</code>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 32 &#x884C; &#xFF1A;<code>startIndex</code> &#xFF1A;<code>Consumer</code> &#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 33 &#x884C; &#xFF1A;<code>range</code> &#xFF1A;&#x5206;&#x914D;&#x961F;&#x5217;&#x6570;&#x91CF;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x8981; <code>Math#min(...)</code> &#x7684;&#x539F;&#x56E0;&#xFF1A;&#x5F53; <code>mqAll.size() &lt;= cidAll.size()</code> &#x65F6;&#xFF0C;&#x6700;&#x540E;&#x51E0;&#x4E2A; <code>Consumer</code> &#x5206;&#x914D;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7B2C; 34 &#x81F3; 36 &#x884C; &#xFF1A;&#x751F;&#x6210;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7ED3;&#x679C;&#x3002;</li>
</ul>
</li>
<li>&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</li>
</ul>
<p>&#x56FA;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x957F;&#x5EA6;&#x4E3A;<strong>4</strong>&#x3002;</p>
<table>
<thead>
<tr>
<th></th>
<th>Consumer <em> 2 </em>&#x53EF;&#x4EE5;&#x6574;&#x9664;*</th>
<th>Consumer <em> 3 </em>&#x4E0D;&#x53EF;&#x6574;&#x9664;*</th>
<th>Consumer <em> 5 </em>&#x65E0;&#x6CD5;&#x90FD;&#x5206;&#x914D;*</th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x6D88;&#x606F;&#x961F;&#x5217;[0]</td>
<td>Consumer[0]</td>
<td>Consumer[0]</td>
<td>Consumer[0]</td>
</tr>
<tr>
<td>&#x6D88;&#x606F;&#x961F;&#x5217;[1]</td>
<td>Consumer[0]</td>
<td>Consumer[0]</td>
<td>Consumer[1]</td>
</tr>
<tr>
<td>&#x6D88;&#x606F;&#x961F;&#x5217;[2]</td>
<td>Consumer[1]</td>
<td>Consumer[1]</td>
<td>Consumer[2]</td>
</tr>
<tr>
<td>&#x6D88;&#x606F;&#x961F;&#x5217;[3]</td>
<td>Consumer[1]</td>
<td>Consumer[2]</td>
<td>Consumer[3]</td>
</tr>
</tbody>
</table>
<h4 id="AllocateMessageQueueByMachineRoom"><a href="#AllocateMessageQueueByMachineRoom" class="headerlink" title="AllocateMessageQueueByMachineRoom"></a>AllocateMessageQueueByMachineRoom</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllocateMessageQueueByMachineRoom</span> <span class="keyword">implements</span> <span class="title">AllocateMessageQueueStrategy</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">/**</span></div><div class="line"> 3:      * &#x6D88;&#x8D39;&#x8005;&#x6D88;&#x8D39;brokerName&#x96C6;&#x5408;</div><div class="line"> 4:      */</div><div class="line"> <span class="number">5</span>:     <span class="keyword">private</span> Set&lt;String&gt; consumeridcs;</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">8</span>:     <span class="function"><span class="keyword">public</span> List&lt;MessageQueue&gt; <span class="title">allocate</span><span class="params">(String consumerGroup, String currentCID, List&lt;MessageQueue&gt; mqAll,</span></span></div><div class="line"> <span class="number">9</span>:         List&lt;String&gt; cidAll) {</div><div class="line"><span class="number">10</span>:         <span class="comment">// &#x53C2;&#x6570;&#x6821;&#x9A8C;</span></div><div class="line"><span class="number">11</span>:         List&lt;MessageQueue&gt; result = <span class="keyword">new</span> ArrayList&lt;MessageQueue&gt;();</div><div class="line"><span class="number">12</span>:         <span class="keyword">int</span> currentIndex = cidAll.indexOf(currentCID);</div><div class="line"><span class="number">13</span>:         <span class="keyword">if</span> (currentIndex &lt; <span class="number">0</span>) {</div><div class="line"><span class="number">14</span>:             <span class="keyword">return</span> result;</div><div class="line"><span class="number">15</span>:         }</div><div class="line"><span class="number">16</span>:         <span class="comment">// &#x8BA1;&#x7B97;&#x7B26;&#x5408;&#x5F53;&#x524D;&#x914D;&#x7F6E;&#x7684;&#x6D88;&#x8D39;&#x8005;&#x6570;&#x7EC4;(&apos;consumeridcs&apos;)&#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"><span class="number">17</span>:         List&lt;MessageQueue&gt; premqAll = <span class="keyword">new</span> ArrayList&lt;MessageQueue&gt;();</div><div class="line"><span class="number">18</span>:         <span class="keyword">for</span> (MessageQueue mq : mqAll) {</div><div class="line"><span class="number">19</span>:             String[] temp = mq.getBrokerName().split(<span class="string">&quot;@&quot;</span>);</div><div class="line"><span class="number">20</span>:             <span class="keyword">if</span> (temp.length == <span class="number">2</span> &amp;&amp; consumeridcs.contains(temp[<span class="number">0</span>])) {</div><div class="line"><span class="number">21</span>:                 premqAll.add(mq);</div><div class="line"><span class="number">22</span>:             }</div><div class="line"><span class="number">23</span>:         }</div><div class="line"><span class="number">24</span>:         <span class="comment">// &#x5E73;&#x5747;&#x5206;&#x914D;</span></div><div class="line"><span class="number">25</span>:         <span class="keyword">int</span> mod = premqAll.size() / cidAll.size();</div><div class="line"><span class="number">26</span>:         <span class="keyword">int</span> rem = premqAll.size() % cidAll.size();</div><div class="line"><span class="number">27</span>:         <span class="keyword">int</span> startIndex = mod * currentIndex;</div><div class="line"><span class="number">28</span>:         <span class="keyword">int</span> endIndex = startIndex + mod;</div><div class="line"><span class="number">29</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = startIndex; i &lt; endIndex; i++) {</div><div class="line"><span class="number">30</span>:             result.add(mqAll.get(i));</div><div class="line"><span class="number">31</span>:         }</div><div class="line"><span class="number">32</span>:         <span class="keyword">if</span> (rem &gt; currentIndex) {</div><div class="line"><span class="number">33</span>:             result.add(premqAll.get(currentIndex + mod * cidAll.size()));</div><div class="line"><span class="number">34</span>:         }</div><div class="line"><span class="number">35</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">36</span>:     }</div><div class="line"><span class="number">37</span>: </div><div class="line"><span class="number">38</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">39</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">40</span>:         <span class="keyword">return</span> <span class="string">&quot;MACHINE_ROOM&quot;</span>;</div><div class="line"><span class="number">41</span>:     }</div><div class="line"><span class="number">42</span>: </div><div class="line"><span class="number">43</span>:     <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getConsumeridcs</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">44</span>:         <span class="keyword">return</span> consumeridcs;</div><div class="line"><span class="number">45</span>:     }</div><div class="line"><span class="number">46</span>: </div><div class="line"><span class="number">47</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConsumeridcs</span><span class="params">(Set&lt;String&gt; consumeridcs)</span> </span>{</div><div class="line"><span class="number">48</span>:         <span class="keyword">this</span>.consumeridcs = consumeridcs;</div><div class="line"><span class="number">49</span>:     }</div><div class="line"><span class="number">50</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;<strong>&#x5E73;&#x5747;</strong>&#x5206;&#x914D;<strong>&#x53EF;&#x6D88;&#x8D39;&#x7684;</strong> <code>Broker</code> &#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7B2C; 7 &#x81F3; 15 &#x884C; &#xFF1A;&#x53C2;&#x6570;&#x6821;&#x9A8C;&#x3002;</li>
<li>&#x7B2C; 16 &#x81F3; 23 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;<strong>&#x53EF;&#x6D88;&#x8D39;&#x7684;</strong> <code>Broker</code> &#x5BF9;&#x5E94;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7B2C; 25 &#x81F3; 34 &#x884C; &#xFF1A;&#x5E73;&#x5747;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;&#x8BE5;<strong>&#x5E73;&#x5747;&#x5206;&#x914D;</strong>&#x65B9;&#x5F0F;&#x548C; <code>AllocateMessageQueueAveragely</code> &#x7565;&#x6709;&#x4E0D;&#x540C;&#xFF0C;&#x5176;&#x662F;&#x5C06;&#x591A;&#x4F59;&#x7684;&#x7ED3;&#x5C3E;&#x90E8;&#x5206;&#x5206;&#x914D;&#x7ED9;&#x524D; <code>rem</code> &#x4E2A; <code>Consumer</code>&#x3002;</li>
<li>&#x7591;&#x95EE;&#xFF1A;<em>&#x4F7F;&#x7528;&#x8BE5;&#x5206;&#x914D;&#x7B56;&#x7565;&#x65F6;&#xFF0C;<code>Consumer</code> &#x548C; <code>Broker</code> &#x5206;&#x914D;&#x9700;&#x8981;&#x600E;&#x4E48;&#x914D;&#x7F6E;</em>&#x3002;&#x1F608;&#x7B49;&#x7814;&#x7A76;<strong>&#x4E3B;&#x4ECE;</strong>&#x76F8;&#x5173;&#x6E90;&#x7801;&#x65F6;&#xFF0C;&#x4ED4;&#x7EC6;&#x8003;&#x8651;&#x4E0B;&#x3002;</li>
</ul>
<h4 id="AllocateMessageQueueAveragelyByCircle"><a href="#AllocateMessageQueueAveragelyByCircle" class="headerlink" title="AllocateMessageQueueAveragelyByCircle"></a>AllocateMessageQueueAveragelyByCircle</h4> <figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllocateMessageQueueAveragelyByCircle</span> <span class="keyword">implements</span> <span class="title">AllocateMessageQueueStrategy</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> <span class="keyword">final</span> Logger log = ClientLogger.getLog();</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> List&lt;MessageQueue&gt; <span class="title">allocate</span><span class="params">(String consumerGroup, String currentCID, List&lt;MessageQueue&gt; mqAll,</span></span></div><div class="line"> <span class="number">6</span>:         List&lt;String&gt; cidAll) {</div><div class="line"> <span class="number">7</span>:         <span class="comment">// &#x6821;&#x9A8C;&#x53C2;&#x6570;&#x662F;&#x5426;&#x6B63;&#x786E;</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">if</span> (currentCID == <span class="keyword">null</span> || currentCID.length() &lt; <span class="number">1</span>) {</div><div class="line"> <span class="number">9</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;currentCID is empty&quot;</span>);</div><div class="line"><span class="number">10</span>:         }</div><div class="line"><span class="number">11</span>:         <span class="keyword">if</span> (mqAll == <span class="keyword">null</span> || mqAll.isEmpty()) {</div><div class="line"><span class="number">12</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;mqAll is null or mqAll empty&quot;</span>);</div><div class="line"><span class="number">13</span>:         }</div><div class="line"><span class="number">14</span>:         <span class="keyword">if</span> (cidAll == <span class="keyword">null</span> || cidAll.isEmpty()) {</div><div class="line"><span class="number">15</span>:             <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;cidAll is null or cidAll empty&quot;</span>);</div><div class="line"><span class="number">16</span>:         }</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:         List&lt;MessageQueue&gt; result = <span class="keyword">new</span> ArrayList&lt;MessageQueue&gt;();</div><div class="line"><span class="number">19</span>:         <span class="keyword">if</span> (!cidAll.contains(currentCID)) {</div><div class="line"><span class="number">20</span>:             log.info(<span class="string">&quot;[BUG] ConsumerGroup: {} The consumerId: {} not in cidAll: {}&quot;</span>,</div><div class="line"><span class="number">21</span>:                 consumerGroup,</div><div class="line"><span class="number">22</span>:                 currentCID,</div><div class="line"><span class="number">23</span>:                 cidAll);</div><div class="line"><span class="number">24</span>:             <span class="keyword">return</span> result;</div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>:         <span class="comment">// &#x73AF;&#x72B6;&#x5206;&#x914D;</span></div><div class="line"><span class="number">28</span>:         <span class="keyword">int</span> index = cidAll.indexOf(currentCID);</div><div class="line"><span class="number">29</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = index; i &lt; mqAll.size(); i++) {</div><div class="line"><span class="number">30</span>:             <span class="keyword">if</span> (i % cidAll.size() == index) {</div><div class="line"><span class="number">31</span>:                 result.add(mqAll.get(i));</div><div class="line"><span class="number">32</span>:             }</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">35</span>:     }</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">38</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">39</span>:         <span class="keyword">return</span> <span class="string">&quot;AVG_BY_CIRCLE&quot;</span>;</div><div class="line"><span class="number">40</span>:     }</div><div class="line"><span class="number">41</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x73AF;&#x72B6;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
<h4 id="AllocateMessageQueueByConfig"><a href="#AllocateMessageQueueByConfig" class="headerlink" title="AllocateMessageQueueByConfig"></a>AllocateMessageQueueByConfig</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllocateMessageQueueByConfig</span> <span class="keyword">implements</span> <span class="title">AllocateMessageQueueStrategy</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> List&lt;MessageQueue&gt; messageQueueList;</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> List&lt;MessageQueue&gt; <span class="title">allocate</span><span class="params">(String consumerGroup, String currentCID, List&lt;MessageQueue&gt; mqAll,</span></span></div><div class="line"> <span class="number">6</span>:         List&lt;String&gt; cidAll) {</div><div class="line"> <span class="number">7</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.messageQueueList;</div><div class="line"> <span class="number">8</span>:     }</div><div class="line"> <span class="number">9</span>: </div><div class="line"><span class="number">10</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">11</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">12</span>:         <span class="keyword">return</span> <span class="string">&quot;CONFIG&quot;</span>;</div><div class="line"><span class="number">13</span>:     }</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:     <span class="function"><span class="keyword">public</span> List&lt;MessageQueue&gt; <span class="title">getMessageQueueList</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">16</span>:         <span class="keyword">return</span> messageQueueList;</div><div class="line"><span class="number">17</span>:     }</div><div class="line"><span class="number">18</span>: </div><div class="line"><span class="number">19</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessageQueueList</span><span class="params">(List&lt;MessageQueue&gt; messageQueueList)</span> </span>{</div><div class="line"><span class="number">20</span>:         <span class="keyword">this</span>.messageQueueList = messageQueueList;</div><div class="line"><span class="number">21</span>:     }</div><div class="line"><span class="number">22</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5206;&#x914D;<strong>&#x914D;&#x7F6E;&#x7684;</strong>&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
<li>&#x7591;&#x95EE; &#xFF1A;<em>&#x8BE5;&#x5206;&#x914D;&#x7B56;&#x7565;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x3002;</em></li>
</ul>
<h1 id="5&#x3001;PushConsumer-&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x8BFB;&#x53D6;"><a href="#5&#x3001;PushConsumer-&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x8BFB;&#x53D6;" class="headerlink" title="5&#x3001;PushConsumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x8BFB;&#x53D6;"></a>5&#x3001;PushConsumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x8BFB;&#x53D6;</h1><h2 id="RebalancePushImpl-computePullFromWhere-&#x2026;"><a href="#RebalancePushImpl-computePullFromWhere-&#x2026;" class="headerlink" title="RebalancePushImpl#computePullFromWhere(&#x2026;)"></a>RebalancePushImpl#computePullFromWhere(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">computePullFromWhere</span><span class="params">(MessageQueue mq)</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">long</span> result = -<span class="number">1</span>;</div><div class="line"> <span class="number">3</span>:     <span class="keyword">final</span> ConsumeFromWhere consumeFromWhere = <span class="keyword">this</span>.defaultMQPushConsumerImpl.getDefaultMQPushConsumer().getConsumeFromWhere();</div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> OffsetStore offsetStore = <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore();</div><div class="line"> <span class="number">5</span>:     <span class="keyword">switch</span> (consumeFromWhere) {</div><div class="line"> <span class="number">6</span>:         <span class="keyword">case</span> CONSUME_FROM_LAST_OFFSET_AND_FROM_MIN_WHEN_BOOT_FIRST: <span class="comment">// &#x5E9F;&#x5F03;</span></div><div class="line"> <span class="number">7</span>:         <span class="keyword">case</span> CONSUME_FROM_MIN_OFFSET: <span class="comment">// &#x5E9F;&#x5F03;</span></div><div class="line"> <span class="number">8</span>:         <span class="keyword">case</span> CONSUME_FROM_MAX_OFFSET: <span class="comment">// &#x5E9F;&#x5F03;</span></div><div class="line"> <span class="number">9</span>:         <span class="keyword">case</span> CONSUME_FROM_LAST_OFFSET: {</div><div class="line"><span class="number">10</span>:             <span class="keyword">long</span> lastOffset = offsetStore.readOffset(mq, ReadOffsetType.READ_FROM_STORE);</div><div class="line"><span class="number">11</span>:             <span class="keyword">if</span> (lastOffset &gt;= <span class="number">0</span>) {</div><div class="line"><span class="number">12</span>:                 result = lastOffset;</div><div class="line"><span class="number">13</span>:             }</div><div class="line"><span class="number">14</span>:             <span class="comment">// First start,no offset</span></div><div class="line"><span class="number">15</span>:             <span class="keyword">else</span> <span class="keyword">if</span> (-<span class="number">1</span> == lastOffset) {</div><div class="line"><span class="number">16</span>:                 <span class="keyword">if</span> (mq.getTopic().startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {</div><div class="line"><span class="number">17</span>:                     result = <span class="number">0L</span>;</div><div class="line"><span class="number">18</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">19</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">20</span>:                         result = <span class="keyword">this</span>.mQClientFactory.getMQAdminImpl().maxOffset(mq);</div><div class="line"><span class="number">21</span>:                     } <span class="keyword">catch</span> (MQClientException e) {</div><div class="line"><span class="number">22</span>:                         result = -<span class="number">1</span>;</div><div class="line"><span class="number">23</span>:                     }</div><div class="line"><span class="number">24</span>:                 }</div><div class="line"><span class="number">25</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">26</span>:                 result = -<span class="number">1</span>;</div><div class="line"><span class="number">27</span>:             }</div><div class="line"><span class="number">28</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">29</span>:         }</div><div class="line"><span class="number">30</span>:         <span class="keyword">case</span> CONSUME_FROM_FIRST_OFFSET: {</div><div class="line"><span class="number">31</span>:             <span class="keyword">long</span> lastOffset = offsetStore.readOffset(mq, ReadOffsetType.READ_FROM_STORE);</div><div class="line"><span class="number">32</span>:             <span class="keyword">if</span> (lastOffset &gt;= <span class="number">0</span>) {</div><div class="line"><span class="number">33</span>:                 result = lastOffset;</div><div class="line"><span class="number">34</span>:             } <span class="keyword">else</span> <span class="keyword">if</span> (-<span class="number">1</span> == lastOffset) {</div><div class="line"><span class="number">35</span>:                 result = <span class="number">0L</span>;</div><div class="line"><span class="number">36</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">37</span>:                 result = -<span class="number">1</span>;</div><div class="line"><span class="number">38</span>:             }</div><div class="line"><span class="number">39</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">40</span>:         }</div><div class="line"><span class="number">41</span>:         <span class="keyword">case</span> CONSUME_FROM_TIMESTAMP: {</div><div class="line"><span class="number">42</span>:             <span class="keyword">long</span> lastOffset = offsetStore.readOffset(mq, ReadOffsetType.READ_FROM_STORE);</div><div class="line"><span class="number">43</span>:             <span class="keyword">if</span> (lastOffset &gt;= <span class="number">0</span>) {</div><div class="line"><span class="number">44</span>:                 result = lastOffset;</div><div class="line"><span class="number">45</span>:             } <span class="keyword">else</span> <span class="keyword">if</span> (-<span class="number">1</span> == lastOffset) {</div><div class="line"><span class="number">46</span>:                 <span class="keyword">if</span> (mq.getTopic().startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {</div><div class="line"><span class="number">47</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">48</span>:                         result = <span class="keyword">this</span>.mQClientFactory.getMQAdminImpl().maxOffset(mq);</div><div class="line"><span class="number">49</span>:                     } <span class="keyword">catch</span> (MQClientException e) {</div><div class="line"><span class="number">50</span>:                         result = -<span class="number">1</span>;</div><div class="line"><span class="number">51</span>:                     }</div><div class="line"><span class="number">52</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">53</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">54</span>:                         <span class="keyword">long</span> timestamp = UtilAll.parseDate(<span class="keyword">this</span>.defaultMQPushConsumerImpl.getDefaultMQPushConsumer().getConsumeTimestamp(),</div><div class="line"><span class="number">55</span>:                             UtilAll.YYYY_MMDD_HHMMSS).getTime();</div><div class="line"><span class="number">56</span>:                         result = <span class="keyword">this</span>.mQClientFactory.getMQAdminImpl().searchOffset(mq, timestamp);</div><div class="line"><span class="number">57</span>:                     } <span class="keyword">catch</span> (MQClientException e) {</div><div class="line"><span class="number">58</span>:                         result = -<span class="number">1</span>;</div><div class="line"><span class="number">59</span>:                     }</div><div class="line"><span class="number">60</span>:                 }</div><div class="line"><span class="number">61</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">62</span>:                 result = -<span class="number">1</span>;</div><div class="line"><span class="number">63</span>:             }</div><div class="line"><span class="number">64</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">65</span>:         }</div><div class="line"><span class="number">66</span>: </div><div class="line"><span class="number">67</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">68</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">69</span>:     }</div><div class="line"><span class="number">70</span>: </div><div class="line"><span class="number">71</span>:     <span class="keyword">return</span> result;</div><div class="line"><span class="number">72</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x4F4D;&#x7F6E;&#x3002;</li>
<li><code>PushConsumer</code> &#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6709;&#x4E09;&#x79CD;&#x9009;&#x9879;&#xFF1A;<ul>
<li><code>CONSUME_FROM_LAST_OFFSET</code> &#xFF1A;&#x7B2C; 6 &#x81F3; 29 &#x884C; &#xFF1A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6D88;&#x8D39;&#x96C6;&#x7FA4;&#x7B2C;&#x4E00;&#x6B21;&#x542F;&#x52A8;&#x4ECE;<strong>&#x961F;&#x5217;&#x7684;&#x6700;&#x540E;&#x4F4D;&#x7F6E;</strong>&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x3002;<strong>&#x540E;&#x7EED;&#x518D;&#x542F;&#x52A8;&#x63A5;&#x7740;&#x4E0A;&#x6B21;&#x6D88;&#x8D39;&#x7684;&#x8FDB;&#x5EA6;&#x5F00;&#x59CB;&#x6D88;&#x8D39;</strong>&#x3002;</li>
<li><code>CONSUME_FROM_FIRST_OFFSET</code> &#xFF1A;&#x7B2C; 30 &#x81F3; 40 &#x884C; &#xFF1A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6D88;&#x8D39;&#x96C6;&#x7FA4;&#x7B2C;&#x4E00;&#x6B21;&#x542F;&#x52A8;&#x4ECE;&#x961F;&#x5217;&#x7684;<strong>&#x6700;&#x524D;&#x4F4D;&#x7F6E;</strong>&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x3002;<strong>&#x540E;&#x7EED;&#x518D;&#x542F;&#x52A8;&#x63A5;&#x7740;&#x4E0A;&#x6B21;&#x6D88;&#x8D39;&#x7684;&#x8FDB;&#x5EA6;&#x5F00;&#x59CB;&#x6D88;&#x8D39;</strong>&#x3002;</li>
<li><code>CONSUME_FROM_TIMESTAMP</code> &#xFF1A;&#x7B2C; 41 &#x81F3; 65 &#x884C; &#xFF1A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6D88;&#x8D39;&#x96C6;&#x7FA4;&#x7B2C;&#x4E00;&#x6B21;&#x542F;&#x52A8;&#x4ECE;<strong>&#x6307;&#x5B9A;&#x65F6;&#x95F4;&#x70B9;</strong>&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x3002;<strong>&#x540E;&#x7EED;&#x518D;&#x542F;&#x52A8;&#x63A5;&#x7740;&#x4E0A;&#x6B21;&#x6D88;&#x8D39;&#x7684;&#x8FDB;&#x5EA6;&#x5F00;&#x59CB;&#x6D88;&#x8D39;</strong>&#x3002;</li>
</ul>
</li>
</ul>
<h2 id="PullConsumer-RebalancePullImpl-computePullFromWhere-&#x2026;"><a href="#PullConsumer-RebalancePullImpl-computePullFromWhere-&#x2026;" class="headerlink" title="[PullConsumer] RebalancePullImpl#computePullFromWhere(&#x2026;)"></a><code>[PullConsumer]</code> RebalancePullImpl#computePullFromWhere(&#x2026;)</h2><p>&#x6682;&#x65F6;&#x8DF3;&#x8FC7;&#x3002;&#x1F608;</p>
<h1 id="6&#x3001;PushConsumer-&#x62C9;&#x53D6;&#x6D88;&#x606F;"><a href="#6&#x3001;PushConsumer-&#x62C9;&#x53D6;&#x6D88;&#x606F;" class="headerlink" title="6&#x3001;PushConsumer &#x62C9;&#x53D6;&#x6D88;&#x606F;"></a>6&#x3001;PushConsumer &#x62C9;&#x53D6;&#x6D88;&#x606F;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/05.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/05.png" alt="DefaultMQPushConsumerImpl&#x62C9;&#x53D6;&#x6D88;&#x606F;" class="ui centered image"></a></p>
<h2 id="PullMessageService"><a href="#PullMessageService" class="headerlink" title="PullMessageService"></a>PullMessageService</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PullMessageService</span> <span class="keyword">extends</span> <span class="title">ServiceThread</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="keyword">private</span> <span class="keyword">final</span> Logger log = ClientLogger.getLog();</div><div class="line">  <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line">  4:      * &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x961F;&#x5217;</div><div class="line">  5:      */</div><div class="line">  <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">final</span> LinkedBlockingQueue&lt;PullRequest&gt; pullRequestQueue = <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;();</div><div class="line">  <span class="number">7</span>:     <span class="comment">/**</span></div><div class="line">  8:      * MQClient&#x5BF9;&#x8C61;</div><div class="line">  9:      */</div><div class="line"> <span class="number">10</span>:     <span class="keyword">private</span> <span class="keyword">final</span> MQClientInstance mQClientFactory;</div><div class="line"> <span class="number">11</span>:     <span class="comment">/**</span></div><div class="line"> 12:      * &#x5B9A;&#x65F6;&#x5668;&#x3002;&#x7528;&#x4E8E;&#x5EF6;&#x8FDF;&#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;</div><div class="line"> 13:      */</div><div class="line"> <span class="number">14</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ScheduledExecutorService scheduledExecutorService = Executors</div><div class="line"> <span class="number">15</span>:         .newSingleThreadScheduledExecutor(<span class="keyword">new</span> ThreadFactory() {</div><div class="line"> <span class="number">16</span>:             <span class="meta">@Override</span></div><div class="line"> <span class="number">17</span>:             <span class="function"><span class="keyword">public</span> Thread <span class="title">newThread</span><span class="params">(Runnable r)</span> </span>{</div><div class="line"> <span class="number">18</span>:                 <span class="keyword">return</span> <span class="keyword">new</span> Thread(r, <span class="string">&quot;PullMessageServiceScheduledThread&quot;</span>);</div><div class="line"> <span class="number">19</span>:             }</div><div class="line"> <span class="number">20</span>:         });</div><div class="line"> <span class="number">21</span>: </div><div class="line"> <span class="number">22</span>:     <span class="function"><span class="keyword">public</span> <span class="title">PullMessageService</span><span class="params">(MQClientInstance mQClientFactory)</span> </span>{</div><div class="line"> <span class="number">23</span>:         <span class="keyword">this</span>.mQClientFactory = mQClientFactory;</div><div class="line"> <span class="number">24</span>:     }</div><div class="line"> <span class="number">25</span>: </div><div class="line"> <span class="number">26</span>:     <span class="comment">/**</span></div><div class="line"> 27:      * &#x6267;&#x884C;&#x5EF6;&#x8FDF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 28:      *</div><div class="line"> 29:      * <span class="doctag">@param</span> pullRequest &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 30:      * <span class="doctag">@param</span> timeDelay &#x5EF6;&#x8FDF;&#x65F6;&#x957F;</div><div class="line"> 31:      */</div><div class="line"> <span class="number">32</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executePullRequestLater</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest, <span class="keyword">final</span> <span class="keyword">long</span> timeDelay)</span> </span>{</div><div class="line"> <span class="number">33</span>:         <span class="keyword">this</span>.scheduledExecutorService.schedule(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">34</span>: </div><div class="line"> <span class="number">35</span>:             <span class="meta">@Override</span></div><div class="line"> <span class="number">36</span>:             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">37</span>:                 PullMessageService.<span class="keyword">this</span>.executePullRequestImmediately(pullRequest);</div><div class="line"> <span class="number">38</span>:             }</div><div class="line"> <span class="number">39</span>:         }, timeDelay, TimeUnit.MILLISECONDS);</div><div class="line"> <span class="number">40</span>:     }</div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:     <span class="comment">/**</span></div><div class="line"> 43:      * &#x6267;&#x884C;&#x7ACB;&#x5373;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 44:      *</div><div class="line"> 45:      * <span class="doctag">@param</span> pullRequest &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 46:      */</div><div class="line"> <span class="number">47</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executePullRequestImmediately</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line"> <span class="number">48</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">49</span>:             <span class="keyword">this</span>.pullRequestQueue.put(pullRequest);</div><div class="line"> <span class="number">50</span>:         } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">51</span>:             log.error(<span class="string">&quot;executePullRequestImmediately pullRequestQueue.put&quot;</span>, e);</div><div class="line"> <span class="number">52</span>:         }</div><div class="line"> <span class="number">53</span>:     }</div><div class="line"> <span class="number">54</span>: </div><div class="line"> <span class="number">55</span>:     <span class="comment">/**</span></div><div class="line"> 56:      * &#x6267;&#x884C;&#x5EF6;&#x8FDF;&#x4EFB;&#x52A1;</div><div class="line"> 57:      *</div><div class="line"> 58:      * <span class="doctag">@param</span> r &#x4EFB;&#x52A1;</div><div class="line"> 59:      * <span class="doctag">@param</span> timeDelay &#x5EF6;&#x8FDF;&#x65F6;&#x957F;</div><div class="line"> 60:      */</div><div class="line"> <span class="number">61</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeTaskLater</span><span class="params">(<span class="keyword">final</span> Runnable r, <span class="keyword">final</span> <span class="keyword">long</span> timeDelay)</span> </span>{</div><div class="line"> <span class="number">62</span>:         <span class="keyword">this</span>.scheduledExecutorService.schedule(r, timeDelay, TimeUnit.MILLISECONDS);</div><div class="line"> <span class="number">63</span>:     }</div><div class="line"> <span class="number">64</span>: </div><div class="line"> <span class="number">65</span>:     <span class="function"><span class="keyword">public</span> ScheduledExecutorService <span class="title">getScheduledExecutorService</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">66</span>:         <span class="keyword">return</span> scheduledExecutorService;</div><div class="line"> <span class="number">67</span>:     }</div><div class="line"> <span class="number">68</span>: </div><div class="line"> <span class="number">69</span>:     <span class="comment">/**</span></div><div class="line"> 70:      * &#x62C9;&#x53D6;&#x6D88;&#x606F;</div><div class="line"> 71:      *</div><div class="line"> 72:      * <span class="doctag">@param</span> pullRequest &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 73:      */</div><div class="line"> <span class="number">74</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pullMessage</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line"> <span class="number">75</span>:         <span class="keyword">final</span> MQConsumerInner consumer = <span class="keyword">this</span>.mQClientFactory.selectConsumer(pullRequest.getConsumerGroup());</div><div class="line"> <span class="number">76</span>:         <span class="keyword">if</span> (consumer != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">77</span>:             DefaultMQPushConsumerImpl impl = (DefaultMQPushConsumerImpl) consumer;</div><div class="line"> <span class="number">78</span>:             impl.pullMessage(pullRequest);</div><div class="line"> <span class="number">79</span>:         } <span class="keyword">else</span> {</div><div class="line"> <span class="number">80</span>:             log.warn(<span class="string">&quot;No matched consumer for the PullRequest {}, drop it&quot;</span>, pullRequest);</div><div class="line"> <span class="number">81</span>:         }</div><div class="line"> <span class="number">82</span>:     }</div><div class="line"> <span class="number">83</span>: </div><div class="line"> <span class="number">84</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">85</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">86</span>:         log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"> <span class="number">87</span>: </div><div class="line"> <span class="number">88</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"> <span class="number">89</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">90</span>:                 PullRequest pullRequest = <span class="keyword">this</span>.pullRequestQueue.take();</div><div class="line"> <span class="number">91</span>:                 <span class="keyword">if</span> (pullRequest != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">92</span>:                     <span class="keyword">this</span>.pullMessage(pullRequest);</div><div class="line"> <span class="number">93</span>:                 }</div><div class="line"> <span class="number">94</span>:             } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">95</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">96</span>:                 log.error(<span class="string">&quot;Pull Message Service Run Method exception&quot;</span>, e);</div><div class="line"> <span class="number">97</span>:             }</div><div class="line"> <span class="number">98</span>:         }</div><div class="line"> <span class="number">99</span>: </div><div class="line"><span class="number">100</span>:         log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">101</span>:     }</div><div class="line"><span class="number">102</span>: </div><div class="line"><span class="number">103</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">104</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">105</span>:         <span class="keyword">return</span> PullMessageService.class.getSimpleName();</div><div class="line"><span class="number">106</span>:     }</div><div class="line"><span class="number">107</span>: </div><div class="line"><span class="number">108</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x670D;&#x52A1;&#xFF0C;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4E0D;&#x65AD;&#x4ECE; <code>Broker</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x4EFB;&#x52A1;&#x5230; <code>ConsumeMessageService</code>&#x3002;</li>
<li><code>#executePullRequestLater(...)</code> &#xFF1A;&#x7B2C; 26 &#x81F3; 40 &#x884C; &#xFF1A; &#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li><code>#executePullRequestImmediately(...)</code> &#xFF1A;&#x7B2C; 42 &#x81F3; 53 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li><code>#executeTaskLater(...)</code> &#xFF1A;&#x7B2C; 55 &#x81F3; 63 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;&#x4EFB;&#x52A1;</strong>&#x3002;</li>
<li><code>#pullMessage(...)</code> &#xFF1A;&#x7B2C; 69 &#x81F3; 82 &#x884C; &#xFF1A;&#x6267;&#x884C;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x903B;&#x8F91;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#defaultmqpushconsumerimplpullmessage">DefaultMQPushConsumerImpl#pullMessage(&#x2026;)</a>&#x3002;</li>
<li><code>#run(...)</code> &#xFF1A;&#x7B2C; 84 &#x81F3; 101 &#x884C; &#xFF1A;&#x5FAA;&#x73AF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x961F;&#x5217;( <code>pullRequestQueue</code> )&#xFF0C;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x3002;</li>
</ul>
<h2 id="DefaultMQPushConsumerImpl-pullMessage-&#x2026;"><a href="#DefaultMQPushConsumerImpl-pullMessage-&#x2026;" class="headerlink" title="DefaultMQPushConsumerImpl#pullMessage(&#x2026;)"></a>DefaultMQPushConsumerImpl#pullMessage(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pullMessage</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="keyword">final</span> ProcessQueue processQueue = pullRequest.getProcessQueue();</div><div class="line">  <span class="number">3</span>:     <span class="keyword">if</span> (processQueue.isDropped()) {</div><div class="line">  <span class="number">4</span>:         log.info(<span class="string">&quot;the pull request[{}] is dropped.&quot;</span>, pullRequest.toString());</div><div class="line">  <span class="number">5</span>:         <span class="keyword">return</span>;</div><div class="line">  <span class="number">6</span>:     }</div><div class="line">  <span class="number">7</span>: </div><div class="line">  <span class="number">8</span>:     <span class="comment">// &#x8BBE;&#x7F6E;&#x961F;&#x5217;&#x6700;&#x540E;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#x95F4;</span></div><div class="line">  <span class="number">9</span>:     pullRequest.getProcessQueue().setLastPullTimestamp(System.currentTimeMillis());</div><div class="line"> <span class="number">10</span>: </div><div class="line"> <span class="number">11</span>:     <span class="comment">// &#x5224;&#x65AD;consumer&#x72B6;&#x6001;&#x662F;&#x5426;&#x8FD0;&#x884C;&#x4E2D;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x5EF6;&#x8FDF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</span></div><div class="line"> <span class="number">12</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">13</span>:         <span class="keyword">this</span>.makeSureStateOK();</div><div class="line"> <span class="number">14</span>:     } <span class="keyword">catch</span> (MQClientException e) {</div><div class="line"> <span class="number">15</span>:         log.warn(<span class="string">&quot;pullMessage exception, consumer state not ok&quot;</span>, e);</div><div class="line"> <span class="number">16</span>:         <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_EXCEPTION);</div><div class="line"> <span class="number">17</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">18</span>:     }</div><div class="line"> <span class="number">19</span>: </div><div class="line"> <span class="number">20</span>:     <span class="comment">// &#x5224;&#x65AD;&#x662F;&#x5426;&#x6682;&#x505C;&#x4E2D;&#x3002;</span></div><div class="line"> <span class="number">21</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isPause()) {</div><div class="line"> <span class="number">22</span>:         log.warn(<span class="string">&quot;consumer was paused, execute pull request later. instanceName={}, group={}&quot;</span>, <span class="keyword">this</span>.defaultMQPushConsumer.getInstanceName(), <span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup());</div><div class="line"> <span class="number">23</span>:         <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_SUSPEND);</div><div class="line"> <span class="number">24</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">25</span>:     }</div><div class="line"> <span class="number">26</span>: </div><div class="line"> <span class="number">27</span>:     <span class="comment">// &#x5224;&#x65AD;&#x662F;&#x5426;&#x8D85;&#x8FC7;&#x6700;&#x5927;&#x6301;&#x6709;&#x6D88;&#x606F;&#x6570;&#x91CF;&#x3002;&#x9ED8;&#x8BA4;&#x6700;&#x5927;&#x503C;&#x4E3A;1000&#x3002;</span></div><div class="line"> <span class="number">28</span>:     <span class="keyword">long</span> size = processQueue.getMsgCount().get();</div><div class="line"> <span class="number">29</span>:     <span class="keyword">if</span> (size &gt; <span class="keyword">this</span>.defaultMQPushConsumer.getPullThresholdForQueue()) {</div><div class="line"> <span class="number">30</span>:         <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_FLOW_CONTROL); <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x3002;50ms&#x3002;</span></div><div class="line"> <span class="number">31</span>:         <span class="keyword">if</span> ((flowControlTimes1++ % <span class="number">1000</span>) == <span class="number">0</span>) {</div><div class="line"> <span class="number">32</span>:             log.warn(</div><div class="line"> <span class="number">33</span>:                 <span class="string">&quot;the consumer message buffer is full, so do flow control, minOffset={}, maxOffset={}, size={}, pullRequest={}, flowControlTimes={}&quot;</span>,</div><div class="line"> <span class="number">34</span>:                 processQueue.getMsgTreeMap().firstKey(), processQueue.getMsgTreeMap().lastKey(), size, pullRequest, flowControlTimes1);</div><div class="line"> <span class="number">35</span>:         }</div><div class="line"> <span class="number">36</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">37</span>:     }</div><div class="line"> <span class="number">38</span>: </div><div class="line"> <span class="number">39</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.consumeOrderly) { <span class="comment">// &#x5224;&#x65AD;&#x6D88;&#x606F;&#x8DE8;&#x5EA6;&#x662F;&#x5426;&#x8FC7;&#x5927;&#x3002;</span></div><div class="line"> <span class="number">40</span>:         <span class="keyword">if</span> (processQueue.getMaxSpan() &gt; <span class="keyword">this</span>.defaultMQPushConsumer.getConsumeConcurrentlyMaxSpan()) {</div><div class="line"> <span class="number">41</span>:             <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_FLOW_CONTROL); <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x3002;50ms&#x3002;</span></div><div class="line"> <span class="number">42</span>:             <span class="keyword">if</span> ((flowControlTimes2++ % <span class="number">1000</span>) == <span class="number">0</span>) {</div><div class="line"> <span class="number">43</span>:                 log.warn(</div><div class="line"> <span class="number">44</span>:                     <span class="string">&quot;the queue&apos;s messages, span too long, so do flow control, minOffset={}, maxOffset={}, maxSpan={}, pullRequest={}, flowControlTimes={}&quot;</span>,</div><div class="line"> <span class="number">45</span>:                     processQueue.getMsgTreeMap().firstKey(), processQueue.getMsgTreeMap().lastKey(), processQueue.getMaxSpan(),</div><div class="line"> <span class="number">46</span>:                     pullRequest, flowControlTimes2);</div><div class="line"> <span class="number">47</span>:             }</div><div class="line"> <span class="number">48</span>:             <span class="keyword">return</span>;</div><div class="line"> <span class="number">49</span>:         }</div><div class="line"> <span class="number">50</span>:     } <span class="keyword">else</span> { <span class="comment">// TODO &#x987A;&#x5E8F;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">51</span>:         <span class="keyword">if</span> (processQueue.isLocked()) {</div><div class="line"> <span class="number">52</span>:             <span class="keyword">if</span> (!pullRequest.isLockedFirst()) {</div><div class="line"> <span class="number">53</span>:                 <span class="keyword">final</span> <span class="keyword">long</span> offset = <span class="keyword">this</span>.rebalanceImpl.computePullFromWhere(pullRequest.getMessageQueue());</div><div class="line"> <span class="number">54</span>:                 <span class="keyword">boolean</span> brokerBusy = offset &lt; pullRequest.getNextOffset();</div><div class="line"> <span class="number">55</span>:                 log.info(<span class="string">&quot;the first time to pull message, so fix offset from broker. pullRequest: {} NewOffset: {} brokerBusy: {}&quot;</span>,</div><div class="line"> <span class="number">56</span>:                     pullRequest, offset, brokerBusy);</div><div class="line"> <span class="number">57</span>:                 <span class="keyword">if</span> (brokerBusy) {</div><div class="line"> <span class="number">58</span>:                     log.info(<span class="string">&quot;[NOTIFYME]the first time to pull message, but pull request offset larger than broker consume offset. pullRequest: {} NewOffset: {}&quot;</span>,</div><div class="line"> <span class="number">59</span>:                         pullRequest, offset);</div><div class="line"> <span class="number">60</span>:                 }</div><div class="line"> <span class="number">61</span>: </div><div class="line"> <span class="number">62</span>:                 pullRequest.setLockedFirst(<span class="keyword">true</span>);</div><div class="line"> <span class="number">63</span>:                 pullRequest.setNextOffset(offset);</div><div class="line"> <span class="number">64</span>:             }</div><div class="line"> <span class="number">65</span>:         } <span class="keyword">else</span> {</div><div class="line"> <span class="number">66</span>:             <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_EXCEPTION);</div><div class="line"> <span class="number">67</span>:             log.info(<span class="string">&quot;pull message later because not locked in broker, {}&quot;</span>, pullRequest);</div><div class="line"> <span class="number">68</span>:             <span class="keyword">return</span>;</div><div class="line"> <span class="number">69</span>:         }</div><div class="line"> <span class="number">70</span>:     }</div><div class="line"> <span class="number">71</span>: </div><div class="line"> <span class="number">72</span>:     <span class="comment">// &#x83B7;&#x53D6;Topic &#x5BF9;&#x5E94;&#x7684;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x3002;&#x82E5;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x5EF6;&#x8FDF;&#x62C9;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">73</span>:     <span class="keyword">final</span> SubscriptionData subscriptionData = <span class="keyword">this</span>.rebalanceImpl.getSubscriptionInner().get(pullRequest.getMessageQueue().getTopic());</div><div class="line"> <span class="number">74</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == subscriptionData) {</div><div class="line"> <span class="number">75</span>:         <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_EXCEPTION);</div><div class="line"> <span class="number">76</span>:         log.warn(<span class="string">&quot;find the consumer&apos;s subscription failed, {}&quot;</span>, pullRequest);</div><div class="line"> <span class="number">77</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">78</span>:     }</div><div class="line"> <span class="number">79</span>: </div><div class="line"> <span class="number">80</span>:     <span class="keyword">final</span> <span class="keyword">long</span> beginTimestamp = System.currentTimeMillis();</div><div class="line"> <span class="number">81</span>: </div><div class="line"> <span class="number">82</span>:     PullCallback pullCallback = <span class="keyword">new</span> PullCallback() {</div><div class="line"> <span class="number">83</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">84</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(PullResult pullResult)</span> </span>{</div><div class="line"> <span class="number">85</span>:             <span class="keyword">if</span> (pullResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">86</span>:                 pullResult = DefaultMQPushConsumerImpl.<span class="keyword">this</span>.pullAPIWrapper.processPullResult(pullRequest.getMessageQueue(), pullResult,</div><div class="line"> <span class="number">87</span>:                     subscriptionData);</div><div class="line"> <span class="number">88</span>: </div><div class="line"> <span class="number">89</span>:                 <span class="keyword">switch</span> (pullResult.getPullStatus()) {</div><div class="line"> <span class="number">90</span>:                     <span class="keyword">case</span> FOUND:</div><div class="line"> <span class="number">91</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</span></div><div class="line"> <span class="number">92</span>:                         <span class="keyword">long</span> prevRequestOffset = pullRequest.getNextOffset();</div><div class="line"> <span class="number">93</span>:                         pullRequest.setNextOffset(pullResult.getNextBeginOffset());</div><div class="line"> <span class="number">94</span>: </div><div class="line"> <span class="number">95</span>:                         <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"> <span class="number">96</span>:                         <span class="keyword">long</span> pullRT = System.currentTimeMillis() - beginTimestamp;</div><div class="line"> <span class="number">97</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.getConsumerStatsManager().incPullRT(pullRequest.getConsumerGroup(),</div><div class="line"> <span class="number">98</span>:                             pullRequest.getMessageQueue().getTopic(), pullRT);</div><div class="line"> <span class="number">99</span>: </div><div class="line"><span class="number">100</span>:                         <span class="keyword">long</span> firstMsgOffset = Long.MAX_VALUE;</div><div class="line"><span class="number">101</span>:                         <span class="keyword">if</span> (pullResult.getMsgFoundList() == <span class="keyword">null</span> || pullResult.getMsgFoundList().isEmpty()) {</div><div class="line"><span class="number">102</span>:                             DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">103</span>:                         } <span class="keyword">else</span> {</div><div class="line"><span class="number">104</span>:                             firstMsgOffset = pullResult.getMsgFoundList().get(<span class="number">0</span>).getQueueOffset();</div><div class="line"><span class="number">105</span>: </div><div class="line"><span class="number">106</span>:                             <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"><span class="number">107</span>:                             DefaultMQPushConsumerImpl.<span class="keyword">this</span>.getConsumerStatsManager().incPullTPS(pullRequest.getConsumerGroup(),</div><div class="line"><span class="number">108</span>:                                 pullRequest.getMessageQueue().getTopic(), pullResult.getMsgFoundList().size());</div><div class="line"><span class="number">109</span>: </div><div class="line"><span class="number">110</span>:                             <span class="comment">// &#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x5230;&#x7684;&#x6D88;&#x606F;&#x5230;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</span></div><div class="line"><span class="number">111</span>:                             <span class="keyword">boolean</span> dispathToConsume = processQueue.putMessage(pullResult.getMsgFoundList());</div><div class="line"><span class="number">112</span>: </div><div class="line"><span class="number">113</span>:                             <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">114</span>:                             DefaultMQPushConsumerImpl.<span class="keyword">this</span>.consumeMessageService.submitConsumeRequest(<span class="comment">//</span></div><div class="line"><span class="number">115</span>:                                 pullResult.getMsgFoundList(), <span class="comment">//</span></div><div class="line"><span class="number">116</span>:                                 processQueue, <span class="comment">//</span></div><div class="line"><span class="number">117</span>:                                 pullRequest.getMessageQueue(), <span class="comment">//</span></div><div class="line"><span class="number">118</span>:                                 dispathToConsume);</div><div class="line"><span class="number">119</span>: </div><div class="line"><span class="number">120</span>:                             <span class="comment">// &#x63D0;&#x4EA4;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">121</span>:                             <span class="keyword">if</span> (DefaultMQPushConsumerImpl.<span class="keyword">this</span>.defaultMQPushConsumer.getPullInterval() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">122</span>:                                 DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestLater(pullRequest,</div><div class="line"><span class="number">123</span>:                                     DefaultMQPushConsumerImpl.<span class="keyword">this</span>.defaultMQPushConsumer.getPullInterval());</div><div class="line"><span class="number">124</span>:                             } <span class="keyword">else</span> {</div><div class="line"><span class="number">125</span>:                                 DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">126</span>:                             }</div><div class="line"><span class="number">127</span>:                         }</div><div class="line"><span class="number">128</span>: </div><div class="line"><span class="number">129</span>:                         <span class="comment">// &#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x5C0F;&#x4E8E;&#x4E0A;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E; &#x6216;&#x8005; &#x7B2C;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x5C0F;&#x4E8E;&#x4E0A;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF0C;&#x5219;&#x5224;&#x5B9A;&#x4E3A;BUG&#xFF0C;&#x8F93;&#x51FA;log</span></div><div class="line"><span class="number">130</span>:                         <span class="keyword">if</span> (pullResult.getNextBeginOffset() &lt; prevRequestOffset<span class="comment">//</span></div><div class="line"><span class="number">131</span>:                             || firstMsgOffset &lt; prevRequestOffset) {</div><div class="line"><span class="number">132</span>:                             log.warn(</div><div class="line"><span class="number">133</span>:                                 <span class="string">&quot;[BUG] pull message result maybe data wrong, nextBeginOffset: {} firstMsgOffset: {} prevRequestOffset: {}&quot;</span>, <span class="comment">//</span></div><div class="line"><span class="number">134</span>:                                 pullResult.getNextBeginOffset(), <span class="comment">//</span></div><div class="line"><span class="number">135</span>:                                 firstMsgOffset, <span class="comment">//</span></div><div class="line"><span class="number">136</span>:                                 prevRequestOffset);</div><div class="line"><span class="number">137</span>:                         }</div><div class="line"><span class="number">138</span>: </div><div class="line"><span class="number">139</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">140</span>:                     <span class="keyword">case</span> NO_NEW_MSG:</div><div class="line"><span class="number">141</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">142</span>:                         pullRequest.setNextOffset(pullResult.getNextBeginOffset());</div><div class="line"><span class="number">143</span>: </div><div class="line"><span class="number">144</span>:                         <span class="comment">// &#x6301;&#x4E45;&#x5316;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">145</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.correctTagsOffset(pullRequest);</div><div class="line"><span class="number">146</span>: </div><div class="line"><span class="number">147</span>:                         <span class="comment">// &#x7ACB;&#x5373;&#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">148</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">149</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">150</span>:                     <span class="keyword">case</span> NO_MATCHED_MSG:</div><div class="line"><span class="number">151</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">152</span>:                         pullRequest.setNextOffset(pullResult.getNextBeginOffset());</div><div class="line"><span class="number">153</span>: </div><div class="line"><span class="number">154</span>:                         <span class="comment">// &#x6301;&#x4E45;&#x5316;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">155</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.correctTagsOffset(pullRequest);</div><div class="line"><span class="number">156</span>: </div><div class="line"><span class="number">157</span>:                         <span class="comment">// &#x63D0;&#x4EA4;&#x7ACB;&#x5373;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">158</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestImmediately(pullRequest);</div><div class="line"><span class="number">159</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">160</span>:                     <span class="keyword">case</span> OFFSET_ILLEGAL:</div><div class="line"><span class="number">161</span>:                         log.warn(<span class="string">&quot;the pull request offset illegal, {} {}&quot;</span>, <span class="comment">//</span></div><div class="line"><span class="number">162</span>:                             pullRequest.toString(), pullResult.toString());</div><div class="line"><span class="number">163</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">164</span>:                         pullRequest.setNextOffset(pullResult.getNextBeginOffset());</div><div class="line"><span class="number">165</span>: </div><div class="line"><span class="number">166</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E3A;dropped</span></div><div class="line"><span class="number">167</span>:                         pullRequest.getProcessQueue().setDropped(<span class="keyword">true</span>);</div><div class="line"><span class="number">168</span>: </div><div class="line"><span class="number">169</span>:                         <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x4EFB;&#x52A1;&#xFF0C;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;&#x79FB;&#x9664;&#x3002;&#x4E0D;&#x7ACB;&#x5373;&#x79FB;&#x9664;&#x7684;&#x539F;&#x56E0;&#xFF1A;&#x53EF;&#x80FD;&#x6709;&#x5730;&#x65B9;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#xFF0C;&#x907F;&#x514D;&#x53D7;&#x5230;&#x5F71;&#x54CD;&#x3002;</span></div><div class="line"><span class="number">170</span>:                         DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executeTaskLater(<span class="keyword">new</span> Runnable() {</div><div class="line"><span class="number">171</span>: </div><div class="line"><span class="number">172</span>:                             <span class="meta">@Override</span></div><div class="line"><span class="number">173</span>:                             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">174</span>:                                 <span class="keyword">try</span> {</div><div class="line"><span class="number">175</span>:                                     <span class="comment">// &#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x540C;&#x6B65;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5230;Broker</span></div><div class="line"><span class="number">176</span>:                                     DefaultMQPushConsumerImpl.<span class="keyword">this</span>.offsetStore.updateOffset(pullRequest.getMessageQueue(),</div><div class="line"><span class="number">177</span>:                                         pullRequest.getNextOffset(), <span class="keyword">false</span>);</div><div class="line"><span class="number">178</span>:                                     DefaultMQPushConsumerImpl.<span class="keyword">this</span>.offsetStore.persist(pullRequest.getMessageQueue());</div><div class="line"><span class="number">179</span>: </div><div class="line"><span class="number">180</span>:                                     <span class="comment">// &#x79FB;&#x9664;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;</span></div><div class="line"><span class="number">181</span>:                                     DefaultMQPushConsumerImpl.<span class="keyword">this</span>.rebalanceImpl.removeProcessQueue(pullRequest.getMessageQueue());</div><div class="line"><span class="number">182</span>: </div><div class="line"><span class="number">183</span>:                                     log.warn(<span class="string">&quot;fix the pull request offset, {}&quot;</span>, pullRequest);</div><div class="line"><span class="number">184</span>:                                 } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">185</span>:                                     log.error(<span class="string">&quot;executeTaskLater Exception&quot;</span>, e);</div><div class="line"><span class="number">186</span>:                                 }</div><div class="line"><span class="number">187</span>:                             }</div><div class="line"><span class="number">188</span>:                         }, <span class="number">10000</span>);</div><div class="line"><span class="number">189</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">190</span>:                     <span class="keyword">default</span>:</div><div class="line"><span class="number">191</span>:                         <span class="keyword">break</span>;</div><div class="line"><span class="number">192</span>:                 }</div><div class="line"><span class="number">193</span>:             }</div><div class="line"><span class="number">194</span>:         }</div><div class="line"><span class="number">195</span>: </div><div class="line"><span class="number">196</span>:         <span class="meta">@Override</span></div><div class="line"><span class="number">197</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onException</span><span class="params">(Throwable e)</span> </span>{</div><div class="line"><span class="number">198</span>:             <span class="keyword">if</span> (!pullRequest.getMessageQueue().getTopic().startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {</div><div class="line"><span class="number">199</span>:                 log.warn(<span class="string">&quot;execute the pull request exception&quot;</span>, e);</div><div class="line"><span class="number">200</span>:             }</div><div class="line"><span class="number">201</span>: </div><div class="line"><span class="number">202</span>:             <span class="comment">// &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">203</span>:             DefaultMQPushConsumerImpl.<span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_EXCEPTION);</div><div class="line"><span class="number">204</span>:         }</div><div class="line"><span class="number">205</span>:     };</div><div class="line"><span class="number">206</span>: </div><div class="line"><span class="number">207</span>:     <span class="comment">// &#x96C6;&#x7FA4;&#x6D88;&#x606F;&#x6A21;&#x578B;&#x4E0B;&#xFF0C;&#x8BA1;&#x7B97;&#x63D0;&#x4EA4;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</span></div><div class="line"><span class="number">208</span>:     <span class="keyword">boolean</span> commitOffsetEnable = <span class="keyword">false</span>;</div><div class="line"><span class="number">209</span>:     <span class="keyword">long</span> commitOffsetValue = <span class="number">0L</span>;</div><div class="line"><span class="number">210</span>:     <span class="keyword">if</span> (MessageModel.CLUSTERING == <span class="keyword">this</span>.defaultMQPushConsumer.getMessageModel()) {</div><div class="line"><span class="number">211</span>:         commitOffsetValue = <span class="keyword">this</span>.offsetStore.readOffset(pullRequest.getMessageQueue(), ReadOffsetType.READ_FROM_MEMORY);</div><div class="line"><span class="number">212</span>:         <span class="keyword">if</span> (commitOffsetValue &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">213</span>:             commitOffsetEnable = <span class="keyword">true</span>;</div><div class="line"><span class="number">214</span>:         }</div><div class="line"><span class="number">215</span>:     }</div><div class="line"><span class="number">216</span>: </div><div class="line"><span class="number">217</span>:     <span class="comment">// &#x8BA1;&#x7B97;&#x8BF7;&#x6C42;&#x7684; &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F; &#x548C; &#x662F;&#x5426;&#x8FDB;&#x884C;filtersrv&#x8FC7;&#x6EE4;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">218</span>:     String subExpression = <span class="keyword">null</span>;</div><div class="line"><span class="number">219</span>:     <span class="keyword">boolean</span> classFilter = <span class="keyword">false</span>;</div><div class="line"><span class="number">220</span>:     SubscriptionData sd = <span class="keyword">this</span>.rebalanceImpl.getSubscriptionInner().get(pullRequest.getMessageQueue().getTopic());</div><div class="line"><span class="number">221</span>:     <span class="keyword">if</span> (sd != <span class="keyword">null</span>) {</div><div class="line"><span class="number">222</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.defaultMQPushConsumer.isPostSubscriptionWhenPull() &amp;&amp; !sd.isClassFilterMode()) {</div><div class="line"><span class="number">223</span>:             subExpression = sd.getSubString();</div><div class="line"><span class="number">224</span>:         }</div><div class="line"><span class="number">225</span>: </div><div class="line"><span class="number">226</span>:         classFilter = sd.isClassFilterMode();</div><div class="line"><span class="number">227</span>:     }</div><div class="line"><span class="number">228</span>: </div><div class="line"><span class="number">229</span>:     <span class="comment">// &#x8BA1;&#x7B97;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7CFB;&#x7EDF;&#x6807;&#x8BC6;</span></div><div class="line"><span class="number">230</span>:     <span class="keyword">int</span> sysFlag = PullSysFlag.buildSysFlag(<span class="comment">//</span></div><div class="line"><span class="number">231</span>:         commitOffsetEnable, <span class="comment">// commitOffset</span></div><div class="line"><span class="number">232</span>:         <span class="keyword">true</span>, <span class="comment">// suspend</span></div><div class="line"><span class="number">233</span>:         subExpression != <span class="keyword">null</span>, <span class="comment">// subscription</span></div><div class="line"><span class="number">234</span>:         classFilter <span class="comment">// class filter</span></div><div class="line"><span class="number">235</span>:     );</div><div class="line"><span class="number">236</span>: </div><div class="line"><span class="number">237</span>:     <span class="comment">// &#x6267;&#x884C;&#x62C9;&#x53D6;&#x3002;&#x5982;&#x679C;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</span></div><div class="line"><span class="number">238</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">239</span>:         <span class="keyword">this</span>.pullAPIWrapper.pullKernelImpl(<span class="comment">//</span></div><div class="line"><span class="number">240</span>:             pullRequest.getMessageQueue(), <span class="comment">// 1</span></div><div class="line"><span class="number">241</span>:             subExpression, <span class="comment">// 2</span></div><div class="line"><span class="number">242</span>:             subscriptionData.getSubVersion(), <span class="comment">// 3</span></div><div class="line"><span class="number">243</span>:             pullRequest.getNextOffset(), <span class="comment">// 4</span></div><div class="line"><span class="number">244</span>:             <span class="keyword">this</span>.defaultMQPushConsumer.getPullBatchSize(), <span class="comment">// 5</span></div><div class="line"><span class="number">245</span>:             sysFlag, <span class="comment">// 6</span></div><div class="line"><span class="number">246</span>:             commitOffsetValue, <span class="comment">// 7</span></div><div class="line"><span class="number">247</span>:             BROKER_SUSPEND_MAX_TIME_MILLIS, <span class="comment">// 8</span></div><div class="line"><span class="number">248</span>:             CONSUMER_TIMEOUT_MILLIS_WHEN_SUSPEND, <span class="comment">// 9</span></div><div class="line"><span class="number">249</span>:             CommunicationMode.ASYNC, <span class="comment">// 10</span></div><div class="line"><span class="number">250</span>:             pullCallback<span class="comment">// 11</span></div><div class="line"><span class="number">251</span>:         );</div><div class="line"><span class="number">252</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">253</span>:         log.error(<span class="string">&quot;pullKernelImpl exception&quot;</span>, e);</div><div class="line"><span class="number">254</span>:         <span class="keyword">this</span>.executePullRequestLater(pullRequest, PULL_TIME_DELAY_MILLS_WHEN_EXCEPTION);</div><div class="line"><span class="number">255</span>:     }</div><div class="line"><span class="number">256</span>: }</div><div class="line"><span class="number">257</span>: </div><div class="line"><span class="number">258</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">correctTagsOffset</span><span class="params">(<span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line"><span class="number">259</span>:     <span class="keyword">if</span> (<span class="number">0L</span> == pullRequest.getProcessQueue().getMsgCount().get()) {</div><div class="line"><span class="number">260</span>:         <span class="keyword">this</span>.offsetStore.updateOffset(pullRequest.getMessageQueue(), pullRequest.getNextOffset(), <span class="keyword">true</span>);</div><div class="line"><span class="number">261</span>:     }</div><div class="line"><span class="number">262</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>#pullMessage(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;<ul>
<li>&#x7B2C; 3 &#x81F3; 6 &#x884C; &#xFF1A;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x5DF2;&#x7ECF;&#x7EC8;&#x6B62;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#x3002;</li>
<li>&#x7B2C; 9 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6700;&#x540E;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#x95F4;&#x3002;</li>
<li>&#x7B2C; 11 &#x81F3; 18 &#x884C; &#xFF1A;<code>Consumer</code> &#x672A;&#x5904;&#x4E8E;&#x8FD0;&#x884C;&#x4E2D;&#x72B6;&#x6001;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 20 &#x81F3; 25 &#x884C; &#xFF1A; <code>Consumer</code> &#x5904;&#x4E8E;&#x6682;&#x505C;&#x4E2D;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 27 &#x81F3; 37 &#x884C; &#xFF1A;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x6301;&#x6709;&#x6D88;&#x606F;&#x8D85;&#x8FC7;&#x6700;&#x5927;&#x5141;&#x8BB8;&#x503C;&#xFF08;&#x9ED8;&#x8BA4;&#xFF1A;1000&#x6761;&#xFF09;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 39 &#x81F3; 49 &#x884C; &#xFF1A;<code>Consumer</code> &#x4E3A;<strong>&#x5E76;&#x53D1;&#x6D88;&#x8D39;</strong> &#x5E76;&#x4E14; &#x6D88;&#x606F;&#x961F;&#x5217;&#x6301;&#x6709;&#x6D88;&#x606F;&#x8DE8;&#x5EA6;&#x8FC7;&#x5927;&#xFF08;&#x6D88;&#x606F;&#x8DE8;&#x5EA6; = &#x6301;&#x6709;&#x6D88;&#x606F;&#x6700;&#x540E;&#x4E00;&#x6761;&#x548C;&#x7B2C;&#x4E00;&#x6761;&#x7684;&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x5DEE;&#xFF0C;&#x9ED8;&#x8BA4;&#xFF1A;2000&#xFF09;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 50 &#x81F3; 70 &#x884C; &#xFF1A;<code>&#x987A;&#x5E8F;&#x6D88;&#x8D39;</code> &#x76F8;&#x5173;&#x8DF3;&#x8FC7;&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-send-and-consume-orderly/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x987A;&#x5E8F;&#x53D1;&#x9001;&#x4E0E;&#x6D88;&#x8D39;&#x300B;</a>&#x3002;</li>
<li>&#x7B2C; 72 &#x81F3; 78 &#x884C; &#xFF1A;<code>Topic</code> &#x5BF9;&#x5E94;&#x7684;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 222 &#x81F3; 224 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x4F7F;&#x7528; <code>Consumer</code> <strong>&#x672C;&#x5730;</strong>&#x7684;&#x8BA2;&#x9605;&#x4FE1;&#x606F;( <code>SubscriptionData</code> )&#xFF0C;&#x800C;&#x4E0D;&#x4F7F;&#x7528; <code>Broker</code> &#x91CC;&#x7684;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/#PullMessageProcessor-processRequest-&#x2026;">PullMessageProcessor#processRequest(&#x2026;) &#x7B2C; 64 &#x81F3; 110 &#x884C;&#x4EE3;&#x7801;</a>&#x3002;</li>
<li>&#x7B2C; 226 &#x884C; &#xFF1A;&#x662F;&#x5426;&#x5F00;&#x542F;&#x8FC7;&#x6EE4;&#x7C7B;&#x8FC7;&#x6EE4;&#x6A21;&#x5F0F;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/filtersrv/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Filtersrv&#x300B;</a>&#x3002;</li>
<li>&#x7B2C; 229 &#x81F3; 235 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x7CFB;&#x7EDF;&#x6807;&#x8BC6;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/#PullMessageRequestHeader">PullMessageRequestHeader.sysFlag</a>&#x3002;</li>
<li>&#x7B2C; 237 &#x81F3; 255 &#x884C; &#xFF1A;<ul>
<li>&#x6267;&#x884C;&#x6D88;&#x606F;&#x62C9;&#x53D6;<strong>&#x5F02;&#x6B65;</strong>&#x8BF7;&#x6C42;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#pullapiwrapperpullkernelimpl">PullAPIWrapper#pullKernelImpl(&#x2026;)</a>&#x3002;</li>
<li>&#x5F53;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#x4EA7;&#x751F;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;&#x5BF9;&#x5E94; <code>Broker</code> &#x5904;&#x7406;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x903B;&#x8F91;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/#PullMessageProcessor-processRequest-&#x2026;">PullMessageProcessor#processRequest(&#x2026;)</a>&#x3002;</li>
</ul>
</li>
</ul>
</li>
<li><code>PullCallback</code> &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x56DE;&#x8C03;&#xFF1A;<ul>
<li>&#x7B2C; 86 &#x884C; &#xFF1A;&#x5904;&#x7406;&#x62C9;&#x53D6;&#x7ED3;&#x679C;&#x3002;&#x8BE6;&#x7EC6;&#x903B;&#x8F91;&#x89C1;&#xFF1A;<a href="#pullapiwrapperprocesspullresult">PullAPIWrapper#processPullResult(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 89 &#x81F3; 192 &#x884C; &#xFF1A;&#x5904;&#x7406;&#x62C9;&#x53D6;&#x72B6;&#x6001;&#x7ED3;&#x679C;&#xFF1A;<ul>
<li>&#x7B2C; 90 &#x81F3; 139 &#x884C; &#xFF1A;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;( <code>FOUND</code> ) &#xFF1A;<ul>
<li>&#x7B2C; 91 &#x81F3; 93 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 95 &#x81F3; 97 &#x884C; &#xFF1A;&#x7EDF;&#x8BA1;&#x3002;</li>
<li>&#x7B2C; 101 &#x81F3; 102 &#x884C; &#xFF1A;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;&#x7684;&#x6D88;&#x606F;&#x5217;&#x8868;&#x4E3A;&#x7A7A;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x5B58;&#x5728;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x4F46;&#x662F;&#x6D88;&#x606F;&#x7ED3;&#x679C;&#x672A;&#x7A7A;&#x5462;&#xFF1F;&#x539F;&#x56E0;&#x89C1;&#xFF1A;<a href="#pullapiwrapperprocesspullresult">PullAPIWrapper#processPullResult(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 106 &#x81F3; 108 &#x884C; &#xFF1A;&#x7EDF;&#x8BA1;&#x3002;</li>
<li>&#x7B2C; 111 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x5230;&#x7684;&#x6D88;&#x606F;&#x5230;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#processqueueputmessage">ProcessQueue#putMessage(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 113 &#x81F3; 118 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x5230; <code>ConsumeMessageService</code>&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#consumemessageconcurrentlyservice">ConsumeMessageConcurrentlyService</a>&#x3002;</li>
<li>&#x7B2C; 120 &#x81F3; 126 &#x884C; &#xFF1A;&#x6839;&#x636E;&#x62C9;&#x53D6;&#x9891;&#x7387;( <code>pullInterval</code> )&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;&#x6216;&#x8005;&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;&#x9ED8;&#x8BA4;&#x62C9;&#x53D6;&#x9891;&#x7387;&#x4E3A; 0ms &#xFF0C;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 129 &#x81F3; 137 &#x884C; &#xFF1A;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x5C0F;&#x4E8E;&#x4E0A;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E; &#x6216;&#x8005; &#x7B2C;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x5C0F;&#x4E8E;&#x4E0A;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF0C;&#x5219;&#x5224;&#x5B9A;&#x4E3A;<strong>BUG</strong>&#xFF0C;&#x8F93;&#x51FA;&#x8B66;&#x544A;&#x65E5;&#x5FD7;&#x3002;<ul>
<li>&#x7B2C; 140 &#x81F3; 149 &#x884C; &#xFF1A;&#x6CA1;&#x6709;&#x65B0;&#x6D88;&#x606F;( <code>NO_NEW_MSG</code> ) &#xFF1A;</li>
</ul>
</li>
<li>&#x7B2C; 142 &#x884C; &#xFF1A; &#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 145 &#x884C; &#xFF1A;&#x66F4;&#x6B63;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<code>#correctTagsOffset(...)</code>&#x3002;</li>
<li>&#x7B2C; 148 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;<ul>
<li>&#x7B2C; 150 &#x81F3; 159 &#x884C; &#xFF1A;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x4F46;&#x662F;&#x4E0D;&#x5339;&#x914D;( <code>NO_MATCHED_MSG</code> )&#x3002;&#x903B;&#x8F91;&#x540C; <code>NO_NEW_MSG</code> &#x3002;</li>
<li>&#x7B2C; 160 &#x81F3; 189 &#x884C; &#xFF1A;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x4E0D;&#x5408;&#x6CD5; (<code>OFFSET_ILLEGAL</code>)&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 164 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 167 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E3A; <code>dropped</code>&#x3002;</li>
<li>&#x7B2C; 169 &#x81F3; 188 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x4EFB;&#x52A1;&#xFF0C;&#x8FDB;&#x884C;&#x961F;&#x5217;&#x79FB;&#x9664;&#x3002;<ul>
<li>&#x7B2C; 175 &#x81F3; 178 &#x884C; &#xFF1A;&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x540C;&#x6B65;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5230; <code>Broker</code>&#x3002;</li>
<li>&#x7B2C; 181 &#x884C; &#xFF1A;&#x79FB;&#x9664;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002;<ul>
<li>&#x7591;&#x95EE;&#xFF1A;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7ACB;&#x5373;&#x79FB;&#x9664;&#xFF1F;&#xFF1F;&#xFF1F; <ul>
<li>&#x7B2C; 196 &#x81F3; 204 &#x884C; &#xFF1A;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#xFF0C;&#x63D0;&#x4EA4;<strong>&#x5EF6;&#x8FDF;</strong>&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>#correctTagsOffset(...)</code> &#xFF1A;&#x66F4;&#x6B63;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;<ul>
<li>&#x7B2C; 258 &#x81F3; 261 &#x884C; &#xFF1A; &#x5F53;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;&#x6301;&#x6709;&#x6D88;&#x606F;&#x6570;&#x91CF;&#x4E3A; <strong>0</strong> &#x65F6;&#xFF0C;&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x4E3A;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x7684;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x3002;</li>
</ul>
</li>
</ul>
<h3 id="PullAPIWrapper-pullKernelImpl-&#x2026;"><a href="#PullAPIWrapper-pullKernelImpl-&#x2026;" class="headerlink" title="PullAPIWrapper#pullKernelImpl(&#x2026;)"></a>PullAPIWrapper#pullKernelImpl(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;</div><div class="line"> 3:  *</div><div class="line"> 4:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 5:  * <span class="doctag">@param</span> subExpression &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;</div><div class="line"> 6:  * <span class="doctag">@param</span> subVersion &#x8BA2;&#x9605;&#x7248;&#x672C;&#x53F7;</div><div class="line"> 7:  * <span class="doctag">@param</span> offset &#x62C9;&#x53D6;&#x961F;&#x5217;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;</div><div class="line"> 8:  * <span class="doctag">@param</span> maxNums &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6570;&#x91CF;</div><div class="line"> 9:  * <span class="doctag">@param</span> sysFlag &#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x7CFB;&#x7EDF;&#x6807;&#x8BC6;</div><div class="line">10:  * <span class="doctag">@param</span> commitOffset &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line">11:  * <span class="doctag">@param</span> brokerSuspendMaxTimeMillis broker&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x6700;&#x5927;&#x65F6;&#x95F4;</div><div class="line">12:  * <span class="doctag">@param</span> timeoutMillis &#x8BF7;&#x6C42;broker&#x8D85;&#x65F6;&#x65F6;&#x957F;</div><div class="line">13:  * <span class="doctag">@param</span> communicationMode &#x901A;&#x8BAF;&#x6A21;&#x5F0F;</div><div class="line">14:  * <span class="doctag">@param</span> pullCallback &#x62C9;&#x53D6;&#x56DE;&#x8C03;</div><div class="line">15:  * <span class="doctag">@return</span> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7ED3;&#x679C;&#x3002;&#x53EA;&#x6709;&#x901A;&#x8BAF;&#x6A21;&#x5F0F;&#x4E3A;&#x540C;&#x6B65;&#x65F6;&#xFF0C;&#x624D;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;null&#x3002;</div><div class="line">16:  * <span class="doctag">@throws</span> MQClientException &#x5F53;&#x5BFB;&#x627E;&#x4E0D;&#x5230; broker &#x65F6;&#xFF0C;&#x6216;&#x53D1;&#x751F;&#x5176;&#x4ED6;client&#x5F02;&#x5E38;</div><div class="line">17:  * <span class="doctag">@throws</span> RemotingException &#x5F53;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">18:  * <span class="doctag">@throws</span> MQBrokerException &#x5F53; broker &#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;&#x3002;&#x53EA;&#x6709;&#x901A;&#x8BAF;&#x6A21;&#x5F0F;&#x4E3A;&#x540C;&#x6B65;&#x65F6;&#x624D;&#x4F1A;&#x53D1;&#x751F;&#x8BE5;&#x5F02;&#x5E38;&#x3002;</div><div class="line">19:  * <span class="doctag">@throws</span> InterruptedException &#x5F53;&#x53D1;&#x751F;&#x4E2D;&#x65AD;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">20:  */</div><div class="line"><span class="number">21</span>: <span class="function"><span class="keyword">protected</span> PullResult <span class="title">pullKernelImpl</span><span class="params">(</span></span></div><div class="line"><span class="number">22</span>:     <span class="keyword">final</span> MessageQueue mq,</div><div class="line"><span class="number">23</span>:     <span class="keyword">final</span> String subExpression,</div><div class="line"><span class="number">24</span>:     <span class="keyword">final</span> <span class="keyword">long</span> subVersion,</div><div class="line"><span class="number">25</span>:     <span class="keyword">final</span> <span class="keyword">long</span> offset,</div><div class="line"><span class="number">26</span>:     <span class="keyword">final</span> <span class="keyword">int</span> maxNums,</div><div class="line"><span class="number">27</span>:     <span class="keyword">final</span> <span class="keyword">int</span> sysFlag,</div><div class="line"><span class="number">28</span>:     <span class="keyword">final</span> <span class="keyword">long</span> commitOffset,</div><div class="line"><span class="number">29</span>:     <span class="keyword">final</span> <span class="keyword">long</span> brokerSuspendMaxTimeMillis,</div><div class="line"><span class="number">30</span>:     <span class="keyword">final</span> <span class="keyword">long</span> timeoutMillis,</div><div class="line"><span class="number">31</span>:     <span class="keyword">final</span> CommunicationMode communicationMode,</div><div class="line"><span class="number">32</span>:     <span class="keyword">final</span> PullCallback pullCallback</div><div class="line"><span class="number">33</span>: ) <span class="keyword">throws</span> MQClientException, RemotingException, MQBrokerException, InterruptedException {</div><div class="line"><span class="number">34</span>:     <span class="comment">// &#x83B7;&#x53D6;Broker&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">35</span>:     FindBrokerResult findBrokerResult =</div><div class="line"><span class="number">36</span>:         <span class="keyword">this</span>.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),</div><div class="line"><span class="number">37</span>:             <span class="keyword">this</span>.recalculatePullFromWhichNode(mq), <span class="keyword">false</span>);</div><div class="line"><span class="number">38</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == findBrokerResult) {</div><div class="line"><span class="number">39</span>:         <span class="keyword">this</span>.mQClientFactory.updateTopicRouteInfoFromNameServer(mq.getTopic());</div><div class="line"><span class="number">40</span>:         findBrokerResult =</div><div class="line"><span class="number">41</span>:             <span class="keyword">this</span>.mQClientFactory.findBrokerAddressInSubscribe(mq.getBrokerName(),</div><div class="line"><span class="number">42</span>:                 <span class="keyword">this</span>.recalculatePullFromWhichNode(mq), <span class="keyword">false</span>);</div><div class="line"><span class="number">43</span>:     }</div><div class="line"><span class="number">44</span>: </div><div class="line"><span class="number">45</span>:     <span class="comment">// &#x8BF7;&#x6C42;&#x62C9;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">46</span>:     <span class="keyword">if</span> (findBrokerResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">47</span>:         <span class="keyword">int</span> sysFlagInner = sysFlag;</div><div class="line"><span class="number">48</span>: </div><div class="line"><span class="number">49</span>:         <span class="keyword">if</span> (findBrokerResult.isSlave()) {</div><div class="line"><span class="number">50</span>:             sysFlagInner = PullSysFlag.clearCommitOffsetFlag(sysFlagInner);</div><div class="line"><span class="number">51</span>:         }</div><div class="line"><span class="number">52</span>: </div><div class="line"><span class="number">53</span>:         PullMessageRequestHeader requestHeader = <span class="keyword">new</span> PullMessageRequestHeader();</div><div class="line"><span class="number">54</span>:         requestHeader.setConsumerGroup(<span class="keyword">this</span>.consumerGroup);</div><div class="line"><span class="number">55</span>:         requestHeader.setTopic(mq.getTopic());</div><div class="line"><span class="number">56</span>:         requestHeader.setQueueId(mq.getQueueId());</div><div class="line"><span class="number">57</span>:         requestHeader.setQueueOffset(offset);</div><div class="line"><span class="number">58</span>:         requestHeader.setMaxMsgNums(maxNums);</div><div class="line"><span class="number">59</span>:         requestHeader.setSysFlag(sysFlagInner);</div><div class="line"><span class="number">60</span>:         requestHeader.setCommitOffset(commitOffset);</div><div class="line"><span class="number">61</span>:         requestHeader.setSuspendTimeoutMillis(brokerSuspendMaxTimeMillis);</div><div class="line"><span class="number">62</span>:         requestHeader.setSubscription(subExpression);</div><div class="line"><span class="number">63</span>:         requestHeader.setSubVersion(subVersion);</div><div class="line"><span class="number">64</span>: </div><div class="line"><span class="number">65</span>:         String brokerAddr = findBrokerResult.getBrokerAddr();</div><div class="line"><span class="number">66</span>:         <span class="keyword">if</span> (PullSysFlag.hasClassFilterFlag(sysFlagInner)) { <span class="comment">// TODO filtersrv</span></div><div class="line"><span class="number">67</span>:             brokerAddr = computPullFromWhichFilterServer(mq.getTopic(), brokerAddr);</div><div class="line"><span class="number">68</span>:         }</div><div class="line"><span class="number">69</span>: </div><div class="line"><span class="number">70</span>:         PullResult pullResult = <span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().pullMessage(</div><div class="line"><span class="number">71</span>:             brokerAddr,</div><div class="line"><span class="number">72</span>:             requestHeader,</div><div class="line"><span class="number">73</span>:             timeoutMillis,</div><div class="line"><span class="number">74</span>:             communicationMode,</div><div class="line"><span class="number">75</span>:             pullCallback);</div><div class="line"><span class="number">76</span>: </div><div class="line"><span class="number">77</span>:         <span class="keyword">return</span> pullResult;</div><div class="line"><span class="number">78</span>:     }</div><div class="line"><span class="number">79</span>: </div><div class="line"><span class="number">80</span>:     <span class="comment">// Broker&#x4FE1;&#x606F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x629B;&#x51FA;&#x5F02;&#x5E38;</span></div><div class="line"><span class="number">81</span>:     <span class="keyword">throw</span> <span class="keyword">new</span> MQClientException(<span class="string">&quot;The broker[&quot;</span> + mq.getBrokerName() + <span class="string">&quot;] not exist&quot;</span>, <span class="keyword">null</span>);</div><div class="line"><span class="number">82</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6838;&#x5FC3;&#x65B9;&#x6CD5;&#x3002;<strong>&#x8BE5;&#x65B9;&#x6CD5;&#x53C2;&#x6570;&#x8F83;&#x591A;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x4E0B;&#x4EE3;&#x7801;&#x6CE8;&#x91CA;&#x4E0A;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x8BF4;&#x660E;</strong>&#x1F608;&#x3002;</li>
<li>&#x7B2C; 34 &#x81F3; 43 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>Broker</code> &#x4FE1;&#x606F;(<code>Broker</code> &#x5730;&#x5740;&#x3001;&#x662F;&#x5426;&#x4E3A;&#x4ECE;&#x8282;&#x70B9;)&#x3002;<ul>
<li><a href="#pullapiwrapperrecalculatepullfromwhichnode">#recalculatePullFromWhichNode(&#x2026;)</a></li>
<li><a href="#mqclientinstancefindbrokeraddressinsubscribe">#MQClientInstance#findBrokerAddressInSubscribe(&#x2026;)</a></li>
</ul>
</li>
<li>&#x7B2C; 45 &#x81F3; 78 &#x884C; &#xFF1A;<strong>&#x8BF7;&#x6C42;&#x62C9;&#x53D6;&#x6D88;&#x606F;</strong>&#x3002;</li>
<li>&#x7B2C; 81 &#x884C; &#xFF1A;&#x5F53; <code>Broker</code> &#x4FE1;&#x606F;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x3002;</li>
</ul>
<h4 id="PullAPIWrapper-recalculatePullFromWhichNode-&#x2026;"><a href="#PullAPIWrapper-recalculatePullFromWhichNode-&#x2026;" class="headerlink" title="PullAPIWrapper#recalculatePullFromWhichNode(&#x2026;)"></a>PullAPIWrapper#recalculatePullFromWhichNode(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x6D88;&#x606F;&#x961F;&#x5217; &#x4E0E; &#x62C9;&#x53D6;Broker &#x7684;&#x6620;&#x5C04;</div><div class="line"> 3:  * &#x5F53;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x4F1A;&#x901A;&#x8FC7;&#x8BE5;&#x6620;&#x5C04;&#x83B7;&#x53D6;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x7684;Broker</div><div class="line"> 4:  */</div><div class="line"> <span class="number">5</span>: <span class="keyword">private</span> ConcurrentHashMap&lt;MessageQueue, AtomicLong<span class="comment">/* brokerId */</span>&gt; pullFromWhichNodeTable =</div><div class="line"> <span class="number">6</span>:     <span class="keyword">new</span> ConcurrentHashMap&lt;MessageQueue, AtomicLong&gt;(<span class="number">32</span>);</div><div class="line"> <span class="number">7</span>: <span class="comment">/**</span></div><div class="line"> 8:  * &#x662F;&#x5426;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;Broker</div><div class="line"> 9:  */</div><div class="line"><span class="number">10</span>: <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> connectBrokerByUser = <span class="keyword">false</span>;</div><div class="line"><span class="number">11</span>: <span class="comment">/**</span></div><div class="line">12:  * &#x9ED8;&#x8BA4;Broker&#x7F16;&#x53F7;</div><div class="line">13:  */</div><div class="line"><span class="number">14</span>: <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">long</span> defaultBrokerId = MixAll.MASTER_ID;</div><div class="line"><span class="number">15</span>: </div><div class="line"><span class="number">16</span>: <span class="comment">/**</span></div><div class="line">17:  * &#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5BF9;&#x5E94;&#x7684;Broker&#x7F16;&#x53F7;</div><div class="line">18:  *</div><div class="line">19:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line">20:  * <span class="doctag">@return</span> Broker&#x7F16;&#x53F7;</div><div class="line">21:  */</div><div class="line"><span class="number">22</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">recalculatePullFromWhichNode</span><span class="params">(<span class="keyword">final</span> MessageQueue mq)</span> </span>{</div><div class="line"><span class="number">23</span>:     <span class="comment">// &#x82E5;&#x5F00;&#x542F;&#x9ED8;&#x8BA4;Broker&#x5F00;&#x5173;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x9ED8;&#x8BA4;Broker&#x7F16;&#x53F7;</span></div><div class="line"><span class="number">24</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isConnectBrokerByUser()) {</div><div class="line"><span class="number">25</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.defaultBrokerId;</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>:     <span class="comment">// &#x82E5;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6620;&#x5C04;&#x62C9;&#x53D6;Broker&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x6620;&#x5C04;Broker&#x7F16;&#x53F7;</span></div><div class="line"><span class="number">29</span>:     AtomicLong suggest = <span class="keyword">this</span>.pullFromWhichNodeTable.get(mq);</div><div class="line"><span class="number">30</span>:     <span class="keyword">if</span> (suggest != <span class="keyword">null</span>) {</div><div class="line"><span class="number">31</span>:         <span class="keyword">return</span> suggest.get();</div><div class="line"><span class="number">32</span>:     }</div><div class="line"><span class="number">33</span>: </div><div class="line"><span class="number">34</span>:     <span class="comment">// &#x8FD4;&#x56DE;Broker&#x4E3B;&#x8282;&#x70B9;&#x7F16;&#x53F7;</span></div><div class="line"><span class="number">35</span>:     <span class="keyword">return</span> MixAll.MASTER_ID;</div><div class="line"><span class="number">36</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5BF9;&#x5E94;&#x7684; <code>Broker</code> &#x7F16;&#x53F7;&#x3002;</li>
</ul>
<h4 id="MQClientInstance-findBrokerAddressInSubscribe-&#x2026;"><a href="#MQClientInstance-findBrokerAddressInSubscribe-&#x2026;" class="headerlink" title="MQClientInstance#findBrokerAddressInSubscribe(&#x2026;)"></a>MQClientInstance#findBrokerAddressInSubscribe(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * Broker&#x540D;&#x5B57; &#x548C; Broker&#x5730;&#x5740;&#x76F8;&#x5173; Map</div><div class="line"> 3:  */</div><div class="line"> <span class="number">4</span>: <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentHashMap&lt;String<span class="comment">/* Broker Name */</span>, HashMap&lt;Long<span class="comment">/* brokerId */</span>, String<span class="comment">/* address */</span>&gt;&gt; brokerAddrTable =</div><div class="line"> <span class="number">5</span>:         <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>: <span class="comment">/**</span></div><div class="line"> 8:  * &#x83B7;&#x5F97;Broker&#x4FE1;&#x606F;</div><div class="line"> 9:  *</div><div class="line">10:  * <span class="doctag">@param</span> brokerName broker&#x540D;&#x5B57;</div><div class="line">11:  * <span class="doctag">@param</span> brokerId broker&#x7F16;&#x53F7;</div><div class="line">12:  * <span class="doctag">@param</span> onlyThisBroker &#x662F;&#x5426;&#x5FC5;&#x987B;&#x662F;&#x8BE5;broker</div><div class="line">13:  * <span class="doctag">@return</span> Broker&#x4FE1;&#x606F;</div><div class="line">14:  */</div><div class="line"><span class="number">15</span>: <span class="function"><span class="keyword">public</span> FindBrokerResult <span class="title">findBrokerAddressInSubscribe</span><span class="params">(//</span></span></div><div class="line"><span class="number">16</span>:     <span class="keyword">final</span> String brokerName, //</div><div class="line"><span class="number">17</span>:     <span class="keyword">final</span> <span class="keyword">long</span> brokerId, //</div><div class="line"><span class="number">18</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> onlyThisBroker//</div><div class="line"><span class="number">19</span>: ) {</div><div class="line"><span class="number">20</span>:     String brokerAddr = <span class="keyword">null</span>; <span class="comment">// broker&#x5730;&#x5740;</span></div><div class="line"><span class="number">21</span>:     <span class="keyword">boolean</span> slave = <span class="keyword">false</span>; <span class="comment">// &#x662F;&#x5426;&#x4E3A;&#x4ECE;&#x8282;&#x70B9;</span></div><div class="line"><span class="number">22</span>:     <span class="keyword">boolean</span> found = <span class="keyword">false</span>; <span class="comment">// &#x662F;&#x5426;&#x627E;&#x5230;</span></div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:     <span class="comment">// &#x83B7;&#x5F97;Broker&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">25</span>:     HashMap&lt;Long<span class="comment">/* brokerId */</span>, String<span class="comment">/* address */</span>&gt; map = <span class="keyword">this</span>.brokerAddrTable.get(brokerName);</div><div class="line"><span class="number">26</span>:     <span class="keyword">if</span> (map != <span class="keyword">null</span> &amp;&amp; !map.isEmpty()) {</div><div class="line"><span class="number">27</span>:         brokerAddr = map.get(brokerId);</div><div class="line"><span class="number">28</span>:         slave = brokerId != MixAll.MASTER_ID;</div><div class="line"><span class="number">29</span>:         found = brokerAddr != <span class="keyword">null</span>;</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:         <span class="comment">// &#x5982;&#x679C;&#x4E0D;&#x5F3A;&#x5236;&#x83B7;&#x5F97;&#xFF0C;&#x9009;&#x62E9;&#x4E00;&#x4E2A;Broker</span></div><div class="line"><span class="number">32</span>:         <span class="keyword">if</span> (!found &amp;&amp; !onlyThisBroker) {</div><div class="line"><span class="number">33</span>:             Entry&lt;Long, String&gt; entry = map.entrySet().iterator().next();</div><div class="line"><span class="number">34</span>:             brokerAddr = entry.getValue();</div><div class="line"><span class="number">35</span>:             slave = entry.getKey() != MixAll.MASTER_ID;</div><div class="line"><span class="number">36</span>:             found = <span class="keyword">true</span>;</div><div class="line"><span class="number">37</span>:         }</div><div class="line"><span class="number">38</span>:     }</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:     <span class="comment">// &#x627E;&#x5230;broker&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x4FE1;&#x606F;</span></div><div class="line"><span class="number">41</span>:     <span class="keyword">if</span> (found) {</div><div class="line"><span class="number">42</span>:         <span class="keyword">return</span> <span class="keyword">new</span> FindBrokerResult(brokerAddr, slave);</div><div class="line"><span class="number">43</span>:     }</div><div class="line"><span class="number">44</span>: </div><div class="line"><span class="number">45</span>:     <span class="comment">// &#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x7A7A;</span></div><div class="line"><span class="number">46</span>:     <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"><span class="number">47</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x83B7;&#x53D6; <code>Broker</code> &#x4FE1;&#x606F;(<code>Broker</code> &#x5730;&#x5740;&#x3001;&#x662F;&#x5426;&#x4E3A;&#x4ECE;&#x8282;&#x70B9;)&#x3002;</li>
</ul>
<h3 id="PullAPIWrapper-processPullResult-&#x2026;"><a href="#PullAPIWrapper-processPullResult-&#x2026;" class="headerlink" title="PullAPIWrapper#processPullResult(&#x2026;)"></a>PullAPIWrapper#processPullResult(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x5904;&#x7406;&#x62C9;&#x53D6;&#x7ED3;&#x679C;</div><div class="line"> 3:  * 1. &#x66F4;&#x65B0;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F;Broker&#x7F16;&#x53F7;&#x7684;&#x6620;&#x5C04;</div><div class="line"> 4:  * 2. &#x89E3;&#x6790;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x6D88;&#x606F;tagCode&#x5339;&#x914D;&#x5408;&#x9002;&#x6D88;&#x606F;</div><div class="line"> 5:  *</div><div class="line"> 6:  * <span class="doctag">@param</span> mq &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 7:  * <span class="doctag">@param</span> pullResult &#x62C9;&#x53D6;&#x7ED3;&#x679C;</div><div class="line"> 8:  * <span class="doctag">@param</span> subscriptionData &#x8BA2;&#x9605;&#x4FE1;&#x606F;</div><div class="line"> 9:  * <span class="doctag">@return</span> &#x62C9;&#x53D6;&#x7ED3;&#x679C;</div><div class="line">10:  */</div><div class="line"><span class="number">11</span>: <span class="function"><span class="keyword">public</span> PullResult <span class="title">processPullResult</span><span class="params">(<span class="keyword">final</span> MessageQueue mq, <span class="keyword">final</span> PullResult pullResult,</span></span></div><div class="line"><span class="number">12</span>:     <span class="keyword">final</span> SubscriptionData subscriptionData) {</div><div class="line"><span class="number">13</span>:     PullResultExt pullResultExt = (PullResultExt) pullResult;</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:     <span class="comment">// &#x66F4;&#x65B0;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F;Broker&#x7F16;&#x53F7;&#x7684;&#x6620;&#x5C04;</span></div><div class="line"><span class="number">16</span>:     <span class="keyword">this</span>.updatePullFromWhichNode(mq, pullResultExt.getSuggestWhichBrokerId());</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:     <span class="comment">// &#x89E3;&#x6790;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x6D88;&#x606F;tagCode&#x5339;&#x914D;&#x5408;&#x9002;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">19</span>:     <span class="keyword">if</span> (PullStatus.FOUND == pullResult.getPullStatus()) {</div><div class="line"><span class="number">20</span>:         <span class="comment">// &#x89E3;&#x6790;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">21</span>:         ByteBuffer byteBuffer = ByteBuffer.wrap(pullResultExt.getMessageBinary());</div><div class="line"><span class="number">22</span>:         List&lt;MessageExt&gt; msgList = MessageDecoder.decodes(byteBuffer);</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:         <span class="comment">// &#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x6D88;&#x606F;tagCode&#x5339;&#x914D;&#x5408;&#x9002;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">25</span>:         List&lt;MessageExt&gt; msgListFilterAgain = msgList;</div><div class="line"><span class="number">26</span>:         <span class="keyword">if</span> (!subscriptionData.getTagsSet().isEmpty() &amp;&amp; !subscriptionData.isClassFilterMode()) {</div><div class="line"><span class="number">27</span>:             msgListFilterAgain = <span class="keyword">new</span> ArrayList&lt;&gt;(msgList.size());</div><div class="line"><span class="number">28</span>:             <span class="keyword">for</span> (MessageExt msg : msgList) {</div><div class="line"><span class="number">29</span>:                 <span class="keyword">if</span> (msg.getTags() != <span class="keyword">null</span>) {</div><div class="line"><span class="number">30</span>:                     <span class="keyword">if</span> (subscriptionData.getTagsSet().contains(msg.getTags())) {</div><div class="line"><span class="number">31</span>:                         msgListFilterAgain.add(msg);</div><div class="line"><span class="number">32</span>:                     }</div><div class="line"><span class="number">33</span>:                 }</div><div class="line"><span class="number">34</span>:             }</div><div class="line"><span class="number">35</span>:         }</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:         <span class="comment">// Hook</span></div><div class="line"><span class="number">38</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.hasHook()) {</div><div class="line"><span class="number">39</span>:             FilterMessageContext filterMessageContext = <span class="keyword">new</span> FilterMessageContext();</div><div class="line"><span class="number">40</span>:             filterMessageContext.setUnitMode(unitMode);</div><div class="line"><span class="number">41</span>:             filterMessageContext.setMsgList(msgListFilterAgain);</div><div class="line"><span class="number">42</span>:             <span class="keyword">this</span>.executeHook(filterMessageContext);</div><div class="line"><span class="number">43</span>:         }</div><div class="line"><span class="number">44</span>: </div><div class="line"><span class="number">45</span>:         <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5F53;&#x524D;&#x6700;&#x5C0F;/&#x6700;&#x5927;&#x4F4D;&#x7F6E;&#x5230;&#x6D88;&#x606F;&#x62D3;&#x5C55;&#x5B57;&#x6BB5;</span></div><div class="line"><span class="number">46</span>:         <span class="keyword">for</span> (MessageExt msg : msgListFilterAgain) {</div><div class="line"><span class="number">47</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_MIN_OFFSET,</div><div class="line"><span class="number">48</span>:                 Long.toString(pullResult.getMinOffset()));</div><div class="line"><span class="number">49</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_MAX_OFFSET,</div><div class="line"><span class="number">50</span>:                 Long.toString(pullResult.getMaxOffset()));</div><div class="line"><span class="number">51</span>:         }</div><div class="line"><span class="number">52</span>: </div><div class="line"><span class="number">53</span>:         <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x5217;&#x8868;</span></div><div class="line"><span class="number">54</span>:         pullResultExt.setMsgFoundList(msgListFilterAgain);</div><div class="line"><span class="number">55</span>:     }</div><div class="line"><span class="number">56</span>: </div><div class="line"><span class="number">57</span>:     <span class="comment">// &#x6E05;&#x7A7A;&#x6D88;&#x606F;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7EC4;</span></div><div class="line"><span class="number">58</span>:     pullResultExt.setMessageBinary(<span class="keyword">null</span>);</div><div class="line"><span class="number">59</span>: </div><div class="line"><span class="number">60</span>:     <span class="keyword">return</span> pullResult;</div><div class="line"><span class="number">61</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5904;&#x7406;&#x62C9;&#x53D6;&#x7ED3;&#x679C;&#x3002;<ul>
<li>&#x66F4;&#x65B0;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F; <code>Broker</code> &#x7F16;&#x53F7;&#x7684;&#x6620;&#x5C04;&#x3002;</li>
<li>&#x89E3;&#x6790;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x6D88;&#x606F; <code>tagCode</code>&#x5339;&#x914D;&#x5408;&#x9002;&#x6D88;&#x606F;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 16 &#x884C; &#xFF1A;&#x66F4;&#x65B0;&#x6D88;&#x606F;&#x961F;&#x5217;&#x62C9;&#x53D6;&#x6D88;&#x606F; <code>Broker</code> &#x7F16;&#x53F7;&#x7684;&#x6620;&#x5C04;&#x3002;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x62C9;&#x53D6;&#x7684; <code>Broker</code> &#x7F16;&#x53F7;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x66F4;&#x65B0;&#x540E;&#x7684; <code>Broker</code> &#x7F16;&#x53F7;&#x3002;</li>
<li>&#x7B2C; 18 &#x81F3; 55 &#x884C; &#xFF1A;&#x89E3;&#x6790;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x6D88;&#x606F; <code>tagCode</code> &#x5339;&#x914D;&#x5408;&#x9002;&#x6D88;&#x606F;&#x3002;<ul>
<li>&#x7B2C; 20 &#x81F3; 22 &#x884C; &#xFF1A;&#x89E3;&#x6790;&#x6D88;&#x606F;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message&#x57FA;&#x7840;&#x300B;</a> &#x3002;</li>
<li>&#x7B2C; 24 &#x81F3; 35 &#x884C; &#xFF1A;&#x6839;&#x636E;&#x8BA2;&#x9605;&#x4FE1;&#x606F;<code>tagCode</code> &#x5339;&#x914D;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 37 &#x81F3; 43 &#x884C; &#xFF1A;<code>Hook</code>&#x3002;</li>
<li>&#x7B2C; 45 &#x81F3; 51 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x961F;&#x5217;&#x5F53;&#x524D;&#x6700;&#x5C0F;/&#x6700;&#x5927;&#x4F4D;&#x7F6E;&#x5230;&#x6D88;&#x606F;&#x62D3;&#x5C55;&#x5B57;&#x6BB5;&#x3002;</li>
<li>&#x7B2C; 54 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 58 &#x884C; &#xFF1A;&#x6E05;&#x7A7A;&#x6D88;&#x606F;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x7EC4;&#x3002;</li>
</ul>
<h3 id="ProcessQueue-putMessage-&#x2026;"><a href="#ProcessQueue-putMessage-&#x2026;" class="headerlink" title="ProcessQueue#putMessage(&#x2026;)"></a>ProcessQueue#putMessage(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>:  <span class="comment">/**</span></div><div class="line"> 2:  * &#x6D88;&#x606F;&#x6620;&#x5C04;&#x8BFB;&#x5199;&#x9501;</div><div class="line"> 3:  */</div><div class="line"> <span class="number">4</span>: <span class="keyword">private</span> <span class="keyword">final</span> ReadWriteLock lockTreeMap = <span class="keyword">new</span> ReentrantReadWriteLock();</div><div class="line"> <span class="number">5</span>: <span class="comment">/**</span></div><div class="line"> 6:  * &#x6D88;&#x606F;&#x6620;&#x5C04;</div><div class="line"> 7:  * key&#xFF1A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line"> 8:  */</div><div class="line"> <span class="number">9</span>: <span class="keyword">private</span> <span class="keyword">final</span> TreeMap&lt;Long, MessageExt&gt; msgTreeMap = <span class="keyword">new</span> TreeMap&lt;&gt;();</div><div class="line"><span class="number">10</span>: <span class="comment">/**</span></div><div class="line">11:  * &#x6D88;&#x606F;&#x6570;</div><div class="line">12:  */</div><div class="line"><span class="number">13</span>: <span class="keyword">private</span> <span class="keyword">final</span> AtomicLong msgCount = <span class="keyword">new</span> AtomicLong();</div><div class="line"><span class="number">14</span>: <span class="comment">/**</span></div><div class="line">15:  * &#x6DFB;&#x52A0;&#x6D88;&#x606F;&#x6700;&#x5927;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line">16:  */</div><div class="line"><span class="number">17</span>: <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">long</span> queueOffsetMax = <span class="number">0L</span>;</div><div class="line"><span class="number">18</span>: <span class="comment">/**</span></div><div class="line">19:  * &#x662F;&#x5426;&#x6B63;&#x5728;&#x6D88;&#x8D39;</div><div class="line">20:  */</div><div class="line"><span class="number">21</span>: <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> consuming = <span class="keyword">false</span>;</div><div class="line"><span class="number">22</span>: <span class="comment">/**</span></div><div class="line">23:  * Broker&#x7D2F;&#x8BA1;&#x6D88;&#x606F;&#x6570;&#x91CF;</div><div class="line">24:  * &#x8BA1;&#x7B97;&#x516C;&#x5F0F; = queueMaxOffset - &#x65B0;&#x6DFB;&#x52A0;&#x6D88;&#x606F;&#x6570;&#x7EC4;[n - 1].queueOffset</div><div class="line">25:  * Acc = Accumulation</div><div class="line">26:  * cnt = &#xFF08;&#x731C;&#x6D4B;&#xFF09;&#x5BF9;&#x6BD4;&#x5EA6;</div><div class="line">27:  */</div><div class="line"><span class="number">28</span>: <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">long</span> msgAccCnt = <span class="number">0</span>;</div><div class="line"><span class="number">29</span>: </div><div class="line"><span class="number">30</span>: <span class="comment">/**</span></div><div class="line">31:  * &#x6DFB;&#x52A0;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x662F;&#x5426;&#x63D0;&#x4EA4;&#x7ED9;&#x6D88;&#x8D39;&#x8005;</div><div class="line">32:  * &#x8FD4;&#x56DE;true&#xFF0C;&#x5F53;&#x6709;&#x65B0;&#x6D88;&#x606F;&#x6DFB;&#x52A0;&#x6210;&#x529F;&#x65F6;&#xFF0C;</div><div class="line">33:  *</div><div class="line">34:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;</div><div class="line">35:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x63D0;&#x4EA4;&#x7ED9;&#x6D88;&#x8D39;&#x8005;</div><div class="line">36:  */</div><div class="line"><span class="number">37</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">putMessage</span><span class="params">(<span class="keyword">final</span> List&lt;MessageExt&gt; msgs)</span> </span>{</div><div class="line"><span class="number">38</span>:     <span class="keyword">boolean</span> dispatchToConsume = <span class="keyword">false</span>;</div><div class="line"><span class="number">39</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">40</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"><span class="number">41</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">42</span>:             <span class="comment">// &#x6DFB;&#x52A0;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">43</span>:             <span class="keyword">int</span> validMsgCnt = <span class="number">0</span>;</div><div class="line"><span class="number">44</span>:             <span class="keyword">for</span> (MessageExt msg : msgs) {</div><div class="line"><span class="number">45</span>:                 MessageExt old = msgTreeMap.put(msg.getQueueOffset(), msg);</div><div class="line"><span class="number">46</span>:                 <span class="keyword">if</span> (<span class="keyword">null</span> == old) {</div><div class="line"><span class="number">47</span>:                     validMsgCnt++;</div><div class="line"><span class="number">48</span>:                     <span class="keyword">this</span>.queueOffsetMax = msg.getQueueOffset();</div><div class="line"><span class="number">49</span>:                 }</div><div class="line"><span class="number">50</span>:             }</div><div class="line"><span class="number">51</span>:             msgCount.addAndGet(validMsgCnt);</div><div class="line"><span class="number">52</span>: </div><div class="line"><span class="number">53</span>:             <span class="comment">// &#x8BA1;&#x7B97;&#x662F;&#x5426;&#x6B63;&#x5728;&#x6D88;&#x8D39;</span></div><div class="line"><span class="number">54</span>:             <span class="keyword">if</span> (!msgTreeMap.isEmpty() &amp;&amp; !<span class="keyword">this</span>.consuming) {</div><div class="line"><span class="number">55</span>:                 dispatchToConsume = <span class="keyword">true</span>;</div><div class="line"><span class="number">56</span>:                 <span class="keyword">this</span>.consuming = <span class="keyword">true</span>;</div><div class="line"><span class="number">57</span>:             }</div><div class="line"><span class="number">58</span>: </div><div class="line"><span class="number">59</span>:             <span class="comment">// Broker&#x7D2F;&#x8BA1;&#x6D88;&#x606F;&#x6570;&#x91CF;</span></div><div class="line"><span class="number">60</span>:             <span class="keyword">if</span> (!msgs.isEmpty()) {</div><div class="line"><span class="number">61</span>:                 MessageExt messageExt = msgs.get(msgs.size() - <span class="number">1</span>);</div><div class="line"><span class="number">62</span>:                 String property = messageExt.getProperty(MessageConst.PROPERTY_MAX_OFFSET);</div><div class="line"><span class="number">63</span>:                 <span class="keyword">if</span> (property != <span class="keyword">null</span>) {</div><div class="line"><span class="number">64</span>:                     <span class="keyword">long</span> accTotal = Long.parseLong(property) - messageExt.getQueueOffset();</div><div class="line"><span class="number">65</span>:                     <span class="keyword">if</span> (accTotal &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">66</span>:                         <span class="keyword">this</span>.msgAccCnt = accTotal;</div><div class="line"><span class="number">67</span>:                     }</div><div class="line"><span class="number">68</span>:                 }</div><div class="line"><span class="number">69</span>:             }</div><div class="line"><span class="number">70</span>:         } <span class="keyword">finally</span> {</div><div class="line"><span class="number">71</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"><span class="number">72</span>:         }</div><div class="line"><span class="number">73</span>:     } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"><span class="number">74</span>:         log.error(<span class="string">&quot;putMessage exception&quot;</span>, e);</div><div class="line"><span class="number">75</span>:     }</div><div class="line"><span class="number">76</span>: </div><div class="line"><span class="number">77</span>:     <span class="keyword">return</span> dispatchToConsume;</div><div class="line"><span class="number">78</span>: }</div></pre></td></tr></table></figure>
<h2 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2><p>&#x5982;&#x679C;&#x7528;&#x6700;&#x7B80;&#x5355;&#x7C97;&#x66B4;&#x7684;&#x65B9;&#x5F0F;&#x63CF;&#x8FF0; <code>PullConsumer</code> &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5982;&#x4E0B;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) {</div><div class="line">    <span class="keyword">if</span> (&#x4E0D;&#x6EE1;&#x8DB3;&#x62C9;&#x53D6;&#x6D88;&#x606F;) {</div><div class="line">        Thread.sleep(&#x95F4;&#x9694;);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    }</div><div class="line">    &#x4E3B;&#x52A8;&#x62C9;&#x53D6;&#x6D88;&#x606F;();</div><div class="line">}</div></pre></td></tr></table></figure>
<h1 id="6&#x3001;PushConsumer-&#x6D88;&#x8D39;&#x6D88;&#x606F;"><a href="#6&#x3001;PushConsumer-&#x6D88;&#x8D39;&#x6D88;&#x606F;" class="headerlink" title="6&#x3001;PushConsumer &#x6D88;&#x8D39;&#x6D88;&#x606F;"></a>6&#x3001;PushConsumer &#x6D88;&#x8D39;&#x6D88;&#x606F;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/06.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/06.png" alt="DefaultMQPushConsumerImpl&#x6D88;&#x8D39;&#x6D88;&#x606F;" class="ui centered image"></a></p>
<h2 id="ConsumeMessageConcurrentlyService-&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;"><a href="#ConsumeMessageConcurrentlyService-&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;" class="headerlink" title="ConsumeMessageConcurrentlyService &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;"></a>ConsumeMessageConcurrentlyService &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</h2><h3 id="ConsumeMessageConcurrentlyService-submitConsumeRequest-&#x2026;"><a href="#ConsumeMessageConcurrentlyService-submitConsumeRequest-&#x2026;" class="headerlink" title="ConsumeMessageConcurrentlyService#submitConsumeRequest(&#x2026;)"></a>ConsumeMessageConcurrentlyService#submitConsumeRequest(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x6D88;&#x8D39;&#x7EBF;&#x7A0B;&#x6C60;&#x961F;&#x5217;</div><div class="line"> 3:  */</div><div class="line"> <span class="number">4</span>: <span class="keyword">private</span> <span class="keyword">final</span> BlockingQueue&lt;Runnable&gt; consumeRequestQueue;</div><div class="line"> <span class="number">5</span>: <span class="comment">/**</span></div><div class="line"> 6:  * &#x6D88;&#x8D39;&#x7EBF;&#x7A0B;&#x6C60;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="keyword">private</span> <span class="keyword">final</span> ThreadPoolExecutor consumeExecutor;</div><div class="line"> <span class="number">9</span>: </div><div class="line"><span class="number">10</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">submitConsumeRequest</span><span class="params">(//</span></span></div><div class="line"><span class="number">11</span>:     <span class="keyword">final</span> List&lt;MessageExt&gt; msgs, //</div><div class="line"><span class="number">12</span>:     <span class="keyword">final</span> ProcessQueue processQueue, //</div><div class="line"><span class="number">13</span>:     <span class="keyword">final</span> MessageQueue messageQueue, //</div><div class="line"><span class="number">14</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> dispatchToConsume) {</div><div class="line"><span class="number">15</span>:     <span class="keyword">final</span> <span class="keyword">int</span> consumeBatchSize = <span class="keyword">this</span>.defaultMQPushConsumer.getConsumeMessageBatchMaxSize();</div><div class="line"><span class="number">16</span>:     <span class="keyword">if</span> (msgs.size() &lt;= consumeBatchSize) { <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5C0F;&#x4E8E;&#x6279;&#x91CF;&#x6D88;&#x606F;&#x6570;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">17</span>:         ConsumeRequest consumeRequest = <span class="keyword">new</span> ConsumeRequest(msgs, processQueue, messageQueue);</div><div class="line"><span class="number">18</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">19</span>:             <span class="keyword">this</span>.consumeExecutor.submit(consumeRequest);</div><div class="line"><span class="number">20</span>:         } <span class="keyword">catch</span> (RejectedExecutionException e) {</div><div class="line"><span class="number">21</span>:             <span class="keyword">this</span>.submitConsumeRequestLater(consumeRequest);</div><div class="line"><span class="number">22</span>:         }</div><div class="line"><span class="number">23</span>:     } <span class="keyword">else</span> { <span class="comment">// &#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5927;&#x4E8E;&#x6279;&#x91CF;&#x6D88;&#x606F;&#x6570;&#xFF0C;&#x8FDB;&#x884C;&#x5206;&#x62C6;&#x6210;&#x591A;&#x4E2A;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">24</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> total = <span class="number">0</span>; total &lt; msgs.size(); ) {</div><div class="line"><span class="number">25</span>:             <span class="comment">// &#x8BA1;&#x7B97;&#x5F53;&#x524D;&#x62C6;&#x5206;&#x8BF7;&#x6C42;&#x5305;&#x542B;&#x7684;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">26</span>:             List&lt;MessageExt&gt; msgThis = <span class="keyword">new</span> ArrayList&lt;&gt;(consumeBatchSize);</div><div class="line"><span class="number">27</span>:             <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; consumeBatchSize; i++, total++) {</div><div class="line"><span class="number">28</span>:                 <span class="keyword">if</span> (total &lt; msgs.size()) {</div><div class="line"><span class="number">29</span>:                     msgThis.add(msgs.get(total));</div><div class="line"><span class="number">30</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">31</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">32</span>:                 }</div><div class="line"><span class="number">33</span>:             }</div><div class="line"><span class="number">34</span>: </div><div class="line"><span class="number">35</span>:             <span class="comment">// &#x63D0;&#x4EA4;&#x62C6;&#x5206;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</span></div><div class="line"><span class="number">36</span>:             ConsumeRequest consumeRequest = <span class="keyword">new</span> ConsumeRequest(msgThis, processQueue, messageQueue);</div><div class="line"><span class="number">37</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">38</span>:                 <span class="keyword">this</span>.consumeExecutor.submit(consumeRequest);</div><div class="line"><span class="number">39</span>:             } <span class="keyword">catch</span> (RejectedExecutionException e) {</div><div class="line"><span class="number">40</span>:                 <span class="comment">// &#x5982;&#x679C;&#x88AB;&#x62D2;&#x7EDD;&#xFF0C;&#x5219;&#x5C06;&#x5F53;&#x524D;&#x62C6;&#x5206;&#x6D88;&#x606F;+&#x5269;&#x4F59;&#x6D88;&#x606F;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;</span></div><div class="line"><span class="number">41</span>:                 <span class="keyword">for</span> (; total &lt; msgs.size(); total++) {</div><div class="line"><span class="number">42</span>:                     msgThis.add(msgs.get(total));</div><div class="line"><span class="number">43</span>:                 }</div><div class="line"><span class="number">44</span>:                 <span class="keyword">this</span>.submitConsumeRequestLater(consumeRequest);</div><div class="line"><span class="number">45</span>:             }</div><div class="line"><span class="number">46</span>:         }</div><div class="line"><span class="number">47</span>:     }</div><div class="line"><span class="number">48</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x63D0;&#x4EA4;<strong>&#x7ACB;&#x5373;</strong>&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 16 &#x81F3; 22 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;&#x6279;&#x91CF;&#x6D88;&#x8D39;&#x6570;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 23 &#x81F3; 47 &#x884C; &#xFF1A;&#x5F53;&#x63D0;&#x4EA4;&#x6D88;&#x606F;&#x5927;&#x4E8E;&#x6279;&#x91CF;&#x6D88;&#x8D39;&#x6570;&#xFF0C;&#x8FDB;&#x884C;&#x5206;&#x62C6;&#x6210;&#x591A;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;<ul>
<li>&#x7B2C; 25 &#x81F3; 33 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x5F53;&#x524D;&#x62C6;&#x5206;&#x8BF7;&#x6C42;&#x5305;&#x542B;&#x7684;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 35 &#x81F3; 38 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x62C6;&#x5206;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 39 &#x81F3; 44 &#x884C; &#xFF1A;&#x63D0;&#x4EA4;&#x8BF7;&#x6C42;&#x88AB;&#x62D2;&#x7EDD;&#xFF0C;&#x5219;&#x5C06;&#x5F53;&#x524D;&#x62C6;&#x5206;&#x6D88;&#x606F; + &#x5269;&#x4F59;&#x6D88;&#x606F;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#xFF0C;&#x7ED3;&#x675F;&#x62C6;&#x5206;&#x5FAA;&#x73AF;&#x3002;</li>
</ul>
</li>
</ul>
<h3 id="ConsumeMessageConcurrentlyService-submitConsumeRequestLater"><a href="#ConsumeMessageConcurrentlyService-submitConsumeRequestLater" class="headerlink" title="ConsumeMessageConcurrentlyService#submitConsumeRequestLater"></a>ConsumeMessageConcurrentlyService#submitConsumeRequestLater</h3> <figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</div><div class="line"> 3:  *</div><div class="line"> 4:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;&#x5217;&#x8868;</div><div class="line"> 5:  * <span class="doctag">@param</span> processQueue &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line"> 6:  * <span class="doctag">@param</span> messageQueue &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">submitConsumeRequestLater</span><span class="params">(//</span></span></div><div class="line"> <span class="number">9</span>:     <span class="keyword">final</span> List&lt;MessageExt&gt; msgs, //</div><div class="line"><span class="number">10</span>:     <span class="keyword">final</span> ProcessQueue processQueue, //</div><div class="line"><span class="number">11</span>:     <span class="keyword">final</span> MessageQueue messageQueue//</div><div class="line"><span class="number">12</span>: ) {</div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>:     <span class="keyword">this</span>.scheduledExecutorService.schedule(<span class="keyword">new</span> Runnable() {</div><div class="line"><span class="number">15</span>: </div><div class="line"><span class="number">16</span>:         <span class="meta">@Override</span></div><div class="line"><span class="number">17</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">18</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.submitConsumeRequest(msgs, processQueue, messageQueue, <span class="keyword">true</span>);</div><div class="line"><span class="number">19</span>:         }</div><div class="line"><span class="number">20</span>:     }, <span class="number">5000</span>, TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">21</span>: }</div><div class="line"><span class="number">22</span>: </div><div class="line"><span class="number">23</span>: <span class="comment">/**</span></div><div class="line">24:  * &#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;</div><div class="line">25:  * <span class="doctag">@param</span> consumeRequest &#x6D88;&#x8D39;&#x8BF7;&#x6C42;</div><div class="line">26:  */</div><div class="line"><span class="number">27</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">submitConsumeRequestLater</span><span class="params">(<span class="keyword">final</span> ConsumeRequest consumeRequest//</span></span></div><div class="line"><span class="number">28</span>: ) {</div><div class="line"><span class="number">29</span>: </div><div class="line"><span class="number">30</span>:     <span class="keyword">this</span>.scheduledExecutorService.schedule(<span class="keyword">new</span> Runnable() {</div><div class="line"><span class="number">31</span>: </div><div class="line"><span class="number">32</span>:         <span class="meta">@Override</span></div><div class="line"><span class="number">33</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">34</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.consumeExecutor.submit(consumeRequest); <span class="comment">// TODO BUG ?</span></div><div class="line"><span class="number">35</span>:         }</div><div class="line"><span class="number">36</span>:     }, <span class="number">5000</span>, TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">37</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;</li>
<li>&#x7B2C; 34 &#x884C; &#xFF1A;&#x76F4;&#x63A5;&#x8C03;&#x7528; <code>ConsumeMessageConcurrentlyService.this.consumeExecutor.submit(consumeRequest);</code>&#x3002;&#x5982;&#x679C;&#x6D88;&#x606F;&#x6570;&#x8D85;&#x8FC7;&#x6279;&#x91CF;&#x6D88;&#x8D39;&#x4E0A;&#x9650;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x662F;<strong>BUG</strong>&#x3002;</li>
</ul>
<h2 id="ConsumeRequest"><a href="#ConsumeRequest" class="headerlink" title="ConsumeRequest"></a>ConsumeRequest</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">ConsumeRequest</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>{</div><div class="line">  <span class="number">2</span>: </div><div class="line">  <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line">  4:      * &#x6D88;&#x8D39;&#x6D88;&#x606F;&#x5217;&#x8868;</div><div class="line">  5:      */</div><div class="line">  <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">final</span> List&lt;MessageExt&gt; msgs;</div><div class="line">  <span class="number">7</span>:     <span class="comment">/**</span></div><div class="line">  8:      * &#x6D88;&#x606F;&#x5904;&#x7406;&#x961F;&#x5217;</div><div class="line">  9:      */</div><div class="line"> <span class="number">10</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ProcessQueue processQueue;</div><div class="line"> <span class="number">11</span>:     <span class="comment">/**</span></div><div class="line"> 12:      * &#x6D88;&#x606F;&#x961F;&#x5217;</div><div class="line"> 13:      */</div><div class="line"> <span class="number">14</span>:     <span class="keyword">private</span> <span class="keyword">final</span> MessageQueue messageQueue;</div><div class="line"> <span class="number">15</span>: </div><div class="line"> <span class="number">16</span>:     <span class="function"><span class="keyword">public</span> <span class="title">ConsumeRequest</span><span class="params">(List&lt;MessageExt&gt; msgs, ProcessQueue processQueue, MessageQueue messageQueue)</span> </span>{</div><div class="line"> <span class="number">17</span>:         <span class="keyword">this</span>.msgs = msgs;</div><div class="line"> <span class="number">18</span>:         <span class="keyword">this</span>.processQueue = processQueue;</div><div class="line"> <span class="number">19</span>:         <span class="keyword">this</span>.messageQueue = messageQueue;</div><div class="line"> <span class="number">20</span>:     }</div><div class="line"> <span class="number">21</span>: </div><div class="line"> <span class="number">22</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">23</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">24</span>:         <span class="comment">// &#x5E9F;&#x5F03;&#x961F;&#x5217;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">25</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.processQueue.isDropped()) {</div><div class="line"> <span class="number">26</span>:             log.info(<span class="string">&quot;the message queue not be able to consume, because it&apos;s dropped. group={} {}&quot;</span>, ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.consumerGroup, <span class="keyword">this</span>.messageQueue);</div><div class="line"> <span class="number">27</span>:             <span class="keyword">return</span>;</div><div class="line"> <span class="number">28</span>:         }</div><div class="line"> <span class="number">29</span>: </div><div class="line"> <span class="number">30</span>:         MessageListenerConcurrently listener = ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.messageListener; <span class="comment">// &#x76D1;&#x542C;&#x5668;</span></div><div class="line"> <span class="number">31</span>:         ConsumeConcurrentlyContext context = <span class="keyword">new</span> ConsumeConcurrentlyContext(messageQueue); <span class="comment">// &#x6D88;&#x8D39;Context</span></div><div class="line"> <span class="number">32</span>:         ConsumeConcurrentlyStatus status = <span class="keyword">null</span>; <span class="comment">// &#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;</span></div><div class="line"> <span class="number">33</span>: </div><div class="line"> <span class="number">34</span>:         <span class="comment">// Hook</span></div><div class="line"> <span class="number">35</span>:         ConsumeMessageContext consumeMessageContext = <span class="keyword">null</span>;</div><div class="line"> <span class="number">36</span>:         <span class="keyword">if</span> (ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.hasHook()) {</div><div class="line"> <span class="number">37</span>:             consumeMessageContext = <span class="keyword">new</span> ConsumeMessageContext();</div><div class="line"> <span class="number">38</span>:             consumeMessageContext.setConsumerGroup(defaultMQPushConsumer.getConsumerGroup());</div><div class="line"> <span class="number">39</span>:             consumeMessageContext.setProps(<span class="keyword">new</span> HashMap&lt;String, String&gt;());</div><div class="line"> <span class="number">40</span>:             consumeMessageContext.setMq(messageQueue);</div><div class="line"> <span class="number">41</span>:             consumeMessageContext.setMsgList(msgs);</div><div class="line"> <span class="number">42</span>:             consumeMessageContext.setSuccess(<span class="keyword">false</span>);</div><div class="line"> <span class="number">43</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.executeHookBefore(consumeMessageContext);</div><div class="line"> <span class="number">44</span>:         }</div><div class="line"> <span class="number">45</span>: </div><div class="line"> <span class="number">46</span>:         <span class="keyword">long</span> beginTimestamp = System.currentTimeMillis();</div><div class="line"> <span class="number">47</span>:         <span class="keyword">boolean</span> hasException = <span class="keyword">false</span>;</div><div class="line"> <span class="number">48</span>:         ConsumeReturnType returnType = ConsumeReturnType.SUCCESS; <span class="comment">// &#x6D88;&#x8D39;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7C7B;&#x578B;</span></div><div class="line"> <span class="number">49</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">50</span>:             <span class="comment">// &#x5F53;&#x6D88;&#x606F;&#x4E3A;&#x91CD;&#x8BD5;&#x6D88;&#x606F;&#xFF0C;&#x8BBE;&#x7F6E;Topic&#x4E3A;&#x539F;&#x59CB;Topic</span></div><div class="line"> <span class="number">51</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.resetRetryTopic(msgs);</div><div class="line"> <span class="number">52</span>: </div><div class="line"> <span class="number">53</span>:             <span class="comment">// &#x8BBE;&#x7F6E;&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x65F6;&#x95F4;</span></div><div class="line"> <span class="number">54</span>:             <span class="keyword">if</span> (msgs != <span class="keyword">null</span> &amp;&amp; !msgs.isEmpty()) {</div><div class="line"> <span class="number">55</span>:                 <span class="keyword">for</span> (MessageExt msg : msgs) {</div><div class="line"> <span class="number">56</span>:                     MessageAccessor.setConsumeStartTimeStamp(msg, String.valueOf(System.currentTimeMillis()));</div><div class="line"> <span class="number">57</span>:                 }</div><div class="line"> <span class="number">58</span>:             }</div><div class="line"> <span class="number">59</span>: </div><div class="line"> <span class="number">60</span>:             <span class="comment">// &#x8FDB;&#x884C;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">61</span>:             status = listener.consumeMessage(Collections.unmodifiableList(msgs), context);</div><div class="line"> <span class="number">62</span>:         } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">63</span>:             log.warn(<span class="string">&quot;consumeMessage exception: {} Group: {} Msgs: {} MQ: {}&quot;</span>,</div><div class="line"> <span class="number">64</span>:                 RemotingHelper.exceptionSimpleDesc(e), <span class="comment">//</span></div><div class="line"> <span class="number">65</span>:                 ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.consumerGroup,</div><div class="line"> <span class="number">66</span>:                 msgs,</div><div class="line"> <span class="number">67</span>:                 messageQueue);</div><div class="line"> <span class="number">68</span>:             hasException = <span class="keyword">true</span>;</div><div class="line"> <span class="number">69</span>:         }</div><div class="line"> <span class="number">70</span>: </div><div class="line"> <span class="number">71</span>:         <span class="comment">// &#x89E3;&#x6790;&#x6D88;&#x8D39;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7C7B;&#x578B;</span></div><div class="line"> <span class="number">72</span>:         <span class="keyword">long</span> consumeRT = System.currentTimeMillis() - beginTimestamp;</div><div class="line"> <span class="number">73</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == status) {</div><div class="line"> <span class="number">74</span>:             <span class="keyword">if</span> (hasException) {</div><div class="line"> <span class="number">75</span>:                 returnType = ConsumeReturnType.EXCEPTION;</div><div class="line"> <span class="number">76</span>:             } <span class="keyword">else</span> {</div><div class="line"> <span class="number">77</span>:                 returnType = ConsumeReturnType.RETURNNULL;</div><div class="line"> <span class="number">78</span>:             }</div><div class="line"> <span class="number">79</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (consumeRT &gt;= defaultMQPushConsumer.getConsumeTimeout() * <span class="number">60</span> * <span class="number">1000</span>) {</div><div class="line"> <span class="number">80</span>:             returnType = ConsumeReturnType.TIME_OUT;</div><div class="line"> <span class="number">81</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (ConsumeConcurrentlyStatus.RECONSUME_LATER == status) {</div><div class="line"> <span class="number">82</span>:             returnType = ConsumeReturnType.FAILED;</div><div class="line"> <span class="number">83</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (ConsumeConcurrentlyStatus.CONSUME_SUCCESS == status) {</div><div class="line"> <span class="number">84</span>:             returnType = ConsumeReturnType.SUCCESS;</div><div class="line"> <span class="number">85</span>:         }</div><div class="line"> <span class="number">86</span>: </div><div class="line"> <span class="number">87</span>:         <span class="comment">// Hook</span></div><div class="line"> <span class="number">88</span>:         <span class="keyword">if</span> (ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.hasHook()) {</div><div class="line"> <span class="number">89</span>:             consumeMessageContext.getProps().put(MixAll.CONSUME_CONTEXT_TYPE, returnType.name());</div><div class="line"> <span class="number">90</span>:         }</div><div class="line"> <span class="number">91</span>: </div><div class="line"> <span class="number">92</span>:         <span class="comment">// &#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;&#x4E3A;&#x7A7A;&#x65F6;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x4E3A;&#x7A0D;&#x540E;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">93</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == status) {</div><div class="line"> <span class="number">94</span>:             log.warn(<span class="string">&quot;consumeMessage return null, Group: {} Msgs: {} MQ: {}&quot;</span>,</div><div class="line"> <span class="number">95</span>:                 ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.consumerGroup,</div><div class="line"> <span class="number">96</span>:                 msgs,</div><div class="line"> <span class="number">97</span>:                 messageQueue);</div><div class="line"> <span class="number">98</span>:             status = ConsumeConcurrentlyStatus.RECONSUME_LATER;</div><div class="line"> <span class="number">99</span>:         }</div><div class="line"><span class="number">100</span>: </div><div class="line"><span class="number">101</span>:         <span class="comment">// Hook</span></div><div class="line"><span class="number">102</span>:         <span class="keyword">if</span> (ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.hasHook()) {</div><div class="line"><span class="number">103</span>:             consumeMessageContext.setStatus(status.toString());</div><div class="line"><span class="number">104</span>:             consumeMessageContext.setSuccess(ConsumeConcurrentlyStatus.CONSUME_SUCCESS == status);</div><div class="line"><span class="number">105</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.defaultMQPushConsumerImpl.executeHookAfter(consumeMessageContext);</div><div class="line"><span class="number">106</span>:         }</div><div class="line"><span class="number">107</span>: </div><div class="line"><span class="number">108</span>:         <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"><span class="number">109</span>:         ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.getConsumerStatsManager()</div><div class="line"><span class="number">110</span>:             .incConsumeRT(ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.consumerGroup, messageQueue.getTopic(), consumeRT);</div><div class="line"><span class="number">111</span>: </div><div class="line"><span class="number">112</span>:         <span class="comment">// &#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;</span></div><div class="line"><span class="number">113</span>:         <span class="keyword">if</span> (!processQueue.isDropped()) {</div><div class="line"><span class="number">114</span>:             ConsumeMessageConcurrentlyService.<span class="keyword">this</span>.processConsumeResult(status, context, <span class="keyword">this</span>);</div><div class="line"><span class="number">115</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">116</span>:             log.warn(<span class="string">&quot;processQueue is dropped without process consume result. messageQueue={}, msgs={}&quot;</span>, messageQueue, msgs);</div><div class="line"><span class="number">117</span>:         }</div><div class="line"><span class="number">118</span>:     }</div><div class="line"><span class="number">119</span>: </div><div class="line"><span class="number">120</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x3002;&#x63D0;&#x4EA4;&#x8BF7;&#x6C42;&#x6267;&#x884C;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x7B2C; 24 &#x81F3; 28 &#x884C; &#xFF1A;&#x5E9F;&#x5F03;&#x5904;&#x7406;&#x961F;&#x5217;&#x4E0D;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x7B2C; 34 &#x81F3; 44 &#x884C; &#xFF1A;Hook&#x3002;</li>
<li>&#x7B2C; 51 &#x884C; &#xFF1A;&#x5F53;&#x6D88;&#x606F;&#x4E3A;&#x91CD;&#x8BD5;&#x6D88;&#x606F;&#xFF0C;&#x8BBE;&#x7F6E; <code>Topic</code>&#x4E3A;&#x539F;&#x59CB; <code>Topic</code>&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x539F;&#x59CB; <code>Topic</code> &#x4E3A; <code>TopicTest</code>&#xFF0C;&#x91CD;&#x8BD5;&#x65F6; <code>Topic</code> &#x4E3A; <code>%RETRY%please_rename_unique_group_name_4</code>&#xFF0C;&#x7ECF;&#x8FC7;&#x8BE5;&#x65B9;&#x6CD5;&#xFF0C;<code>Topic</code> &#x8BBE;&#x7F6E;&#x56DE; <code>TopicTest</code>&#x3002;</li>
<li>&#x7B2C; 53 &#x81F3; 58 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x5F00;&#x59CB;&#x6D88;&#x8D39;&#x65F6;&#x95F4;&#x3002;</li>
<li>&#x7B2C; 61 &#x884C; &#xFF1A;<strong>&#x8FDB;&#x884C;&#x6D88;&#x8D39;</strong>&#x3002;</li>
<li>&#x7B2C; 71 &#x81F3; 85 &#x884C; &#xFF1A;&#x89E3;&#x6790;&#x6D88;&#x8D39;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7C7B;&#x578B;</li>
<li>&#x7B2C; 87 &#x81F3; 90 &#x884C; &#xFF1A;<code>Hook</code>&#x3002;</li>
<li>&#x7B2C; 92 &#x81F3; 99 &#x884C; &#xFF1A;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;&#x672A;&#x7A7A;&#x65F6;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x72B6;&#x6001;&#x4E3A;&#x7A0D;&#x540E;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x7B2C; 101 &#x81F3; 106 &#x884C; &#xFF1A;<code>Hook</code>&#x3002;</li>
<li>&#x7B2C; 108 &#x81F3; 110 &#x884C; &#xFF1A;&#x7EDF;&#x8BA1;&#x3002;</li>
<li>&#x7B2C; 112 &#x81F3; 117 &#x884C; &#xFF1A;&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x3002;<strong>&#x5982;&#x679C;&#x6D88;&#x8D39;&#x5904;&#x7406;&#x961F;&#x5217;&#x88AB;&#x79FB;&#x9664;&#xFF0C;&#x6070;&#x597D;&#x6D88;&#x606F;&#x88AB;&#x6D88;&#x8D39;&#xFF0C;&#x5219;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x6D88;&#x606F;&#x91CD;&#x590D;&#x6D88;&#x8D39;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6D88;&#x606F;&#x6D88;&#x8D39;&#x8981;&#x5C3D;&#x6700;&#x5927;&#x53EF;&#x80FD;&#x6027;&#x5B9E;&#x73B0;&#x5E42;&#x7B49;&#x6027;</strong>&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#consumemessageconcurrentlyserviceprocessconsumeresult">ConsumeMessageConcurrentlyService#processConsumeResult(&#x2026;)</a>&#x3002;</li>
</ul>
<h2 id="ConsumeMessageConcurrentlyService-processConsumeResult-&#x2026;"><a href="#ConsumeMessageConcurrentlyService-processConsumeResult-&#x2026;" class="headerlink" title="ConsumeMessageConcurrentlyService#processConsumeResult(&#x2026;)"></a>ConsumeMessageConcurrentlyService#processConsumeResult(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processConsumeResult</span><span class="params">(//</span></span></div><div class="line"> <span class="number">2</span>:     <span class="keyword">final</span> ConsumeConcurrentlyStatus status, //</div><div class="line"> <span class="number">3</span>:     <span class="keyword">final</span> ConsumeConcurrentlyContext context, //</div><div class="line"> <span class="number">4</span>:     <span class="keyword">final</span> ConsumeRequest consumeRequest//</div><div class="line"> <span class="number">5</span>: ) {</div><div class="line"> <span class="number">6</span>:     <span class="keyword">int</span> ackIndex = context.getAckIndex();</div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:     <span class="comment">// &#x6D88;&#x606F;&#x4E3A;&#x7A7A;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></div><div class="line"> <span class="number">9</span>:     <span class="keyword">if</span> (consumeRequest.getMsgs().isEmpty())</div><div class="line"><span class="number">10</span>:         <span class="keyword">return</span>;</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>:     <span class="comment">// &#x8BA1;&#x7B97;&#x4ECE;consumeRequest.msgs[0]&#x5230;consumeRequest.msgs[ackIndex]&#x7684;&#x6D88;&#x606F;&#x6D88;&#x8D39;&#x6210;&#x529F;</span></div><div class="line"><span class="number">13</span>:     <span class="keyword">switch</span> (status) {</div><div class="line"><span class="number">14</span>:         <span class="keyword">case</span> CONSUME_SUCCESS:</div><div class="line"><span class="number">15</span>:             <span class="keyword">if</span> (ackIndex &gt;= consumeRequest.getMsgs().size()) {</div><div class="line"><span class="number">16</span>:                 ackIndex = consumeRequest.getMsgs().size() - <span class="number">1</span>;</div><div class="line"><span class="number">17</span>:             }</div><div class="line"><span class="number">18</span>:             <span class="comment">// &#x7EDF;&#x8BA1;&#x6210;&#x529F;/&#x5931;&#x8D25;&#x6570;&#x91CF;</span></div><div class="line"><span class="number">19</span>:             <span class="keyword">int</span> ok = ackIndex + <span class="number">1</span>;</div><div class="line"><span class="number">20</span>:             <span class="keyword">int</span> failed = consumeRequest.getMsgs().size() - ok;</div><div class="line"><span class="number">21</span>:             <span class="keyword">this</span>.getConsumerStatsManager().incConsumeOKTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), ok);</div><div class="line"><span class="number">22</span>:             <span class="keyword">this</span>.getConsumerStatsManager().incConsumeFailedTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(), failed);</div><div class="line"><span class="number">23</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">24</span>:         <span class="keyword">case</span> RECONSUME_LATER:</div><div class="line"><span class="number">25</span>:             ackIndex = -<span class="number">1</span>;</div><div class="line"><span class="number">26</span>:             <span class="comment">// &#x7EDF;&#x8BA1;&#x6210;&#x529F;/&#x5931;&#x8D25;&#x6570;&#x91CF;</span></div><div class="line"><span class="number">27</span>:             <span class="keyword">this</span>.getConsumerStatsManager().incConsumeFailedTPS(consumerGroup, consumeRequest.getMessageQueue().getTopic(),</div><div class="line"><span class="number">28</span>:                 consumeRequest.getMsgs().size());</div><div class="line"><span class="number">29</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">30</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">31</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">32</span>:     }</div><div class="line"><span class="number">33</span>: </div><div class="line"><span class="number">34</span>:     <span class="comment">// &#x5904;&#x7406;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">35</span>:     <span class="keyword">switch</span> (<span class="keyword">this</span>.defaultMQPushConsumer.getMessageModel()) {</div><div class="line"><span class="number">36</span>:         <span class="keyword">case</span> BROADCASTING: <span class="comment">// &#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5426;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#xFF0C;&#x4E0D;&#x53D1;&#x56DE;&#x6D88;&#x606F;&#x5230;Broker&#xFF0C;&#x53EA;&#x6253;&#x5370;Log</span></div><div class="line"><span class="number">37</span>:             <span class="keyword">for</span> (<span class="keyword">int</span> i = ackIndex + <span class="number">1</span>; i &lt; consumeRequest.getMsgs().size(); i++) {</div><div class="line"><span class="number">38</span>:                 MessageExt msg = consumeRequest.getMsgs().get(i);</div><div class="line"><span class="number">39</span>:                 log.warn(<span class="string">&quot;BROADCASTING, the message consume failed, drop it, {}&quot;</span>, msg.toString());</div><div class="line"><span class="number">40</span>:             }</div><div class="line"><span class="number">41</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">42</span>:         <span class="keyword">case</span> CLUSTERING:</div><div class="line"><span class="number">43</span>:             <span class="comment">// &#x53D1;&#x56DE;&#x6D88;&#x606F;&#x5931;&#x8D25;&#x5230;Broker&#x3002;</span></div><div class="line"><span class="number">44</span>:             List&lt;MessageExt&gt; msgBackFailed = <span class="keyword">new</span> ArrayList&lt;&gt;(consumeRequest.getMsgs().size());</div><div class="line"><span class="number">45</span>:             <span class="keyword">for</span> (<span class="keyword">int</span> i = ackIndex + <span class="number">1</span>; i &lt; consumeRequest.getMsgs().size(); i++) {</div><div class="line"><span class="number">46</span>:                 MessageExt msg = consumeRequest.getMsgs().get(i);</div><div class="line"><span class="number">47</span>:                 <span class="keyword">boolean</span> result = <span class="keyword">this</span>.sendMessageBack(msg, context);</div><div class="line"><span class="number">48</span>:                 <span class="keyword">if</span> (!result) {</div><div class="line"><span class="number">49</span>:                     msg.setReconsumeTimes(msg.getReconsumeTimes() + <span class="number">1</span>);</div><div class="line"><span class="number">50</span>:                     msgBackFailed.add(msg);</div><div class="line"><span class="number">51</span>:                 }</div><div class="line"><span class="number">52</span>:             }</div><div class="line"><span class="number">53</span>: </div><div class="line"><span class="number">54</span>:             <span class="comment">// &#x53D1;&#x56DE;Broker&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x91CD;&#x65B0;&#x6D88;&#x8D39;</span></div><div class="line"><span class="number">55</span>:             <span class="keyword">if</span> (!msgBackFailed.isEmpty()) {</div><div class="line"><span class="number">56</span>:                 consumeRequest.getMsgs().removeAll(msgBackFailed);</div><div class="line"><span class="number">57</span>: </div><div class="line"><span class="number">58</span>:                 <span class="keyword">this</span>.submitConsumeRequestLater(msgBackFailed, consumeRequest.getProcessQueue(), consumeRequest.getMessageQueue());</div><div class="line"><span class="number">59</span>:             }</div><div class="line"><span class="number">60</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">61</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">62</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">63</span>:     }</div><div class="line"><span class="number">64</span>: </div><div class="line"><span class="number">65</span>:     <span class="comment">// &#x79FB;&#x9664;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;&#x6700;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"><span class="number">66</span>:     <span class="keyword">long</span> offset = consumeRequest.getProcessQueue().removeMessage(consumeRequest.getMsgs());</div><div class="line"><span class="number">67</span>:     <span class="keyword">if</span> (offset &gt;= <span class="number">0</span> &amp;&amp; !consumeRequest.getProcessQueue().isDropped()) {</div><div class="line"><span class="number">68</span>:         <span class="keyword">this</span>.defaultMQPushConsumerImpl.getOffsetStore().updateOffset(consumeRequest.getMessageQueue(), offset, <span class="keyword">true</span>);</div><div class="line"><span class="number">69</span>:     }</div><div class="line"><span class="number">70</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5904;&#x7406;&#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x3002;</li>
<li>&#x7B2C; 8 &#x81F3; 10 &#x884C; &#xFF1A;&#x6D88;&#x8D39;&#x8BF7;&#x6C42;&#x6D88;&#x606F;&#x672A;&#x7A7A;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x3002;</li>
<li>&#x7B2C; 12 &#x81F3; 32 &#x884C; &#xFF1A;&#x8BA1;&#x7B97; <code>ackIndex</code> &#x503C;&#x3002;<code>consumeRequest.msgs[0 - ackIndex]</code>&#x4E3A;&#x6D88;&#x8D39;&#x6210;&#x529F;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C; <code>ack</code> &#x786E;&#x8BA4;&#x3002;<ul>
<li>&#x7B2C; 14 &#x81F3; 23 &#x884C; &#xFF1A;<code>CONSUME_SUCCESS</code> &#xFF1A;<code>ackIndex = context.getAckIndex()</code>&#x3002;</li>
<li>&#x7B2C; 24 &#x81F3; 29 &#x884C; &#xFF1A;<code>RECONSUME_LATER</code> &#xFF1A;<code>ackIndex = -1</code>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C;34 &#x81F3; 63 &#x884C; &#xFF1A;&#x5904;&#x7406;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#x3002;<ul>
<li>&#x7B2C; 36 &#x81F3; 41 &#x884C; &#xFF1A;<code>BROADCASTING</code> &#xFF1A;&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5426;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#xFF0C;&#x4E0D;&#x53D1;&#x56DE;&#x6D88;&#x606F;&#x5230; <code>Broker</code>&#xFF0C;&#x53EA;&#x6253;&#x5370;&#x65E5;&#x5FD7;&#x3002;</li>
<li>&#x7B2C; 42 &#x81F3; 60 &#x884C; &#xFF1A;<code>CLUSTERING</code> &#xFF1A;&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;&#xFF0C;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#x53D1;&#x56DE;&#x5230; <code>Broker</code>&#x3002;<ul>
<li>&#x7B2C; 43 &#x81F3; 52 &#x884C; &#xFF1A;&#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#x5230; <code>Broker</code>&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#defaultmqpushconsumerimplsendmessageback">DefaultMQPushConsumerImpl#sendMessageBack(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 54 &#x81F3; 59 &#x884C; &#xFF1A;&#x53D1;&#x56DE; <code>Broker</code> &#x5931;&#x8D25;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x5EF6;&#x8FDF;&#x91CD;&#x65B0;&#x6D88;&#x8D39;&#x3002;</li>
<li><strong>&#x5982;&#x679C;&#x53D1;&#x56DE; <code>Broker</code> &#x6210;&#x529F;&#xFF0C;&#x7ED3;&#x679C;&#x56E0;&#x4E3A;&#x4F8B;&#x5982;&#x7F51;&#x7EDC;&#x5F02;&#x5E38;&#xFF0C;&#x5BFC;&#x81F4; <code>Consumer</code>&#x4EE5;&#x4E3A;&#x53D1;&#x56DE;&#x5931;&#x8D25;&#xFF0C;&#x5224;&#x5B9A;&#x6D88;&#x8D39;&#x53D1;&#x56DE;&#x5931;&#x8D25;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x6D88;&#x606F;&#x91CD;&#x590D;&#x6D88;&#x8D39;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6D88;&#x606F;&#x6D88;&#x8D39;&#x8981;&#x5C3D;&#x6700;&#x5927;&#x53EF;&#x80FD;&#x6027;&#x5B9E;&#x73B0;&#x5E42;&#x7B49;&#x6027;&#x3002;</strong></li>
</ul>
</li>
</ul>
</li>
<li>&#x7B2C; 65 &#x81F3; 69 &#x884C; &#xFF1A;&#x79FB;&#x9664;<strong>&#x3010;&#x6D88;&#x8D39;&#x6210;&#x529F;&#x3011;</strong>&#x548C;<strong>&#x3010;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x4F46;&#x53D1;&#x56DE;<code>Broker</code>&#x6210;&#x529F;&#x3011;</strong>&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x66F4;&#x65B0;&#x6700;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;<ul>
<li>&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x6709;<strong>&#x3010;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x4F46;&#x53D1;&#x56DE;<code>Broker</code>&#x6210;&#x529F;&#x3011;</strong>&#x7684;&#x6D88;&#x606F;&#xFF1F;&#x89C1;<strong>&#x7B2C; 56 &#x884C;</strong>&#x3002;</li>
<li><a href="#processqueueremovemessage">ProcessQueue#removeMessage(&#x2026;)</a></li>
</ul>
</li>
</ul>
<h3 id="ProcessQueue-removeMessage-&#x2026;"><a href="#ProcessQueue-removeMessage-&#x2026;" class="headerlink" title="ProcessQueue#removeMessage(&#x2026;)"></a>ProcessQueue#removeMessage(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x79FB;&#x9664;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x7B2C;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line"> 3:  *</div><div class="line"> 4:  * <span class="doctag">@param</span> msgs &#x6D88;&#x606F;</div><div class="line"> 5:  * <span class="doctag">@return</span> &#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line"> 6:  */</div><div class="line"> <span class="number">7</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">removeMessage</span><span class="params">(<span class="keyword">final</span> List&lt;MessageExt&gt; msgs)</span> </span>{</div><div class="line"> <span class="number">8</span>:     <span class="keyword">long</span> result = -<span class="number">1</span>;</div><div class="line"> <span class="number">9</span>:     <span class="keyword">final</span> <span class="keyword">long</span> now = System.currentTimeMillis();</div><div class="line"><span class="number">10</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">11</span>:         <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"><span class="number">12</span>:         <span class="keyword">this</span>.lastConsumeTimestamp = now;</div><div class="line"><span class="number">13</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">14</span>:             <span class="keyword">if</span> (!msgTreeMap.isEmpty()) {</div><div class="line"><span class="number">15</span>:                 result = <span class="keyword">this</span>.queueOffsetMax + <span class="number">1</span>; <span class="comment">// &#x8FD9;&#x91CC;+1&#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x5982;&#x679C;msgTreeMap&#x4E3A;&#x7A7A;&#x65F6;&#xFF0C;&#x4E0B;&#x4E00;&#x6761;&#x83B7;&#x5F97;&#x7684;&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4E3A;queueOffsetMax+1</span></div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>:                 <span class="comment">// &#x79FB;&#x9664;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">18</span>:                 <span class="keyword">int</span> removedCnt = <span class="number">0</span>;</div><div class="line"><span class="number">19</span>:                 <span class="keyword">for</span> (MessageExt msg : msgs) {</div><div class="line"><span class="number">20</span>:                     MessageExt prev = msgTreeMap.remove(msg.getQueueOffset());</div><div class="line"><span class="number">21</span>:                     <span class="keyword">if</span> (prev != <span class="keyword">null</span>) {</div><div class="line"><span class="number">22</span>:                         removedCnt--;</div><div class="line"><span class="number">23</span>:                     }</div><div class="line"><span class="number">24</span>:                 }</div><div class="line"><span class="number">25</span>:                 msgCount.addAndGet(removedCnt);</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>:                 <span class="keyword">if</span> (!msgTreeMap.isEmpty()) {</div><div class="line"><span class="number">28</span>:                     result = msgTreeMap.firstKey();</div><div class="line"><span class="number">29</span>:                 }</div><div class="line"><span class="number">30</span>:             }</div><div class="line"><span class="number">31</span>:         } <span class="keyword">finally</span> {</div><div class="line"><span class="number">32</span>:             <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>:     } <span class="keyword">catch</span> (Throwable t) {</div><div class="line"><span class="number">35</span>:         log.error(<span class="string">&quot;removeMessage exception&quot;</span>, t);</div><div class="line"><span class="number">36</span>:     }</div><div class="line"><span class="number">37</span>: </div><div class="line"><span class="number">38</span>:     <span class="keyword">return</span> result;</div><div class="line"><span class="number">39</span>: }</div></pre></td></tr></table></figure>
<h2 id="ConsumeMessageConcurrentlyService-cleanExpireMsg-&#x2026;"><a href="#ConsumeMessageConcurrentlyService-cleanExpireMsg-&#x2026;" class="headerlink" title="ConsumeMessageConcurrentlyService#cleanExpireMsg(&#x2026;)"></a>ConsumeMessageConcurrentlyService#cleanExpireMsg(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">this</span>.cleanExpireMsgExecutors.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">5</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">6</span>:             cleanExpireMsg();</div><div class="line"> <span class="number">7</span>:         }</div><div class="line"> <span class="number">8</span>: </div><div class="line"> <span class="number">9</span>:     }, <span class="keyword">this</span>.defaultMQPushConsumer.getConsumeTimeout(), <span class="keyword">this</span>.defaultMQPushConsumer.getConsumeTimeout(), TimeUnit.MINUTES);</div><div class="line"><span class="number">10</span>: }</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>: <span class="comment">/**</span></div><div class="line">13:  * &#x6E05;&#x7406;&#x8FC7;&#x671F;&#x6D88;&#x606F;</div><div class="line">14:  */</div><div class="line"><span class="number">15</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cleanExpireMsg</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">16</span>:     Iterator&lt;Map.Entry&lt;MessageQueue, ProcessQueue&gt;&gt; it =</div><div class="line"><span class="number">17</span>:         <span class="keyword">this</span>.defaultMQPushConsumerImpl.getRebalanceImpl().getProcessQueueTable().entrySet().iterator();</div><div class="line"><span class="number">18</span>:     <span class="keyword">while</span> (it.hasNext()) {</div><div class="line"><span class="number">19</span>:         Map.Entry&lt;MessageQueue, ProcessQueue&gt; next = it.next();</div><div class="line"><span class="number">20</span>:         ProcessQueue pq = next.getValue();</div><div class="line"><span class="number">21</span>:         pq.cleanExpiredMsg(<span class="keyword">this</span>.defaultMQPushConsumer);</div><div class="line"><span class="number">22</span>:     }</div><div class="line"><span class="number">23</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5B9A;&#x65F6;&#x6E05;&#x7406;&#x8FC7;&#x671F;&#x6D88;&#x606F;&#xFF0C;&#x9ED8;&#x8BA4;&#x5468;&#x671F;&#xFF1A;15min&#x3002;</li>
</ul>
<h3 id="ProcessQueue-cleanExpiredMsg-&#x2026;"><a href="#ProcessQueue-cleanExpiredMsg-&#x2026;" class="headerlink" title="ProcessQueue#cleanExpiredMsg(&#x2026;)"></a>ProcessQueue#cleanExpiredMsg(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cleanExpiredMsg</span><span class="params">(DefaultMQPushConsumer pushConsumer)</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">// &#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (pushConsumer.getDefaultMQPushConsumerImpl().isConsumeOrderly()) {</div><div class="line"> <span class="number">4</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">5</span>:     }</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>:     <span class="comment">// &#x5FAA;&#x73AF;&#x79FB;&#x9664;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">8</span>:     <span class="keyword">int</span> loop = msgTreeMap.size() &lt; <span class="number">16</span> ? msgTreeMap.size() : <span class="number">16</span>; <span class="comment">// &#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x6700;&#x591A;&#x79FB;&#x9664;16&#x6761;</span></div><div class="line"> <span class="number">9</span>:     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loop; i++) {</div><div class="line"><span class="number">10</span>:         <span class="comment">// &#x83B7;&#x53D6;&#x7B2C;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x3002;&#x5224;&#x65AD;&#x662F;&#x5426;&#x8D85;&#x65F6;&#xFF0C;&#x82E5;&#x4E0D;&#x8D85;&#x65F6;&#xFF0C;&#x5219;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;</span></div><div class="line"><span class="number">11</span>:         MessageExt msg = <span class="keyword">null</span>;</div><div class="line"><span class="number">12</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">13</span>:             <span class="keyword">this</span>.lockTreeMap.readLock().lockInterruptibly();</div><div class="line"><span class="number">14</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">15</span>:                 <span class="keyword">if</span> (!msgTreeMap.isEmpty() &amp;&amp; System.currentTimeMillis() - Long.parseLong(MessageAccessor.getConsumeStartTimeStamp(msgTreeMap.firstEntry().getValue())) &gt; pushConsumer.getConsumeTimeout() * <span class="number">60</span> * <span class="number">1000</span>) {</div><div class="line"><span class="number">16</span>:                     msg = msgTreeMap.firstEntry().getValue();</div><div class="line"><span class="number">17</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">18</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">19</span>:                 }</div><div class="line"><span class="number">20</span>:             } <span class="keyword">finally</span> {</div><div class="line"><span class="number">21</span>:                 <span class="keyword">this</span>.lockTreeMap.readLock().unlock();</div><div class="line"><span class="number">22</span>:             }</div><div class="line"><span class="number">23</span>:         } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"><span class="number">24</span>:             log.error(<span class="string">&quot;getExpiredMsg exception&quot;</span>, e);</div><div class="line"><span class="number">25</span>:         }</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">28</span>:             <span class="comment">// &#x53D1;&#x56DE;&#x8D85;&#x65F6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">29</span>:             pushConsumer.sendMessageBack(msg, <span class="number">3</span>);</div><div class="line"><span class="number">30</span>:             log.info(<span class="string">&quot;send expire msg back. topic={}, msgId={}, storeHost={}, queueId={}, queueOffset={}&quot;</span>, msg.getTopic(), msg.getMsgId(), msg.getStoreHost(), msg.getQueueId(), msg.getQueueOffset());</div><div class="line"><span class="number">31</span>: </div><div class="line"><span class="number">32</span>:             <span class="comment">// &#x5224;&#x65AD;&#x6B64;&#x65F6;&#x6D88;&#x606F;&#x662F;&#x5426;&#x4F9D;&#x7136;&#x662F;&#x7B2C;&#x4E00;&#x6761;&#xFF0C;&#x82E5;&#x662F;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x79FB;&#x9664;</span></div><div class="line"><span class="number">33</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">34</span>:                 <span class="keyword">this</span>.lockTreeMap.writeLock().lockInterruptibly();</div><div class="line"><span class="number">35</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">36</span>:                     <span class="keyword">if</span> (!msgTreeMap.isEmpty() &amp;&amp; msg.getQueueOffset() == msgTreeMap.firstKey()) {</div><div class="line"><span class="number">37</span>:                         <span class="keyword">try</span> {</div><div class="line"><span class="number">38</span>:                             msgTreeMap.remove(msgTreeMap.firstKey());</div><div class="line"><span class="number">39</span>:                         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">40</span>:                             log.error(<span class="string">&quot;send expired msg exception&quot;</span>, e);</div><div class="line"><span class="number">41</span>:                         }</div><div class="line"><span class="number">42</span>:                     }</div><div class="line"><span class="number">43</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">44</span>:                     <span class="keyword">this</span>.lockTreeMap.writeLock().unlock();</div><div class="line"><span class="number">45</span>:                 }</div><div class="line"><span class="number">46</span>:             } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"><span class="number">47</span>:                 log.error(<span class="string">&quot;getExpiredMsg exception&quot;</span>, e);</div><div class="line"><span class="number">48</span>:             }</div><div class="line"><span class="number">49</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">50</span>:             log.error(<span class="string">&quot;send expired msg exception&quot;</span>, e);</div><div class="line"><span class="number">51</span>:         }</div><div class="line"><span class="number">52</span>:     }</div><div class="line"><span class="number">53</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x79FB;&#x9664;&#x8FC7;&#x671F;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 2 &#x81F3; 5 &#x884C; &#xFF1A;&#x987A;&#x5E8F;&#x6D88;&#x8D39;&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x3002;</li>
<li>&#x7B2C; 7 &#x81F3; 9 &#x884C; &#xFF1A;&#x5FAA;&#x73AF;&#x79FB;&#x9664;&#x6D88;&#x606F;&#x3002;&#x9ED8;&#x8BA4;&#x6700;&#x5927;&#x5FAA;&#x73AF;&#x6B21;&#x6570;&#xFF1A;16&#x6B21;&#x3002;</li>
<li>&#x7B2C; 10 &#x81F3; 25 &#x884C; &#xFF1A;&#x83B7;&#x53D6;&#x7B2C;&#x4E00;&#x6761;&#x6D88;&#x606F;&#x3002;&#x5224;&#x65AD;&#x662F;&#x5426;&#x8D85;&#x65F6;&#xFF0C;&#x82E5;&#x4E0D;&#x8D85;&#x65F6;&#xFF0C;&#x5219;&#x7ED3;&#x675F;&#x5FAA;&#x73AF;&#x3002;</li>
<li>&#x7B2C; 29 &#x884C; &#xFF1A;<strong>&#x53D1;&#x56DE;&#x8D85;&#x65F6;&#x6D88;&#x606F;&#x5230;<code>Broker</code></strong>&#x3002;</li>
<li>&#x7B2C; 32 &#x81F3; 48 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x6B64;&#x65F6;&#x6D88;&#x606F;&#x662F;&#x5426;&#x4F9D;&#x7136;&#x662F;&#x7B2C;&#x4E00;&#x6761;&#xFF0C;&#x82E5;&#x662F;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x79FB;&#x9664;&#x3002;</li>
</ul>
<h1 id="7&#x3001;PushConsumer-&#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;"><a href="#7&#x3001;PushConsumer-&#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;" class="headerlink" title="7&#x3001;PushConsumer &#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;"></a>7&#x3001;PushConsumer &#x53D1;&#x56DE;&#x6D88;&#x8D39;&#x5931;&#x8D25;&#x6D88;&#x606F;</h1><h2 id="DefaultMQPushConsumerImpl-sendMessageBack-&#x2026;"><a href="#DefaultMQPushConsumerImpl-sendMessageBack-&#x2026;" class="headerlink" title="DefaultMQPushConsumerImpl#sendMessageBack(&#x2026;)"></a>DefaultMQPushConsumerImpl#sendMessageBack(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessageBack</span><span class="params">(MessageExt msg, <span class="keyword">int</span> delayLevel, <span class="keyword">final</span> String brokerName)</span></span></div><div class="line"> 2:     <span class="keyword">throws</span> RemotingException, MQBrokerException, InterruptedException, MQClientException {</div><div class="line"> <span class="number">3</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">4</span>:         <span class="comment">// Consumer&#x53D1;&#x56DE;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">5</span>:         String brokerAddr = (<span class="keyword">null</span> != brokerName) ? <span class="keyword">this</span>.mQClientFactory.findBrokerAddressInPublish(brokerName)</div><div class="line"> <span class="number">6</span>:             : RemotingHelper.parseSocketAddressAddr(msg.getStoreHost());</div><div class="line"> <span class="number">7</span>:         <span class="keyword">this</span>.mQClientFactory.getMQClientAPIImpl().consumerSendMessageBack(brokerAddr, msg,</div><div class="line"> <span class="number">8</span>:             <span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup(), delayLevel, <span class="number">5000</span>, getMaxReconsumeTimes());</div><div class="line"> <span class="number">9</span>:     } <span class="keyword">catch</span> (Exception e) { <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x53D1;&#x751F;&#x5F02;&#x5E38;</span></div><div class="line"><span class="number">10</span>:         <span class="comment">// &#x5F02;&#x5E38;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;Client&#x5185;&#x7F6E;Producer&#x53D1;&#x56DE;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">11</span>:         log.error(<span class="string">&quot;sendMessageBack Exception, &quot;</span> + <span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup(), e);</div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:         Message newMsg = <span class="keyword">new</span> Message(MixAll.getRetryTopic(<span class="keyword">this</span>.defaultMQPushConsumer.getConsumerGroup()), msg.getBody());</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:         String originMsgId = MessageAccessor.getOriginMessageId(msg);</div><div class="line"><span class="number">16</span>:         MessageAccessor.setOriginMessageId(newMsg, UtilAll.isBlank(originMsgId) ? msg.getMsgId() : originMsgId);</div><div class="line"><span class="number">17</span>: </div><div class="line"><span class="number">18</span>:         newMsg.setFlag(msg.getFlag());</div><div class="line"><span class="number">19</span>:         MessageAccessor.setProperties(newMsg, msg.getProperties());</div><div class="line"><span class="number">20</span>:         MessageAccessor.putProperty(newMsg, MessageConst.PROPERTY_RETRY_TOPIC, msg.getTopic());</div><div class="line"><span class="number">21</span>:         MessageAccessor.setReconsumeTime(newMsg, String.valueOf(msg.getReconsumeTimes() + <span class="number">1</span>));</div><div class="line"><span class="number">22</span>:         MessageAccessor.setMaxReconsumeTimes(newMsg, String.valueOf(getMaxReconsumeTimes()));</div><div class="line"><span class="number">23</span>:         newMsg.setDelayTimeLevel(<span class="number">3</span> + msg.getReconsumeTimes());</div><div class="line"><span class="number">24</span>: </div><div class="line"><span class="number">25</span>:         <span class="keyword">this</span>.mQClientFactory.getDefaultMQProducer().send(newMsg);</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x53D1;&#x56DE;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 4 &#x81F3; 8 &#x884C; &#xFF1A;<code>Consumer</code> &#x53D1;&#x56DE;&#x6D88;&#x606F;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#mqclientapiimplconsumersendmessageback">MQClientAPIImpl#consumerSendMessageBack(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 10 &#x81F3; 25 &#x884C; &#xFF1A;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;&#xFF0C;<code>Consumer</code> &#x5185;&#x7F6E;&#x9ED8;&#x8BA4; <code>Producer</code> &#x53D1;&#x9001;&#x6D88;&#x606F;&#x3002;<ul>
<li>&#x1F608;&#x7591;&#x95EE;&#xFF1A;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4F1A;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x5462;&#xFF1F;</li>
</ul>
</li>
</ul>
<h3 id="MQClientAPIImpl-consumerSendMessageBack-&#x2026;"><a href="#MQClientAPIImpl-consumerSendMessageBack-&#x2026;" class="headerlink" title="MQClientAPIImpl#consumerSendMessageBack(&#x2026;)"></a>MQClientAPIImpl#consumerSendMessageBack(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * Consumer&#x53D1;&#x56DE;&#x6D88;&#x606F;</div><div class="line"> 3:  * <span class="doctag">@param</span> addr Broker&#x5730;&#x5740;</div><div class="line"> 4:  * <span class="doctag">@param</span> msg &#x6D88;&#x606F;</div><div class="line"> 5:  * <span class="doctag">@param</span> consumerGroup &#x6D88;&#x8D39;&#x5206;&#x7EC4;</div><div class="line"> 6:  * <span class="doctag">@param</span> delayLevel &#x5EF6;&#x8FDF;&#x7EA7;&#x522B;</div><div class="line"> 7:  * <span class="doctag">@param</span> timeoutMillis &#x8D85;&#x65F6;</div><div class="line"> 8:  * <span class="doctag">@param</span> maxConsumeRetryTimes &#x6D88;&#x8D39;&#x6700;&#x5927;&#x91CD;&#x8BD5;&#x6B21;&#x6570;</div><div class="line"> 9:  * <span class="doctag">@throws</span> RemotingException &#x5F53;&#x8FDC;&#x7A0B;&#x8C03;&#x7528;&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">10:  * <span class="doctag">@throws</span> MQBrokerException &#x5F53;Broker&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">11:  * <span class="doctag">@throws</span> InterruptedException &#x5F53;&#x7EBF;&#x7A0B;&#x4E2D;&#x65AD;&#x65F6;</div><div class="line">12:  */</div><div class="line"><span class="number">13</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">consumerSendMessageBack</span><span class="params">(</span></span></div><div class="line"><span class="number">14</span>:     <span class="keyword">final</span> String addr,</div><div class="line"><span class="number">15</span>:     <span class="keyword">final</span> MessageExt msg,</div><div class="line"><span class="number">16</span>:     <span class="keyword">final</span> String consumerGroup,</div><div class="line"><span class="number">17</span>:     <span class="keyword">final</span> <span class="keyword">int</span> delayLevel,</div><div class="line"><span class="number">18</span>:     <span class="keyword">final</span> <span class="keyword">long</span> timeoutMillis,</div><div class="line"><span class="number">19</span>:     <span class="keyword">final</span> <span class="keyword">int</span> maxConsumeRetryTimes</div><div class="line"><span class="number">20</span>: ) <span class="keyword">throws</span> RemotingException, MQBrokerException, InterruptedException {</div><div class="line"><span class="number">21</span>:     ConsumerSendMsgBackRequestHeader requestHeader = <span class="keyword">new</span> ConsumerSendMsgBackRequestHeader();</div><div class="line"><span class="number">22</span>:     RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.CONSUMER_SEND_MSG_BACK, requestHeader);</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>:     requestHeader.setGroup(consumerGroup);</div><div class="line"><span class="number">25</span>:     requestHeader.setOriginTopic(msg.getTopic());</div><div class="line"><span class="number">26</span>:     requestHeader.setOffset(msg.getCommitLogOffset());</div><div class="line"><span class="number">27</span>:     requestHeader.setDelayLevel(delayLevel);</div><div class="line"><span class="number">28</span>:     requestHeader.setOriginMsgId(msg.getMsgId());</div><div class="line"><span class="number">29</span>:     requestHeader.setMaxReconsumeTimes(maxConsumeRetryTimes);</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:     RemotingCommand response = <span class="keyword">this</span>.remotingClient.invokeSync(MixAll.brokerVIPChannel(<span class="keyword">this</span>.clientConfig.isVipChannelEnabled(), addr),</div><div class="line"><span class="number">32</span>:         request, timeoutMillis);</div><div class="line"><span class="number">33</span>:     <span class="keyword">assert</span> response != <span class="keyword">null</span>;</div><div class="line"><span class="number">34</span>:     <span class="keyword">switch</span> (response.getCode()) {</div><div class="line"><span class="number">35</span>:         <span class="keyword">case</span> ResponseCode.SUCCESS: {</div><div class="line"><span class="number">36</span>:             <span class="keyword">return</span>;</div><div class="line"><span class="number">37</span>:         }</div><div class="line"><span class="number">38</span>:         <span class="keyword">default</span>:</div><div class="line"><span class="number">39</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">40</span>:     }</div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>:     <span class="keyword">throw</span> <span class="keyword">new</span> MQBrokerException(response.getCode(), response.getRemark());</div><div class="line"><span class="number">43</span>: }</div></pre></td></tr></table></figure>
<h1 id="8&#x3001;Consumer-&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;"><a href="#8&#x3001;Consumer-&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;" class="headerlink" title="8&#x3001;Consumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;"></a>8&#x3001;Consumer &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</h1><h2 id="OffsetStore"><a href="#OffsetStore" class="headerlink" title="OffsetStore"></a>OffsetStore</h2><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/07.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/07.png" alt="OffsetStore&#x7C7B;&#x56FE;.png" class="ui centered image"></a></p>
<ul class="ui list">
<li><code>RemoteBrokerOffsetStore</code> &#xFF1A;<code>Consumer</code> <strong>&#x96C6;&#x7FA4;&#x6A21;&#x5F0F;</strong> &#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x8FDC;&#x7A0B; <code>Broker</code> &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
<li><code>LocalFileOffsetStore</code> &#xFF1A;<code>Consumer</code> <strong>&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;</strong>&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x672C;&#x5730; <code>&#x6587;&#x4EF6;</code> &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
</ul>
<h3 id="OffsetStore-load-&#x2026;"><a href="#OffsetStore-load-&#x2026;" class="headerlink" title="OffsetStore#load(&#x2026;)"></a>OffsetStore#load(&#x2026;)</h3><h4 id="LocalFileOffsetStore-load-&#x2026;"><a href="#LocalFileOffsetStore-load-&#x2026;" class="headerlink" title="LocalFileOffsetStore#load(&#x2026;)"></a>LocalFileOffsetStore#load(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">load</span><span class="params">()</span> <span class="keyword">throws</span> MQClientException </span>{</div><div class="line"> <span class="number">3</span>:     <span class="comment">// &#x4ECE;&#x672C;&#x5730;&#x786C;&#x76D8;&#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">4</span>:     OffsetSerializeWrapper offsetSerializeWrapper = <span class="keyword">this</span>.readLocalOffset();</div><div class="line"> <span class="number">5</span>:     <span class="keyword">if</span> (offsetSerializeWrapper != <span class="keyword">null</span> &amp;&amp; offsetSerializeWrapper.getOffsetTable() != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">6</span>:         offsetTable.putAll(offsetSerializeWrapper.getOffsetTable());</div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:         <span class="comment">// &#x6253;&#x5370;&#x6BCF;&#x4E2A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">9</span>:         <span class="keyword">for</span> (MessageQueue mq : offsetSerializeWrapper.getOffsetTable().keySet()) {</div><div class="line"><span class="number">10</span>:             AtomicLong offset = offsetSerializeWrapper.getOffsetTable().get(mq);</div><div class="line"><span class="number">11</span>:             log.info(<span class="string">&quot;load consumer&apos;s offset, {} {} {}&quot;</span>,</div><div class="line"><span class="number">12</span>:                 <span class="keyword">this</span>.groupName,</div><div class="line"><span class="number">13</span>:                 mq,</div><div class="line"><span class="number">14</span>:                 offset.get());</div><div class="line"><span class="number">15</span>:         }</div><div class="line"><span class="number">16</span>:     }</div><div class="line"><span class="number">17</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x4ECE;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5230;&#x5185;&#x5B58;&#x3002;</li>
</ul>
<h5 id="OffsetSerializeWrapper"><a href="#OffsetSerializeWrapper" class="headerlink" title="OffsetSerializeWrapper"></a>OffsetSerializeWrapper</h5><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OffsetSerializeWrapper</span> <span class="keyword">extends</span> <span class="title">RemotingSerializable</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> ConcurrentHashMap&lt;MessageQueue, AtomicLong&gt; offsetTable =</div><div class="line"> <span class="number">3</span>:             <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="function"><span class="keyword">public</span> ConcurrentHashMap&lt;MessageQueue, AtomicLong&gt; <span class="title">getOffsetTable</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">6</span>:         <span class="keyword">return</span> offsetTable;</div><div class="line"> <span class="number">7</span>:     }</div><div class="line"> <span class="number">8</span>: </div><div class="line"> <span class="number">9</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOffsetTable</span><span class="params">(ConcurrentHashMap&lt;MessageQueue, AtomicLong&gt; offsetTable)</span> </span>{</div><div class="line"><span class="number">10</span>:         <span class="keyword">this</span>.offsetTable = offsetTable;</div><div class="line"><span class="number">11</span>:     }</div><div class="line"><span class="number">12</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x672C;&#x5730; <code>Offset</code> &#x5B58;&#x50A8;&#x5E8F;&#x5217;&#x5316;&#x3002;</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">Yunai-MacdeMacBook-Pro-2:config yunai$ cat /Users/yunai/.rocketmq_offsets/192.168.17.0@DEFAULT/please_rename_unique_group_name_1/offsets.json</div><div class="line">{</div><div class="line">	<span class="string">&quot;offsetTable&quot;</span>:{{</div><div class="line">			<span class="string">&quot;brokerName&quot;</span>:<span class="string">&quot;broker-a&quot;</span>,</div><div class="line">			<span class="string">&quot;queueId&quot;</span>:3,</div><div class="line">			<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;TopicTest&quot;</span></div><div class="line">		}:1470,{</div><div class="line">			<span class="string">&quot;brokerName&quot;</span>:<span class="string">&quot;broker-a&quot;</span>,</div><div class="line">			<span class="string">&quot;queueId&quot;</span>:2,</div><div class="line">			<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;TopicTest&quot;</span></div><div class="line">		}:1471,{</div><div class="line">			<span class="string">&quot;brokerName&quot;</span>:<span class="string">&quot;broker-a&quot;</span>,</div><div class="line">			<span class="string">&quot;queueId&quot;</span>:1,</div><div class="line">			<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;TopicTest&quot;</span></div><div class="line">		}:1470,{</div><div class="line">			<span class="string">&quot;brokerName&quot;</span>:<span class="string">&quot;broker-a&quot;</span>,</div><div class="line">			<span class="string">&quot;queueId&quot;</span>:0,</div><div class="line">			<span class="string">&quot;topic&quot;</span>:<span class="string">&quot;TopicTest&quot;</span></div><div class="line">		}:1470</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<h4 id="RemoteBrokerOffsetStore-load-&#x2026;"><a href="#RemoteBrokerOffsetStore-load-&#x2026;" class="headerlink" title="RemoteBrokerOffsetStore#load(&#x2026;)"></a>RemoteBrokerOffsetStore#load(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"><span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"><span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">load</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">3</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x4E0D;&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#xFF0C;&#x5B9E;&#x9645;&#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x65F6;&#xFF0C;&#x4ECE; <code>Broker</code> &#x83B7;&#x53D6;&#x3002;</li>
</ul>
<h3 id="OffsetStore-readOffset-&#x2026;"><a href="#OffsetStore-readOffset-&#x2026;" class="headerlink" title="OffsetStore#readOffset(&#x2026;)"></a>OffsetStore#readOffset(&#x2026;)</h3><p>&#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x7C7B;&#x578B;&#xFF1A;</p>
<ul class="ui list">
<li><code>READ_FROM_MEMORY</code> &#xFF1A;&#x4ECE;&#x5185;&#x5B58;&#x8BFB;&#x53D6;&#x3002;</li>
<li><code>READ_FROM_STORE</code> &#xFF1A;&#x4ECE;&#x5B58;&#x50A8;( <code>Broker</code> &#x6216; <code>&#x6587;&#x4EF6;</code> )&#x8BFB;&#x53D6;&#x3002;</li>
<li><code>MEMORY_FIRST_THEN_STORE</code> &#xFF1A;&#x4F18;&#x5148;&#x4ECE;&#x5185;&#x5B58;&#x8BFB;&#x53D6;&#xFF0C;&#x8BFB;&#x53D6;&#x4E0D;&#x5230;&#xFF0C;&#x4ECE;&#x5B58;&#x50A8;&#x8BFB;&#x53D6;&#x3002;</li>
</ul>
<h4 id="LocalFileOffsetStore-readOffset-&#x2026;"><a href="#LocalFileOffsetStore-readOffset-&#x2026;" class="headerlink" title="LocalFileOffsetStore#readOffset(&#x2026;)"></a>LocalFileOffsetStore#readOffset(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">readOffset</span><span class="params">(<span class="keyword">final</span> MessageQueue mq, <span class="keyword">final</span> ReadOffsetType type)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (mq != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">4</span>:         <span class="keyword">switch</span> (type) {</div><div class="line"> <span class="number">5</span>:             <span class="keyword">case</span> MEMORY_FIRST_THEN_STORE:</div><div class="line"> <span class="number">6</span>:             <span class="keyword">case</span> READ_FROM_MEMORY: {</div><div class="line"> <span class="number">7</span>:                 AtomicLong offset = <span class="keyword">this</span>.offsetTable.get(mq);</div><div class="line"> <span class="number">8</span>:                 <span class="keyword">if</span> (offset != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">9</span>:                     <span class="keyword">return</span> offset.get();</div><div class="line"><span class="number">10</span>:                 } <span class="keyword">else</span> <span class="keyword">if</span> (ReadOffsetType.READ_FROM_MEMORY == type) {</div><div class="line"><span class="number">11</span>:                     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">12</span>:                 }</div><div class="line"><span class="number">13</span>:             }</div><div class="line"><span class="number">14</span>:             <span class="keyword">case</span> READ_FROM_STORE: {</div><div class="line"><span class="number">15</span>:                 OffsetSerializeWrapper offsetSerializeWrapper;</div><div class="line"><span class="number">16</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">17</span>:                     offsetSerializeWrapper = <span class="keyword">this</span>.readLocalOffset();</div><div class="line"><span class="number">18</span>:                 } <span class="keyword">catch</span> (MQClientException e) {</div><div class="line"><span class="number">19</span>:                     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">20</span>:                 }</div><div class="line"><span class="number">21</span>:                 <span class="keyword">if</span> (offsetSerializeWrapper != <span class="keyword">null</span> &amp;&amp; offsetSerializeWrapper.getOffsetTable() != <span class="keyword">null</span>) {</div><div class="line"><span class="number">22</span>:                     AtomicLong offset = offsetSerializeWrapper.getOffsetTable().get(mq);</div><div class="line"><span class="number">23</span>:                     <span class="keyword">if</span> (offset != <span class="keyword">null</span>) {</div><div class="line"><span class="number">24</span>:                         <span class="keyword">this</span>.updateOffset(mq, offset.get(), <span class="keyword">false</span>);</div><div class="line"><span class="number">25</span>:                         <span class="keyword">return</span> offset.get();</div><div class="line"><span class="number">26</span>:                     }</div><div class="line"><span class="number">27</span>:                 }</div><div class="line"><span class="number">28</span>:             }</div><div class="line"><span class="number">29</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">30</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">31</span>:         }</div><div class="line"><span class="number">32</span>:     }</div><div class="line"><span class="number">33</span>: </div><div class="line"><span class="number">34</span>:     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">35</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 16 &#x884C; &#xFF1A;&#x4ECE; <code>&#x6587;&#x4EF6;</code> &#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
</ul>
<h4 id="RemoteBrokerOffsetStore-readOffset-&#x2026;"><a href="#RemoteBrokerOffsetStore-readOffset-&#x2026;" class="headerlink" title="RemoteBrokerOffsetStore#readOffset(&#x2026;)"></a>RemoteBrokerOffsetStore#readOffset(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">readOffset</span><span class="params">(<span class="keyword">final</span> MessageQueue mq, <span class="keyword">final</span> ReadOffsetType type)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (mq != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">4</span>:         <span class="keyword">switch</span> (type) {</div><div class="line"> <span class="number">5</span>:             <span class="keyword">case</span> MEMORY_FIRST_THEN_STORE:</div><div class="line"> <span class="number">6</span>:             <span class="keyword">case</span> READ_FROM_MEMORY: {</div><div class="line"> <span class="number">7</span>:                 AtomicLong offset = <span class="keyword">this</span>.offsetTable.get(mq);</div><div class="line"> <span class="number">8</span>:                 <span class="keyword">if</span> (offset != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">9</span>:                     <span class="keyword">return</span> offset.get();</div><div class="line"><span class="number">10</span>:                 } <span class="keyword">else</span> <span class="keyword">if</span> (ReadOffsetType.READ_FROM_MEMORY == type) {</div><div class="line"><span class="number">11</span>:                     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">12</span>:                 }</div><div class="line"><span class="number">13</span>:             }</div><div class="line"><span class="number">14</span>:             <span class="keyword">case</span> READ_FROM_STORE: {</div><div class="line"><span class="number">15</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">16</span>:                     <span class="keyword">long</span> brokerOffset = <span class="keyword">this</span>.fetchConsumeOffsetFromBroker(mq);</div><div class="line"><span class="number">17</span>:                     AtomicLong offset = <span class="keyword">new</span> AtomicLong(brokerOffset);</div><div class="line"><span class="number">18</span>:                     <span class="keyword">this</span>.updateOffset(mq, offset.get(), <span class="keyword">false</span>);</div><div class="line"><span class="number">19</span>:                     <span class="keyword">return</span> brokerOffset;</div><div class="line"><span class="number">20</span>:                 }</div><div class="line"><span class="number">21</span>:                 <span class="comment">// No offset in broker</span></div><div class="line"><span class="number">22</span>:                 <span class="keyword">catch</span> (MQBrokerException e) {</div><div class="line"><span class="number">23</span>:                     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">24</span>:                 }</div><div class="line"><span class="number">25</span>:                 <span class="comment">//Other exceptions</span></div><div class="line"><span class="number">26</span>:                 <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">27</span>:                     log.warn(<span class="string">&quot;fetchConsumeOffsetFromBroker exception, &quot;</span> + mq, e);</div><div class="line"><span class="number">28</span>:                     <span class="keyword">return</span> -<span class="number">2</span>;</div><div class="line"><span class="number">29</span>:                 }</div><div class="line"><span class="number">30</span>:             }</div><div class="line"><span class="number">31</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">32</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>:     }</div><div class="line"><span class="number">35</span>: </div><div class="line"><span class="number">36</span>:     <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line"><span class="number">37</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x7B2C; 16 &#x884C; &#xFF1A;&#x4ECE; <code>Broker</code> &#x8BFB;&#x53D6;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;</li>
</ul>
<h3 id="OffsetStore-updateOffset-&#x2026;"><a href="#OffsetStore-updateOffset-&#x2026;" class="headerlink" title="OffsetStore#updateOffset(&#x2026;)"></a>OffsetStore#updateOffset(&#x2026;)</h3><p>&#x8BE5;&#x65B9;&#x6CD5; <code>RemoteBrokerOffsetStore</code> &#x4E0E; <code>LocalFileOffsetStore</code> &#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOffset</span><span class="params">(MessageQueue mq, <span class="keyword">long</span> offset, <span class="keyword">boolean</span> increaseOnly)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (mq != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">4</span>:         AtomicLong offsetOld = <span class="keyword">this</span>.offsetTable.get(mq);</div><div class="line"> <span class="number">5</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == offsetOld) {</div><div class="line"> <span class="number">6</span>:             offsetOld = <span class="keyword">this</span>.offsetTable.putIfAbsent(mq, <span class="keyword">new</span> AtomicLong(offset));</div><div class="line"> <span class="number">7</span>:         }</div><div class="line"> <span class="number">8</span>: </div><div class="line"> <span class="number">9</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> != offsetOld) {</div><div class="line"><span class="number">10</span>:             <span class="keyword">if</span> (increaseOnly) {</div><div class="line"><span class="number">11</span>:                 MixAll.compareAndIncreaseOnly(offsetOld, offset);</div><div class="line"><span class="number">12</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">13</span>:                 offsetOld.set(offset);</div><div class="line"><span class="number">14</span>:             }</div><div class="line"><span class="number">15</span>:         }</div><div class="line"><span class="number">16</span>:     }</div><div class="line"><span class="number">17</span>: }</div></pre></td></tr></table></figure>
<h3 id="OffsetStore-persistAll-&#x2026;"><a href="#OffsetStore-persistAll-&#x2026;" class="headerlink" title="OffsetStore#persistAll(&#x2026;)"></a>OffsetStore#persistAll(&#x2026;)</h3><h4 id="LocalFileOffsetStore-persistAll-&#x2026;"><a href="#LocalFileOffsetStore-persistAll-&#x2026;" class="headerlink" title="LocalFileOffsetStore#persistAll(&#x2026;)"></a>LocalFileOffsetStore#persistAll(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">persistAll</span><span class="params">(Set&lt;MessageQueue&gt; mqs)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == mqs || mqs.isEmpty())</div><div class="line"> <span class="number">4</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">5</span>: </div><div class="line"> <span class="number">6</span>:     OffsetSerializeWrapper offsetSerializeWrapper = <span class="keyword">new</span> OffsetSerializeWrapper();</div><div class="line"> <span class="number">7</span>:     <span class="keyword">for</span> (Map.Entry&lt;MessageQueue, AtomicLong&gt; entry : <span class="keyword">this</span>.offsetTable.entrySet()) {</div><div class="line"> <span class="number">8</span>:         <span class="keyword">if</span> (mqs.contains(entry.getKey())) {</div><div class="line"> <span class="number">9</span>:             AtomicLong offset = entry.getValue();</div><div class="line"><span class="number">10</span>:             offsetSerializeWrapper.getOffsetTable().put(entry.getKey(), offset);</div><div class="line"><span class="number">11</span>:         }</div><div class="line"><span class="number">12</span>:     }</div><div class="line"><span class="number">13</span>: </div><div class="line"><span class="number">14</span>:     String jsonString = offsetSerializeWrapper.toJson(<span class="keyword">true</span>);</div><div class="line"><span class="number">15</span>:     <span class="keyword">if</span> (jsonString != <span class="keyword">null</span>) {</div><div class="line"><span class="number">16</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">17</span>:             MixAll.string2File(jsonString, <span class="keyword">this</span>.storePath);</div><div class="line"><span class="number">18</span>:         } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">19</span>:             log.error(<span class="string">&quot;persistAll consumer offset Exception, &quot;</span> + <span class="keyword">this</span>.storePath, e);</div><div class="line"><span class="number">20</span>:         }</div><div class="line"><span class="number">21</span>:     }</div><div class="line"><span class="number">22</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6301;&#x4E45;&#x5316;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x3002;<strong>&#x5C06;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5199;&#x5165;&#x6587;&#x4EF6;</strong>&#x3002;</li>
</ul>
<h4 id="RemoteBrokerOffsetStore-persistAll-&#x2026;"><a href="#RemoteBrokerOffsetStore-persistAll-&#x2026;" class="headerlink" title="RemoteBrokerOffsetStore#persistAll(&#x2026;)"></a>RemoteBrokerOffsetStore#persistAll(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="meta">@Override</span></div><div class="line"> <span class="number">2</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">persistAll</span><span class="params">(Set&lt;MessageQueue&gt; mqs)</span> </span>{</div><div class="line"> <span class="number">3</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == mqs || mqs.isEmpty())</div><div class="line"> <span class="number">4</span>:         <span class="keyword">return</span>;</div><div class="line"> <span class="number">5</span>: </div><div class="line"> <span class="number">6</span>:     <span class="comment">// &#x6301;&#x4E45;&#x5316;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">7</span>:     <span class="keyword">final</span> HashSet&lt;MessageQueue&gt; unusedMQ = <span class="keyword">new</span> HashSet&lt;&gt;();</div><div class="line"> <span class="number">8</span>:     <span class="keyword">if</span> (!mqs.isEmpty()) {</div><div class="line"> <span class="number">9</span>:         <span class="keyword">for</span> (Map.Entry&lt;MessageQueue, AtomicLong&gt; entry : <span class="keyword">this</span>.offsetTable.entrySet()) {</div><div class="line"><span class="number">10</span>:             MessageQueue mq = entry.getKey();</div><div class="line"><span class="number">11</span>:             AtomicLong offset = entry.getValue();</div><div class="line"><span class="number">12</span>:             <span class="keyword">if</span> (offset != <span class="keyword">null</span>) {</div><div class="line"><span class="number">13</span>:                 <span class="keyword">if</span> (mqs.contains(mq)) {</div><div class="line"><span class="number">14</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">15</span>:                         <span class="keyword">this</span>.updateConsumeOffsetToBroker(mq, offset.get());</div><div class="line"><span class="number">16</span>:                         log.info(<span class="string">&quot;[persistAll] Group: {} ClientId: {} updateConsumeOffsetToBroker {} {}&quot;</span>,</div><div class="line"><span class="number">17</span>:                             <span class="keyword">this</span>.groupName,</div><div class="line"><span class="number">18</span>:                             <span class="keyword">this</span>.mQClientFactory.getClientId(),</div><div class="line"><span class="number">19</span>:                             mq,</div><div class="line"><span class="number">20</span>:                             offset.get());</div><div class="line"><span class="number">21</span>:                     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">22</span>:                         log.error(<span class="string">&quot;updateConsumeOffsetToBroker exception, &quot;</span> + mq.toString(), e);</div><div class="line"><span class="number">23</span>:                     }</div><div class="line"><span class="number">24</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">25</span>:                     unusedMQ.add(mq);</div><div class="line"><span class="number">26</span>:                 }</div><div class="line"><span class="number">27</span>:             }</div><div class="line"><span class="number">28</span>:         }</div><div class="line"><span class="number">29</span>:     }</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:     <span class="comment">// &#x79FB;&#x9664;&#x4E0D;&#x9002;&#x7528;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;</span></div><div class="line"><span class="number">32</span>:     <span class="keyword">if</span> (!unusedMQ.isEmpty()) {</div><div class="line"><span class="number">33</span>:         <span class="keyword">for</span> (MessageQueue mq : unusedMQ) {</div><div class="line"><span class="number">34</span>:             <span class="keyword">this</span>.offsetTable.remove(mq);</div><div class="line"><span class="number">35</span>:             log.info(<span class="string">&quot;remove unused mq, {}, {}&quot;</span>, mq, <span class="keyword">this</span>.groupName);</div><div class="line"><span class="number">36</span>:         }</div><div class="line"><span class="number">37</span>:     }</div><div class="line"><span class="number">38</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6301;&#x4E45;&#x5316;&#x6307;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x6570;&#x7EC4;&#x7684;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5230; <code>Broker</code>&#xFF0C;&#x5E76;&#x79FB;&#x9664;&#x975E;&#x6307;&#x5B9A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x3002;</li>
</ul>
<h4 id="MQClientInstance-persistAllConsumerOffset-&#x2026;"><a href="#MQClientInstance-persistAllConsumerOffset-&#x2026;" class="headerlink" title="MQClientInstance#persistAllConsumerOffset(&#x2026;)"></a>MQClientInstance#persistAllConsumerOffset(&#x2026;)</h4><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startScheduledTask</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">// &#x5B9A;&#x65F6;&#x540C;&#x6B65;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">3</span>:     <span class="keyword">this</span>.scheduledExecutorService.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">6</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">7</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">8</span>:                 MQClientInstance.<span class="keyword">this</span>.cleanOfflineBroker();</div><div class="line"> <span class="number">9</span>:                 MQClientInstance.<span class="keyword">this</span>.sendHeartbeatToAllBrokerWithLock();</div><div class="line"><span class="number">10</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">11</span>:                 log.error(<span class="string">&quot;ScheduledTask sendHeartbeatToAllBroker exception&quot;</span>, e);</div><div class="line"><span class="number">12</span>:             }</div><div class="line"><span class="number">13</span>:         }</div><div class="line"><span class="number">14</span>:     }, <span class="number">1000</span>, <span class="keyword">this</span>.clientConfig.getHeartbeatBrokerInterval(), TimeUnit.MILLISECONDS);</div><div class="line"><span class="number">15</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5B9A;&#x65F6;&#x8FDB;&#x884C;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x9ED8;&#x8BA4;&#x5468;&#x671F;&#xFF1A;5000ms&#x3002;</li>
<li><strong>&#x91CD;&#x8981;&#x8BF4;&#x660E; &#xFF1A;</strong><ul>
<li><strong>&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x4E0D;&#x4EC5;&#x4EC5;&#x53EA;&#x6709;&#x5B9A;&#x65F6;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3001;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7B49;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x3002;</strong> </li>
<li><strong>&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x4E0D;&#x4EC5;&#x4EC5;&#x53EA;&#x6709;&#x5B9A;&#x65F6;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3001;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7B49;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x3002;</strong> </li>
<li><strong>&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x4E0D;&#x4EC5;&#x4EC5;&#x53EA;&#x6709;&#x5B9A;&#x65F6;&#x6301;&#x4E45;&#x5316;&#xFF0C;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3001;&#x5206;&#x914D;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7B49;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x90FD;&#x4F1A;&#x8FDB;&#x884C;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x6301;&#x4E45;&#x5316;&#x3002;</strong> </li>
</ul>
</li>
</ul>
<h1 id="9&#x3001;&#x7ED3;&#x5C3E;"><a href="#9&#x3001;&#x7ED3;&#x5C3E;" class="headerlink" title="9&#x3001;&#x7ED3;&#x5C3E;"></a>9&#x3001;&#x7ED3;&#x5C3E;</h1><p>&#x1F608;&#x53EF;&#x80FD;&#x662F;&#x672C;&#x7CFB;&#x5217;&#x6700;&#x957F;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x5982;&#x6709;&#x8868;&#x8FBE;&#x9519;&#x8BEF;&#x548C;&#x4E0D;&#x6E05;&#x6670;&#xFF0C;&#x8BF7;&#x591A;&#x591A;&#x89C1;&#x8C05;&#x3002;<br>&#x611F;&#x8C22;&#x5BF9;&#x672C;&#x7CFB;&#x5217;&#x7684;&#x9605;&#x8BFB;&#x3001;&#x6536;&#x85CF;&#x3001;&#x70B9;&#x8D5E;&#x3001;&#x5206;&#x4EAB;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x7FFB;&#x5230;&#x7ED3;&#x5C3E;&#x3002;&#x1F61C;&#x771F;&#x7684;&#x6709;&#x4E22;&#x4E22;&#x957F;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Message 拉取与消费（上）</title>
    <link href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/"/>
    <id>http://www.yunai.me/RocketMQ/message-pull-and-consume-first/</id>
    <published>2017-05-03T16:00:00.000Z</published>
    <updated>2017-07-20T01:40:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1&#x3001;&#x6982;&#x8FF0;</a></li>
<li><a href="#">2&#x3001;ConsumeQueue &#x7ED3;&#x6784;</a></li>
<li><a href="#">3&#x3001;ConsumeQueue &#x5B58;&#x50A8;</a><ul>
<li><a href="#">ReputMessageService</a><ul>
<li><a href="#">DefaultMessageStore#doDispatch(&#x2026;)</a></li>
<li><a href="#">ConsumeQueue#putMessagePositionInfoWrapper(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">FlushConsumeQueueService</a></li>
</ul>
</li>
<li><a href="#">4&#x3001;Broker &#x63D0;&#x4F9B;[&#x62C9;&#x53D6;&#x6D88;&#x606F;]&#x63A5;&#x53E3;</a><ul>
<li><a href="#">PullMessageRequestHeader</a></li>
<li><a href="#">PullMessageProcessor#processRequest(&#x2026;)</a></li>
<li><a href="#">MessageStore#getMessage(&#x2026;)</a></li>
<li><a href="#">DefaultMessageFilter#isMessageMatched(&#x2026;)</a></li>
<li><a href="#">PullRequestHoldService</a></li>
<li><a href="#">PullMessageProcessor#executeRequestWhenWakeup(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">5&#x3001;Broker &#x63D0;&#x4F9B;[&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;]&#x63A5;&#x53E3;</a><ul>
<li><a href="#">BrokerController#initialize(&#x2026;)</a></li>
<li><a href="#">ConfigManager</a><ul>
<li><a href="#">MixAll#string2File(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">ConsumerOffsetManager</a></li>
</ul>
</li>
<li><a href="#">6&#x3001;Broker &#x63D0;&#x4F9B;[&#x53D1;&#x56DE;&#x6D88;&#x606F;]&#x63A5;&#x53E3;</a><ul>
<li><a href="#">SendMessageProcessor#consumerSendMsgBack(&#x2026;)</a></li>
</ul>
</li>
<li><a href="#">7&#x3001;&#x7ED3;&#x5C3E;</a></li>
</ul>
<h1 id="1&#x3001;&#x6982;&#x8FF0;"><a href="#1&#x3001;&#x6982;&#x8FF0;" class="headerlink" title="1&#x3001;&#x6982;&#x8FF0;"></a>1&#x3001;&#x6982;&#x8FF0;</h1><p>&#x672C;&#x7AE0;&#x4E3B;&#x8981;&#x89E3;&#x6790; <strong>&#x6D88;&#x8D39;</strong> &#x903B;&#x8F91;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x6E90;&#x7801;&#x3002;<br>&#x56E0;&#x4E3A;&#x7BC7;&#x5E45;&#x8F83;&#x957F;&#xFF0C;&#x5206;&#x6210;&#x4E0A;&#x4E0B;&#x4E24;&#x7BC7;&#xFF1A;</p>
<ol class="ui list">
<li>&#x4E0A;&#x7BC7;&#xFF1A;<code>Broker</code> &#x76F8;&#x5173;&#x6E90;&#x7801;&#x3002;</li>
<li>&#x4E0B;&#x7BC7;&#xFF1A;<code>Consumer</code> &#x76F8;&#x5173;&#x6E90;&#x7801;&#x3002;</li>
</ol>
<p><em>&#x672C;&#x6587;&#x5373;&#x662F;&#x4E0A;&#x7BC7;&#x3002;</em></p>
<hr>
<p>ok&#xFF0C;&#x5148;&#x770B;&#x7B2C;&#x4E00;&#x5F20;&#x5173;&#x4E8E;&#x6D88;&#x8D39;&#x903B;&#x8F91;&#x7684;&#x56FE;&#xFF1A;</p>
<blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/13.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/13.png" alt="&#x6D88;&#x8D39;&#x903B;&#x8F91;&#x56FE;" class="ui centered image"></a></p>
</blockquote>
<p>&#x518D;&#x770B;&#x6D88;&#x8D39;&#x903B;&#x8F91;&#x7CBE;&#x7B80;&#x7684;&#x987A;&#x5E8F;&#x56FE;&#xFF08;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x4F1A;&#x7565;&#x6709;&#x5DEE;&#x522B;&#xFF09;&#xFF1A;</p>
<blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/04.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/04.png" alt="Consumer&amp;Broker&#x6D88;&#x8D39;&#x7CBE;&#x7B80;&#x56FE;.png" class="ui centered image"></a></p>
</blockquote>
<h1 id="2&#x3001;ConsumeQueue-&#x7ED3;&#x6784;"><a href="#2&#x3001;ConsumeQueue-&#x7ED3;&#x6784;" class="headerlink" title="2&#x3001;ConsumeQueue &#x7ED3;&#x6784;"></a>2&#x3001;ConsumeQueue &#x7ED3;&#x6784;</h1><p><code>ConsumeQueue</code>&#x3001;<code>MappedFileQueue</code>&#x3001;<code>MappedFile</code> &#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A;</p>
<blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/03.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/03.png" alt="ConsumeQueue&#x3001;MappedFileQueue&#x3001;MappedFile&#x7684;&#x5173;&#x7CFB;" class="ui centered image"></a><br><code>ConsumeQueue</code> : <code>MappedFileQueue</code> : <code>MappedFile</code> = 1 : 1 : N&#x3002;</p>
</blockquote>
<p>&#x53CD;&#x5E94;&#x5230;&#x7CFB;&#x7EDF;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">Yunai-MacdeMacBook-Pro-2:consumequeue yunai$ <span class="built_in">pwd</span></div><div class="line">/Users/yunai/store/consumequeue</div><div class="line">Yunai-MacdeMacBook-Pro-2:consumequeue yunai$ <span class="built_in">cd</span> TopicRead3/</div><div class="line">Yunai-MacdeMacBook-Pro-2:TopicRead3 yunai$ ls -ls</div><div class="line">total 0</div><div class="line">0 drwxr-xr-x  3 yunai  staff  102  4 27 21:52 0</div><div class="line">0 drwxr-xr-x  3 yunai  staff  102  4 27 21:55 1</div><div class="line">0 drwxr-xr-x  3 yunai  staff  102  4 27 21:55 2</div><div class="line">0 drwxr-xr-x  3 yunai  staff  102  4 27 21:55 3</div><div class="line">Yunai-MacdeMacBook-Pro-2:TopicRead3 yunai$ <span class="built_in">cd</span> 0/</div><div class="line">Yunai-MacdeMacBook-Pro-2:0 yunai$ ls -ls</div><div class="line">total 11720</div><div class="line">11720 -rw-r--r--  1 yunai  staff  6000000  4 27 21:55 00000000000000000000</div></pre></td></tr></table></figure>
<hr>
<p><code>ConsumeQueue</code>&#x3001;<code>MappedFileQueue</code>&#x3001;<code>MappedFile</code> &#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul class="ui list">
<li><code>MappedFile</code> &#xFF1A;00000000000000000000&#x7B49;&#x6587;&#x4EF6;&#x3002;</li>
<li><code>MappedFileQueue</code> &#xFF1A;<code>MappedFile</code> &#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5BF9; <code>MappedFile</code> &#x8FDB;&#x884C;&#x5C01;&#x88C5;&#x6210;&#x6587;&#x4EF6;&#x961F;&#x5217;&#xFF0C;&#x5BF9;&#x4E0A;&#x5C42;&#x63D0;&#x4F9B;&#x53EF;&#x65E0;&#x9650;&#x4F7F;&#x7528;&#x7684;&#x6587;&#x4EF6;&#x5BB9;&#x91CF;&#x3002;<ul>
<li>&#x6BCF;&#x4E2A; <code>MappedFile</code> &#x7EDF;&#x4E00;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;</li>
<li>&#x6587;&#x4EF6;&#x547D;&#x540D;&#x65B9;&#x5F0F;&#xFF1A;fileName[n] = fileName[n - 1] + mappedFileSize&#x3002;&#x5728; <code>ConsumeQueue</code> &#x91CC;&#x9ED8;&#x8BA4;&#x4E3A; 6000000B&#x3002;</li>
</ul>
</li>
<li><code>ConsumeQueue</code> &#xFF1A;&#x9488;&#x5BF9; <code>MappedFileQueue</code> &#x7684;&#x5C01;&#x88C5;&#x4F7F;&#x7528;&#x3002;<ul>
<li><code>Store : ConsumeQueue = ConcurrentHashMap&lt;String/* topic */, ConcurrentHashMap&lt;Integer/* queueId */, ConsumeQueue&gt;&gt;</code>&#x3002;</li>
</ul>
</li>
</ul>
<p><code>ConsumeQueue</code> &#x5B58;&#x50A8;&#x5728; <code>MappedFile</code> &#x7684;&#x5185;&#x5BB9;<strong>&#x5FC5;&#x987B;</strong>&#x5927;&#x5C0F;&#x662F; 20B( <code>ConsumeQueue.CQ_STORE_UNIT_SIZE</code> )&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x5185;&#x5BB9;&#x7C7B;&#x578B;&#xFF1A;</p>
<ol class="ui list">
<li><code>MESSAGE_POSITION_INFO</code> &#xFF1A;&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x3002;</li>
<li><code>BLANK</code> : &#x6587;&#x4EF6;&#x524D;&#x7F6E;&#x7A7A;&#x767D;&#x5360;&#x4F4D;&#x3002;&#x5F53;&#x5386;&#x53F2; <code>Message</code> &#x88AB;&#x5220;&#x9664;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x7528; <code>BLANK</code>&#x5360;&#x4F4D;&#x88AB;&#x5220;&#x9664;&#x7684;&#x6D88;&#x606F;&#x3002;</li>
</ol>
<p><code>MESSAGE_POSITION_INFO</code> &#x5728; <code>ConsumeQueue</code> &#x5B58;&#x50A8;&#x7ED3;&#x6784;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">offset</td>
<td style="text-align:left">&#x6D88;&#x606F; <code>CommitLog</code> &#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">size</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x957F;&#x5EA6;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">tagsCode</td>
<td style="text-align:left">&#x6D88;&#x606F;tagsCode</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
</tbody>
</table>
<p><code>BLANK</code> &#x5728; <code>ConsumeQueue</code> &#x5B58;&#x50A8;&#x7ED3;&#x6784;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left"></td>
<td style="text-align:left">0</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"></td>
<td style="text-align:left">Integer.MAX_VALUE</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"></td>
<td style="text-align:left">0</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
</tbody>
</table>
<h1 id="3&#x3001;ConsumeQueue-&#x5B58;&#x50A8;"><a href="#3&#x3001;ConsumeQueue-&#x5B58;&#x50A8;" class="headerlink" title="3&#x3001;ConsumeQueue &#x5B58;&#x50A8;"></a>3&#x3001;ConsumeQueue &#x5B58;&#x50A8;</h1><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/02.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/02.png" alt="CommitLog&#x91CD;&#x653E;ConsumeQueue&#x56FE;" class="ui centered image"></a></p>
<p>&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF1A;</p>
<ul class="ui list">
<li><code>ReputMessageService</code> &#xFF1A;write ConsumeQueue&#x3002;</li>
<li><code>FlushConsumeQueueService</code> &#xFF1A;flush ConsumeQueue&#x3002;</li>
</ul>
<h2 id="ReputMessageService"><a href="#ReputMessageService" class="headerlink" title="ReputMessageService"></a>ReputMessageService</h2><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_05_04/12.png"><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/12.png" alt="ReputMessageService&#x987A;&#x5E8F;&#x56FE;" class="ui centered image"></a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">ReputMessageService</span> <span class="keyword">extends</span> <span class="title">ServiceThread</span> </span>{</div><div class="line">  <span class="number">2</span>: </div><div class="line">  <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line">  4:      * &#x5F00;&#x59CB;&#x91CD;&#x653E;&#x6D88;&#x606F;&#x7684;CommitLog&#x7269;&#x7406;&#x4F4D;&#x7F6E;</div><div class="line">  5:      */</div><div class="line">  <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">long</span> reputFromOffset = <span class="number">0</span>;</div><div class="line">  <span class="number">7</span>: </div><div class="line">  <span class="number">8</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getReputFromOffset</span><span class="params">()</span> </span>{</div><div class="line">  <span class="number">9</span>:         <span class="keyword">return</span> reputFromOffset;</div><div class="line"> <span class="number">10</span>:     }</div><div class="line"> <span class="number">11</span>: </div><div class="line"> <span class="number">12</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReputFromOffset</span><span class="params">(<span class="keyword">long</span> reputFromOffset)</span> </span>{</div><div class="line"> <span class="number">13</span>:         <span class="keyword">this</span>.reputFromOffset = reputFromOffset;</div><div class="line"> <span class="number">14</span>:     }</div><div class="line"> <span class="number">15</span>: </div><div class="line"> <span class="number">16</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">17</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">18</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span> &amp;&amp; <span class="keyword">this</span>.isCommitLogAvailable(); i++) {</div><div class="line"> <span class="number">19</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">20</span>:                 Thread.sleep(<span class="number">100</span>);</div><div class="line"> <span class="number">21</span>:             } <span class="keyword">catch</span> (InterruptedException ignored) {</div><div class="line"> <span class="number">22</span>:             }</div><div class="line"> <span class="number">23</span>:         }</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.isCommitLogAvailable()) {</div><div class="line"> <span class="number">26</span>:             log.warn(<span class="string">&quot;shutdown ReputMessageService, but commitlog have not finish to be dispatched, CL: {} reputFromOffset: {}&quot;</span>,</div><div class="line"> <span class="number">27</span>:                 DefaultMessageStore.<span class="keyword">this</span>.commitLog.getMaxOffset(), <span class="keyword">this</span>.reputFromOffset);</div><div class="line"> <span class="number">28</span>:         }</div><div class="line"> <span class="number">29</span>: </div><div class="line"> <span class="number">30</span>:         <span class="keyword">super</span>.shutdown();</div><div class="line"> <span class="number">31</span>:     }</div><div class="line"> <span class="number">32</span>: </div><div class="line"> <span class="number">33</span>:     <span class="comment">/**</span></div><div class="line"> 34:      * &#x5269;&#x4F59;&#x9700;&#x8981;&#x91CD;&#x653E;&#x6D88;&#x606F;&#x5B57;&#x8282;&#x6570;</div><div class="line"> 35:      *</div><div class="line"> 36:      * <span class="doctag">@return</span> &#x5B57;&#x8282;&#x6570;</div><div class="line"> 37:      */</div><div class="line"> <span class="number">38</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">behind</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">39</span>:         <span class="keyword">return</span> DefaultMessageStore.<span class="keyword">this</span>.commitLog.getMaxOffset() - <span class="keyword">this</span>.reputFromOffset;</div><div class="line"> <span class="number">40</span>:     }</div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:     <span class="comment">/**</span></div><div class="line"> 43:      * &#x662F;&#x5426;commitLog&#x9700;&#x8981;&#x91CD;&#x653E;&#x6D88;&#x606F;</div><div class="line"> 44:      *</div><div class="line"> 45:      * <span class="doctag">@return</span> &#x662F;&#x5426;</div><div class="line"> 46:      */</div><div class="line"> <span class="number">47</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isCommitLogAvailable</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">48</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.reputFromOffset &lt; DefaultMessageStore.<span class="keyword">this</span>.commitLog.getMaxOffset();</div><div class="line"> <span class="number">49</span>:     }</div><div class="line"> <span class="number">50</span>: </div><div class="line"> <span class="number">51</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doReput</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">52</span>:         <span class="keyword">for</span> (<span class="keyword">boolean</span> doNext = <span class="keyword">true</span>; <span class="keyword">this</span>.isCommitLogAvailable() &amp;&amp; doNext; ) {</div><div class="line"> <span class="number">53</span>: </div><div class="line"> <span class="number">54</span>:             <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x8FD9;&#x4E2A;&#x662F;&#x5565;</span></div><div class="line"> <span class="number">55</span>:             <span class="keyword">if</span> (DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().isDuplicationEnable() <span class="comment">//</span></div><div class="line"> <span class="number">56</span>:                 &amp;&amp; <span class="keyword">this</span>.reputFromOffset &gt;= DefaultMessageStore.<span class="keyword">this</span>.getConfirmOffset()) {</div><div class="line"> <span class="number">57</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">58</span>:             }</div><div class="line"> <span class="number">59</span>: </div><div class="line"> <span class="number">60</span>:             <span class="comment">// &#x83B7;&#x53D6;&#x4ECE;reputFromOffset&#x5F00;&#x59CB;&#x7684;commitLog&#x5BF9;&#x5E94;&#x7684;MappeFile&#x5BF9;&#x5E94;&#x7684;MappedByteBuffer</span></div><div class="line"> <span class="number">61</span>:             SelectMappedBufferResult result = DefaultMessageStore.<span class="keyword">this</span>.commitLog.getData(reputFromOffset);</div><div class="line"> <span class="number">62</span>:             <span class="keyword">if</span> (result != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">63</span>:                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">64</span>:                     <span class="keyword">this</span>.reputFromOffset = result.getStartOffset();</div><div class="line"> <span class="number">65</span>: </div><div class="line"> <span class="number">66</span>:                     <span class="comment">// &#x904D;&#x5386;MappedByteBuffer</span></div><div class="line"> <span class="number">67</span>:                     <span class="keyword">for</span> (<span class="keyword">int</span> readSize = <span class="number">0</span>; readSize &lt; result.getSize() &amp;&amp; doNext; ) {</div><div class="line"> <span class="number">68</span>:                         <span class="comment">// &#x751F;&#x6210;&#x91CD;&#x653E;&#x6D88;&#x606F;&#x91CD;&#x653E;&#x8C03;&#x5EA6;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">69</span>:                         DispatchRequest dispatchRequest = DefaultMessageStore.<span class="keyword">this</span>.commitLog.checkMessageAndReturnSize(result.getByteBuffer(), <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"> <span class="number">70</span>:                         <span class="keyword">int</span> size = dispatchRequest.getMsgSize(); <span class="comment">// &#x6D88;&#x606F;&#x957F;&#x5EA6;</span></div><div class="line"> <span class="number">71</span>:                         <span class="comment">// &#x6839;&#x636E;&#x8BF7;&#x6C42;&#x7684;&#x7ED3;&#x679C;&#x5904;&#x7406;</span></div><div class="line"> <span class="number">72</span>:                         <span class="keyword">if</span> (dispatchRequest.isSuccess()) { <span class="comment">// &#x8BFB;&#x53D6;&#x6210;&#x529F;</span></div><div class="line"> <span class="number">73</span>:                             <span class="keyword">if</span> (size &gt; <span class="number">0</span>) { <span class="comment">// &#x8BFB;&#x53D6;Message</span></div><div class="line"> <span class="number">74</span>:                                 DefaultMessageStore.<span class="keyword">this</span>.doDispatch(dispatchRequest);</div><div class="line"> <span class="number">75</span>:                                 <span class="comment">// &#x901A;&#x77E5;&#x6709;&#x65B0;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">76</span>:                                 <span class="keyword">if</span> (BrokerRole.SLAVE != DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().getBrokerRole()</div><div class="line"> <span class="number">77</span>:                                     &amp;&amp; DefaultMessageStore.<span class="keyword">this</span>.brokerConfig.isLongPollingEnable()) {</div><div class="line"> <span class="number">78</span>:                                     DefaultMessageStore.<span class="keyword">this</span>.messageArrivingListener.arriving(dispatchRequest.getTopic(),</div><div class="line"> <span class="number">79</span>:                                         dispatchRequest.getQueueId(), dispatchRequest.getConsumeQueueOffset() + <span class="number">1</span>,</div><div class="line"> <span class="number">80</span>:                                         dispatchRequest.getTagsCode());</div><div class="line"> <span class="number">81</span>:                                 }</div><div class="line"> <span class="number">82</span>:                                 <span class="comment">// FIXED BUG By shijia</span></div><div class="line"> <span class="number">83</span>:                                 <span class="keyword">this</span>.reputFromOffset += size;</div><div class="line"> <span class="number">84</span>:                                 readSize += size;</div><div class="line"> <span class="number">85</span>:                                 <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"> <span class="number">86</span>:                                 <span class="keyword">if</span> (DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().getBrokerRole() == BrokerRole.SLAVE) {</div><div class="line"> <span class="number">87</span>:                                     DefaultMessageStore.<span class="keyword">this</span>.storeStatsService</div><div class="line"> <span class="number">88</span>:                                         .getSinglePutMessageTopicTimesTotal(dispatchRequest.getTopic()).incrementAndGet();</div><div class="line"> <span class="number">89</span>:                                     DefaultMessageStore.<span class="keyword">this</span>.storeStatsService</div><div class="line"> <span class="number">90</span>:                                         .getSinglePutMessageTopicSizeTotal(dispatchRequest.getTopic())</div><div class="line"> <span class="number">91</span>:                                         .addAndGet(dispatchRequest.getMsgSize());</div><div class="line"> <span class="number">92</span>:                                 }</div><div class="line"> <span class="number">93</span>:                             } <span class="keyword">else</span> <span class="keyword">if</span> (size == <span class="number">0</span>) { <span class="comment">// &#x8BFB;&#x53D6;&#x5230;MappedFile&#x6587;&#x4EF6;&#x5C3E;</span></div><div class="line"> <span class="number">94</span>:                                 <span class="keyword">this</span>.reputFromOffset = DefaultMessageStore.<span class="keyword">this</span>.commitLog.rollNextFile(<span class="keyword">this</span>.reputFromOffset);</div><div class="line"> <span class="number">95</span>:                                 readSize = result.getSize();</div><div class="line"> <span class="number">96</span>:                             }</div><div class="line"> <span class="number">97</span>:                         } <span class="keyword">else</span> <span class="keyword">if</span> (!dispatchRequest.isSuccess()) { <span class="comment">// &#x8BFB;&#x53D6;&#x5931;&#x8D25;</span></div><div class="line"> <span class="number">98</span>:                             <span class="keyword">if</span> (size &gt; <span class="number">0</span>) { <span class="comment">// &#x8BFB;&#x53D6;&#x5230;Message&#x5374;&#x4E0D;&#x662F;Message</span></div><div class="line"> <span class="number">99</span>:                                 log.error(<span class="string">&quot;[BUG]read total count not equals msg total size. reputFromOffset={}&quot;</span>, reputFromOffset);</div><div class="line"><span class="number">100</span>:                                 <span class="keyword">this</span>.reputFromOffset += size;</div><div class="line"><span class="number">101</span>:                             } <span class="keyword">else</span> { <span class="comment">// &#x8BFB;&#x53D6;&#x5230;Blank&#x5374;&#x4E0D;&#x662F;Blank</span></div><div class="line"><span class="number">102</span>:                                 doNext = <span class="keyword">false</span>;</div><div class="line"><span class="number">103</span>:                                 <span class="keyword">if</span> (DefaultMessageStore.<span class="keyword">this</span>.brokerConfig.getBrokerId() == MixAll.MASTER_ID) {</div><div class="line"><span class="number">104</span>:                                     log.error(<span class="string">&quot;[BUG]the master dispatch message to consume queue error, COMMITLOG OFFSET: {}&quot;</span>,</div><div class="line"><span class="number">105</span>:                                         <span class="keyword">this</span>.reputFromOffset);</div><div class="line"><span class="number">106</span>: </div><div class="line"><span class="number">107</span>:                                     <span class="keyword">this</span>.reputFromOffset += result.getSize() - readSize;</div><div class="line"><span class="number">108</span>:                                 }</div><div class="line"><span class="number">109</span>:                             }</div><div class="line"><span class="number">110</span>:                         }</div><div class="line"><span class="number">111</span>:                     }</div><div class="line"><span class="number">112</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">113</span>:                     result.release();</div><div class="line"><span class="number">114</span>:                 }</div><div class="line"><span class="number">115</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">116</span>:                 doNext = <span class="keyword">false</span>;</div><div class="line"><span class="number">117</span>:             }</div><div class="line"><span class="number">118</span>:         }</div><div class="line"><span class="number">119</span>:     }</div><div class="line"><span class="number">120</span>: </div><div class="line"><span class="number">121</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">122</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">123</span>:         DefaultMessageStore.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"><span class="number">124</span>: </div><div class="line"><span class="number">125</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"><span class="number">126</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">127</span>:                 Thread.sleep(<span class="number">1</span>);</div><div class="line"><span class="number">128</span>:                 <span class="keyword">this</span>.doReput();</div><div class="line"><span class="number">129</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">130</span>:                 DefaultMessageStore.log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"><span class="number">131</span>:             }</div><div class="line"><span class="number">132</span>:         }</div><div class="line"><span class="number">133</span>: </div><div class="line"><span class="number">134</span>:         DefaultMessageStore.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">135</span>:     }</div><div class="line"><span class="number">136</span>: </div><div class="line"><span class="number">137</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">138</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">139</span>:         <span class="keyword">return</span> ReputMessageService.class.getSimpleName();</div><div class="line"><span class="number">140</span>:     }</div><div class="line"><span class="number">141</span>: </div><div class="line"><span class="number">142</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x91CD;&#x653E;&#x6D88;&#x606F;&#x7EBF;&#x7A0B;&#x670D;&#x52A1;&#x3002;<ul>
<li>&#x8BE5;&#x670D;&#x52A1;&#x4E0D;&#x65AD;&#x751F;&#x6210; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F; &#x5230; &#x6D88;&#x8D39;&#x961F;&#x5217;(ConsumeQueue)</li>
<li>&#x8BE5;&#x670D;&#x52A1;&#x4E0D;&#x65AD;&#x751F;&#x6210; &#x6D88;&#x606F;&#x7D22;&#x5F15; &#x5230; &#x7D22;&#x5F15;&#x6587;&#x4EF6;(IndexFile)    </li>
</ul>
</li>
<li><img src="http://www.yunai.me/images/RocketMQ/2017_05_04/11.png" alt="ReputMessageService&#x7528;&#x4F8B;&#x56FE;"><ul>
<li>&#x7B2C; 61 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>reputFromOffset</code> &#x5F00;&#x59CB;&#x7684; <code>CommitLog</code> &#x5BF9;&#x5E94;&#x7684; <code>MappedFile</code> &#x5BF9;&#x5E94;&#x7684; <code>MappedByteBuffer</code>&#x3002;</li>
<li>&#x7B2C; 67 &#x884C; &#xFF1A;&#x904D;&#x5386; <code>MappedByteBuffer</code>&#x3002;</li>
<li>&#x7B2C; 69 &#x884C; &#xFF1A;&#x751F;&#x6210;&#x91CD;&#x653E;&#x6D88;&#x606F;&#x91CD;&#x653E;&#x8C03;&#x5EA6;&#x8BF7;&#x6C42; (<code>DispatchRequest</code>) &#x3002;&#x8BF7;&#x6C42;&#x91CC;&#x4E3B;&#x8981;&#x5305;&#x542B;&#x4E00;&#x6761;&#x6D88;&#x606F; (<code>Message</code>) &#x6216;&#x8005; &#x6587;&#x4EF6;&#x5C3E; (<code>BLANK</code>) &#x7684;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x3002;</li>
<li>&#x7B2C; 72 &#x81F3; 96 &#x884C; &#xFF1A;&#x8BF7;&#x6C42;&#x662F;&#x6709;&#x6548;&#x8BF7;&#x6C42;&#xFF0C;&#x8FDB;&#x884C;&#x903B;&#x8F91;&#x5904;&#x7406;&#x3002;<ul>
<li>&#x7B2C; 75 &#x81F3; 81 &#x884C; &#xFF1A;&#x5F53; <code>Broker</code> &#x662F;&#x4E3B;&#x8282;&#x70B9; &amp;&amp; <code>Broker</code> &#x5F00;&#x542F;&#x7684;&#x662F;&#x957F;&#x8F6E;&#x8BE2;&#xFF0C;&#x901A;&#x77E5;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x6709;&#x65B0;&#x7684;&#x6D88;&#x606F;&#x3002;<code>NotifyMessageArrivingListener</code> &#x4F1A; &#x8C03;&#x7528; <code>PullRequestHoldService#notifyMessageArriving(...)</code> &#x65B9;&#x6CD5;&#xFF0C;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#pullrequestholdservice">PullRequestHoldService</a></li>
</ul>
</li>
<li>&#x7B2C; 73 &#x81F3; 92 &#x884C; &#xFF1A;&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x7684;&#x662F; <code>Message</code>&#xFF0C;&#x8FDB;&#x884C;&#x8C03;&#x5EA6;&#xFF0C;&#x751F;&#x6210; <code>ConsumeQueue</code> &#x548C; <code>IndexFile</code> &#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;</li>
<li>&#x7B2C; 93 &#x81F3; 96 &#x884C; &#xFF1A;&#x8BF7;&#x6C42;&#x5BF9;&#x5E94;&#x7684;&#x662F; <code>Blank</code>&#xFF0C;&#x5373;&#x6587;&#x4EF6;&#x5C3E;&#xFF0C;&#x8DF3;&#x8F6C;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A; <code>MappedFile</code>&#x3002;</li>
<li>&#x7B2C; 97 &#x81F3; 110 &#x884C; &#xFF1A;&#x8BF7;&#x6C42;&#x662F;&#x65E0;&#x6548;&#x8BF7;&#x6C42;&#x3002;&#x51FA;&#x73B0;&#x8BE5;&#x60C5;&#x51B5;&#xFF0C;&#x57FA;&#x672C;&#x662F;&#x4E00;&#x4E2A;<strong>BUG</strong>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 127 &#x81F3; 128 &#x884C; &#xFF1A;&#x6BCF; 1ms &#x5FAA;&#x73AF;&#x6267;&#x884C;&#x91CD;&#x653E;&#x903B;&#x8F91;&#x3002;</li>
<li>&#x7B2C; 18 &#x81F3; 30 &#x884C; &#xFF1A;<code>shutdown</code>&#x65F6;&#xFF0C;&#x591A;&#x6B21; <code>sleep(100)</code> &#x76F4;&#x5230; <code>CommitLog</code> &#x56DE;&#x653E;&#x5230;&#x6700;&#x65B0;&#x4F4D;&#x7F6E;&#x3002;&#x6069;&#xFF0C;&#x5982;&#x679C;&#x672A;&#x56DE;&#x653E;&#x5B8C;&#xFF0C;&#x4F1A;&#x8F93;&#x51FA;&#x8B66;&#x544A;&#x65E5;&#x5FD7;&#x3002;</li>
</ul>
<h3 id="DefaultMessageStore-doDispatch-&#x2026;"><a href="#DefaultMessageStore-doDispatch-&#x2026;" class="headerlink" title="DefaultMessageStore#doDispatch(&#x2026;)"></a>DefaultMessageStore#doDispatch(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x6267;&#x884C;&#x8C03;&#x5EA6;&#x8BF7;&#x6C42;</div><div class="line"> 3:  * 1. &#x975E;&#x4E8B;&#x52A1;&#x6D88;&#x606F; &#x6216; &#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x6D88;&#x606F; &#x5EFA;&#x7ACB; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F; &#x5230; ConsumeQueue</div><div class="line"> 4:  * 2. &#x5EFA;&#x7ACB; &#x7D22;&#x5F15;&#x4FE1;&#x606F; &#x5230; IndexFile</div><div class="line"> 5:  *</div><div class="line"> 6:  * <span class="doctag">@param</span> req &#x8C03;&#x5EA6;&#x8BF7;&#x6C42;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doDispatch</span><span class="params">(DispatchRequest req)</span> </span>{</div><div class="line"> <span class="number">9</span>:     <span class="comment">// &#x975E;&#x4E8B;&#x52A1;&#x6D88;&#x606F; &#x6216; &#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#x6D88;&#x606F; &#x5EFA;&#x7ACB; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F; &#x5230; ConsumeQueue</span></div><div class="line"><span class="number">10</span>:     <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(req.getSysFlag());</div><div class="line"><span class="number">11</span>:     <span class="keyword">switch</span> (tranType) {</div><div class="line"><span class="number">12</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_NOT_TYPE:</div><div class="line"><span class="number">13</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_COMMIT_TYPE:</div><div class="line"><span class="number">14</span>:             DefaultMessageStore.<span class="keyword">this</span>.putMessagePositionInfo(req.getTopic(), req.getQueueId(), req.getCommitLogOffset(), req.getMsgSize(),</div><div class="line"><span class="number">15</span>:                 req.getTagsCode(), req.getStoreTimestamp(), req.getConsumeQueueOffset());</div><div class="line"><span class="number">16</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">17</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_PREPARED_TYPE:</div><div class="line"><span class="number">18</span>:         <span class="keyword">case</span> MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:</div><div class="line"><span class="number">19</span>:             <span class="keyword">break</span>;</div><div class="line"><span class="number">20</span>:     }</div><div class="line"><span class="number">21</span>:     <span class="comment">// &#x5EFA;&#x7ACB; &#x7D22;&#x5F15;&#x4FE1;&#x606F; &#x5230; IndexFile</span></div><div class="line"><span class="number">22</span>:     <span class="keyword">if</span> (DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().isMessageIndexEnable()) {</div><div class="line"><span class="number">23</span>:         DefaultMessageStore.<span class="keyword">this</span>.indexService.buildIndex(req);</div><div class="line"><span class="number">24</span>:     }</div><div class="line"><span class="number">25</span>: }</div><div class="line"><span class="number">26</span>: </div><div class="line"><span class="number">27</span>: <span class="comment">/**</span></div><div class="line">28:  * &#x5EFA;&#x7ACB; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F; &#x5230; ConsumeQueue</div><div class="line">29:  *</div><div class="line">30:  * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">31:  * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">32:  * <span class="doctag">@param</span> offset commitLog&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</div><div class="line">33:  * <span class="doctag">@param</span> size &#x6D88;&#x606F;&#x957F;&#x5EA6;</div><div class="line">34:  * <span class="doctag">@param</span> tagsCode &#x6D88;&#x606F;tagsCode</div><div class="line">35:  * <span class="doctag">@param</span> storeTimestamp &#x5B58;&#x50A8;&#x65F6;&#x95F4;</div><div class="line">36:  * <span class="doctag">@param</span> logicOffset &#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line">37:  */</div><div class="line"><span class="number">38</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMessagePositionInfo</span><span class="params">(String topic, <span class="keyword">int</span> queueId, <span class="keyword">long</span> offset, <span class="keyword">int</span> size, <span class="keyword">long</span> tagsCode, <span class="keyword">long</span> storeTimestamp,</span></span></div><div class="line"><span class="number">39</span>:     <span class="keyword">long</span> logicOffset) {</div><div class="line"><span class="number">40</span>:     ConsumeQueue cq = <span class="keyword">this</span>.findConsumeQueue(topic, queueId);</div><div class="line"><span class="number">41</span>:     cq.putMessagePositionInfoWrapper(offset, size, tagsCode, storeTimestamp, logicOffset);</div><div class="line"><span class="number">42</span>: }</div></pre></td></tr></table></figure>
<h3 id="ConsumeQueue-putMessagePositionInfoWrapper-&#x2026;"><a href="#ConsumeQueue-putMessagePositionInfoWrapper-&#x2026;" class="headerlink" title="ConsumeQueue#putMessagePositionInfoWrapper(&#x2026;)"></a>ConsumeQueue#putMessagePositionInfoWrapper(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">/**</span></div><div class="line">  2:  * &#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x5C01;&#x88C5;</div><div class="line">  3:  *</div><div class="line">  4:  * <span class="doctag">@param</span> offset commitLog&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</div><div class="line">  5:  * <span class="doctag">@param</span> size &#x6D88;&#x606F;&#x957F;&#x5EA6;</div><div class="line">  6:  * <span class="doctag">@param</span> tagsCode &#x6D88;&#x606F;tagsCode</div><div class="line">  7:  * <span class="doctag">@param</span> storeTimestamp &#x6D88;&#x606F;&#x5B58;&#x50A8;&#x65F6;&#x95F4;</div><div class="line">  8:  * <span class="doctag">@param</span> logicOffset &#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line">  9:  */</div><div class="line"> <span class="number">10</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMessagePositionInfoWrapper</span><span class="params">(<span class="keyword">long</span> offset, <span class="keyword">int</span> size, <span class="keyword">long</span> tagsCode, <span class="keyword">long</span> storeTimestamp,</span></span></div><div class="line"> <span class="number">11</span>:     <span class="keyword">long</span> logicOffset) {</div><div class="line"> <span class="number">12</span>:     <span class="keyword">final</span> <span class="keyword">int</span> maxRetries = <span class="number">30</span>;</div><div class="line"> <span class="number">13</span>:     <span class="keyword">boolean</span> canWrite = <span class="keyword">this</span>.defaultMessageStore.getRunningFlags().isWriteable();</div><div class="line"> <span class="number">14</span>:     <span class="comment">// &#x591A;&#x6B21;&#x5FAA;&#x73AF;&#x5199;&#xFF0C;&#x76F4;&#x5230;&#x6210;&#x529F;</span></div><div class="line"> <span class="number">15</span>:     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxRetries &amp;&amp; canWrite; i++) {</div><div class="line"> <span class="number">16</span>:         <span class="comment">// &#x8C03;&#x7528;&#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;</span></div><div class="line"> <span class="number">17</span>:         <span class="keyword">boolean</span> result = <span class="keyword">this</span>.putMessagePositionInfo(offset, size, tagsCode, logicOffset);</div><div class="line"> <span class="number">18</span>:         <span class="keyword">if</span> (result) {</div><div class="line"> <span class="number">19</span>:             <span class="comment">// &#x6DFB;&#x52A0;&#x6210;&#x529F;&#xFF0C;&#x4F7F;&#x7528;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x65F6;&#x95F4; &#x4F5C;&#x4E3A; &#x5B58;&#x50A8;check point&#x3002;</span></div><div class="line"> <span class="number">20</span>:             <span class="keyword">this</span>.defaultMessageStore.getStoreCheckpoint().setLogicsMsgTimestamp(storeTimestamp);</div><div class="line"> <span class="number">21</span>:             <span class="keyword">return</span>;</div><div class="line"> <span class="number">22</span>:         } <span class="keyword">else</span> {</div><div class="line"> <span class="number">23</span>:             <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"> <span class="number">24</span>:             log.warn(<span class="string">&quot;[BUG]put commit log position info to &quot;</span> + topic + <span class="string">&quot;:&quot;</span> + queueId + <span class="string">&quot; &quot;</span> + offset</div><div class="line"> <span class="number">25</span>:                 + <span class="string">&quot; failed, retry &quot;</span> + i + <span class="string">&quot; times&quot;</span>);</div><div class="line"> <span class="number">26</span>: </div><div class="line"> <span class="number">27</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">28</span>:                 Thread.sleep(<span class="number">1000</span>);</div><div class="line"> <span class="number">29</span>:             } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">30</span>:                 log.warn(<span class="string">&quot;&quot;</span>, e);</div><div class="line"> <span class="number">31</span>:             }</div><div class="line"> <span class="number">32</span>:         }</div><div class="line"> <span class="number">33</span>:     }</div><div class="line"> <span class="number">34</span>: </div><div class="line"> <span class="number">35</span>:     <span class="comment">// <span class="doctag">XXX:</span> warn and notify me &#x8BBE;&#x7F6E;&#x5F02;&#x5E38;&#x4E0D;&#x53EF;&#x5199;&#x5165;</span></div><div class="line"> <span class="number">36</span>:     log.error(<span class="string">&quot;[BUG]consume queue can not write, {} {}&quot;</span>, <span class="keyword">this</span>.topic, <span class="keyword">this</span>.queueId);</div><div class="line"> <span class="number">37</span>:     <span class="keyword">this</span>.defaultMessageStore.getRunningFlags().makeLogicsQueueError();</div><div class="line"> <span class="number">38</span>: }</div><div class="line"> <span class="number">39</span>: </div><div class="line"> <span class="number">40</span>: <span class="comment">/**</span></div><div class="line"> 41:  * &#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x6DFB;&#x52A0;&#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line"> 42:  *</div><div class="line"> 43:  * <span class="doctag">@param</span> offset commitLog&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</div><div class="line"> 44:  * <span class="doctag">@param</span> size &#x6D88;&#x606F;&#x957F;&#x5EA6;</div><div class="line"> 45:  * <span class="doctag">@param</span> tagsCode &#x6D88;&#x606F;tagsCode</div><div class="line"> 46:  * <span class="doctag">@param</span> cqOffset &#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line"> 47:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line"> 48:  */</div><div class="line"> <span class="number">49</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">putMessagePositionInfo</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> offset, <span class="keyword">final</span> <span class="keyword">int</span> size, <span class="keyword">final</span> <span class="keyword">long</span> tagsCode,</span></span></div><div class="line"> <span class="number">50</span>:     <span class="keyword">final</span> <span class="keyword">long</span> cqOffset) {</div><div class="line"> <span class="number">51</span>:     <span class="comment">// &#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x91CD;&#x653E;&#x8FC7;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x6210;&#x529F;</span></div><div class="line"> <span class="number">52</span>:     <span class="keyword">if</span> (offset &lt;= <span class="keyword">this</span>.maxPhysicOffset) {</div><div class="line"> <span class="number">53</span>:         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"> <span class="number">54</span>:     }</div><div class="line"> <span class="number">55</span>:     <span class="comment">// &#x5199;&#x5165;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x5230;byteBuffer</span></div><div class="line"> <span class="number">56</span>:     <span class="keyword">this</span>.byteBufferIndex.flip();</div><div class="line"> <span class="number">57</span>:     <span class="keyword">this</span>.byteBufferIndex.limit(CQ_STORE_UNIT_SIZE);</div><div class="line"> <span class="number">58</span>:     <span class="keyword">this</span>.byteBufferIndex.putLong(offset);</div><div class="line"> <span class="number">59</span>:     <span class="keyword">this</span>.byteBufferIndex.putInt(size);</div><div class="line"> <span class="number">60</span>:     <span class="keyword">this</span>.byteBufferIndex.putLong(tagsCode);</div><div class="line"> <span class="number">61</span>:     <span class="comment">// &#x8BA1;&#x7B97;consumeQueue&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x83B7;&#x5F97;&#x5BF9;&#x5E94;&#x7684;MappedFile</span></div><div class="line"> <span class="number">62</span>:     <span class="keyword">final</span> <span class="keyword">long</span> expectLogicOffset = cqOffset * CQ_STORE_UNIT_SIZE;</div><div class="line"> <span class="number">63</span>:     MappedFile mappedFile = <span class="keyword">this</span>.mappedFileQueue.getLastMappedFile(expectLogicOffset);</div><div class="line"> <span class="number">64</span>:     <span class="keyword">if</span> (mappedFile != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">65</span>:         <span class="comment">// &#x5F53;&#x662F;ConsumeQueue&#x7B2C;&#x4E00;&#x4E2A;MappedFile &amp;&amp; &#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x975E;&#x7B2C;&#x4E00;&#x4E2A; &amp;&amp; MappedFile&#x672A;&#x5199;&#x5165;&#x5185;&#x5BB9;&#xFF0C;&#x5219;&#x586B;&#x5145;&#x524D;&#x7F6E;&#x7A7A;&#x767D;&#x5360;&#x4F4D;</span></div><div class="line"> <span class="number">66</span>:         <span class="keyword">if</span> (mappedFile.isFirstCreateInQueue() &amp;&amp; cqOffset != <span class="number">0</span> &amp;&amp; mappedFile.getWrotePosition() == <span class="number">0</span>) { <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x4E3A;&#x5565;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x3002;&#x76EE;&#x524D;&#x80FD;&#x591F;&#x60F3;&#x8C61;&#x5230;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x4E9B;&#x8001;&#x7684;&#x6D88;&#x606F;&#x5F88;&#x4E45;&#x6CA1;&#x53D1;&#x9001;&#xFF0C;&#x7A81;&#x7136;&#x53D1;&#x9001;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x521A;&#x597D;&#x6EE1;&#x8DB3;&#x3002;</span></div><div class="line"> <span class="number">67</span>:             <span class="keyword">this</span>.minLogicOffset = expectLogicOffset;</div><div class="line"> <span class="number">68</span>:             <span class="keyword">this</span>.mappedFileQueue.setFlushedWhere(expectLogicOffset);</div><div class="line"> <span class="number">69</span>:             <span class="keyword">this</span>.mappedFileQueue.setCommittedWhere(expectLogicOffset);</div><div class="line"> <span class="number">70</span>:             <span class="keyword">this</span>.fillPreBlank(mappedFile, expectLogicOffset);</div><div class="line"> <span class="number">71</span>:             log.info(<span class="string">&quot;fill pre blank space &quot;</span> + mappedFile.getFileName() + <span class="string">&quot; &quot;</span> + expectLogicOffset + <span class="string">&quot; &quot;</span></div><div class="line"> <span class="number">72</span>:                 + mappedFile.getWrotePosition());</div><div class="line"> <span class="number">73</span>:         }</div><div class="line"> <span class="number">74</span>:         <span class="comment">// &#x6821;&#x9A8C;consumeQueue&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x662F;&#x5426;&#x5408;&#x6CD5;&#x3002;TODO &#x5982;&#x679C;&#x4E0D;&#x5408;&#x6CD5;&#xFF0C;&#x7EE7;&#x7EED;&#x5199;&#x5165;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#xFF1F;</span></div><div class="line"> <span class="number">75</span>:         <span class="keyword">if</span> (cqOffset != <span class="number">0</span>) {</div><div class="line"> <span class="number">76</span>:             <span class="keyword">long</span> currentLogicOffset = mappedFile.getWrotePosition() + mappedFile.getFileFromOffset();</div><div class="line"> <span class="number">77</span>:             <span class="keyword">if</span> (expectLogicOffset != currentLogicOffset) {</div><div class="line"> <span class="number">78</span>:                 LOG_ERROR.warn(</div><div class="line"> <span class="number">79</span>:                     <span class="string">&quot;[BUG]logic queue order maybe wrong, expectLogicOffset: {} currentLogicOffset: {} Topic: {} QID: {} Diff: {}&quot;</span>,</div><div class="line"> <span class="number">80</span>:                     expectLogicOffset,</div><div class="line"> <span class="number">81</span>:                     currentLogicOffset,</div><div class="line"> <span class="number">82</span>:                     <span class="keyword">this</span>.topic,</div><div class="line"> <span class="number">83</span>:                     <span class="keyword">this</span>.queueId,</div><div class="line"> <span class="number">84</span>:                     expectLogicOffset - currentLogicOffset</div><div class="line"> <span class="number">85</span>:                 );</div><div class="line"> <span class="number">86</span>:             }</div><div class="line"> <span class="number">87</span>:         }</div><div class="line"> <span class="number">88</span>:         <span class="comment">// &#x8BBE;&#x7F6E;commitLog&#x91CD;&#x653E;&#x6D88;&#x606F;&#x5230;ConsumeQueue&#x4F4D;&#x7F6E;&#x3002;</span></div><div class="line"> <span class="number">89</span>:         <span class="keyword">this</span>.maxPhysicOffset = offset;</div><div class="line"> <span class="number">90</span>:         <span class="comment">// &#x63D2;&#x5165;mappedFile</span></div><div class="line"> <span class="number">91</span>:         <span class="keyword">return</span> mappedFile.appendMessage(<span class="keyword">this</span>.byteBufferIndex.array());</div><div class="line"> <span class="number">92</span>:     }</div><div class="line"> <span class="number">93</span>:     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"> <span class="number">94</span>: }</div><div class="line"> <span class="number">95</span>: </div><div class="line"> <span class="number">96</span>: <span class="comment">/**</span></div><div class="line"> 97:  * &#x586B;&#x5145;&#x524D;&#x7F6E;&#x7A7A;&#x767D;&#x5360;&#x4F4D;</div><div class="line"> 98:  *</div><div class="line"> 99:  * <span class="doctag">@param</span> mappedFile MappedFile</div><div class="line">100:  * <span class="doctag">@param</span> untilWhere consumeQueue&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;</div><div class="line">101:  */</div><div class="line"><span class="number">102</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fillPreBlank</span><span class="params">(<span class="keyword">final</span> MappedFile mappedFile, <span class="keyword">final</span> <span class="keyword">long</span> untilWhere)</span> </span>{</div><div class="line"><span class="number">103</span>:     <span class="comment">// &#x5199;&#x5165;&#x524D;&#x7F6E;&#x7A7A;&#x767D;&#x5360;&#x4F4D;&#x5230;byteBuffer</span></div><div class="line"><span class="number">104</span>:     ByteBuffer byteBuffer = ByteBuffer.allocate(CQ_STORE_UNIT_SIZE);</div><div class="line"><span class="number">105</span>:     byteBuffer.putLong(<span class="number">0L</span>);</div><div class="line"><span class="number">106</span>:     byteBuffer.putInt(Integer.MAX_VALUE);</div><div class="line"><span class="number">107</span>:     byteBuffer.putLong(<span class="number">0L</span>);</div><div class="line"><span class="number">108</span>:     <span class="comment">// &#x5FAA;&#x73AF;&#x586B;&#x7A7A;</span></div><div class="line"><span class="number">109</span>:     <span class="keyword">int</span> until = (<span class="keyword">int</span>) (untilWhere % <span class="keyword">this</span>.mappedFileQueue.getMappedFileSize());</div><div class="line"><span class="number">110</span>:     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; until; i += CQ_STORE_UNIT_SIZE) {</div><div class="line"><span class="number">111</span>:         mappedFile.appendMessage(byteBuffer.array());</div><div class="line"><span class="number">112</span>:     }</div><div class="line"><span class="number">113</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>#putMessagePositionInfoWrapper(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x5230; <code>ConsumeQueue</code> &#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x5B9E;&#x9645;&#x9700;&#x8981;&#x8C03;&#x7528; <code>#putMessagePositionInfo(...)</code> &#x65B9;&#x6CD5;&#x3002;<ul>
<li>&#x7B2C; 13 &#x884C; &#xFF1A;&#x5224;&#x65AD; <code>ConsumeQueue</code> &#x662F;&#x5426;&#x5141;&#x8BB8;&#x5199;&#x5165;&#x3002;&#x5F53;&#x53D1;&#x751F;Bug&#x65F6;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x5199;&#x5165;&#x3002;</li>
<li>&#x7B2C; 17 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>#putMessagePositionInfo(...)</code> &#x65B9;&#x6CD5;&#xFF0C;&#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x3002;</li>
<li>&#x7B2C; 18 &#x81F3; 21 &#x884C; &#xFF1A;&#x6DFB;&#x52A0;&#x6210;&#x529F;&#xFF0C;&#x4F7F;&#x7528;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x65F6;&#x95F4; &#x4F5C;&#x4E3A; &#x5B58;&#x50A8;&#x68C0;&#x67E5;&#x70B9;&#x3002;<code>StoreCheckpoint</code> &#x7684;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/store-init-and-shutdown/">Store&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x5173;&#x95ED;</a>&#x3002;</li>
<li>&#x7B2C; 22 &#x81F3; 32 &#x884C; &#xFF1A;&#x6DFB;&#x52A0;&#x5931;&#x8D25;&#xFF0C;&#x76EE;&#x524D;&#x57FA;&#x672C;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F;BUG&#x3002;</li>
<li>&#x7B2C; 35 &#x81F3; 37 &#x884C; &#xFF1A;&#x5199;&#x5165;&#x5931;&#x8D25;&#x65F6;&#xFF0C;&#x6807;&#x8BB0; <code>ConsumeQueue</code> &#x5199;&#x5165;&#x5F02;&#x5E38;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x7EE7;&#x7EED;&#x5199;&#x5165;&#x3002;</li>
</ul>
</li>
<li><code>#putMessagePositionInfo(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x5230; <code>ConsumeQueue</code>&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x6DFB;&#x52A0;&#x662F;&#x5426;&#x6210;&#x529F;&#x3002;<ul>
<li>&#x7B2C; 51 &#x81F3; 54 &#x884C; &#xFF1A;&#x5982;&#x679C; <code>offset</code>(&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;) &#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;  <code>maxPhysicOffset</code>(<code>CommitLog</code> &#x6D88;&#x606F;&#x91CD;&#x653E;&#x5230; <code>ConsumeQueue</code> &#x6700;&#x5927;&#x7684; <code>CommitLog</code> &#x5B58;&#x50A8;&#x4F4D;&#x7F6E;)&#xFF0C;&#x8868;&#x793A;&#x5DF2;&#x7ECF;&#x91CD;&#x653E;&#x8FC7;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x4E0D;&#x518D;&#x91CD;&#x590D;&#x5199;&#x5165;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x5199;&#x5165;&#x6210;&#x529F;&#x3002;</li>
<li>&#x7B2C; 55 &#x81F3; 60 &#x884C; &#xFF1A;&#x5199; &#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#x5230;byteBuffer&#x3002;</li>
<li>&#x7B2C; 62 &#x81F3; 63 &#x884C; &#xFF1A;&#x8BA1;&#x7B97; <code>ConsumeQueue</code>&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x83B7;&#x5F97;&#x5BF9;&#x5E94;&#x7684;MappedFile&#x3002;</li>
<li>&#x7B2C; 65 &#x81F3; 73 &#x884C; &#xFF1A;&#x5F53; <code>MappedFile</code> &#x662F; <code>ConsumeQueue</code> &#x5F53;&#x524D;&#x7B2C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6; &amp;&amp; <code>MappedFile</code> &#x672A;&#x5199;&#x5165;&#x5185;&#x5BB9; &amp;&amp; &#x91CD;&#x653E;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x5927;&#x4E8E;0&#xFF0C;&#x5219;&#x9700;&#x8981;&#x8FDB;&#x884C; <code>MappedFile</code> &#x586B;&#x5145;&#x524D;&#x7F6E;  <code>BLANK</code>&#x3002;<ul>
<li><em>&#x8FD9;&#x5757;&#x6BD4;&#x8F83;&#x6709;&#x7591;&#x95EE;&#xFF0C;&#x4EC0;&#x4E48;&#x573A;&#x666F;&#x4E0B;&#x4F1A;&#x9700;&#x8981;&#x3002;&#x731C;&#x6D4B;&#x4EA7;&#x751F;&#x7684;&#x539F;&#x56E0;&#xFF1A;&#x4E00;&#x4E2A; <code>Topic</code> &#x957F;&#x671F;&#x65E0;&#x6D88;&#x606F;&#x4EA7;&#x751F;&#xFF0C;&#x7A81;&#x7136;N&#x5929;&#x540E;&#x8FDB;&#x884C;&#x53D1;&#x9001;&#xFF0C;<code>Topic</code> &#x5BF9;&#x5E94;&#x7684;&#x5386;&#x53F2;&#x6D88;&#x606F;&#x4EE5;&#x53CA;&#x548C;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x88AB;&#x6E05;&#x7406;&#xFF0C;&#x65B0;&#x751F;&#x6210;&#x7684;<code>MappedFile</code>&#x9700;&#x8981;&#x524D;&#x7F6E;&#x5360;&#x4F4D;&#x3002;</em></li>
</ul>
</li>
<li>&#x7B2C; 74 &#x81F3; 87 &#x884C; &#xFF1A;&#x6821;&#x9A8C; <code>ConsumeQueue</code> &#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x662F;&#x5426;&#x5408;&#x6CD5;&#xFF0C;&#x4E0D;&#x5408;&#x6CD5;&#x5219;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x3002;<ul>
<li><em>&#x8FD9;&#x5757;&#x6BD4;&#x8F83;&#x6709;&#x7591;&#x95EE;&#xFF0C;&#x5982;&#x679C;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x4E0D;&#x5408;&#x6CD5;&#xFF0C;&#x4E0D;&#x8FD4;&#x56DE;&#x6DFB;&#x52A0;&#x5931;&#x8D25;&#xFF0C;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x6DFB;&#x52A0;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#xFF1F;&#xFF1F;&#xFF1F;</em></li>
</ul>
</li>
<li>&#x7B2C; 89 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E; <code>CommitLog</code> &#x91CD;&#x653E;&#x6D88;&#x606F;&#x5230; <code>ConsumeQueue</code> &#x7684;&#x6700;&#x5927;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 91 &#x884C; &#xFF1A;&#x63D2;&#x5165;&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x5230; <code>MappedFile</code>&#x3002;</li>
</ul>
</li>
</ul>
<h2 id="FlushConsumeQueueService"><a href="#FlushConsumeQueueService" class="headerlink" title="FlushConsumeQueueService"></a>FlushConsumeQueueService</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">FlushConsumeQueueService</span> <span class="keyword">extends</span> <span class="title">ServiceThread</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RETRY_TIMES_OVER = <span class="number">3</span>;</div><div class="line"> <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line"> 4:      * &#x6700;&#x540E;flush&#x65F6;&#x95F4;&#x6233;</div><div class="line"> 5:      */</div><div class="line"> <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">long</span> lastFlushTimestamp = <span class="number">0</span>;</div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doFlush</span><span class="params">(<span class="keyword">int</span> retryTimes)</span> </span>{</div><div class="line"> <span class="number">9</span>:         <span class="keyword">int</span> flushConsumeQueueLeastPages = DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().getFlushConsumeQueueLeastPages();</div><div class="line"><span class="number">10</span>: </div><div class="line"><span class="number">11</span>:         <span class="comment">// retryTimes == RETRY_TIMES_OVER&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x5F3A;&#x5236;flush&#x3002;&#x4E3B;&#x8981;&#x7528;&#x4E8E;shutdown&#x65F6;&#x3002;</span></div><div class="line"><span class="number">12</span>:         <span class="keyword">if</span> (retryTimes == RETRY_TIMES_OVER) {</div><div class="line"><span class="number">13</span>:             flushConsumeQueueLeastPages = <span class="number">0</span>;</div><div class="line"><span class="number">14</span>:         }</div><div class="line"><span class="number">15</span>:         <span class="comment">// &#x5F53;&#x65F6;&#x95F4;&#x6EE1;&#x8DB3;flushConsumeQueueThoroughInterval&#x65F6;&#xFF0C;&#x5373;&#x4F7F;&#x5199;&#x5165;&#x7684;&#x6570;&#x91CF;&#x4E0D;&#x8DB3;flushConsumeQueueLeastPages&#xFF0C;&#x4E5F;&#x8FDB;&#x884C;flush</span></div><div class="line"><span class="number">16</span>:         <span class="keyword">long</span> logicsMsgTimestamp = <span class="number">0</span>;</div><div class="line"><span class="number">17</span>:         <span class="keyword">int</span> flushConsumeQueueThoroughInterval = DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().getFlushConsumeQueueThoroughInterval();</div><div class="line"><span class="number">18</span>:         <span class="keyword">long</span> currentTimeMillis = System.currentTimeMillis();</div><div class="line"><span class="number">19</span>:         <span class="keyword">if</span> (currentTimeMillis &gt;= (<span class="keyword">this</span>.lastFlushTimestamp + flushConsumeQueueThoroughInterval)) {</div><div class="line"><span class="number">20</span>:             <span class="keyword">this</span>.lastFlushTimestamp = currentTimeMillis;</div><div class="line"><span class="number">21</span>:             flushConsumeQueueLeastPages = <span class="number">0</span>;</div><div class="line"><span class="number">22</span>:             logicsMsgTimestamp = DefaultMessageStore.<span class="keyword">this</span>.getStoreCheckpoint().getLogicsMsgTimestamp();</div><div class="line"><span class="number">23</span>:         }</div><div class="line"><span class="number">24</span>:         <span class="comment">// flush&#x6D88;&#x8D39;&#x961F;&#x5217;</span></div><div class="line"><span class="number">25</span>:         ConcurrentHashMap&lt;String, ConcurrentHashMap&lt;Integer, ConsumeQueue&gt;&gt; tables = DefaultMessageStore.<span class="keyword">this</span>.consumeQueueTable;</div><div class="line"><span class="number">26</span>:         <span class="keyword">for</span> (ConcurrentHashMap&lt;Integer, ConsumeQueue&gt; maps : tables.values()) {</div><div class="line"><span class="number">27</span>:             <span class="keyword">for</span> (ConsumeQueue cq : maps.values()) {</div><div class="line"><span class="number">28</span>:                 <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</div><div class="line"><span class="number">29</span>:                 <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; retryTimes &amp;&amp; !result; i++) {</div><div class="line"><span class="number">30</span>:                     result = cq.flush(flushConsumeQueueLeastPages);</div><div class="line"><span class="number">31</span>:                 }</div><div class="line"><span class="number">32</span>:             }</div><div class="line"><span class="number">33</span>:         }</div><div class="line"><span class="number">34</span>:         <span class="comment">// flush &#x5B58;&#x50A8; check point</span></div><div class="line"><span class="number">35</span>:         <span class="keyword">if</span> (<span class="number">0</span> == flushConsumeQueueLeastPages) {</div><div class="line"><span class="number">36</span>:             <span class="keyword">if</span> (logicsMsgTimestamp &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">37</span>:                 DefaultMessageStore.<span class="keyword">this</span>.getStoreCheckpoint().setLogicsMsgTimestamp(logicsMsgTimestamp);</div><div class="line"><span class="number">38</span>:             }</div><div class="line"><span class="number">39</span>:             DefaultMessageStore.<span class="keyword">this</span>.getStoreCheckpoint().flush();</div><div class="line"><span class="number">40</span>:         }</div><div class="line"><span class="number">41</span>:     }</div><div class="line"><span class="number">42</span>: </div><div class="line"><span class="number">43</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">44</span>:         DefaultMessageStore.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"><span class="number">45</span>: </div><div class="line"><span class="number">46</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"><span class="number">47</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">48</span>:                 <span class="keyword">int</span> interval = DefaultMessageStore.<span class="keyword">this</span>.getMessageStoreConfig().getFlushIntervalConsumeQueue();</div><div class="line"><span class="number">49</span>:                 <span class="keyword">this</span>.waitForRunning(interval);</div><div class="line"><span class="number">50</span>:                 <span class="keyword">this</span>.doFlush(<span class="number">1</span>);</div><div class="line"><span class="number">51</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">52</span>:                 DefaultMessageStore.log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"><span class="number">53</span>:             }</div><div class="line"><span class="number">54</span>:         }</div><div class="line"><span class="number">55</span>: </div><div class="line"><span class="number">56</span>:         <span class="keyword">this</span>.doFlush(RETRY_TIMES_OVER);</div><div class="line"><span class="number">57</span>: </div><div class="line"><span class="number">58</span>:         DefaultMessageStore.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">59</span>:     }</div><div class="line"><span class="number">60</span>: </div><div class="line"><span class="number">61</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">62</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">63</span>:         <span class="keyword">return</span> FlushConsumeQueueService.class.getSimpleName();</div><div class="line"><span class="number">64</span>:     }</div><div class="line"><span class="number">65</span>: </div><div class="line"><span class="number">66</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">67</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getJointime</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">68</span>:         <span class="keyword">return</span> <span class="number">1000</span> * <span class="number">60</span>;</div><div class="line"><span class="number">69</span>:     }</div><div class="line"><span class="number">70</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;flush <code>ConsumeQueue</code>(&#x6D88;&#x8D39;&#x961F;&#x5217;) &#x7EBF;&#x7A0B;&#x670D;&#x52A1;&#x3002;</li>
<li>&#x7B2C; 11 &#x81F3; 14 &#x884C; &#xFF1A;&#x5F53; <code>retryTimes == RETRY_TIMES_OVER</code> &#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x5F3A;&#x5236;flush&#x3002;&#x7528;&#x4E8E; <code>shutdown</code> &#x65F6;&#x3002;</li>
<li>&#x7B2C; 15 &#x81F3; 23 &#x884C; &#xFF1A;&#x6BCF; flushConsumeQueueThoroughInterval &#x5468;&#x671F;&#xFF0C;&#x6267;&#x884C;&#x4E00;&#x6B21; flush &#x3002;&#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x5230;&#x90FD;&#x80FD;&#x6EE1;&#x8DB3; flushConsumeQueueLeastPages &#x5927;&#x5C0F;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x5468;&#x671F;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x5F3A;&#x5236; flush &#x3002;&#x5F53;&#x7136;&#xFF0C;&#x4E0D;&#x80FD;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x90FD;&#x53BB;&#x6267;&#x884C;&#x5F3A;&#x5236; flush&#xFF0C;&#x8FD9;&#x6837;&#x6027;&#x80FD;&#x8F83;&#x5DEE;&#x3002;</li>
<li>&#x7B2C; 24 &#x81F3; 33 &#x884C; &#xFF1A;flush <code>ConsumeQueue</code>(&#x6D88;&#x8D39;&#x961F;&#x5217;)&#x3002;<ul>
<li>flush &#x903B;&#x8F91;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-store/#MappedFile-&#x843D;&#x76D8;">MappedFile#&#x843D;&#x76D8;</a>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 34 &#x81F3; 40 &#x884C; &#xFF1A;flush <code>StoreCheckpoint</code>&#x3002;<code>StoreCheckpoint</code> &#x7684;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/store-init-and-shutdown/">Store&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x5173;&#x95ED;</a>&#x3002;</li>
<li>&#x7B2C; 43 &#x81F3; 59 &#x884C; &#xFF1A;&#x6BCF; 1000ms &#x6267;&#x884C;&#x4E00;&#x6B21; <code>flush</code>&#x3002;&#x5982;&#x679C; wakeup() &#x65F6;&#xFF0C;&#x5219;&#x4F1A;&#x7ACB;&#x5373;&#x8FDB;&#x884C;&#x4E00;&#x6B21; <code>flush</code>&#x3002;&#x76EE;&#x524D;&#xFF0C;&#x6682;&#x65F6;&#x4E0D;&#x5B58;&#x5728; wakeup() &#x7684;&#x8C03;&#x7528;&#x3002;</li>
</ul>
<h1 id="4&#x3001;Broker-&#x63D0;&#x4F9B;-&#x62C9;&#x53D6;&#x6D88;&#x606F;-&#x63A5;&#x53E3;"><a href="#4&#x3001;Broker-&#x63D0;&#x4F9B;-&#x62C9;&#x53D6;&#x6D88;&#x606F;-&#x63A5;&#x53E3;" class="headerlink" title="4&#x3001;Broker &#x63D0;&#x4F9B;[&#x62C9;&#x53D6;&#x6D88;&#x606F;]&#x63A5;&#x53E3;"></a>4&#x3001;Broker &#x63D0;&#x4F9B;[&#x62C9;&#x53D6;&#x6D88;&#x606F;]&#x63A5;&#x53E3;</h1><h2 id="PullMessageRequestHeader"><a href="#PullMessageRequestHeader" class="headerlink" title="PullMessageRequestHeader"></a>PullMessageRequestHeader</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PullMessageRequestHeader</span> <span class="keyword">implements</span> <span class="title">CommandCustomHeader</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">/**</span></div><div class="line"> 3:      * &#x6D88;&#x8D39;&#x8005;&#x5206;&#x7EC4;</div><div class="line"> 4:      */</div><div class="line"> <span class="number">5</span>:     <span class="meta">@CFNotNull</span></div><div class="line"> <span class="number">6</span>:     <span class="keyword">private</span> String consumerGroup;</div><div class="line"> <span class="number">7</span>:     <span class="comment">/**</span></div><div class="line"> 8:      * Topic</div><div class="line"> 9:      */</div><div class="line"><span class="number">10</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">11</span>:     <span class="keyword">private</span> String topic;</div><div class="line"><span class="number">12</span>:     <span class="comment">/**</span></div><div class="line">13:      * &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">14:      */</div><div class="line"><span class="number">15</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">16</span>:     <span class="keyword">private</span> Integer queueId;</div><div class="line"><span class="number">17</span>:     <span class="comment">/**</span></div><div class="line">18:      * &#x961F;&#x5217;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;</div><div class="line">19:      */</div><div class="line"><span class="number">20</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">21</span>:     <span class="keyword">private</span> Long queueOffset;</div><div class="line"><span class="number">22</span>:     <span class="comment">/**</span></div><div class="line">23:      * &#x6D88;&#x606F;&#x6570;&#x91CF;</div><div class="line">24:      */</div><div class="line"><span class="number">25</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">26</span>:     <span class="keyword">private</span> Integer maxMsgNums;</div><div class="line"><span class="number">27</span>:     <span class="comment">/**</span></div><div class="line">28:      * &#x7CFB;&#x7EDF;&#x6807;&#x8BC6;</div><div class="line">29:      */</div><div class="line"><span class="number">30</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">31</span>:     <span class="keyword">private</span> Integer sysFlag;</div><div class="line"><span class="number">32</span>:     <span class="comment">/**</span></div><div class="line">33:      * &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x4F4D;&#x7F6E;</div><div class="line">34:      */</div><div class="line"><span class="number">35</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">36</span>:     <span class="keyword">private</span> Long commitOffset;</div><div class="line"><span class="number">37</span>:     <span class="comment">/**</span></div><div class="line">38:      * &#x6302;&#x8D77;&#x8D85;&#x65F6;&#x65F6;&#x95F4;</div><div class="line">39:      */</div><div class="line"><span class="number">40</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">41</span>:     <span class="keyword">private</span> Long suspendTimeoutMillis;</div><div class="line"><span class="number">42</span>:     <span class="comment">/**</span></div><div class="line">43:      * &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;</div><div class="line">44:      */</div><div class="line"><span class="number">45</span>:     <span class="meta">@CFNullable</span></div><div class="line"><span class="number">46</span>:     <span class="keyword">private</span> String subscription;</div><div class="line"><span class="number">47</span>:     <span class="comment">/**</span></div><div class="line">48:      * &#x8BA2;&#x9605;&#x7248;&#x672C;&#x53F7;</div><div class="line">49:      */</div><div class="line"><span class="number">50</span>:     <span class="meta">@CFNotNull</span></div><div class="line"><span class="number">51</span>:     <span class="keyword">private</span> Long subVersion;</div><div class="line"><span class="number">52</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;Header</li>
<li>topic +  queueId + queueOffset + maxMsgNums</li>
<li>sysFlag &#xFF1A;&#x7CFB;&#x7EDF;&#x6807;&#x8BC6;&#x3002;<ul>
<li>&#x7B2C; 0 &#x4F4D; <code>FLAG_COMMIT_OFFSET</code> &#xFF1A;&#x6807;&#x8BB0;&#x8BF7;&#x6C42;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x4F4D;&#x7F6E;&#xFF0C;&#x548C; <code>commitOffset</code> &#x914D;&#x5408;&#x3002;</li>
<li>&#x7B2C; 1 &#x4F4D; <code>FLAG_SUSPEND</code> &#xFF1A;&#x6807;&#x8BB0;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x548C; <code>suspendTimeoutMillis</code> &#x914D;&#x5408;&#x3002;&#x5F53;&#x62C9;&#x53D6;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#x65F6;&#xFF0C; <code>Broker</code> &#x4F1A;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x6D88;&#x606F;&#x3002;&#x6700;&#x5927;&#x6302;&#x8D77;&#x65F6;&#x95F4;&#xFF1A;<code>suspendTimeoutMillis</code> &#x6BEB;&#x79D2;&#x3002;</li>
<li>&#x7B2C; 2 &#x4F4D; <code>FLAG_SUBSCRIPTION</code> &#xFF1A;&#x662F;&#x5426;&#x8FC7;&#x6EE4;&#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x548C; <code>subscription</code> &#x914D;&#x7F6E;&#x3002;</li>
</ul>
</li>
<li>subVersion &#xFF1A;&#x8BA2;&#x9605;&#x7248;&#x672C;&#x53F7;&#x3002;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x7248;&#x672C;&#x53F7;&#x4E0D;&#x5BF9;&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x83B7;&#x53D6;&#x8BA2;&#x9605;&#x4FE1;&#x606F;&#xFF0C;&#x4F7F;&#x7528;&#x6700;&#x65B0;&#x7684;&#x8BA2;&#x9605;&#x7248;&#x672C;&#x53F7;&#x3002;</li>
</ul>
<h2 id="PullMessageProcessor-processRequest-&#x2026;"><a href="#PullMessageProcessor-processRequest-&#x2026;" class="headerlink" title="PullMessageProcessor#processRequest(&#x2026;)"></a>PullMessageProcessor#processRequest(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="function"><span class="keyword">private</span> RemotingCommand <span class="title">processRequest</span><span class="params">(<span class="keyword">final</span> Channel channel, RemotingCommand request, <span class="keyword">boolean</span> brokerAllowSuspend)</span></span></div><div class="line">  2:     <span class="keyword">throws</span> RemotingCommandException {</div><div class="line">  <span class="number">3</span>:     RemotingCommand response = RemotingCommand.createResponseCommand(PullMessageResponseHeader.class);</div><div class="line">  <span class="number">4</span>:     <span class="keyword">final</span> PullMessageResponseHeader responseHeader = (PullMessageResponseHeader) response.readCustomHeader();</div><div class="line">  <span class="number">5</span>:     <span class="keyword">final</span> PullMessageRequestHeader requestHeader =</div><div class="line">  <span class="number">6</span>:         (PullMessageRequestHeader) request.decodeCommandCustomHeader(PullMessageRequestHeader.class);</div><div class="line">  <span class="number">7</span>: </div><div class="line">  <span class="number">8</span>:     response.setOpaque(request.getOpaque());</div><div class="line">  <span class="number">9</span>: </div><div class="line"> <span class="number">10</span>:     <span class="keyword">if</span> (LOG.isDebugEnabled()) {</div><div class="line"> <span class="number">11</span>:         LOG.debug(<span class="string">&quot;receive PullMessage request command, {}&quot;</span>, request);</div><div class="line"> <span class="number">12</span>:     }</div><div class="line"> <span class="number">13</span>: </div><div class="line"> <span class="number">14</span>:     <span class="comment">// &#x6821;&#x9A8C; broker &#x662F;&#x5426;&#x53EF;&#x8BFB;</span></div><div class="line"> <span class="number">15</span>:     <span class="keyword">if</span> (!PermName.isReadable(<span class="keyword">this</span>.brokerController.getBrokerConfig().getBrokerPermission())) {</div><div class="line"> <span class="number">16</span>:         response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">17</span>:         response.setRemark(String.format(<span class="string">&quot;the broker[%s] pulling message is forbidden&quot;</span>, <span class="keyword">this</span>.brokerController.getBrokerConfig().getBrokerIP1()));</div><div class="line"> <span class="number">18</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">19</span>:     }</div><div class="line"> <span class="number">20</span>: </div><div class="line"> <span class="number">21</span>:     <span class="comment">// &#x6821;&#x9A8C; consumer&#x5206;&#x7EC4;&#x914D;&#x7F6E; &#x662F;&#x5426;&#x5B58;&#x5728;</span></div><div class="line"> <span class="number">22</span>:     SubscriptionGroupConfig subscriptionGroupConfig = <span class="keyword">this</span>.brokerController.getSubscriptionGroupManager().findSubscriptionGroupConfig(requestHeader.getConsumerGroup());</div><div class="line"> <span class="number">23</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == subscriptionGroupConfig) {</div><div class="line"> <span class="number">24</span>:         response.setCode(ResponseCode.SUBSCRIPTION_GROUP_NOT_EXIST);</div><div class="line"> <span class="number">25</span>:         response.setRemark(String.format(<span class="string">&quot;subscription group [%s] does not exist, %s&quot;</span>, requestHeader.getConsumerGroup(), FAQUrl.suggestTodo(FAQUrl.SUBSCRIPTION_GROUP_NOT_EXIST)));</div><div class="line"> <span class="number">26</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">27</span>:     }</div><div class="line"> <span class="number">28</span>:     <span class="comment">// &#x6821;&#x9A8C; consumer&#x5206;&#x7EC4;&#x914D;&#x7F6E; &#x662F;&#x5426;&#x53EF;&#x6D88;&#x8D39;</span></div><div class="line"> <span class="number">29</span>:     <span class="keyword">if</span> (!subscriptionGroupConfig.isConsumeEnable()) {</div><div class="line"> <span class="number">30</span>:         response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">31</span>:         response.setRemark(<span class="string">&quot;subscription group no permission, &quot;</span> + requestHeader.getConsumerGroup());</div><div class="line"> <span class="number">32</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">33</span>:     }</div><div class="line"> <span class="number">34</span>: </div><div class="line"> <span class="number">35</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> hasSuspendFlag = PullSysFlag.hasSuspendFlag(requestHeader.getSysFlag()); <span class="comment">// &#x662F;&#x5426;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x5F53;&#x6CA1;&#x6709;&#x6D88;&#x606F;&#x65F6;</span></div><div class="line"> <span class="number">36</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> hasCommitOffsetFlag = PullSysFlag.hasCommitOffsetFlag(requestHeader.getSysFlag()); <span class="comment">// &#x662F;&#x5426;&#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</span></div><div class="line"> <span class="number">37</span>:     <span class="keyword">final</span> <span class="keyword">boolean</span> hasSubscriptionFlag = PullSysFlag.hasSubscriptionFlag(requestHeader.getSysFlag()); <span class="comment">// &#x662F;&#x5426;&#x8FC7;&#x6EE4;&#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F;(subscription)</span></div><div class="line"> <span class="number">38</span>:     <span class="keyword">final</span> <span class="keyword">long</span> suspendTimeoutMillisLong = hasSuspendFlag ? requestHeader.getSuspendTimeoutMillis() : <span class="number">0</span>; <span class="comment">// &#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x8D85;&#x65F6;&#x65F6;&#x957F;</span></div><div class="line"> <span class="number">39</span>: </div><div class="line"> <span class="number">40</span>:     <span class="comment">// &#x6821;&#x9A8C; topic&#x914D;&#x7F6E; &#x5B58;&#x5728;</span></div><div class="line"> <span class="number">41</span>:     TopicConfig topicConfig = <span class="keyword">this</span>.brokerController.getTopicConfigManager().selectTopicConfig(requestHeader.getTopic());</div><div class="line"> <span class="number">42</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == topicConfig) {</div><div class="line"> <span class="number">43</span>:         LOG.error(<span class="string">&quot;The topic {} not exist, consumer: {} &quot;</span>, requestHeader.getTopic(), RemotingHelper.parseChannelRemoteAddr(channel));</div><div class="line"> <span class="number">44</span>:         response.setCode(ResponseCode.TOPIC_NOT_EXIST);</div><div class="line"> <span class="number">45</span>:         response.setRemark(String.format(<span class="string">&quot;topic[%s] not exist, apply first please! %s&quot;</span>, requestHeader.getTopic(), FAQUrl.suggestTodo(FAQUrl.APPLY_TOPIC_URL)));</div><div class="line"> <span class="number">46</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">47</span>:     }</div><div class="line"> <span class="number">48</span>:     <span class="comment">// &#x6821;&#x9A8C; topic&#x914D;&#x7F6E; &#x6743;&#x9650;&#x53EF;&#x8BFB;</span></div><div class="line"> <span class="number">49</span>:     <span class="keyword">if</span> (!PermName.isReadable(topicConfig.getPerm())) {</div><div class="line"> <span class="number">50</span>:         response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">51</span>:         response.setRemark(<span class="string">&quot;the topic[&quot;</span> + requestHeader.getTopic() + <span class="string">&quot;] pulling message is forbidden&quot;</span>);</div><div class="line"> <span class="number">52</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">53</span>:     }</div><div class="line"> <span class="number">54</span>:     <span class="comment">// &#x6821;&#x9A8C; &#x8BFB;&#x53D6;&#x961F;&#x5217; &#x5728; topic&#x914D;&#x7F6E; &#x961F;&#x5217;&#x8303;&#x56F4;&#x5185;</span></div><div class="line"> <span class="number">55</span>:     <span class="keyword">if</span> (requestHeader.getQueueId() &lt; <span class="number">0</span> || requestHeader.getQueueId() &gt;= topicConfig.getReadQueueNums()) {</div><div class="line"> <span class="number">56</span>:         String errorInfo = String.format(<span class="string">&quot;queueId[%d] is illegal, topic:[%s] topicConfig.readQueueNums:[%d] consumer:[%s]&quot;</span>,</div><div class="line"> <span class="number">57</span>:                 requestHeader.getQueueId(), requestHeader.getTopic(), topicConfig.getReadQueueNums(), channel.remoteAddress());</div><div class="line"> <span class="number">58</span>:         LOG.warn(errorInfo);</div><div class="line"> <span class="number">59</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"> <span class="number">60</span>:         response.setRemark(errorInfo);</div><div class="line"> <span class="number">61</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">62</span>:     }</div><div class="line"> <span class="number">63</span>: </div><div class="line"> <span class="number">64</span>:     <span class="comment">// &#x6821;&#x9A8C; &#x8BA2;&#x9605;&#x5173;&#x7CFB;</span></div><div class="line"> <span class="number">65</span>:     SubscriptionData subscriptionData;</div><div class="line"> <span class="number">66</span>:     <span class="keyword">if</span> (hasSubscriptionFlag) {</div><div class="line"> <span class="number">67</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">68</span>:             subscriptionData = FilterAPI.buildSubscriptionData(requestHeader.getConsumerGroup(), requestHeader.getTopic(),</div><div class="line"> <span class="number">69</span>:                 requestHeader.getSubscription());</div><div class="line"> <span class="number">70</span>:         } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">71</span>:             LOG.warn(<span class="string">&quot;Parse the consumer&apos;s subscription[{}] failed, group: {}&quot;</span>, requestHeader.getSubscription(), <span class="comment">//</span></div><div class="line"> <span class="number">72</span>:                     requestHeader.getConsumerGroup());</div><div class="line"> <span class="number">73</span>:             response.setCode(ResponseCode.SUBSCRIPTION_PARSE_FAILED);</div><div class="line"> <span class="number">74</span>:             response.setRemark(<span class="string">&quot;parse the consumer&apos;s subscription failed&quot;</span>);</div><div class="line"> <span class="number">75</span>:             <span class="keyword">return</span> response;</div><div class="line"> <span class="number">76</span>:         }</div><div class="line"> <span class="number">77</span>:     } <span class="keyword">else</span> {</div><div class="line"> <span class="number">78</span>:         <span class="comment">// &#x6821;&#x9A8C; &#x6D88;&#x8D39;&#x5206;&#x7EC4;&#x4FE1;&#x606F; &#x662F;&#x5426;&#x5B58;&#x5728;</span></div><div class="line"> <span class="number">79</span>:         ConsumerGroupInfo consumerGroupInfo = <span class="keyword">this</span>.brokerController.getConsumerManager().getConsumerGroupInfo(requestHeader.getConsumerGroup());</div><div class="line"> <span class="number">80</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == consumerGroupInfo) {</div><div class="line"> <span class="number">81</span>:             LOG.warn(<span class="string">&quot;The consumer&apos;s group info not exist, group: {}&quot;</span>, requestHeader.getConsumerGroup());</div><div class="line"> <span class="number">82</span>:             response.setCode(ResponseCode.SUBSCRIPTION_NOT_EXIST);</div><div class="line"> <span class="number">83</span>:             response.setRemark(<span class="string">&quot;the consumer&apos;s group info not exist&quot;</span> + FAQUrl.suggestTodo(FAQUrl.SAME_GROUP_DIFFERENT_TOPIC));</div><div class="line"> <span class="number">84</span>:             <span class="keyword">return</span> response;</div><div class="line"> <span class="number">85</span>:         }</div><div class="line"> <span class="number">86</span>:         <span class="comment">// &#x6821;&#x9A8C; &#x6D88;&#x8D39;&#x5206;&#x7EC4;&#x4FE1;&#x606F; &#x6D88;&#x606F;&#x6A21;&#x578B;&#x662F;&#x5426;&#x5339;&#x914D;</span></div><div class="line"> <span class="number">87</span>:         <span class="keyword">if</span> (!subscriptionGroupConfig.isConsumeBroadcastEnable() <span class="comment">//</span></div><div class="line"> <span class="number">88</span>:             &amp;&amp; consumerGroupInfo.getMessageModel() == MessageModel.BROADCASTING) {</div><div class="line"> <span class="number">89</span>:             response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">90</span>:             response.setRemark(<span class="string">&quot;the consumer group[&quot;</span> + requestHeader.getConsumerGroup() + <span class="string">&quot;] can not consume by broadcast way&quot;</span>);</div><div class="line"> <span class="number">91</span>:             <span class="keyword">return</span> response;</div><div class="line"> <span class="number">92</span>:         }</div><div class="line"> <span class="number">93</span>: </div><div class="line"> <span class="number">94</span>:         <span class="comment">// &#x6821;&#x9A8C; &#x8BA2;&#x9605;&#x4FE1;&#x606F; &#x662F;&#x5426;&#x5B58;&#x5728;</span></div><div class="line"> <span class="number">95</span>:         subscriptionData = consumerGroupInfo.findSubscriptionData(requestHeader.getTopic());</div><div class="line"> <span class="number">96</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == subscriptionData) {</div><div class="line"> <span class="number">97</span>:             LOG.warn(<span class="string">&quot;The consumer&apos;s subscription not exist, group: {}, topic:{}&quot;</span>, requestHeader.getConsumerGroup(), requestHeader.getTopic());</div><div class="line"> <span class="number">98</span>:             response.setCode(ResponseCode.SUBSCRIPTION_NOT_EXIST);</div><div class="line"> <span class="number">99</span>:             response.setRemark(<span class="string">&quot;the consumer&apos;s subscription not exist&quot;</span> + FAQUrl.suggestTodo(FAQUrl.SAME_GROUP_DIFFERENT_TOPIC));</div><div class="line"><span class="number">100</span>:             <span class="keyword">return</span> response;</div><div class="line"><span class="number">101</span>:         }</div><div class="line"><span class="number">102</span>:         <span class="comment">// &#x6821;&#x9A8C; &#x8BA2;&#x9605;&#x4FE1;&#x606F;&#x7248;&#x672C; &#x662F;&#x5426;&#x5408;&#x6CD5;</span></div><div class="line"><span class="number">103</span>:         <span class="keyword">if</span> (subscriptionData.getSubVersion() &lt; requestHeader.getSubVersion()) {</div><div class="line"><span class="number">104</span>:             LOG.warn(<span class="string">&quot;The broker&apos;s subscription is not latest, group: {} {}&quot;</span>, requestHeader.getConsumerGroup(),</div><div class="line"><span class="number">105</span>:                     subscriptionData.getSubString());</div><div class="line"><span class="number">106</span>:             response.setCode(ResponseCode.SUBSCRIPTION_NOT_LATEST);</div><div class="line"><span class="number">107</span>:             response.setRemark(<span class="string">&quot;the consumer&apos;s subscription not latest&quot;</span>);</div><div class="line"><span class="number">108</span>:             <span class="keyword">return</span> response;</div><div class="line"><span class="number">109</span>:         }</div><div class="line"><span class="number">110</span>:     }</div><div class="line"><span class="number">111</span>: </div><div class="line"><span class="number">112</span>:     <span class="comment">// &#x83B7;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">113</span>:     <span class="keyword">final</span> GetMessageResult getMessageResult = <span class="keyword">this</span>.brokerController.getMessageStore().getMessage(requestHeader.getConsumerGroup(), requestHeader.getTopic(),</div><div class="line"><span class="number">114</span>:             requestHeader.getQueueId(), requestHeader.getQueueOffset(), requestHeader.getMaxMsgNums(), subscriptionData);</div><div class="line"><span class="number">115</span>:     <span class="keyword">if</span> (getMessageResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">116</span>:         response.setRemark(getMessageResult.getStatus().name());</div><div class="line"><span class="number">117</span>:         responseHeader.setNextBeginOffset(getMessageResult.getNextBeginOffset());</div><div class="line"><span class="number">118</span>:         responseHeader.setMinOffset(getMessageResult.getMinOffset());</div><div class="line"><span class="number">119</span>:         responseHeader.setMaxOffset(getMessageResult.getMaxOffset());</div><div class="line"><span class="number">120</span>: </div><div class="line"><span class="number">121</span>:         <span class="comment">// TODO &#x5F85;&#x8BFB;</span></div><div class="line"><span class="number">122</span>:         <span class="comment">// &#x8BA1;&#x7B97;&#x5EFA;&#x8BAE;&#x8BFB;&#x53D6;brokerId</span></div><div class="line"><span class="number">123</span>:         <span class="keyword">if</span> (getMessageResult.isSuggestPullingFromSlave()) {</div><div class="line"><span class="number">124</span>:             responseHeader.setSuggestWhichBrokerId(subscriptionGroupConfig.getWhichBrokerWhenConsumeSlowly());</div><div class="line"><span class="number">125</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">126</span>:             responseHeader.setSuggestWhichBrokerId(MixAll.MASTER_ID);</div><div class="line"><span class="number">127</span>:         }</div><div class="line"><span class="number">128</span>: </div><div class="line"><span class="number">129</span>:         <span class="keyword">switch</span> (<span class="keyword">this</span>.brokerController.getMessageStoreConfig().getBrokerRole()) {</div><div class="line"><span class="number">130</span>:             <span class="keyword">case</span> ASYNC_MASTER:</div><div class="line"><span class="number">131</span>:             <span class="keyword">case</span> SYNC_MASTER:</div><div class="line"><span class="number">132</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">133</span>:             <span class="keyword">case</span> SLAVE:</div><div class="line"><span class="number">134</span>:                 <span class="keyword">if</span> (!<span class="keyword">this</span>.brokerController.getBrokerConfig().isSlaveReadEnable()) { <span class="comment">// &#x4ECE;&#x8282;&#x70B9;&#x4E0D;&#x5141;&#x8BB8;&#x8BFB;&#x53D6;&#xFF0C;&#x544A;&#x8BC9;consumer&#x8BFB;&#x53D6;&#x4E3B;&#x8282;&#x70B9;&#x3002;</span></div><div class="line"><span class="number">135</span>:                     response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);</div><div class="line"><span class="number">136</span>:                     responseHeader.setSuggestWhichBrokerId(MixAll.MASTER_ID);</div><div class="line"><span class="number">137</span>:                 }</div><div class="line"><span class="number">138</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">139</span>:         }</div><div class="line"><span class="number">140</span>: </div><div class="line"><span class="number">141</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.brokerController.getBrokerConfig().isSlaveReadEnable()) {</div><div class="line"><span class="number">142</span>:             <span class="comment">// consume too slow ,redirect to another machine</span></div><div class="line"><span class="number">143</span>:             <span class="keyword">if</span> (getMessageResult.isSuggestPullingFromSlave()) {</div><div class="line"><span class="number">144</span>:                 responseHeader.setSuggestWhichBrokerId(subscriptionGroupConfig.getWhichBrokerWhenConsumeSlowly());</div><div class="line"><span class="number">145</span>:             }</div><div class="line"><span class="number">146</span>:             <span class="comment">// consume ok</span></div><div class="line"><span class="number">147</span>:             <span class="keyword">else</span> {</div><div class="line"><span class="number">148</span>:                 responseHeader.setSuggestWhichBrokerId(subscriptionGroupConfig.getBrokerId());</div><div class="line"><span class="number">149</span>:             }</div><div class="line"><span class="number">150</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">151</span>:             responseHeader.setSuggestWhichBrokerId(MixAll.MASTER_ID);</div><div class="line"><span class="number">152</span>:         }</div><div class="line"><span class="number">153</span>: </div><div class="line"><span class="number">154</span>:         <span class="keyword">switch</span> (getMessageResult.getStatus()) {</div><div class="line"><span class="number">155</span>:             <span class="keyword">case</span> FOUND:</div><div class="line"><span class="number">156</span>:                 response.setCode(ResponseCode.SUCCESS);</div><div class="line"><span class="number">157</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">158</span>:             <span class="keyword">case</span> MESSAGE_WAS_REMOVING:</div><div class="line"><span class="number">159</span>:                 response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);</div><div class="line"><span class="number">160</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">161</span>:             <span class="keyword">case</span> NO_MATCHED_LOGIC_QUEUE:</div><div class="line"><span class="number">162</span>:             <span class="keyword">case</span> NO_MESSAGE_IN_QUEUE:</div><div class="line"><span class="number">163</span>:                 <span class="keyword">if</span> (<span class="number">0</span> != requestHeader.getQueueOffset()) {</div><div class="line"><span class="number">164</span>:                     response.setCode(ResponseCode.PULL_OFFSET_MOVED);</div><div class="line"><span class="number">165</span>: </div><div class="line"><span class="number">166</span>:                     <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"><span class="number">167</span>:                     LOG.info(<span class="string">&quot;the broker store no queue data, fix the request offset {} to {}, Topic: {} QueueId: {} Consumer Group: {}&quot;</span>, <span class="comment">//</span></div><div class="line"><span class="number">168</span>:                         requestHeader.getQueueOffset(), <span class="comment">//</span></div><div class="line"><span class="number">169</span>:                         getMessageResult.getNextBeginOffset(), <span class="comment">//</span></div><div class="line"><span class="number">170</span>:                         requestHeader.getTopic(), <span class="comment">//</span></div><div class="line"><span class="number">171</span>:                         requestHeader.getQueueId(), <span class="comment">//</span></div><div class="line"><span class="number">172</span>:                         requestHeader.getConsumerGroup()<span class="comment">//</span></div><div class="line"><span class="number">173</span>:                     );</div><div class="line"><span class="number">174</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">175</span>:                     response.setCode(ResponseCode.PULL_NOT_FOUND);</div><div class="line"><span class="number">176</span>:                 }</div><div class="line"><span class="number">177</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">178</span>:             <span class="keyword">case</span> NO_MATCHED_MESSAGE:</div><div class="line"><span class="number">179</span>:                 response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);</div><div class="line"><span class="number">180</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">181</span>:             <span class="keyword">case</span> OFFSET_FOUND_NULL:</div><div class="line"><span class="number">182</span>:                 response.setCode(ResponseCode.PULL_NOT_FOUND);</div><div class="line"><span class="number">183</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">184</span>:             <span class="keyword">case</span> OFFSET_OVERFLOW_BADLY:</div><div class="line"><span class="number">185</span>:                 response.setCode(ResponseCode.PULL_OFFSET_MOVED);</div><div class="line"><span class="number">186</span>:                 <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"><span class="number">187</span>:                 LOG.info(<span class="string">&quot;The request offset:{} over flow badly, broker max offset:{} , consumer: {}&quot;</span>, requestHeader.getQueueOffset(), getMessageResult.getMaxOffset(), channel.remoteAddress());</div><div class="line"><span class="number">188</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">189</span>:             <span class="keyword">case</span> OFFSET_OVERFLOW_ONE:</div><div class="line"><span class="number">190</span>:                 response.setCode(ResponseCode.PULL_NOT_FOUND);</div><div class="line"><span class="number">191</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">192</span>:             <span class="keyword">case</span> OFFSET_TOO_SMALL:</div><div class="line"><span class="number">193</span>:                 response.setCode(ResponseCode.PULL_OFFSET_MOVED);</div><div class="line"><span class="number">194</span>:                 LOG.info(<span class="string">&quot;The request offset is too small. group={}, topic={}, requestOffset={}, brokerMinOffset={}, clientIp={}&quot;</span>,</div><div class="line"><span class="number">195</span>:                     requestHeader.getConsumerGroup(), requestHeader.getTopic(), requestHeader.getQueueOffset(),</div><div class="line"><span class="number">196</span>:                     getMessageResult.getMinOffset(), channel.remoteAddress());</div><div class="line"><span class="number">197</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">198</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">199</span>:                 <span class="keyword">assert</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">200</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">201</span>:         }</div><div class="line"><span class="number">202</span>: </div><div class="line"><span class="number">203</span>:         <span class="comment">// hook&#xFF1A;before</span></div><div class="line"><span class="number">204</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.hasConsumeMessageHook()) {</div><div class="line"><span class="number">205</span>:             ConsumeMessageContext context = <span class="keyword">new</span> ConsumeMessageContext();</div><div class="line"><span class="number">206</span>:             context.setConsumerGroup(requestHeader.getConsumerGroup());</div><div class="line"><span class="number">207</span>:             context.setTopic(requestHeader.getTopic());</div><div class="line"><span class="number">208</span>:             context.setQueueId(requestHeader.getQueueId());</div><div class="line"><span class="number">209</span>: </div><div class="line"><span class="number">210</span>:             String owner = request.getExtFields().get(BrokerStatsManager.COMMERCIAL_OWNER);</div><div class="line"><span class="number">211</span>: </div><div class="line"><span class="number">212</span>:             <span class="keyword">switch</span> (response.getCode()) {</div><div class="line"><span class="number">213</span>:                 <span class="keyword">case</span> ResponseCode.SUCCESS:</div><div class="line"><span class="number">214</span>:                     <span class="keyword">int</span> commercialBaseCount = brokerController.getBrokerConfig().getCommercialBaseCount();</div><div class="line"><span class="number">215</span>:                     <span class="keyword">int</span> incValue = getMessageResult.getMsgCount4Commercial() * commercialBaseCount;</div><div class="line"><span class="number">216</span>: </div><div class="line"><span class="number">217</span>:                     context.setCommercialRcvStats(BrokerStatsManager.StatsType.RCV_SUCCESS);</div><div class="line"><span class="number">218</span>:                     context.setCommercialRcvTimes(incValue);</div><div class="line"><span class="number">219</span>:                     context.setCommercialRcvSize(getMessageResult.getBufferTotalSize());</div><div class="line"><span class="number">220</span>:                     context.setCommercialOwner(owner);</div><div class="line"><span class="number">221</span>: </div><div class="line"><span class="number">222</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">223</span>:                 <span class="keyword">case</span> ResponseCode.PULL_NOT_FOUND:</div><div class="line"><span class="number">224</span>:                     <span class="keyword">if</span> (!brokerAllowSuspend) {</div><div class="line"><span class="number">225</span>: </div><div class="line"><span class="number">226</span>:                         context.setCommercialRcvStats(BrokerStatsManager.StatsType.RCV_EPOLLS);</div><div class="line"><span class="number">227</span>:                         context.setCommercialRcvTimes(<span class="number">1</span>);</div><div class="line"><span class="number">228</span>:                         context.setCommercialOwner(owner);</div><div class="line"><span class="number">229</span>: </div><div class="line"><span class="number">230</span>:                     }</div><div class="line"><span class="number">231</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">232</span>:                 <span class="keyword">case</span> ResponseCode.PULL_RETRY_IMMEDIATELY:</div><div class="line"><span class="number">233</span>:                 <span class="keyword">case</span> ResponseCode.PULL_OFFSET_MOVED:</div><div class="line"><span class="number">234</span>:                     context.setCommercialRcvStats(BrokerStatsManager.StatsType.RCV_EPOLLS);</div><div class="line"><span class="number">235</span>:                     context.setCommercialRcvTimes(<span class="number">1</span>);</div><div class="line"><span class="number">236</span>:                     context.setCommercialOwner(owner);</div><div class="line"><span class="number">237</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">238</span>:                 <span class="keyword">default</span>:</div><div class="line"><span class="number">239</span>:                     <span class="keyword">assert</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">240</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">241</span>:             }</div><div class="line"><span class="number">242</span>: </div><div class="line"><span class="number">243</span>:             <span class="keyword">this</span>.executeConsumeMessageHookBefore(context);</div><div class="line"><span class="number">244</span>:         }</div><div class="line"><span class="number">245</span>: </div><div class="line"><span class="number">246</span>:         <span class="keyword">switch</span> (response.getCode()) {</div><div class="line"><span class="number">247</span>:             <span class="keyword">case</span> ResponseCode.SUCCESS:</div><div class="line"><span class="number">248</span>: </div><div class="line"><span class="number">249</span>:                 <span class="keyword">this</span>.brokerController.getBrokerStatsManager().incGroupGetNums(requestHeader.getConsumerGroup(), requestHeader.getTopic(),</div><div class="line"><span class="number">250</span>:                     getMessageResult.getMessageCount());</div><div class="line"><span class="number">251</span>:                 <span class="keyword">this</span>.brokerController.getBrokerStatsManager().incGroupGetSize(requestHeader.getConsumerGroup(), requestHeader.getTopic(),</div><div class="line"><span class="number">252</span>:                     getMessageResult.getBufferTotalSize());</div><div class="line"><span class="number">253</span>:                 <span class="keyword">this</span>.brokerController.getBrokerStatsManager().incBrokerGetNums(getMessageResult.getMessageCount());</div><div class="line"><span class="number">254</span>:                 <span class="comment">// &#x8BFB;&#x53D6;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">255</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.brokerController.getBrokerConfig().isTransferMsgByHeap()) { <span class="comment">// &#x5185;&#x5B58;&#x4E2D;</span></div><div class="line"><span class="number">256</span>:                     <span class="keyword">final</span> <span class="keyword">long</span> beginTimeMills = <span class="keyword">this</span>.brokerController.getMessageStore().now();</div><div class="line"><span class="number">257</span>: </div><div class="line"><span class="number">258</span>:                     <span class="keyword">final</span> <span class="keyword">byte</span>[] r = <span class="keyword">this</span>.readGetMessageResult(getMessageResult, requestHeader.getConsumerGroup(), requestHeader.getTopic(), requestHeader.getQueueId());</div><div class="line"><span class="number">259</span>: </div><div class="line"><span class="number">260</span>:                     <span class="keyword">this</span>.brokerController.getBrokerStatsManager().incGroupGetLatency(requestHeader.getConsumerGroup(),</div><div class="line"><span class="number">261</span>:                         requestHeader.getTopic(), requestHeader.getQueueId(),</div><div class="line"><span class="number">262</span>:                         (<span class="keyword">int</span>) (<span class="keyword">this</span>.brokerController.getMessageStore().now() - beginTimeMills));</div><div class="line"><span class="number">263</span>:                     response.setBody(r);</div><div class="line"><span class="number">264</span>:                 } <span class="keyword">else</span> { <span class="comment">// zero-copy</span></div><div class="line"><span class="number">265</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">266</span>:                         FileRegion fileRegion = <span class="keyword">new</span> ManyMessageTransfer(response.encodeHeader(getMessageResult.getBufferTotalSize()), getMessageResult);</div><div class="line"><span class="number">267</span>:                         channel.writeAndFlush(fileRegion).addListener(<span class="keyword">new</span> ChannelFutureListener() {</div><div class="line"><span class="number">268</span>:                             <span class="meta">@Override</span></div><div class="line"><span class="number">269</span>:                             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operationComplete</span><span class="params">(ChannelFuture future)</span> <span class="keyword">throws</span> Exception </span>{</div><div class="line"><span class="number">270</span>:                                 getMessageResult.release();</div><div class="line"><span class="number">271</span>:                                 <span class="keyword">if</span> (!future.isSuccess()) {</div><div class="line"><span class="number">272</span>:                                     LOG.error(<span class="string">&quot;Fail to transfer messages from page cache to {}&quot;</span>, channel.remoteAddress(), future.cause());</div><div class="line"><span class="number">273</span>:                                 }</div><div class="line"><span class="number">274</span>:                             }</div><div class="line"><span class="number">275</span>:                         });</div><div class="line"><span class="number">276</span>:                     } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">277</span>:                         LOG.error(<span class="string">&quot;Error occurred when transferring messages from page cache&quot;</span>, e);</div><div class="line"><span class="number">278</span>:                         getMessageResult.release();</div><div class="line"><span class="number">279</span>:                     }</div><div class="line"><span class="number">280</span>: </div><div class="line"><span class="number">281</span>:                     response = <span class="keyword">null</span>;</div><div class="line"><span class="number">282</span>:                 }</div><div class="line"><span class="number">283</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">284</span>:             <span class="keyword">case</span> ResponseCode.PULL_NOT_FOUND:</div><div class="line"><span class="number">285</span>:                 <span class="comment">// &#x6D88;&#x606F;&#x672A;&#x67E5;&#x8BE2;&#x5230; &amp;&amp; broker&#x5141;&#x8BB8;&#x6302;&#x8D77;&#x8BF7;&#x6C42; &amp;&amp; &#x8BF7;&#x6C42;&#x5141;&#x8BB8;&#x6302;&#x8D77;</span></div><div class="line"><span class="number">286</span>:                 <span class="keyword">if</span> (brokerAllowSuspend &amp;&amp; hasSuspendFlag) {</div><div class="line"><span class="number">287</span>:                     <span class="keyword">long</span> pollingTimeMills = suspendTimeoutMillisLong;</div><div class="line"><span class="number">288</span>:                     <span class="keyword">if</span> (!<span class="keyword">this</span>.brokerController.getBrokerConfig().isLongPollingEnable()) {</div><div class="line"><span class="number">289</span>:                         pollingTimeMills = <span class="keyword">this</span>.brokerController.getBrokerConfig().getShortPollingTimeMills();</div><div class="line"><span class="number">290</span>:                     }</div><div class="line"><span class="number">291</span>: </div><div class="line"><span class="number">292</span>:                     String topic = requestHeader.getTopic();</div><div class="line"><span class="number">293</span>:                     <span class="keyword">long</span> offset = requestHeader.getQueueOffset();</div><div class="line"><span class="number">294</span>:                     <span class="keyword">int</span> queueId = requestHeader.getQueueId();</div><div class="line"><span class="number">295</span>:                     PullRequest pullRequest = <span class="keyword">new</span> PullRequest(request, channel, pollingTimeMills,</div><div class="line"><span class="number">296</span>:                         <span class="keyword">this</span>.brokerController.getMessageStore().now(), offset, subscriptionData);</div><div class="line"><span class="number">297</span>:                     <span class="keyword">this</span>.brokerController.getPullRequestHoldService().suspendPullRequest(topic, queueId, pullRequest);</div><div class="line"><span class="number">298</span>:                     response = <span class="keyword">null</span>;</div><div class="line"><span class="number">299</span>:                     <span class="keyword">break</span>;</div><div class="line"><span class="number">300</span>:                 }</div><div class="line"><span class="number">301</span>: </div><div class="line"><span class="number">302</span>:             <span class="keyword">case</span> ResponseCode.PULL_RETRY_IMMEDIATELY:</div><div class="line"><span class="number">303</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">304</span>:             <span class="keyword">case</span> ResponseCode.PULL_OFFSET_MOVED:</div><div class="line"><span class="number">305</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.brokerController.getMessageStoreConfig().getBrokerRole() != BrokerRole.SLAVE</div><div class="line"><span class="number">306</span>:                     || <span class="keyword">this</span>.brokerController.getMessageStoreConfig().isOffsetCheckInSlave()) { <span class="comment">// TODO &#x5F85;&#x535A;&#x5BA2;&#x8865;&#x5145;</span></div><div class="line"><span class="number">307</span>:                     MessageQueue mq = <span class="keyword">new</span> MessageQueue();</div><div class="line"><span class="number">308</span>:                     mq.setTopic(requestHeader.getTopic());</div><div class="line"><span class="number">309</span>:                     mq.setQueueId(requestHeader.getQueueId());</div><div class="line"><span class="number">310</span>:                     mq.setBrokerName(<span class="keyword">this</span>.brokerController.getBrokerConfig().getBrokerName());</div><div class="line"><span class="number">311</span>: </div><div class="line"><span class="number">312</span>:                     OffsetMovedEvent event = <span class="keyword">new</span> OffsetMovedEvent();</div><div class="line"><span class="number">313</span>:                     event.setConsumerGroup(requestHeader.getConsumerGroup());</div><div class="line"><span class="number">314</span>:                     event.setMessageQueue(mq);</div><div class="line"><span class="number">315</span>:                     event.setOffsetRequest(requestHeader.getQueueOffset());</div><div class="line"><span class="number">316</span>:                     event.setOffsetNew(getMessageResult.getNextBeginOffset());</div><div class="line"><span class="number">317</span>:                     <span class="keyword">this</span>.generateOffsetMovedEvent(event);</div><div class="line"><span class="number">318</span>:                     LOG.warn(</div><div class="line"><span class="number">319</span>:                         <span class="string">&quot;PULL_OFFSET_MOVED:correction offset. topic={}, groupId={}, requestOffset={}, newOffset={}, suggestBrokerId={}&quot;</span>,</div><div class="line"><span class="number">320</span>:                         requestHeader.getTopic(), requestHeader.getConsumerGroup(), event.getOffsetRequest(), event.getOffsetNew(),</div><div class="line"><span class="number">321</span>:                         responseHeader.getSuggestWhichBrokerId());</div><div class="line"><span class="number">322</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">323</span>:                     responseHeader.setSuggestWhichBrokerId(subscriptionGroupConfig.getBrokerId());</div><div class="line"><span class="number">324</span>:                     response.setCode(ResponseCode.PULL_RETRY_IMMEDIATELY);</div><div class="line"><span class="number">325</span>:                     LOG.warn(<span class="string">&quot;PULL_OFFSET_MOVED:none correction. topic={}, groupId={}, requestOffset={}, suggestBrokerId={}&quot;</span>,</div><div class="line"><span class="number">326</span>:                         requestHeader.getTopic(), requestHeader.getConsumerGroup(), requestHeader.getQueueOffset(),</div><div class="line"><span class="number">327</span>:                         responseHeader.getSuggestWhichBrokerId());</div><div class="line"><span class="number">328</span>:                 }</div><div class="line"><span class="number">329</span>: </div><div class="line"><span class="number">330</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">331</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">332</span>:                 <span class="keyword">assert</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">333</span>:         }</div><div class="line"><span class="number">334</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">335</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">336</span>:         response.setRemark(<span class="string">&quot;store getMessage return null&quot;</span>);</div><div class="line"><span class="number">337</span>:     }</div><div class="line"><span class="number">338</span>: </div><div class="line"><span class="number">339</span>:     <span class="comment">// &#x8BF7;&#x6C42;&#x8981;&#x6C42;&#x6301;&#x4E45;&#x5316;&#x8FDB;&#x5EA6; &amp;&amp; broker&#x975E;&#x4E3B;&#xFF0C;&#x8FDB;&#x884C;&#x6301;&#x4E45;&#x5316;&#x8FDB;&#x5EA6;&#x3002;</span></div><div class="line"><span class="number">340</span>:     <span class="keyword">boolean</span> storeOffsetEnable = brokerAllowSuspend;</div><div class="line"><span class="number">341</span>:     storeOffsetEnable = storeOffsetEnable &amp;&amp; hasCommitOffsetFlag;</div><div class="line"><span class="number">342</span>:     storeOffsetEnable = storeOffsetEnable &amp;&amp; <span class="keyword">this</span>.brokerController.getMessageStoreConfig().getBrokerRole() != BrokerRole.SLAVE;</div><div class="line"><span class="number">343</span>:     <span class="keyword">if</span> (storeOffsetEnable) {</div><div class="line"><span class="number">344</span>:         <span class="keyword">this</span>.brokerController.getConsumerOffsetManager().commitOffset(RemotingHelper.parseChannelRemoteAddr(channel),</div><div class="line"><span class="number">345</span>:             requestHeader.getConsumerGroup(), requestHeader.getTopic(), requestHeader.getQueueId(), requestHeader.getCommitOffset());</div><div class="line"><span class="number">346</span>:     }</div><div class="line"><span class="number">347</span>:     <span class="keyword">return</span> response;</div><div class="line"><span class="number">348</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x5904;&#x7406;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#xFF0C;&#x8FD4;&#x56DE;&#x54CD;&#x5E94;&#x3002;</li>
<li>&#x7B2C; 14 &#x81F3; 19 &#x884C; &#xFF1A;&#x6821;&#x9A8C; <code>Broker</code> &#x662F;&#x5426;&#x53EF;&#x8BFB;&#x3002;</li>
<li>&#x7B2C; 21 &#x81F3; 33 &#x884C; &#xFF1A;&#x6821;&#x9A8C; <code>SubscriptionGroupConfig</code>(&#x8BA2;&#x9605;&#x5206;&#x7EC4;&#x914D;&#x7F6E;) &#x662F;&#x5426;&#x5B58;&#x5728; &amp;&amp; &#x53EF;&#x4EE5;&#x6D88;&#x8D39;&#x3002;</li>
<li>&#x7B2C; 35 &#x81F3; 38 &#x884C; &#xFF1A;&#x5904;&#x7406; <code>PullMessageRequestHeader.sysFlag</code> &#x5BF9;&#x5E94;&#x7684;&#x6807;&#x5FD7;&#x4F4D;&#x3002;</li>
<li>&#x7B2C; 40 &#x81F3; 62 &#x884C; &#xFF1A;&#x6821;&#x9A8C; <code>TopicConfig</code>(&#x4E3B;&#x9898;&#x914D;&#x7F6E;) &#x662F;&#x5426;&#x5B58;&#x5728; &amp;&amp; &#x53EF;&#x8BFB; &amp;&amp; &#x961F;&#x5217;&#x7F16;&#x53F7;&#x6B63;&#x786E;&#x3002;</li>
<li>&#x7B2C; 64 &#x81F3; 110 &#x884C; &#xFF1A;&#x6821;&#x9A8C; <code>SubscriptionData</code>(&#x8BA2;&#x9605;&#x4FE1;&#x606F;) &#x662F;&#x5426;&#x6B63;&#x786E;&#x3002;</li>
<li>&#x7B2C; 113 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>MessageStore#getMessage(...)</code> &#x83B7;&#x53D6; <code>GetMessageResult</code>(&#x6D88;&#x606F;)&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#messagestoregetmessage">MessageStore#getMessage(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 122 &#x81F3; 152 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x5EFA;&#x8BAE;&#x62C9;&#x53D6;&#x6D88;&#x606F; <code>brokerId</code> &#x3002;</li>
<li>&#x7B2C; 154 &#x81F3; 201 &#x884C; &#xFF1A;<img src="http://www.yunai.me/images/RocketMQ/2017_05_04/08.png" alt="PullMessageProcessor&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x72B6;&#x6001;&#x56FE;"></li>
<li>&#x7B2C; 204 &#x81F3; 244 &#x884C; &#xFF1A;<code>Hook</code> &#x903B;&#x8F91;&#xFF0C;<code>#executeConsumeMessageHookBefore(...)</code> &#x3002;</li>
<li>&#x7B2C; 247 &#x81F3; 283 &#x884C; &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6210;&#x529F;&#xFF0C;&#x5373;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;&#x3002;<ul>
<li>&#x7B2C; 255 &#x81F3; 263 &#x884C; &#xFF1A;&#x65B9;&#x5F0F;&#x4E00; &#xFF1A;&#x8C03;&#x7528; <code>readGetMessageResult(...)</code> &#x83B7;&#x53D6;&#x6D88;&#x606F;&#x5185;&#x5BB9;&#x5230;&#x5806;&#x5185;&#x5185;&#x5B58;&#xFF0C;&#x8BBE;&#x7F6E;&#x5230; &#x54CD;&#x5E94;<code>body</code>&#x3002;</li>
<li>&#x7B2C; 265 &#x81F3; 281 &#x884C; &#xFF1A;&#x65B9;&#x5F0F;&#x4E8C; &#xFF1A;&#x57FA;&#x4E8E; <code>zero-copy</code> &#x5B9E;&#x73B0;&#xFF0C;&#x76F4;&#x63A5;&#x54CD;&#x5E94;&#xFF0C;&#x65E0;&#x9700;&#x5806;&#x5185;&#x5185;&#x5B58;&#xFF0C;&#x6027;&#x80FD;&#x66F4;&#x4F18;&#x3002;<em>TODO &#xFF1A;&#x6B64;&#x5904;&#x7B49;&#x5BF9;zero-copy&#x6709;&#x7814;&#x7A76;&#xFF0C;&#x518D;&#x8865;&#x5145;&#x4E00;&#x4E9B;</em>&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 284 &#x81F3; 300 &#x884C; &#xFF1A;&#x62C9;&#x53D6;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x5F53;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6; (<code>Broker</code> &#x5141;&#x8BB8;&#x6302;&#x8D77; &amp;&amp; &#x8BF7;&#x6C42;&#x8981;&#x6C42;&#x6302;&#x8D77;)&#xFF0C;&#x6267;&#x884C;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#pullrequestholdservice">PullRequestHoldService</a>&#x3002;</li>
<li>&#x7B2C; 304 &#x81F3; 328 &#x884C; &#xFF1A;<em>TODO &#xFF1A;&#x6B64;&#x5904;&#x7B49;&#x5BF9;<code>tools</code>&#x6A21;&#x5757;&#x7814;&#x7A76;&#x540E;&#x518D;&#x8865;&#x5145;</em>&#x3002;</li>
<li>&#x7B2C; 339 &#x81F3; 346 &#xFF1A;&#x6301;&#x4E45;&#x5316;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#xFF0C;&#x5F53;&#x6EE1;&#x8DB3; (<code>Broker</code> &#x975E;&#x4E3B; &amp;&amp; &#x8BF7;&#x6C42;&#x8981;&#x6C42;&#x6301;&#x4E45;&#x5316;&#x8FDB;&#x5EA6;)&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#3broker-&#x63D0;&#x4F9B;&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x63A5;&#x53E3;">&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</a>&#x3002;</li>
</ul>
<h2 id="MessageStore-getMessage-&#x2026;"><a href="#MessageStore-getMessage-&#x2026;" class="headerlink" title="MessageStore#getMessage(&#x2026;)"></a>MessageStore#getMessage(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="comment">/**</span></div><div class="line">  2:  * &#x83B7;&#x53D6;&#x6D88;&#x606F;&#x7ED3;&#x679C;</div><div class="line">  3:  *</div><div class="line">  4:  * <span class="doctag">@param</span> group &#x6D88;&#x8D39;&#x5206;&#x7EC4;</div><div class="line">  5:  * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">  6:  * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">  7:  * <span class="doctag">@param</span> offset &#x961F;&#x5217;&#x4F4D;&#x7F6E;</div><div class="line">  8:  * <span class="doctag">@param</span> maxMsgNums &#x6D88;&#x606F;&#x6570;&#x91CF;</div><div class="line">  9:  * <span class="doctag">@param</span> subscriptionData &#x8BA2;&#x9605;&#x4FE1;&#x606F;</div><div class="line"> 10:  * <span class="doctag">@return</span> &#x6D88;&#x606F;&#x7ED3;&#x679C;</div><div class="line"> 11:  */</div><div class="line"> <span class="number">12</span>: <span class="function"><span class="keyword">public</span> GetMessageResult <span class="title">getMessage</span><span class="params">(<span class="keyword">final</span> String group, <span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> <span class="keyword">long</span> offset, <span class="keyword">final</span> <span class="keyword">int</span> maxMsgNums,</span></span></div><div class="line"> <span class="number">13</span>:     <span class="keyword">final</span> SubscriptionData subscriptionData) {</div><div class="line"> <span class="number">14</span>:     <span class="comment">// &#x662F;&#x5426;&#x5173;&#x95ED;</span></div><div class="line"> <span class="number">15</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.shutdown) {</div><div class="line"> <span class="number">16</span>:         log.warn(<span class="string">&quot;message store has shutdown, so getMessage is forbidden&quot;</span>);</div><div class="line"> <span class="number">17</span>:         <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"> <span class="number">18</span>:     }</div><div class="line"> <span class="number">19</span>:     <span class="comment">// &#x662F;&#x5426;&#x53EF;&#x8BFB;</span></div><div class="line"> <span class="number">20</span>:     <span class="keyword">if</span> (!<span class="keyword">this</span>.runningFlags.isReadable()) {</div><div class="line"> <span class="number">21</span>:         log.warn(<span class="string">&quot;message store is not readable, so getMessage is forbidden &quot;</span> + <span class="keyword">this</span>.runningFlags.getFlagBits());</div><div class="line"> <span class="number">22</span>:         <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line"> <span class="number">23</span>:     }</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:     <span class="keyword">long</span> beginTime = <span class="keyword">this</span>.getSystemClock().now();</div><div class="line"> <span class="number">26</span>: </div><div class="line"> <span class="number">27</span>:     GetMessageStatus status = GetMessageStatus.NO_MESSAGE_IN_QUEUE;</div><div class="line"> <span class="number">28</span>:     <span class="keyword">long</span> nextBeginOffset = offset;</div><div class="line"> <span class="number">29</span>:     <span class="keyword">long</span> minOffset = <span class="number">0</span>;</div><div class="line"> <span class="number">30</span>:     <span class="keyword">long</span> maxOffset = <span class="number">0</span>;</div><div class="line"> <span class="number">31</span>: </div><div class="line"> <span class="number">32</span>:     GetMessageResult getResult = <span class="keyword">new</span> GetMessageResult();</div><div class="line"> <span class="number">33</span>: </div><div class="line"> <span class="number">34</span>:     <span class="keyword">final</span> <span class="keyword">long</span> maxOffsetPy = <span class="keyword">this</span>.commitLog.getMaxOffset();</div><div class="line"> <span class="number">35</span>: </div><div class="line"> <span class="number">36</span>:     <span class="comment">// &#x83B7;&#x53D6;&#x6D88;&#x8D39;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">37</span>:     ConsumeQueue consumeQueue = findConsumeQueue(topic, queueId);</div><div class="line"> <span class="number">38</span>:     <span class="keyword">if</span> (consumeQueue != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">39</span>:         minOffset = consumeQueue.getMinOffsetInQueue(); <span class="comment">// &#x6D88;&#x8D39;&#x961F;&#x5217; &#x6700;&#x5C0F;&#x961F;&#x5217;&#x7F16;&#x53F7;</span></div><div class="line"> <span class="number">40</span>:         maxOffset = consumeQueue.getMaxOffsetInQueue(); <span class="comment">// &#x6D88;&#x8D39;&#x961F;&#x5217; &#x6700;&#x5927;&#x961F;&#x5217;&#x7F16;&#x53F7;</span></div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:         <span class="comment">// &#x5224;&#x65AD; &#x961F;&#x5217;&#x4F4D;&#x7F6E;(offset)</span></div><div class="line"> <span class="number">43</span>:         <span class="keyword">if</span> (maxOffset == <span class="number">0</span>) { <span class="comment">// &#x6D88;&#x8D39;&#x961F;&#x5217;&#x65E0;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">44</span>:             status = GetMessageStatus.NO_MESSAGE_IN_QUEUE;</div><div class="line"> <span class="number">45</span>:             nextBeginOffset = nextOffsetCorrection(offset, <span class="number">0</span>);</div><div class="line"> <span class="number">46</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (offset &lt; minOffset) { <span class="comment">// &#x67E5;&#x8BE2;offset &#x592A;&#x5C0F;</span></div><div class="line"> <span class="number">47</span>:             status = GetMessageStatus.OFFSET_TOO_SMALL;</div><div class="line"> <span class="number">48</span>:             nextBeginOffset = nextOffsetCorrection(offset, minOffset);</div><div class="line"> <span class="number">49</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (offset == maxOffset) { <span class="comment">// &#x67E5;&#x8BE2;offset &#x8D85;&#x8FC7; &#x6D88;&#x8D39;&#x961F;&#x5217; &#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;</span></div><div class="line"> <span class="number">50</span>:             status = GetMessageStatus.OFFSET_OVERFLOW_ONE;</div><div class="line"> <span class="number">51</span>:             nextBeginOffset = nextOffsetCorrection(offset, offset);</div><div class="line"> <span class="number">52</span>:         } <span class="keyword">else</span> <span class="keyword">if</span> (offset &gt; maxOffset) { <span class="comment">// &#x67E5;&#x8BE2;offset &#x8D85;&#x8FC7; &#x6D88;&#x8D39;&#x961F;&#x5217; &#x592A;&#x591A;(&#x5927;&#x4E8E;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;)</span></div><div class="line"> <span class="number">53</span>:             status = GetMessageStatus.OFFSET_OVERFLOW_BADLY;</div><div class="line"> <span class="number">54</span>:             <span class="keyword">if</span> (<span class="number">0</span> == minOffset) { <span class="comment">// TODO blog &#x8FD9;&#x91CC;&#x662F;&#xFF1F;&#xFF1F;&#x4E3A;&#x5565;0 == minOffset&#x505A;&#x4E86;&#x7279;&#x6B8A;&#x5224;&#x65AD;</span></div><div class="line"> <span class="number">55</span>:                 nextBeginOffset = nextOffsetCorrection(offset, minOffset);</div><div class="line"> <span class="number">56</span>:             } <span class="keyword">else</span> {</div><div class="line"> <span class="number">57</span>:                 nextBeginOffset = nextOffsetCorrection(offset, maxOffset);</div><div class="line"> <span class="number">58</span>:             }</div><div class="line"> <span class="number">59</span>:         } <span class="keyword">else</span> {</div><div class="line"> <span class="number">60</span>:             <span class="comment">// &#x83B7;&#x5F97; &#x6620;&#x5C04;Buffer&#x7ED3;&#x679C;(MappedFile)</span></div><div class="line"> <span class="number">61</span>:             SelectMappedBufferResult bufferConsumeQueue = consumeQueue.getIndexBuffer(offset);</div><div class="line"> <span class="number">62</span>:             <span class="keyword">if</span> (bufferConsumeQueue != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">63</span>:                 <span class="keyword">try</span> {</div><div class="line"> <span class="number">64</span>:                     status = GetMessageStatus.NO_MATCHED_MESSAGE;</div><div class="line"> <span class="number">65</span>: </div><div class="line"> <span class="number">66</span>:                     <span class="keyword">long</span> nextPhyFileStartOffset = Long.MIN_VALUE; <span class="comment">// commitLog&#x4E0B;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;(MappedFile)&#x5BF9;&#x5E94;&#x7684;&#x5F00;&#x59CB;offset&#x3002;</span></div><div class="line"> <span class="number">67</span>:                     <span class="keyword">long</span> maxPhyOffsetPulling = <span class="number">0</span>; <span class="comment">// &#x6D88;&#x606F;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x62C9;&#x53D6;&#x5230;&#x7684;&#x6700;&#x5927;offset</span></div><div class="line"> <span class="number">68</span>: </div><div class="line"> <span class="number">69</span>:                     <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line"> <span class="number">70</span>:                     <span class="keyword">final</span> <span class="keyword">int</span> maxFilterMessageCount = <span class="number">16000</span>;</div><div class="line"> <span class="number">71</span>:                     <span class="keyword">final</span> <span class="keyword">boolean</span> diskFallRecorded = <span class="keyword">this</span>.messageStoreConfig.isDiskFallRecorded();</div><div class="line"> <span class="number">72</span>:                     <span class="comment">// &#x5FAA;&#x73AF;&#x83B7;&#x53D6; &#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;</span></div><div class="line"> <span class="number">73</span>:                     <span class="keyword">for</span> (; i &lt; bufferConsumeQueue.getSize() &amp;&amp; i &lt; maxFilterMessageCount; i += ConsumeQueue.CQ_STORE_UNIT_SIZE) {</div><div class="line"> <span class="number">74</span>:                         <span class="keyword">long</span> offsetPy = bufferConsumeQueue.getByteBuffer().getLong(); <span class="comment">// &#x6D88;&#x606F;&#x7269;&#x7406;&#x4F4D;&#x7F6E;offset</span></div><div class="line"> <span class="number">75</span>:                         <span class="keyword">int</span> sizePy = bufferConsumeQueue.getByteBuffer().getInt(); <span class="comment">// &#x6D88;&#x606F;&#x957F;&#x5EA6;</span></div><div class="line"> <span class="number">76</span>:                         <span class="keyword">long</span> tagsCode = bufferConsumeQueue.getByteBuffer().getLong(); <span class="comment">// &#x6D88;&#x606F;tagsCode</span></div><div class="line"> <span class="number">77</span>:                         <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x62C9;&#x53D6;&#x5230;&#x7684;&#x6700;&#x5927;offset</span></div><div class="line"> <span class="number">78</span>:                         maxPhyOffsetPulling = offsetPy;</div><div class="line"> <span class="number">79</span>:                         <span class="comment">// &#x5F53; offsetPy &#x5C0F;&#x4E8E; nextPhyFileStartOffset &#x65F6;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5BF9;&#x5E94;&#x7684; Message &#x5DF2;&#x7ECF;&#x79FB;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;continue&#xFF0C;&#x76F4;&#x5230;&#x53EF;&#x8BFB;&#x53D6;&#x7684;Message&#x3002;</span></div><div class="line"> <span class="number">80</span>:                         <span class="keyword">if</span> (nextPhyFileStartOffset != Long.MIN_VALUE) {</div><div class="line"> <span class="number">81</span>:                             <span class="keyword">if</span> (offsetPy &lt; nextPhyFileStartOffset)</div><div class="line"> <span class="number">82</span>:                                 <span class="keyword">continue</span>;</div><div class="line"> <span class="number">83</span>:                         }</div><div class="line"> <span class="number">84</span>:                         <span class="comment">// &#x6821;&#x9A8C; commitLog &#x662F;&#x5426;&#x9700;&#x8981;&#x786C;&#x76D8;&#xFF0C;&#x65E0;&#x6CD5;&#x5168;&#x90E8;&#x653E;&#x5728;&#x5185;&#x5B58;</span></div><div class="line"> <span class="number">85</span>:                         <span class="keyword">boolean</span> isInDisk = checkInDiskByCommitOffset(offsetPy, maxOffsetPy);</div><div class="line"> <span class="number">86</span>:                         <span class="comment">// &#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x83B7;&#x5F97;&#x8DB3;&#x591F;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">87</span>:                         <span class="keyword">if</span> (<span class="keyword">this</span>.isTheBatchFull(sizePy, maxMsgNums, getResult.getBufferTotalSize(), getResult.getMessageCount(),</div><div class="line"> <span class="number">88</span>:                             isInDisk)) {</div><div class="line"> <span class="number">89</span>:                             <span class="keyword">break</span>;</div><div class="line"> <span class="number">90</span>:                         }</div><div class="line"> <span class="number">91</span>:                         <span class="comment">// &#x5224;&#x65AD;&#x6D88;&#x606F;&#x662F;&#x5426;&#x7B26;&#x5408;&#x6761;&#x4EF6;</span></div><div class="line"> <span class="number">92</span>:                         <span class="keyword">if</span> (<span class="keyword">this</span>.messageFilter.isMessageMatched(subscriptionData, tagsCode)) {</div><div class="line"> <span class="number">93</span>:                             <span class="comment">// &#x4ECE;commitLog&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x6D88;&#x606F;ByteBuffer</span></div><div class="line"> <span class="number">94</span>:                             SelectMappedBufferResult selectResult = <span class="keyword">this</span>.commitLog.getMessage(offsetPy, sizePy);</div><div class="line"> <span class="number">95</span>:                             <span class="keyword">if</span> (selectResult != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">96</span>:                                 <span class="keyword">this</span>.storeStatsService.getGetMessageTransferedMsgCount().incrementAndGet();</div><div class="line"> <span class="number">97</span>:                                 getResult.addMessage(selectResult);</div><div class="line"> <span class="number">98</span>:                                 status = GetMessageStatus.FOUND;</div><div class="line"> <span class="number">99</span>:                                 nextPhyFileStartOffset = Long.MIN_VALUE;</div><div class="line"><span class="number">100</span>:                             } <span class="keyword">else</span> {</div><div class="line"><span class="number">101</span>:                                 <span class="comment">// &#x4ECE;commitLog&#x65E0;&#x6CD5;&#x8BFB;&#x53D6;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x8BE5;&#x6D88;&#x606F;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF08;MappedFile&#xFF09;&#x5DF2;&#x7ECF;&#x5220;&#x9664;&#xFF0C;&#x8BA1;&#x7B97;&#x4E0B;&#x4E00;&#x4E2A;MappedFile&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</span></div><div class="line"><span class="number">102</span>:                                 <span class="keyword">if</span> (getResult.getBufferTotalSize() == <span class="number">0</span>) {</div><div class="line"><span class="number">103</span>:                                     status = GetMessageStatus.MESSAGE_WAS_REMOVING;</div><div class="line"><span class="number">104</span>:                                 }</div><div class="line"><span class="number">105</span>:                                 nextPhyFileStartOffset = <span class="keyword">this</span>.commitLog.rollNextFile(offsetPy);</div><div class="line"><span class="number">106</span>:                             }</div><div class="line"><span class="number">107</span>:                         } <span class="keyword">else</span> {</div><div class="line"><span class="number">108</span>:                             <span class="keyword">if</span> (getResult.getBufferTotalSize() == <span class="number">0</span>) {</div><div class="line"><span class="number">109</span>:                                 status = GetMessageStatus.NO_MATCHED_MESSAGE;</div><div class="line"><span class="number">110</span>:                             }</div><div class="line"><span class="number">111</span>: </div><div class="line"><span class="number">112</span>:                             <span class="keyword">if</span> (log.isDebugEnabled()) {</div><div class="line"><span class="number">113</span>:                                 log.debug(<span class="string">&quot;message type not matched, client: &quot;</span> + subscriptionData + <span class="string">&quot; server: &quot;</span> + tagsCode);</div><div class="line"><span class="number">114</span>:                             }</div><div class="line"><span class="number">115</span>:                         }</div><div class="line"><span class="number">116</span>:                     }</div><div class="line"><span class="number">117</span>:                     <span class="comment">// &#x7EDF;&#x8BA1;&#x5269;&#x4F59;&#x53EF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5B57;&#x8282;&#x6570;</span></div><div class="line"><span class="number">118</span>:                     <span class="keyword">if</span> (diskFallRecorded) {</div><div class="line"><span class="number">119</span>:                         <span class="keyword">long</span> fallBehind = maxOffsetPy - maxPhyOffsetPulling;</div><div class="line"><span class="number">120</span>:                         brokerStatsManager.recordDiskFallBehindSize(group, topic, queueId, fallBehind);</div><div class="line"><span class="number">121</span>:                     }</div><div class="line"><span class="number">122</span>:                     <span class="comment">// &#x8BA1;&#x7B97;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7;</span></div><div class="line"><span class="number">123</span>:                     nextBeginOffset = offset + (i / ConsumeQueue.CQ_STORE_UNIT_SIZE);</div><div class="line"><span class="number">124</span>:                     <span class="comment">// &#x6839;&#x636E;&#x5269;&#x4F59;&#x53EF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5B57;&#x8282;&#x6570;&#x4E0E;&#x5185;&#x5B58;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5EFA;&#x8BAE;&#x8BFB;&#x53D6;&#x4ECE;&#x8282;&#x70B9;</span></div><div class="line"><span class="number">125</span>:                     <span class="keyword">long</span> diff = maxOffsetPy - maxPhyOffsetPulling;</div><div class="line"><span class="number">126</span>:                     <span class="keyword">long</span> memory = (<span class="keyword">long</span>) (StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE</div><div class="line"><span class="number">127</span>:                             * (<span class="keyword">this</span>.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / <span class="number">100.0</span>));</div><div class="line"><span class="number">128</span>:                     getResult.setSuggestPullingFromSlave(diff &gt; memory);</div><div class="line"><span class="number">129</span>:                 } <span class="keyword">finally</span> {</div><div class="line"><span class="number">130</span>:                     bufferConsumeQueue.release();</div><div class="line"><span class="number">131</span>:                 }</div><div class="line"><span class="number">132</span>:             } <span class="keyword">else</span> {</div><div class="line"><span class="number">133</span>:                 status = GetMessageStatus.OFFSET_FOUND_NULL;</div><div class="line"><span class="number">134</span>:                 nextBeginOffset = nextOffsetCorrection(offset, consumeQueue.rollNextFile(offset));</div><div class="line"><span class="number">135</span>:                 log.warn(<span class="string">&quot;consumer request topic: &quot;</span> + topic + <span class="string">&quot;offset: &quot;</span> + offset + <span class="string">&quot; minOffset: &quot;</span> + minOffset + <span class="string">&quot; maxOffset: &quot;</span></div><div class="line"><span class="number">136</span>:                     + maxOffset + <span class="string">&quot;, but access logic queue failed.&quot;</span>);</div><div class="line"><span class="number">137</span>:             }</div><div class="line"><span class="number">138</span>:         }</div><div class="line"><span class="number">139</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">140</span>:         status = GetMessageStatus.NO_MATCHED_LOGIC_QUEUE;</div><div class="line"><span class="number">141</span>:         nextBeginOffset = nextOffsetCorrection(offset, <span class="number">0</span>);</div><div class="line"><span class="number">142</span>:     }</div><div class="line"><span class="number">143</span>:     <span class="comment">// &#x7EDF;&#x8BA1;</span></div><div class="line"><span class="number">144</span>:     <span class="keyword">if</span> (GetMessageStatus.FOUND == status) {</div><div class="line"><span class="number">145</span>:         <span class="keyword">this</span>.storeStatsService.getGetMessageTimesTotalFound().incrementAndGet();</div><div class="line"><span class="number">146</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">147</span>:         <span class="keyword">this</span>.storeStatsService.getGetMessageTimesTotalMiss().incrementAndGet();</div><div class="line"><span class="number">148</span>:     }</div><div class="line"><span class="number">149</span>:     <span class="keyword">long</span> eclipseTime = <span class="keyword">this</span>.getSystemClock().now() - beginTime;</div><div class="line"><span class="number">150</span>:     <span class="keyword">this</span>.storeStatsService.setGetMessageEntireTimeMax(eclipseTime);</div><div class="line"><span class="number">151</span>:     <span class="comment">// &#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;</span></div><div class="line"><span class="number">152</span>:     getResult.setStatus(status);</div><div class="line"><span class="number">153</span>:     getResult.setNextBeginOffset(nextBeginOffset);</div><div class="line"><span class="number">154</span>:     getResult.setMaxOffset(maxOffset);</div><div class="line"><span class="number">155</span>:     getResult.setMinOffset(minOffset);</div><div class="line"><span class="number">156</span>:     <span class="keyword">return</span> getResult;</div><div class="line"><span class="number">157</span>: }</div><div class="line"><span class="number">158</span>: </div><div class="line"><span class="number">159</span>: <span class="comment">/**</span></div><div class="line">160:  * &#x6839;&#x636E; &#x4E3B;&#x9898; + &#x961F;&#x5217;&#x7F16;&#x53F7; &#x83B7;&#x53D6; &#x6D88;&#x8D39;&#x961F;&#x5217;</div><div class="line">161:  *</div><div class="line">162:  * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">163:  * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">164:  * <span class="doctag">@return</span> &#x6D88;&#x8D39;&#x961F;&#x5217;</div><div class="line">165:  */</div><div class="line"><span class="number">166</span>: <span class="function"><span class="keyword">public</span> ConsumeQueue <span class="title">findConsumeQueue</span><span class="params">(String topic, <span class="keyword">int</span> queueId)</span> </span>{</div><div class="line"><span class="number">167</span>:     <span class="comment">// &#x83B7;&#x53D6; topic &#x5BF9;&#x5E94;&#x7684; &#x6240;&#x6709;&#x6D88;&#x8D39;&#x961F;&#x5217;</span></div><div class="line"><span class="number">168</span>:     ConcurrentHashMap&lt;Integer, ConsumeQueue&gt; map = consumeQueueTable.get(topic);</div><div class="line"><span class="number">169</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == map) {</div><div class="line"><span class="number">170</span>:         ConcurrentHashMap&lt;Integer, ConsumeQueue&gt; newMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">128</span>);</div><div class="line"><span class="number">171</span>:         ConcurrentHashMap&lt;Integer, ConsumeQueue&gt; oldMap = consumeQueueTable.putIfAbsent(topic, newMap);</div><div class="line"><span class="number">172</span>:         <span class="keyword">if</span> (oldMap != <span class="keyword">null</span>) {</div><div class="line"><span class="number">173</span>:             map = oldMap;</div><div class="line"><span class="number">174</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">175</span>:             map = newMap;</div><div class="line"><span class="number">176</span>:         }</div><div class="line"><span class="number">177</span>:     }</div><div class="line"><span class="number">178</span>:     <span class="comment">// &#x83B7;&#x53D6; queueId &#x5BF9;&#x5E94;&#x7684; &#x6D88;&#x8D39;&#x961F;&#x5217;</span></div><div class="line"><span class="number">179</span>:     ConsumeQueue logic = map.get(queueId);</div><div class="line"><span class="number">180</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == logic) {</div><div class="line"><span class="number">181</span>:         ConsumeQueue newLogic = <span class="keyword">new</span> ConsumeQueue(<span class="comment">//</span></div><div class="line"><span class="number">182</span>:             topic, <span class="comment">//</span></div><div class="line"><span class="number">183</span>:             queueId, <span class="comment">//</span></div><div class="line"><span class="number">184</span>:             StorePathConfigHelper.getStorePathConsumeQueue(<span class="keyword">this</span>.messageStoreConfig.getStorePathRootDir()), <span class="comment">//</span></div><div class="line"><span class="number">185</span>:             <span class="keyword">this</span>.getMessageStoreConfig().getMapedFileSizeConsumeQueue(), <span class="comment">//</span></div><div class="line"><span class="number">186</span>:             <span class="keyword">this</span>);</div><div class="line"><span class="number">187</span>:         ConsumeQueue oldLogic = map.putIfAbsent(queueId, newLogic);</div><div class="line"><span class="number">188</span>:         <span class="keyword">if</span> (oldLogic != <span class="keyword">null</span>) {</div><div class="line"><span class="number">189</span>:             logic = oldLogic;</div><div class="line"><span class="number">190</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">191</span>:             logic = newLogic;</div><div class="line"><span class="number">192</span>:         }</div><div class="line"><span class="number">193</span>:     }</div><div class="line"><span class="number">194</span>: </div><div class="line"><span class="number">195</span>:     <span class="keyword">return</span> logic;</div><div class="line"><span class="number">196</span>: }</div><div class="line"><span class="number">197</span>: </div><div class="line"><span class="number">198</span>: <span class="comment">/**</span></div><div class="line">199:  * &#x4E0B;&#x4E00;&#x4E2A;&#x83B7;&#x53D6;&#x961F;&#x5217;offset&#x4FEE;&#x6B63;</div><div class="line">200:  * &#x4FEE;&#x6B63;&#x6761;&#x4EF6;&#xFF1A;&#x4E3B;&#x8282;&#x70B9; &#x6216;&#x8005; &#x4ECE;&#x8282;&#x70B9;&#x5F00;&#x542F;&#x6821;&#x9A8C;offset&#x5F00;&#x5173;</div><div class="line">201:  *</div><div class="line">202:  * <span class="doctag">@param</span> oldOffset &#x8001;&#x961F;&#x5217;offset</div><div class="line">203:  * <span class="doctag">@param</span> newOffset &#x65B0;&#x961F;&#x5217;offset</div><div class="line">204:  * <span class="doctag">@return</span> &#x4FEE;&#x6B63;&#x540E;&#x7684;&#x961F;&#x5217;offset</div><div class="line">205:  */</div><div class="line"><span class="number">206</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">nextOffsetCorrection</span><span class="params">(<span class="keyword">long</span> oldOffset, <span class="keyword">long</span> newOffset)</span> </span>{</div><div class="line"><span class="number">207</span>:     <span class="keyword">long</span> nextOffset = oldOffset;</div><div class="line"><span class="number">208</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.getMessageStoreConfig().getBrokerRole() != BrokerRole.SLAVE || <span class="keyword">this</span>.getMessageStoreConfig().isOffsetCheckInSlave()) {</div><div class="line"><span class="number">209</span>:         nextOffset = newOffset;</div><div class="line"><span class="number">210</span>:     }</div><div class="line"><span class="number">211</span>:     <span class="keyword">return</span> nextOffset;</div><div class="line"><span class="number">212</span>: }</div><div class="line"><span class="number">213</span>: </div><div class="line"><span class="number">214</span>: <span class="comment">/**</span></div><div class="line">215:  * &#x6821;&#x9A8C; commitLog &#x662F;&#x5426;&#x9700;&#x8981;&#x786C;&#x76D8;&#xFF0C;&#x65E0;&#x6CD5;&#x5168;&#x90E8;&#x653E;&#x5728;&#x5185;&#x5B58;</div><div class="line">216:  *</div><div class="line">217:  * <span class="doctag">@param</span> offsetPy commitLog &#x6307;&#x5B9A;offset</div><div class="line">218:  * <span class="doctag">@param</span> maxOffsetPy commitLog &#x6700;&#x5927;offset</div><div class="line">219:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x9700;&#x8981;&#x786C;&#x76D8;</div><div class="line">220:  */</div><div class="line"><span class="number">221</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkInDiskByCommitOffset</span><span class="params">(<span class="keyword">long</span> offsetPy, <span class="keyword">long</span> maxOffsetPy)</span> </span>{</div><div class="line"><span class="number">222</span>:     <span class="keyword">long</span> memory = (<span class="keyword">long</span>) (StoreUtil.TOTAL_PHYSICAL_MEMORY_SIZE * (<span class="keyword">this</span>.messageStoreConfig.getAccessMessageInMemoryMaxRatio() / <span class="number">100.0</span>));</div><div class="line"><span class="number">223</span>:     <span class="keyword">return</span> (maxOffsetPy - offsetPy) &gt; memory;</div><div class="line"><span class="number">224</span>: }</div><div class="line"><span class="number">225</span>: </div><div class="line"><span class="number">226</span>: <span class="comment">/**</span></div><div class="line">227:  * &#x5224;&#x65AD;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6EE1;</div><div class="line">228:  *</div><div class="line">229:  * <span class="doctag">@param</span> sizePy &#x5B57;&#x8282;&#x6570;</div><div class="line">230:  * <span class="doctag">@param</span> maxMsgNums &#x6700;&#x5927;&#x6D88;&#x606F;&#x6570;</div><div class="line">231:  * <span class="doctag">@param</span> bufferTotal &#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x8BA1;&#x7B97;&#x5B57;&#x8282;&#x6570;</div><div class="line">232:  * <span class="doctag">@param</span> messageTotal &#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x6570;</div><div class="line">233:  * <span class="doctag">@param</span> isInDisk &#x662F;&#x5426;&#x5728;&#x786C;&#x76D8;&#x4E2D;</div><div class="line">234:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x5DF2;&#x6EE1;</div><div class="line">235:  */</div><div class="line"><span class="number">236</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isTheBatchFull</span><span class="params">(<span class="keyword">int</span> sizePy, <span class="keyword">int</span> maxMsgNums, <span class="keyword">int</span> bufferTotal, <span class="keyword">int</span> messageTotal, <span class="keyword">boolean</span> isInDisk)</span> </span>{</div><div class="line"><span class="number">237</span>:     <span class="keyword">if</span> (<span class="number">0</span> == bufferTotal || <span class="number">0</span> == messageTotal) {</div><div class="line"><span class="number">238</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">239</span>:     }</div><div class="line"><span class="number">240</span>:     <span class="comment">// &#x6D88;&#x606F;&#x6570;&#x91CF;&#x5DF2;&#x7ECF;&#x6EE1;&#x8DB3;&#x8BF7;&#x6C42;&#x6570;&#x91CF;(maxMsgNums)</span></div><div class="line"><span class="number">241</span>:     <span class="keyword">if</span> ((messageTotal + <span class="number">1</span>) &gt;= maxMsgNums) {</div><div class="line"><span class="number">242</span>:         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">243</span>:     }</div><div class="line"><span class="number">244</span>:     <span class="comment">// &#x6839;&#x636E;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#x914D;&#x7F6E;&#x7684;&#x6700;&#x5927;&#x4F20;&#x8F93;&#x5B57;&#x8282;&#x6570;&#x3001;&#x6700;&#x5927;&#x4F20;&#x8F93;&#x6D88;&#x606F;&#x6570;&#x662F;&#x5426;&#x5DF2;&#x6EE1;</span></div><div class="line"><span class="number">245</span>:     <span class="keyword">if</span> (isInDisk) {</div><div class="line"><span class="number">246</span>:         <span class="keyword">if</span> ((bufferTotal + sizePy) &gt; <span class="keyword">this</span>.messageStoreConfig.getMaxTransferBytesOnMessageInDisk()) {</div><div class="line"><span class="number">247</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">248</span>:         }</div><div class="line"><span class="number">249</span>: </div><div class="line"><span class="number">250</span>:         <span class="keyword">if</span> ((messageTotal + <span class="number">1</span>) &gt; <span class="keyword">this</span>.messageStoreConfig.getMaxTransferCountOnMessageInDisk()) {</div><div class="line"><span class="number">251</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">252</span>:         }</div><div class="line"><span class="number">253</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">254</span>:         <span class="keyword">if</span> ((bufferTotal + sizePy) &gt; <span class="keyword">this</span>.messageStoreConfig.getMaxTransferBytesOnMessageInMemory()) {</div><div class="line"><span class="number">255</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">256</span>:         }</div><div class="line"><span class="number">257</span>: </div><div class="line"><span class="number">258</span>:         <span class="keyword">if</span> ((messageTotal + <span class="number">1</span>) &gt; <span class="keyword">this</span>.messageStoreConfig.getMaxTransferCountOnMessageInMemory()) {</div><div class="line"><span class="number">259</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">260</span>:         }</div><div class="line"><span class="number">261</span>:     }</div><div class="line"><span class="number">262</span>: </div><div class="line"><span class="number">263</span>:     <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">264</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6839;&#x636E; &#x6D88;&#x606F;&#x5206;&#x7EC4;(<code>group</code>) + &#x4E3B;&#x9898;(<code>Topic</code>) + &#x961F;&#x5217;&#x7F16;&#x53F7;(<code>queueId</code>) + &#x961F;&#x5217;&#x4F4D;&#x7F6E;(<code>offset</code>) + &#x8BA2;&#x9605;&#x4FE1;&#x606F;(<code>subscriptionData</code>) &#x83B7;&#x53D6; &#x6307;&#x5B9A;&#x6761;&#x6570;(<code>maxMsgNums</code>) &#x6D88;&#x606F;(<code>Message</code>)&#x3002;</li>
<li>&#x7B2C; 14 &#x81F3; 18 &#x884C; &#xFF1A;&#x5224;&#x65AD; <code>Store</code> &#x662F;&#x5426;&#x5904;&#x4E8E;&#x5173;&#x95ED;&#x72B6;&#x6001;&#xFF0C;&#x82E5;&#x5173;&#x95ED;&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 19 &#x81F3; 23 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x662F;&#x5426;&#x53EF;&#x8BFB;&#xFF0C;&#x82E5;&#x4E0D;&#x53EF;&#x8BFB;&#xFF0C;&#x5219;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 37 &#x884C; &#xFF1A;&#x6839;&#x636E; &#x4E3B;&#x9898;(<code>Topic</code>) + &#x961F;&#x5217;&#x7F16;&#x53F7;(<code>queueId</code>) &#x83B7;&#x53D6; &#x6D88;&#x606F;&#x961F;&#x5217;(<code>ConsumeQueue</code>)&#x3002;<ul>
<li><code>#findConsumeQueue(...)</code> &#xFF1A;&#x7B2C; 159 &#x81F3; 196 &#x884C;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 43 &#x81F3; 58 &#x884C; &#xFF1A;&#x5404;&#x79CD;&#x961F;&#x5217;&#x4F4D;&#x7F6E;(<code>offset</code>) &#x65E0;&#x6CD5;&#x8BFB;&#x53D6;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x9488;&#x5BF9;&#x5BF9;&#x5E94;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8BA1;&#x7B97;&#x4E0B;&#x4E00;&#x6B21; <code>Client</code> &#x961F;&#x5217;&#x62C9;&#x53D6;&#x4F4D;&#x7F6E;&#x3002;<ul>
<li>&#x7B2C; 43 &#x81F3; 45 &#x884C; &#xFF1A;&#x6D88;&#x606F;&#x961F;&#x5217;&#x65E0;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 46 &#x81F3; 48 &#x884C; &#xFF1A;&#x67E5;&#x8BE2;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF08;<code>offset</code>&#xFF09; &#x592A;&#x5C0F;&#x3002;</li>
<li>&#x7B2C; 49 &#x81F3; 51 &#x884C; &#xFF1A;&#x67E5;&#x8BE2;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF08;<code>offset</code>&#xFF09; &#x6070;&#x597D;&#x7B49;&#x4E8E; &#x6D88;&#x606F;&#x961F;&#x5217;&#x6700;&#x5927;&#x7684;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#x3002;&#x8BE5;&#x60C5;&#x51B5;&#x662F;&#x6B63;&#x5E38;&#x73B0;&#x8C61;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x67E5;&#x8BE2;&#x6700;&#x65B0;&#x7684;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 52 &#x81F3; 58 &#x884C; &#xFF1A;&#x67E5;&#x8BE2;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF08;<code>offset</code>&#xFF09; &#x8D85;&#x8FC7;&#x8FC7;&#x591A;&#x3002;</li>
<li><code>#nextOffsetCorrection(...)</code> &#xFF1A;&#x7B2C; 198 &#x81F3; 212 &#x884C;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 61 &#x884C; &#xFF1A;&#x6839;&#x636E; &#x6D88;&#x8D39;&#x961F;&#x5217;&#x4F4D;&#x7F6E;(<code>offset</code>) &#x83B7;&#x53D6; &#x5BF9;&#x5E94;&#x7684;<code>MappedFile</code>&#x3002;</li>
<li>&#x7B2C; 72 &#x81F3; 128 &#x884C; &#xFF1A;<strong>&#x5FAA;&#x73AF;</strong>&#x83B7;&#x53D6; <code>&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;</code>&#x3002;<ul>
<li>&#x7B2C; 74 &#x81F3; 76 &#x884C; &#xFF1A;&#x8BFB;&#x53D6;&#x6BCF;&#x4E00;&#x4E2A; <code>&#x6D88;&#x606F;&#x4F4D;&#x7F6E;&#x4FE1;&#x606F;</code>&#x3002;</li>
<li>&#x7B2C; 79 &#x81F3; 83 &#x884C; &#xFF1A;&#x5F53; <code>offsetPy</code> &#x5C0F;&#x4E8E; <code>nextPhyFileStartOffset</code> &#x65F6;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5BF9;<br>&#x5E94;&#x7684; <code>Message</code> &#x5DF2;&#x7ECF;&#x79FB;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;continue&#xFF0C;&#x76F4;&#x5230;&#x53EF;&#x8BFB;&#x53D6;&#x7684; <code>Message</code>&#x3002;</li>
<li>&#x7B2C; 84 &#x81F3; 90 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x83B7;&#x5F97;&#x8DB3;&#x591F;&#x7684;&#x6D88;&#x606F;&#x3002;<ul>
<li><code>#checkInDiskByCommitOffset(...)</code> &#xFF1A;&#x7B2C; 214 &#x81F3; 224 &#x884C;&#x3002;</li>
<li><code>#isTheBatchFull(...)</code> &#xFF1A;&#x7B2C; 226 &#x81F3; 264 &#x884C;&#x3002;</li>
</ul>
</li>
</ul>
</li>
<li>&#x7B2C; 92 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x6D88;&#x606F;&#x662F;&#x5426;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="defaultmessagefilterismessagematched">DefaultMessageFilter#isMessageMatched(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 94 &#x884C; &#xFF1A;&#x4ECE; <code>CommitLog</code> &#x83B7;&#x53D6;&#x5BF9;&#x5E94; &#x6D88;&#x606F;&#x7684;<code>MappedByteBuffer</code>&#x3002;</li>
<li>&#x7B2C; 95 &#x81F3; 99 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>&#x6D88;&#x606F;MappedByteBuffer</code> &#x6210;&#x529F;&#x3002;</li>
<li>&#x7B2C; 100 &#x81F3; 106 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>&#x6D88;&#x606F;MappedByteBuffer</code> &#x5931;&#x8D25;&#x3002;&#x4ECE; <code>CommitLog</code> &#x65E0;&#x6CD5;&#x8BFB;&#x53D6;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x8BF4;&#x660E; &#x8BE5;&#x6D88;&#x606F;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;(<code>MappedFile</code>) &#x5DF2;&#x7ECF;&#x5220;&#x9664;&#xFF0C;&#x6B64;&#x65F6;&#x8BA1;&#x7B97;&#x4E0B;&#x4E00;&#x4E2A;<code>MappedFile</code>&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x3002;<strong>&#x8BE5;&#x903B;&#x8F91;&#x9700;&#x8981;&#x914D;&#x5408;&#xFF08;&#x7B2C; 79 &#x81F3; 83 &#x884C;&#xFF09;&#x4E00;&#x8D77;&#x7406;&#x89E3;&#x3002;</strong></li>
<li>&#x7B2C; 117 &#x81F3; 120 &#x884C; &#xFF1A;&#x7EDF;&#x8BA1;&#x5269;&#x4F59;&#x53EF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5B57;&#x8282;&#x6570;&#x3002;</li>
<li>&#x7B2C; 123 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x4E0B;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7;&#x3002;</li>
<li>&#x7B2C; 124 &#x81F3; 128 &#x884C; &#xFF1A;&#x6839;&#x636E;&#x5269;&#x4F59;&#x53EF;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5B57;&#x8282;&#x6570;&#x4E0E;&#x5185;&#x5B58;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5EFA;&#x8BAE;&#x8BFB;&#x53D6;&#x4ECE;&#x8282;&#x70B9;&#x3002;</li>
<li>&#x7B2C; 130 &#x884C; &#xFF1A;&#x91CA;&#x653E; <code>bufferConsumeQueue</code> &#x5BF9; <code>MappedFile</code> &#x7684;&#x6307;&#x5411;&#x3002;&#x6B64;&#x5904; <code>MappedFile</code> &#x662F; <code>ConsumeQueue</code> &#x91CC;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x662F; <code>CommitLog</code> &#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x3002;</li>
<li>&#x7B2C; 133 &#x81F3; 136 &#x884C; &#xFF1A;&#x83B7;&#x5F97;&#x6D88;&#x8D39;&#x961F;&#x5217;&#x4F4D;&#x7F6E;(<code>offset</code>) &#x83B7;&#x53D6; &#x5BF9;&#x5E94;&#x7684;<code>MappedFile</code> &#x4E3A;<strong>&#x7A7A;</strong>&#xFF0C;&#x8BA1;&#x7B97;<code>ConsumeQueue</code> &#x4ECE; <code>offset</code> &#x5F00;&#x59CB;&#x7684;&#x4E0B;&#x4E00;&#x4E2A; <code>MappedFile</code> &#x5BF9;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 143 &#x81F3; 150 &#x884C; &#xFF1A;&#x8BB0;&#x5F55;&#x7EDF;&#x8BA1;&#x4FE1;&#x606F;&#xFF1A;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x3001;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;/&#x672A;&#x62C9;&#x53D6;&#x5230;&#x6D88;&#x606F;&#x6B21;&#x6570;&#x3002;</li>
<li>&#x7B2C; 151 &#x81F3; 156 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x5E76;&#x8FD4;&#x56DE;&#x3002; </li>
</ul>
<h2 id="DefaultMessageFilter-isMessageMatched-&#x2026;"><a href="#DefaultMessageFilter-isMessageMatched-&#x2026;" class="headerlink" title="DefaultMessageFilter#isMessageMatched(&#x2026;)"></a>DefaultMessageFilter#isMessageMatched(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultMessageFilter</span> <span class="keyword">implements</span> <span class="title">MessageFilter</span> </span>{</div><div class="line"> <span class="number">2</span>: </div><div class="line"> <span class="number">3</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">4</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMessageMatched</span><span class="params">(SubscriptionData subscriptionData, Long tagsCode)</span> </span>{</div><div class="line"> <span class="number">5</span>:         <span class="comment">// &#x6D88;&#x606F;tagsCode &#x7A7A;</span></div><div class="line"> <span class="number">6</span>:         <span class="keyword">if</span> (tagsCode == <span class="keyword">null</span>) {</div><div class="line"> <span class="number">7</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"> <span class="number">8</span>:         }</div><div class="line"> <span class="number">9</span>:         <span class="comment">// &#x8BA2;&#x9605;&#x6570;&#x636E; &#x7A7A;</span></div><div class="line"><span class="number">10</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == subscriptionData) {</div><div class="line"><span class="number">11</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">12</span>:         }</div><div class="line"><span class="number">13</span>:         <span class="comment">// classFilter</span></div><div class="line"><span class="number">14</span>:         <span class="keyword">if</span> (subscriptionData.isClassFilterMode())</div><div class="line"><span class="number">15</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">16</span>:         <span class="comment">// &#x8BA2;&#x9605;&#x8868;&#x8FBE;&#x5F0F; &#x5168;&#x5339;&#x914D;</span></div><div class="line"><span class="number">17</span>:         <span class="keyword">if</span> (subscriptionData.getSubString().equals(SubscriptionData.SUB_ALL)) {</div><div class="line"><span class="number">18</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">19</span>:         }</div><div class="line"><span class="number">20</span>:         <span class="comment">// &#x8BA2;&#x9605;&#x6570;&#x636E;code&#x6570;&#x7EC4; &#x662F;&#x5426;&#x5305;&#x542B; &#x6D88;&#x606F;tagsCode</span></div><div class="line"><span class="number">21</span>:         <span class="keyword">return</span> subscriptionData.getCodeSet().contains(tagsCode.intValue());</div><div class="line"><span class="number">22</span>:     }</div><div class="line"><span class="number">23</span>: </div><div class="line"><span class="number">24</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6D88;&#x606F;&#x8FC7;&#x6EE4;&#x5668;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x3002;</li>
</ul>
<h2 id="PullRequestHoldService"><a href="#PullRequestHoldService" class="headerlink" title="PullRequestHoldService"></a>PullRequestHoldService</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PullRequestHoldService</span> <span class="keyword">extends</span> <span class="title">ServiceThread</span> </span>{</div><div class="line">  <span class="number">2</span>: </div><div class="line">  <span class="number">3</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(LoggerName.BROKER_LOGGER_NAME);</div><div class="line">  <span class="number">4</span>: </div><div class="line">  <span class="number">5</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_QUEUEID_SEPARATOR = <span class="string">&quot;@&quot;</span>;</div><div class="line">  <span class="number">6</span>: </div><div class="line">  <span class="number">7</span>:     <span class="keyword">private</span> <span class="keyword">final</span> BrokerController brokerController;</div><div class="line">  <span class="number">8</span>: </div><div class="line">  <span class="number">9</span>:     <span class="keyword">private</span> <span class="keyword">final</span> SystemClock systemClock = <span class="keyword">new</span> SystemClock();</div><div class="line"> <span class="number">10</span>:     <span class="comment">/**</span></div><div class="line"> 11:      * &#x6D88;&#x606F;&#x8FC7;&#x6EE4;&#x5668;</div><div class="line"> 12:      */</div><div class="line"> <span class="number">13</span>:     <span class="keyword">private</span> <span class="keyword">final</span> MessageFilter messageFilter = <span class="keyword">new</span> DefaultMessageFilter();</div><div class="line"> <span class="number">14</span>:     <span class="comment">/**</span></div><div class="line"> 15:      * &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x96C6;&#x5408;</div><div class="line"> 16:      */</div><div class="line"> <span class="number">17</span>:     <span class="keyword">private</span> ConcurrentHashMap&lt;String<span class="comment">/* topic@queueId */</span>, ManyPullRequest&gt; pullRequestTable =</div><div class="line"> <span class="number">18</span>:             <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">1024</span>);</div><div class="line"> <span class="number">19</span>: </div><div class="line"> <span class="number">20</span>:     <span class="function"><span class="keyword">public</span> <span class="title">PullRequestHoldService</span><span class="params">(<span class="keyword">final</span> BrokerController brokerController)</span> </span>{</div><div class="line"> <span class="number">21</span>:         <span class="keyword">this</span>.brokerController = brokerController;</div><div class="line"> <span class="number">22</span>:     }</div><div class="line"> <span class="number">23</span>: </div><div class="line"> <span class="number">24</span>:     <span class="comment">/**</span></div><div class="line"> 25:      * &#x6DFB;&#x52A0;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6302;&#x8D77;&#x8BF7;&#x6C42;</div><div class="line"> 26:      *</div><div class="line"> 27:      * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line"> 28:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line"> 29:      * <span class="doctag">@param</span> pullRequest &#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;</div><div class="line"> 30:      */</div><div class="line"> <span class="number">31</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">suspendPullRequest</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> PullRequest pullRequest)</span> </span>{</div><div class="line"> <span class="number">32</span>:         String key = <span class="keyword">this</span>.buildKey(topic, queueId);</div><div class="line"> <span class="number">33</span>:         ManyPullRequest mpr = <span class="keyword">this</span>.pullRequestTable.get(key);</div><div class="line"> <span class="number">34</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == mpr) {</div><div class="line"> <span class="number">35</span>:             mpr = <span class="keyword">new</span> ManyPullRequest();</div><div class="line"> <span class="number">36</span>:             ManyPullRequest prev = <span class="keyword">this</span>.pullRequestTable.putIfAbsent(key, mpr);</div><div class="line"> <span class="number">37</span>:             <span class="keyword">if</span> (prev != <span class="keyword">null</span>) {</div><div class="line"> <span class="number">38</span>:                 mpr = prev;</div><div class="line"> <span class="number">39</span>:             }</div><div class="line"> <span class="number">40</span>:         }</div><div class="line"> <span class="number">41</span>: </div><div class="line"> <span class="number">42</span>:         mpr.addPullRequest(pullRequest);</div><div class="line"> <span class="number">43</span>:     }</div><div class="line"> <span class="number">44</span>: </div><div class="line"> <span class="number">45</span>:     <span class="comment">/**</span></div><div class="line"> 46:      * &#x6839;&#x636E; &#x4E3B;&#x9898; + &#x961F;&#x5217;&#x7F16;&#x53F7; &#x521B;&#x5EFA;&#x552F;&#x4E00;&#x6807;&#x8BC6;</div><div class="line"> 47:      *</div><div class="line"> 48:      * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line"> 49:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line"> 50:      * <span class="doctag">@return</span> key</div><div class="line"> 51:      */</div><div class="line"> <span class="number">52</span>:     <span class="function"><span class="keyword">private</span> String <span class="title">buildKey</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId)</span> </span>{</div><div class="line"> <span class="number">53</span>:         StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line"> <span class="number">54</span>:         sb.append(topic);</div><div class="line"> <span class="number">55</span>:         sb.append(TOPIC_QUEUEID_SEPARATOR);</div><div class="line"> <span class="number">56</span>:         sb.append(queueId);</div><div class="line"> <span class="number">57</span>:         <span class="keyword">return</span> sb.toString();</div><div class="line"> <span class="number">58</span>:     }</div><div class="line"> <span class="number">59</span>: </div><div class="line"> <span class="number">60</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">61</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">62</span>:         log.info(<span class="string">&quot;{} service started&quot;</span>, <span class="keyword">this</span>.getServiceName());</div><div class="line"> <span class="number">63</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"> <span class="number">64</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">65</span>:                 <span class="comment">// &#x6839;&#x636E; &#x957F;&#x8F6E;&#x8BAD; &#x8FD8;&#x662F; &#x77ED;&#x8F6E;&#x8BAD; &#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;</span></div><div class="line"> <span class="number">66</span>:                 <span class="keyword">if</span> (<span class="keyword">this</span>.brokerController.getBrokerConfig().isLongPollingEnable()) {</div><div class="line"> <span class="number">67</span>:                     <span class="keyword">this</span>.waitForRunning(<span class="number">5</span> * <span class="number">1000</span>);</div><div class="line"> <span class="number">68</span>:                 } <span class="keyword">else</span> {</div><div class="line"> <span class="number">69</span>:                     <span class="keyword">this</span>.waitForRunning(<span class="keyword">this</span>.brokerController.getBrokerConfig().getShortPollingTimeMills());</div><div class="line"> <span class="number">70</span>:                 }</div><div class="line"> <span class="number">71</span>:                 <span class="comment">// &#x68C0;&#x67E5;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;</span></div><div class="line"> <span class="number">72</span>:                 <span class="keyword">long</span> beginLockTimestamp = <span class="keyword">this</span>.systemClock.now();</div><div class="line"> <span class="number">73</span>:                 <span class="keyword">this</span>.checkHoldRequest();</div><div class="line"> <span class="number">74</span>:                 <span class="keyword">long</span> costTime = <span class="keyword">this</span>.systemClock.now() - beginLockTimestamp;</div><div class="line"> <span class="number">75</span>:                 <span class="keyword">if</span> (costTime &gt; <span class="number">5</span> * <span class="number">1000</span>) {</div><div class="line"> <span class="number">76</span>:                     log.info(<span class="string">&quot;[NOTIFYME] check hold request cost {} ms.&quot;</span>, costTime);</div><div class="line"> <span class="number">77</span>:                 }</div><div class="line"> <span class="number">78</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">79</span>:                 log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"> <span class="number">80</span>:             }</div><div class="line"> <span class="number">81</span>:         }</div><div class="line"> <span class="number">82</span>: </div><div class="line"> <span class="number">83</span>:         log.info(<span class="string">&quot;{} service end&quot;</span>, <span class="keyword">this</span>.getServiceName());</div><div class="line"> <span class="number">84</span>:     }</div><div class="line"> <span class="number">85</span>: </div><div class="line"> <span class="number">86</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">87</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">88</span>:         <span class="keyword">return</span> PullRequestHoldService.class.getSimpleName();</div><div class="line"> <span class="number">89</span>:     }</div><div class="line"> <span class="number">90</span>: </div><div class="line"> <span class="number">91</span>:     <span class="comment">/**</span></div><div class="line"> 92:      * &#x904D;&#x5386;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x8BF7;&#x6C42;&#x3002;</div><div class="line"> 93:      */</div><div class="line"> <span class="number">94</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkHoldRequest</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">95</span>:         <span class="keyword">for</span> (String key : <span class="keyword">this</span>.pullRequestTable.keySet()) {</div><div class="line"> <span class="number">96</span>:             String[] kArray = key.split(TOPIC_QUEUEID_SEPARATOR);</div><div class="line"> <span class="number">97</span>:             <span class="keyword">if</span> (<span class="number">2</span> == kArray.length) {</div><div class="line"> <span class="number">98</span>:                 String topic = kArray[<span class="number">0</span>];</div><div class="line"> <span class="number">99</span>:                 <span class="keyword">int</span> queueId = Integer.parseInt(kArray[<span class="number">1</span>]);</div><div class="line"><span class="number">100</span>:                 <span class="keyword">final</span> <span class="keyword">long</span> offset = <span class="keyword">this</span>.brokerController.getMessageStore().getMaxOffsetInQuque(topic, queueId);</div><div class="line"><span class="number">101</span>:                 <span class="keyword">try</span> {</div><div class="line"><span class="number">102</span>:                     <span class="keyword">this</span>.notifyMessageArriving(topic, queueId, offset);</div><div class="line"><span class="number">103</span>:                 } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">104</span>:                     log.error(<span class="string">&quot;check hold request failed. topic={}, queueId={}&quot;</span>, topic, queueId, e);</div><div class="line"><span class="number">105</span>:                 }</div><div class="line"><span class="number">106</span>:             }</div><div class="line"><span class="number">107</span>:         }</div><div class="line"><span class="number">108</span>:     }</div><div class="line"><span class="number">109</span>: </div><div class="line"><span class="number">110</span>:     <span class="comment">/**</span></div><div class="line">111:      * &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x8BF7;&#x6C42;</div><div class="line">112:      *</div><div class="line">113:      * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">114:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">115:      * <span class="doctag">@param</span> maxOffset &#x6D88;&#x8D39;&#x961F;&#x5217;&#x6700;&#x5927;offset</div><div class="line">116:      */</div><div class="line"><span class="number">117</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyMessageArriving</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> <span class="keyword">long</span> maxOffset)</span> </span>{</div><div class="line"><span class="number">118</span>:         notifyMessageArriving(topic, queueId, maxOffset, <span class="keyword">null</span>);</div><div class="line"><span class="number">119</span>:     }</div><div class="line"><span class="number">120</span>: </div><div class="line"><span class="number">121</span>:     <span class="comment">/**</span></div><div class="line">122:      * &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x8BF7;&#x6C42;</div><div class="line">123:      *</div><div class="line">124:      * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">125:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">126:      * <span class="doctag">@param</span> maxOffset &#x6D88;&#x8D39;&#x961F;&#x5217;&#x6700;&#x5927;offset</div><div class="line">127:      * <span class="doctag">@param</span> tagsCode &#x8FC7;&#x6EE4;tagsCode</div><div class="line">128:      */</div><div class="line"><span class="number">129</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyMessageArriving</span><span class="params">(<span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> <span class="keyword">long</span> maxOffset, <span class="keyword">final</span> Long tagsCode)</span> </span>{</div><div class="line"><span class="number">130</span>:         String key = <span class="keyword">this</span>.buildKey(topic, queueId);</div><div class="line"><span class="number">131</span>:         ManyPullRequest mpr = <span class="keyword">this</span>.pullRequestTable.get(key);</div><div class="line"><span class="number">132</span>:         <span class="keyword">if</span> (mpr != <span class="keyword">null</span>) {</div><div class="line"><span class="number">133</span>:             <span class="comment">//</span></div><div class="line"><span class="number">134</span>:             List&lt;PullRequest&gt; requestList = mpr.cloneListAndClear();</div><div class="line"><span class="number">135</span>:             <span class="keyword">if</span> (requestList != <span class="keyword">null</span>) {</div><div class="line"><span class="number">136</span>:                 List&lt;PullRequest&gt; replayList = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// &#x4E0D;&#x7B26;&#x5408;&#x5524;&#x9192;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x7EC4;</span></div><div class="line"><span class="number">137</span>: </div><div class="line"><span class="number">138</span>:                 <span class="keyword">for</span> (PullRequest request : requestList) {</div><div class="line"><span class="number">139</span>:                     <span class="comment">// &#x5982;&#x679C; maxOffset &#x8FC7;&#x5C0F;&#xFF0C;&#x5219;&#x91CD;&#x65B0;&#x8BFB;&#x53D6;&#x4E00;&#x6B21;&#x3002;</span></div><div class="line"><span class="number">140</span>:                     <span class="keyword">long</span> newestOffset = maxOffset;</div><div class="line"><span class="number">141</span>:                     <span class="keyword">if</span> (newestOffset &lt;= request.getPullFromThisOffset()) {</div><div class="line"><span class="number">142</span>:                         newestOffset = <span class="keyword">this</span>.brokerController.getMessageStore().getMaxOffsetInQuque(topic, queueId);</div><div class="line"><span class="number">143</span>:                     }</div><div class="line"><span class="number">144</span>:                     <span class="comment">// &#x6709;&#x65B0;&#x7684;&#x5339;&#x914D;&#x6D88;&#x606F;&#xFF0C;&#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</span></div><div class="line"><span class="number">145</span>:                     <span class="keyword">if</span> (newestOffset &gt; request.getPullFromThisOffset()) {</div><div class="line"><span class="number">146</span>:                         <span class="keyword">if</span> (<span class="keyword">this</span>.messageFilter.isMessageMatched(request.getSubscriptionData(), tagsCode)) {</div><div class="line"><span class="number">147</span>:                             <span class="keyword">try</span> {</div><div class="line"><span class="number">148</span>:                                 <span class="keyword">this</span>.brokerController.getPullMessageProcessor().executeRequestWhenWakeup(request.getClientChannel(),</div><div class="line"><span class="number">149</span>:                                     request.getRequestCommand());</div><div class="line"><span class="number">150</span>:                             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">151</span>:                                 log.error(<span class="string">&quot;execute request when wakeup failed.&quot;</span>, e);</div><div class="line"><span class="number">152</span>:                             }</div><div class="line"><span class="number">153</span>:                             <span class="keyword">continue</span>;</div><div class="line"><span class="number">154</span>:                         }</div><div class="line"><span class="number">155</span>:                     }</div><div class="line"><span class="number">156</span>:                     <span class="comment">// &#x8D85;&#x8FC7;&#x6302;&#x8D77;&#x65F6;&#x95F4;&#xFF0C;&#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</span></div><div class="line"><span class="number">157</span>:                     <span class="keyword">if</span> (System.currentTimeMillis() &gt;= (request.getSuspendTimestamp() + request.getTimeoutMillis())) {</div><div class="line"><span class="number">158</span>:                         <span class="keyword">try</span> {</div><div class="line"><span class="number">159</span>:                             <span class="keyword">this</span>.brokerController.getPullMessageProcessor().executeRequestWhenWakeup(request.getClientChannel(),</div><div class="line"><span class="number">160</span>:                                 request.getRequestCommand());</div><div class="line"><span class="number">161</span>:                         } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">162</span>:                             log.error(<span class="string">&quot;execute request when wakeup failed.&quot;</span>, e);</div><div class="line"><span class="number">163</span>:                         }</div><div class="line"><span class="number">164</span>:                         <span class="keyword">continue</span>;</div><div class="line"><span class="number">165</span>:                     }</div><div class="line"><span class="number">166</span>:                     <span class="comment">// &#x4E0D;&#x7B26;&#x5408;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x518D;&#x6B21;&#x6DFB;&#x52A0;&#x56DE;&#x53BB;</span></div><div class="line"><span class="number">167</span>:                     replayList.add(request);</div><div class="line"><span class="number">168</span>:                 }</div><div class="line"><span class="number">169</span>:                 <span class="comment">// &#x6DFB;&#x52A0;&#x56DE;&#x53BB;</span></div><div class="line"><span class="number">170</span>:                 <span class="keyword">if</span> (!replayList.isEmpty()) {</div><div class="line"><span class="number">171</span>:                     mpr.addPullRequest(replayList);</div><div class="line"><span class="number">172</span>:                 }</div><div class="line"><span class="number">173</span>:             }</div><div class="line"><span class="number">174</span>:         }</div><div class="line"><span class="number">175</span>:     }</div><div class="line"><span class="number">176</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>PullRequestHoldService</code> &#x8BF4;&#x660E; &#xFF1A;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x6302;&#x8D77;&#x7EF4;&#x62A4;&#x7EBF;&#x7A0B;&#x670D;&#x52A1;&#x3002;<ul>
<li>&#x5F53;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x83B7;&#x5F97;&#x4E0D;&#x4E86;&#x6D88;&#x606F;&#x65F6;&#xFF0C;&#x5219;&#x4F1A;&#x5C06;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x6302;&#x8D77;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;&#x8BE5;&#x670D;&#x52A1;&#x3002;</li>
<li>&#x5F53;&#x6709;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x4FE1;&#x606F;&#x65F6; &#x6216; &#x6302;&#x8D77;&#x8D85;&#x65F6;&#x65F6;&#xFF0C;&#x91CD;&#x65B0;&#x6267;&#x884C;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x903B;&#x8F91;&#x3002;</li>
</ul>
</li>
<li><code>#suspendPullRequest(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x6DFB;&#x52A0;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x5230;&#x96C6;&#x5408;( <code>pullRequestTable</code> )&#x3002;</li>
<li><code>#run(...)</code> &#x8BF4;&#x660E; &#xFF1A;<strong>&#x5B9A;&#x65F6;</strong>&#x68C0;&#x67E5;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x91CD;&#x65B0;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x5E76;&#x8FDB;&#x884C;&#x901A;&#x77E5;&#x3002;<ul>
<li>&#x7B2C; 65 &#x81F3; 70 &#x884C; &#xFF1A;&#x6839;&#x636E;<code>&#x957F;&#x8F6E;&#x8BAD;</code>or<code>&#x77ED;&#x8F6E;&#x8BAD;</code>&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x3002;</li>
<li>&#x7B2C; 71 &#x81F3; 77 &#x884C; &#xFF1A;&#x68C0;&#x67E5;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x3002;</li>
</ul>
</li>
<li><code>#checkHoldRequest(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x904D;&#x5386;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x3002;</li>
<li><code>#notifyMessageArriving(...)</code> &#x8BF4;&#x660E; &#xFF1A;&#x68C0;&#x67E5;<strong>&#x6307;&#x5B9A;&#x961F;&#x5217;</strong>&#x662F;&#x5426;&#x6709;&#x9700;&#x8981;&#x901A;&#x77E5;&#x7684;&#x8BF7;&#x6C42;&#x3002;<ul>
<li>&#x7B2C; 139 &#x81F3; 143 &#x884C; &#xFF1A;&#x5982;&#x679C; <code>maxOffset</code> &#x8FC7;&#x5C0F;&#xFF0C;&#x91CD;&#x65B0;&#x83B7;&#x53D6;&#x4E00;&#x6B21;&#x6700;&#x65B0;&#x7684;&#x3002;</li>
<li>&#x7B2C; 144 &#x81F3; 155 &#x884C; &#xFF1A;&#x6709;&#x65B0;&#x7684;&#x5339;&#x914D;&#x6D88;&#x606F;&#xFF0C;&#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 156 &#x81F3; 165 &#x884C; &#xFF1A;&#x8D85;&#x8FC7;&#x6302;&#x8D77;&#x65F6;&#x95F4;&#xFF0C;&#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x5373;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;</li>
<li>&#x7B2C; 148 || 159 &#x884C; &#xFF1A;&#x5524;&#x9192;&#x8BF7;&#x6C42;&#xFF0C;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;&#x539F;&#x5148;&#x62C5;&#x5FC3;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x65F6;&#x95F4;&#x8FC7;&#x957F;&#xFF0C;&#x5BFC;&#x81F4;&#x5F71;&#x54CD;&#x6574;&#x4E2A;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x540E;&#x9762;&#x67E5;&#x770B;<code>#executeRequestWhenWakeup(...)</code>&#xFF0C;&#x5B9E;&#x9645;&#x662F;&#x4E22;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;&#x8FDB;&#x884C;&#x4E00;&#x6B65;&#x7684;&#x6D88;&#x606F;&#x62C9;&#x53D6;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x6027;&#x80FD;&#x4E0A;&#x7684;&#x95EE;&#x9898;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="pullmessageprocessorexecuterequestwhenwakeup">PullMessageProcessor#executeRequestWhenWakeup(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 166 &#x81F3; 172 &#x884C; &#xFF1A;&#x4E0D;&#x7B26;&#x5408;&#x5524;&#x9192;&#x7684;&#x8BF7;&#x6C42;&#x91CD;&#x65B0;&#x6DFB;&#x52A0;&#x5230;&#x96C6;&#x5408;(<code>pullRequestTable</code>)&#x3002;</li>
</ul>
</li>
</ul>
<h2 id="PullMessageProcessor-executeRequestWhenWakeup-&#x2026;"><a href="#PullMessageProcessor-executeRequestWhenWakeup-&#x2026;" class="headerlink" title="PullMessageProcessor#executeRequestWhenWakeup(&#x2026;)"></a>PullMessageProcessor#executeRequestWhenWakeup(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">executeRequestWhenWakeup</span><span class="params">(<span class="keyword">final</span> Channel channel, <span class="keyword">final</span> RemotingCommand request)</span> <span class="keyword">throws</span> RemotingCommandException </span>{</div><div class="line"> <span class="number">2</span>:     Runnable run = <span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">3</span>:         <span class="meta">@Override</span></div><div class="line"> <span class="number">4</span>:         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">5</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">6</span>:                 <span class="comment">// &#x8C03;&#x7528;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x3002;&#x672C;&#x6B21;&#x8C03;&#x7528;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E0D;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x3002;</span></div><div class="line"> <span class="number">7</span>:                 <span class="keyword">final</span> RemotingCommand response = PullMessageProcessor.<span class="keyword">this</span>.processRequest(channel, request, <span class="keyword">false</span>);</div><div class="line"> <span class="number">8</span>: </div><div class="line"> <span class="number">9</span>:                 <span class="keyword">if</span> (response != <span class="keyword">null</span>) {</div><div class="line"><span class="number">10</span>:                     response.setOpaque(request.getOpaque());</div><div class="line"><span class="number">11</span>:                     response.markResponseType();</div><div class="line"><span class="number">12</span>:                     <span class="keyword">try</span> {</div><div class="line"><span class="number">13</span>:                         channel.writeAndFlush(response).addListener(<span class="keyword">new</span> ChannelFutureListener() {</div><div class="line"><span class="number">14</span>:                             <span class="meta">@Override</span></div><div class="line"><span class="number">15</span>:                             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operationComplete</span><span class="params">(ChannelFuture future)</span> <span class="keyword">throws</span> Exception </span>{</div><div class="line"><span class="number">16</span>:                                 <span class="keyword">if</span> (!future.isSuccess()) {</div><div class="line"><span class="number">17</span>:                                     LOG.error(<span class="string">&quot;ProcessRequestWrapper response to {} failed&quot;</span>, future.channel().remoteAddress(), future.cause());</div><div class="line"><span class="number">18</span>:                                     LOG.error(request.toString());</div><div class="line"><span class="number">19</span>:                                     LOG.error(response.toString());</div><div class="line"><span class="number">20</span>:                                 }</div><div class="line"><span class="number">21</span>:                             }</div><div class="line"><span class="number">22</span>:                         });</div><div class="line"><span class="number">23</span>:                     } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">24</span>:                         LOG.error(<span class="string">&quot;ProcessRequestWrapper process request over, but response failed&quot;</span>, e);</div><div class="line"><span class="number">25</span>:                         LOG.error(request.toString());</div><div class="line"><span class="number">26</span>:                         LOG.error(response.toString());</div><div class="line"><span class="number">27</span>:                     }</div><div class="line"><span class="number">28</span>:                 }</div><div class="line"><span class="number">29</span>:             } <span class="keyword">catch</span> (RemotingCommandException e1) {</div><div class="line"><span class="number">30</span>:                 LOG.error(<span class="string">&quot;ExecuteRequestWhenWakeup run&quot;</span>, e1);</div><div class="line"><span class="number">31</span>:             }</div><div class="line"><span class="number">32</span>:         }</div><div class="line"><span class="number">33</span>:     };</div><div class="line"><span class="number">34</span>:     <span class="comment">// &#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x8BF7;&#x6C42;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;</span></div><div class="line"><span class="number">35</span>:     <span class="keyword">this</span>.brokerController.getPullMessageExecutor().submit(<span class="keyword">new</span> RequestTask(run, channel, request));</div><div class="line"><span class="number">36</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6267;&#x884C;&#x8BF7;&#x6C42;&#x5524;&#x9192;&#xFF0C;&#x5373;&#x518D;&#x6B21;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4E0D;&#x4F1A;&#x963B;&#x585E;&#x3002;</li>
<li>&#x7B2C; 7 &#x884C; &#xFF1A;&#x8C03;&#x7528;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x3002;&#x672C;&#x6B21;&#x8C03;&#x7528;&#xFF0C;&#x8BBE;&#x7F6E;&#x5373;&#x4F7F;&#x8BF7;&#x6C42;&#x4E0D;&#x5230;&#x6D88;&#x606F;&#xFF0C;&#x4E5F;&#x4E0D;&#x6302;&#x8D77;&#x8BF7;&#x6C42;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x8BBE;&#x7F6E;&#xFF0C;&#x8BF7;&#x6C42;&#x53EF;&#x80FD;&#x88AB;&#x65E0;&#x9650;&#x6302;&#x8D77;&#xFF0C;&#x88AB; <code>Broker</code> &#x65E0;&#x9650;&#x5FAA;&#x73AF;&#x3002;</li>
<li>&#x7B2C; 35 &#x884C; &#xFF1A;<strong>&#x63D0;&#x4EA4;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x8BF7;&#x6C42;&#x5230;&#x7EBF;&#x7A0B;&#x6C60;</strong>&#x3002;</li>
</ul>
<h1 id="5&#x3001;Broker-&#x63D0;&#x4F9B;-&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;-&#x63A5;&#x53E3;"><a href="#5&#x3001;Broker-&#x63D0;&#x4F9B;-&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;-&#x63A5;&#x53E3;" class="headerlink" title="5&#x3001;Broker &#x63D0;&#x4F9B;[&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;]&#x63A5;&#x53E3;"></a>5&#x3001;Broker &#x63D0;&#x4F9B;[&#x66F4;&#x65B0;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;]&#x63A5;&#x53E3;</h1><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">Yunai-MacdeMacBook-Pro-2:config yunai$ <span class="built_in">pwd</span></div><div class="line">/Users/yunai/store/config</div><div class="line">Yunai-MacdeMacBook-Pro-2:config yunai$ ls -ls</div><div class="line">total 40</div><div class="line">8 -rw-r--r--  1 yunai  staff    21  4 28 16:58 consumerOffset.json</div><div class="line">8 -rw-r--r--  1 yunai  staff    21  4 28 16:58 consumerOffset.json.bak</div><div class="line">8 -rw-r--r--  1 yunai  staff    21  4 28 16:58 delayOffset.json</div><div class="line">8 -rw-r--r--  1 yunai  staff    21  4 28 16:58 delayOffset.json.bak</div><div class="line">8 -rw-r--r--  1 yunai  staff  1401  4 27 21:51 topics.json</div><div class="line">Yunai-MacdeMacBook-Pro-2:config yunai$ cat consumerOffset.json</div><div class="line">{</div><div class="line">	<span class="string">&quot;offsetTable&quot;</span>:{</div><div class="line">		<span class="string">&quot;%RETRY%please_rename_unique_group_name_4@please_rename_unique_group_name_4&quot;</span>:{0:0</div><div class="line">		},</div><div class="line">		<span class="string">&quot;TopicRead3@please_rename_unique_group_name_4&quot;</span>:{1:5</div><div class="line">		}</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>
<ul class="ui list">
<li><code>consumerOffset.json</code> &#xFF1A;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5B58;&#x50A8;&#x6587;&#x4EF6;&#x3002;</li>
<li><code>consumerOffset.json.bak</code> &#xFF1A;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x5B58;&#x50A8;&#x6587;&#x4EF6;&#x5907;&#x4EFD;&#x3002;</li>
<li>&#x6BCF;&#x6B21;&#x5199;&#x5165; <code>consumerOffset.json</code>&#xFF0C;&#x5C06;&#x539F;&#x5185;&#x5BB9;&#x5907;&#x4EFD;&#x5230; <code>consumerOffset.json.bak</code>&#x3002;&#x5B9E;&#x73B0;&#x89C1;&#xFF1A;<a href="mixallstring2file">MixAll#string2File(&#x2026;)</a>&#x3002;</li>
</ul>
<h2 id="BrokerController-initialize-&#x2026;"><a href="#BrokerController-initialize-&#x2026;" class="headerlink" title="BrokerController#initialize(&#x2026;)"></a>BrokerController#initialize(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>:<span class="keyword">this</span>.scheduledExecutorService.scheduleAtFixedRate(<span class="keyword">new</span> Runnable() {</div><div class="line"> <span class="number">2</span>:    <span class="meta">@Override</span></div><div class="line"> <span class="number">3</span>:    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">4</span>:        <span class="keyword">try</span> {</div><div class="line"> <span class="number">5</span>:            BrokerController.<span class="keyword">this</span>.consumerOffsetManager.persist();</div><div class="line"> <span class="number">6</span>:        } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"> <span class="number">7</span>:            log.error(<span class="string">&quot;schedule persist consumerOffset error.&quot;</span>, e);</div><div class="line"> <span class="number">8</span>:        }</div><div class="line"> <span class="number">9</span>:    }</div><div class="line"><span class="number">10</span>:}, <span class="number">1000</span> * <span class="number">10</span>, <span class="keyword">this</span>.brokerConfig.getFlushConsumerOffsetInterval(), TimeUnit.MILLISECONDS);</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6BCF; 5s &#x6267;&#x884C;&#x4E00;&#x6B21;&#x6301;&#x4E45;&#x5316;&#x903B;&#x8F91;&#x3002;</li>
</ul>
<h2 id="ConfigManager"><a href="#ConfigManager" class="headerlink" title="ConfigManager"></a>ConfigManager</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigManager</span> </span>{</div><div class="line"> <span class="number">2</span>: <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger PLOG = LoggerFactory.getLogger(LoggerName.COMMON_LOGGER_NAME);</div><div class="line"> <span class="number">3</span>: </div><div class="line"> <span class="number">4</span>: <span class="comment">/**</span></div><div class="line"> 5:  * &#x7F16;&#x7801;&#x5185;&#x5BB9;</div><div class="line"> 6:  * <span class="doctag">@return</span> &#x7F16;&#x7801;&#x540E;&#x7684;&#x5185;&#x5BB9;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">encode</span><span class="params">()</span></span>;</div><div class="line"> <span class="number">9</span>: </div><div class="line"><span class="number">10</span>: <span class="comment">/**</span></div><div class="line">11:  * &#x52A0;&#x8F7D;&#x6587;&#x4EF6;</div><div class="line">12:  *</div><div class="line">13:  * <span class="doctag">@return</span> &#x52A0;&#x8F7D;&#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line">14:  */</div><div class="line"><span class="number">15</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">load</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">16</span>:     String fileName = <span class="keyword">null</span>;</div><div class="line"><span class="number">17</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">18</span>:         fileName = <span class="keyword">this</span>.configFilePath();</div><div class="line"><span class="number">19</span>:         String jsonString = MixAll.file2String(fileName);</div><div class="line"><span class="number">20</span>:         <span class="comment">// &#x5982;&#x679C;&#x5185;&#x5BB9;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x52A0;&#x8F7D;&#x5907;&#x4EFD;&#x6587;&#x4EF6;</span></div><div class="line"><span class="number">21</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == jsonString || jsonString.length() == <span class="number">0</span>) {</div><div class="line"><span class="number">22</span>:             <span class="keyword">return</span> <span class="keyword">this</span>.loadBak();</div><div class="line"><span class="number">23</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">24</span>:             <span class="keyword">this</span>.decode(jsonString);</div><div class="line"><span class="number">25</span>:             PLOG.info(<span class="string">&quot;load {} OK&quot;</span>, fileName);</div><div class="line"><span class="number">26</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">27</span>:         }</div><div class="line"><span class="number">28</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">29</span>:         PLOG.error(<span class="string">&quot;load &quot;</span> + fileName + <span class="string">&quot; Failed, and try to load backup file&quot;</span>, e);</div><div class="line"><span class="number">30</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.loadBak();</div><div class="line"><span class="number">31</span>:     }</div><div class="line"><span class="number">32</span>: }</div><div class="line"><span class="number">33</span>: </div><div class="line"><span class="number">34</span>: <span class="comment">/**</span></div><div class="line">35:  * &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5730;&#x5740;</div><div class="line">36:  *</div><div class="line">37:  * <span class="doctag">@return</span> &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5730;&#x5740;</div><div class="line">38:  */</div><div class="line"><span class="number">39</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">configFilePath</span><span class="params">()</span></span>;</div><div class="line"><span class="number">40</span>: </div><div class="line"><span class="number">41</span>: <span class="comment">/**</span></div><div class="line">42:  * &#x52A0;&#x8F7D;&#x5907;&#x4EFD;&#x6587;&#x4EF6;</div><div class="line">43:  *</div><div class="line">44:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x6210;&#x529F;</div><div class="line">45:  */</div><div class="line"><span class="number">46</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">loadBak</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">47</span>:     String fileName = <span class="keyword">null</span>;</div><div class="line"><span class="number">48</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">49</span>:         fileName = <span class="keyword">this</span>.configFilePath();</div><div class="line"><span class="number">50</span>:         String jsonString = MixAll.file2String(fileName + <span class="string">&quot;.bak&quot;</span>);</div><div class="line"><span class="number">51</span>:         <span class="keyword">if</span> (jsonString != <span class="keyword">null</span> &amp;&amp; jsonString.length() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">52</span>:             <span class="keyword">this</span>.decode(jsonString);</div><div class="line"><span class="number">53</span>:             PLOG.info(<span class="string">&quot;load &quot;</span> + fileName + <span class="string">&quot; OK&quot;</span>);</div><div class="line"><span class="number">54</span>:             <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">55</span>:         }</div><div class="line"><span class="number">56</span>:     } <span class="keyword">catch</span> (Exception e) {</div><div class="line"><span class="number">57</span>:         PLOG.error(<span class="string">&quot;load &quot;</span> + fileName + <span class="string">&quot; Failed&quot;</span>, e);</div><div class="line"><span class="number">58</span>:         <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"><span class="number">59</span>:     }</div><div class="line"><span class="number">60</span>: </div><div class="line"><span class="number">61</span>:     <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">62</span>: }</div><div class="line"><span class="number">63</span>: </div><div class="line"><span class="number">64</span>: <span class="comment">/**</span></div><div class="line">65:  * &#x89E3;&#x7801;&#x5185;&#x5BB9;</div><div class="line">66:  *</div><div class="line">67:  * <span class="doctag">@param</span> jsonString &#x5185;&#x5BB9;</div><div class="line">68:  */</div><div class="line"><span class="number">69</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(<span class="keyword">final</span> String jsonString)</span></span>;</div><div class="line"><span class="number">70</span>: </div><div class="line"><span class="number">71</span>: <span class="comment">/**</span></div><div class="line">72:  * &#x6301;&#x4E45;&#x5316;</div><div class="line">73:  */</div><div class="line"><span class="number">74</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">persist</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">75</span>:     String jsonString = <span class="keyword">this</span>.encode(<span class="keyword">true</span>);</div><div class="line"><span class="number">76</span>:     <span class="keyword">if</span> (jsonString != <span class="keyword">null</span>) {</div><div class="line"><span class="number">77</span>:         String fileName = <span class="keyword">this</span>.configFilePath();</div><div class="line"><span class="number">78</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">79</span>:             MixAll.string2File(jsonString, fileName);</div><div class="line"><span class="number">80</span>:         } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">81</span>:             PLOG.error(<span class="string">&quot;persist file Exception, &quot;</span> + fileName, e);</div><div class="line"><span class="number">82</span>:         }</div><div class="line"><span class="number">83</span>:     }</div><div class="line"><span class="number">84</span>: }</div><div class="line"><span class="number">85</span>: </div><div class="line"><span class="number">86</span>: <span class="comment">/**</span></div><div class="line">87:  * &#x7F16;&#x7801;&#x5B58;&#x50A8;&#x5185;&#x5BB9;</div><div class="line">88:  *</div><div class="line">89:  * <span class="doctag">@param</span> prettyFormat &#x662F;&#x5426;&#x683C;&#x5F0F;&#x5316;</div><div class="line">90:  * <span class="doctag">@return</span> &#x5185;&#x5BB9;</div><div class="line">91:  */</div><div class="line"><span class="number">92</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">encode</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> prettyFormat)</span></span>;</div><div class="line"><span class="number">93</span>: }</div></pre></td></tr></table></figure>
<h3 id="MixAll-string2File-&#x2026;"><a href="#MixAll-string2File-&#x2026;" class="headerlink" title="MixAll#string2File(&#x2026;)"></a>MixAll#string2File(&#x2026;)</h3><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * &#x5C06;&#x5185;&#x5BB9;&#x5199;&#x5230;&#x6587;&#x4EF6;</div><div class="line"> 3:  * &#x5B89;&#x5168;&#x5199;</div><div class="line"> 4:  * 1. &#x5199;&#x5230;.tmp&#x6587;&#x4EF6;</div><div class="line"> 5:  * 2. &#x5907;&#x4EFD;&#x51C6;&#x5907;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x5230;.bak&#x6587;&#x4EF6;</div><div class="line"> 6:  * 3. &#x5220;&#x9664;&#x539F;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;.tmp&#x4FEE;&#x6539;&#x6210;&#x6587;&#x4EF6;</div><div class="line"> 7:  *</div><div class="line"> 8:  * <span class="doctag">@param</span> str &#x5185;&#x5BB9;</div><div class="line"> 9:  * <span class="doctag">@param</span> fileName &#x6587;&#x4EF6;&#x540D;</div><div class="line">10:  * <span class="doctag">@throws</span> IOException &#x5F53;IO&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">11:  */</div><div class="line"><span class="number">12</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">string2File</span><span class="params">(<span class="keyword">final</span> String str, <span class="keyword">final</span> String fileName)</span> <span class="keyword">throws</span> IOException </span>{</div><div class="line"><span class="number">13</span>:     <span class="comment">// &#x5199;&#x5230; tmp&#x6587;&#x4EF6;</span></div><div class="line"><span class="number">14</span>:     String tmpFile = fileName + <span class="string">&quot;.tmp&quot;</span>;</div><div class="line"><span class="number">15</span>:     string2FileNotSafe(str, tmpFile);</div><div class="line"><span class="number">16</span>:     <span class="comment">//</span></div><div class="line"><span class="number">17</span>:     String bakFile = fileName + <span class="string">&quot;.bak&quot;</span>;</div><div class="line"><span class="number">18</span>:     String prevContent = file2String(fileName);</div><div class="line"><span class="number">19</span>:     <span class="keyword">if</span> (prevContent != <span class="keyword">null</span>) {</div><div class="line"><span class="number">20</span>:         string2FileNotSafe(prevContent, bakFile);</div><div class="line"><span class="number">21</span>:     }</div><div class="line"><span class="number">22</span>: </div><div class="line"><span class="number">23</span>:     File file = <span class="keyword">new</span> File(fileName);</div><div class="line"><span class="number">24</span>:     file.delete();</div><div class="line"><span class="number">25</span>: </div><div class="line"><span class="number">26</span>:     file = <span class="keyword">new</span> File(tmpFile);</div><div class="line"><span class="number">27</span>:     file.renameTo(<span class="keyword">new</span> File(fileName));</div><div class="line"><span class="number">28</span>: }</div><div class="line"><span class="number">29</span>: </div><div class="line"><span class="number">30</span>: <span class="comment">/**</span></div><div class="line">31:  * &#x5C06;&#x5185;&#x5BB9;&#x5199;&#x5230;&#x6587;&#x4EF6;</div><div class="line">32:  * &#x975E;&#x5B89;&#x5168;&#x5199;</div><div class="line">33:  *</div><div class="line">34:  * <span class="doctag">@param</span> str &#x5185;&#x5BB9;</div><div class="line">35:  * <span class="doctag">@param</span> fileName &#x6587;&#x4EF6;&#x5185;&#x5BB9;</div><div class="line">36:  * <span class="doctag">@throws</span> IOException &#x5F53;IO&#x53D1;&#x751F;&#x5F02;&#x5E38;&#x65F6;</div><div class="line">37:  */</div><div class="line"><span class="number">38</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">string2FileNotSafe</span><span class="params">(<span class="keyword">final</span> String str, <span class="keyword">final</span> String fileName)</span> <span class="keyword">throws</span> IOException </span>{</div><div class="line"><span class="number">39</span>:     File file = <span class="keyword">new</span> File(fileName);</div><div class="line"><span class="number">40</span>:     <span class="comment">// &#x521B;&#x5EFA;&#x4E0A;&#x7EA7;&#x76EE;&#x5F55;</span></div><div class="line"><span class="number">41</span>:     File fileParent = file.getParentFile();</div><div class="line"><span class="number">42</span>:     <span class="keyword">if</span> (fileParent != <span class="keyword">null</span>) {</div><div class="line"><span class="number">43</span>:         fileParent.mkdirs();</div><div class="line"><span class="number">44</span>:     }</div><div class="line"><span class="number">45</span>:     <span class="comment">// &#x5199;&#x5185;&#x5BB9;</span></div><div class="line"><span class="number">46</span>:     FileWriter fileWriter = <span class="keyword">null</span>;</div><div class="line"><span class="number">47</span>:     <span class="keyword">try</span> {</div><div class="line"><span class="number">48</span>:         fileWriter = <span class="keyword">new</span> FileWriter(file);</div><div class="line"><span class="number">49</span>:         fileWriter.write(str);</div><div class="line"><span class="number">50</span>:     } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">51</span>:         <span class="keyword">throw</span> e;</div><div class="line"><span class="number">52</span>:     } <span class="keyword">finally</span> {</div><div class="line"><span class="number">53</span>:         <span class="keyword">if</span> (fileWriter != <span class="keyword">null</span>) {</div><div class="line"><span class="number">54</span>:             fileWriter.close();</div><div class="line"><span class="number">55</span>:         }</div><div class="line"><span class="number">56</span>:     }</div><div class="line"><span class="number">57</span>: }</div></pre></td></tr></table></figure>
<h2 id="ConsumerOffsetManager"><a href="#ConsumerOffsetManager" class="headerlink" title="ConsumerOffsetManager"></a>ConsumerOffsetManager</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerOffsetManager</span> <span class="keyword">extends</span> <span class="title">ConfigManager</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(LoggerName.BROKER_LOGGER_NAME);</div><div class="line"> <span class="number">3</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOPIC_GROUP_SEPARATOR = <span class="string">&quot;@&quot;</span>;</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="comment">/**</span></div><div class="line"> 6:      * &#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x96C6;&#x5408;</div><div class="line"> 7:      */</div><div class="line"> <span class="number">8</span>:     <span class="keyword">private</span> ConcurrentHashMap&lt;String<span class="comment">/* topic@group */</span>, ConcurrentHashMap&lt;Integer, Long&gt;&gt; offsetTable = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">512</span>);</div><div class="line"> <span class="number">9</span>: </div><div class="line"><span class="number">10</span>:     <span class="keyword">private</span> <span class="keyword">transient</span> BrokerController brokerController;</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>:     <span class="function"><span class="keyword">public</span> <span class="title">ConsumerOffsetManager</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">13</span>:     }</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:     <span class="function"><span class="keyword">public</span> <span class="title">ConsumerOffsetManager</span><span class="params">(BrokerController brokerController)</span> </span>{</div><div class="line"><span class="number">16</span>:         <span class="keyword">this</span>.brokerController = brokerController;</div><div class="line"><span class="number">17</span>:     }</div><div class="line"><span class="number">18</span>: </div><div class="line"><span class="number">19</span>:     <span class="comment">/**</span></div><div class="line">20:      * &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line">21:      *</div><div class="line">22:      * <span class="doctag">@param</span> clientHost &#x63D0;&#x4EA4;client&#x5730;&#x5740;</div><div class="line">23:      * <span class="doctag">@param</span> group &#x6D88;&#x8D39;&#x5206;&#x7EC4;</div><div class="line">24:      * <span class="doctag">@param</span> topic &#x4E3B;&#x9898;</div><div class="line">25:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">26:      * <span class="doctag">@param</span> offset &#x8FDB;&#x5EA6;&#xFF08;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF09;</div><div class="line">27:      */</div><div class="line"><span class="number">28</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commitOffset</span><span class="params">(<span class="keyword">final</span> String clientHost, <span class="keyword">final</span> String group, <span class="keyword">final</span> String topic, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> <span class="keyword">long</span> offset)</span> </span>{</div><div class="line"><span class="number">29</span>:         <span class="comment">// topic@group</span></div><div class="line"><span class="number">30</span>:         String key = topic + TOPIC_GROUP_SEPARATOR + group;</div><div class="line"><span class="number">31</span>:         <span class="keyword">this</span>.commitOffset(clientHost, key, queueId, offset);</div><div class="line"><span class="number">32</span>:     }</div><div class="line"><span class="number">33</span>: </div><div class="line"><span class="number">34</span>:     <span class="comment">/**</span></div><div class="line">35:      * &#x63D0;&#x4EA4;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;</div><div class="line">36:      *</div><div class="line">37:      * <span class="doctag">@param</span> clientHost &#x63D0;&#x4EA4;client&#x5730;&#x5740;</div><div class="line">38:      * <span class="doctag">@param</span> key &#x4E3B;&#x9898;@&#x6D88;&#x8D39;&#x5206;&#x7EC4;</div><div class="line">39:      * <span class="doctag">@param</span> queueId &#x961F;&#x5217;&#x7F16;&#x53F7;</div><div class="line">40:      * <span class="doctag">@param</span> offset &#x8FDB;&#x5EA6;&#xFF08;&#x961F;&#x5217;&#x4F4D;&#x7F6E;&#xFF09;</div><div class="line">41:      */</div><div class="line"><span class="number">42</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">commitOffset</span><span class="params">(<span class="keyword">final</span> String clientHost, <span class="keyword">final</span> String key, <span class="keyword">final</span> <span class="keyword">int</span> queueId, <span class="keyword">final</span> <span class="keyword">long</span> offset)</span> </span>{</div><div class="line"><span class="number">43</span>:         ConcurrentHashMap&lt;Integer, Long&gt; map = <span class="keyword">this</span>.offsetTable.get(key);</div><div class="line"><span class="number">44</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == map) {</div><div class="line"><span class="number">45</span>:             map = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">32</span>);</div><div class="line"><span class="number">46</span>:             map.put(queueId, offset);</div><div class="line"><span class="number">47</span>:             <span class="keyword">this</span>.offsetTable.put(key, map);</div><div class="line"><span class="number">48</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">49</span>:             Long storeOffset = map.put(queueId, offset);</div><div class="line"><span class="number">50</span>:             <span class="keyword">if</span> (storeOffset != <span class="keyword">null</span> &amp;&amp; offset &lt; storeOffset) {</div><div class="line"><span class="number">51</span>:                 log.warn(<span class="string">&quot;[NOTIFYME]update consumer offset less than store. clientHost={}, key={}, queueId={}, requestOffset={}, storeOffset={}&quot;</span>, clientHost, key, queueId, offset, storeOffset);</div><div class="line"><span class="number">52</span>:             }</div><div class="line"><span class="number">53</span>:         }</div><div class="line"><span class="number">54</span>:     }</div><div class="line"><span class="number">55</span>: </div><div class="line"><span class="number">56</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">encode</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">57</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.encode(<span class="keyword">false</span>);</div><div class="line"><span class="number">58</span>:     }</div><div class="line"><span class="number">59</span>: </div><div class="line"><span class="number">60</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">61</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">configFilePath</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">62</span>:         <span class="keyword">return</span> BrokerPathConfigHelper.getConsumerOffsetPath(<span class="keyword">this</span>.brokerController.getMessageStoreConfig().getStorePathRootDir());</div><div class="line"><span class="number">63</span>:     }</div><div class="line"><span class="number">64</span>: </div><div class="line"><span class="number">65</span>:     <span class="comment">/**</span></div><div class="line">66:      * &#x89E3;&#x7801;&#x5185;&#x5BB9;</div><div class="line">67:      * &#x683C;&#x5F0F;:JSON</div><div class="line">68:      *</div><div class="line">69:      * <span class="doctag">@param</span> jsonString &#x5185;&#x5BB9;</div><div class="line">70:      */</div><div class="line"><span class="number">71</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">72</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(String jsonString)</span> </span>{</div><div class="line"><span class="number">73</span>:         <span class="keyword">if</span> (jsonString != <span class="keyword">null</span>) {</div><div class="line"><span class="number">74</span>:             ConsumerOffsetManager obj = RemotingSerializable.fromJson(jsonString, ConsumerOffsetManager.class);</div><div class="line"><span class="number">75</span>:             <span class="keyword">if</span> (obj != <span class="keyword">null</span>) {</div><div class="line"><span class="number">76</span>:                 <span class="keyword">this</span>.offsetTable = obj.offsetTable;</div><div class="line"><span class="number">77</span>:             }</div><div class="line"><span class="number">78</span>:         }</div><div class="line"><span class="number">79</span>:     }</div><div class="line"><span class="number">80</span>: </div><div class="line"><span class="number">81</span>:     <span class="comment">/**</span></div><div class="line">82:      * &#x7F16;&#x7801;&#x5185;&#x5BB9;</div><div class="line">83:      * &#x683C;&#x5F0F;&#x4E3A;JSON</div><div class="line">84:      *</div><div class="line">85:      * <span class="doctag">@param</span> prettyFormat &#x662F;&#x5426;&#x683C;&#x5F0F;&#x5316;</div><div class="line">86:      * <span class="doctag">@return</span> &#x7F16;&#x7801;&#x540E;&#x7684;&#x5185;&#x5BB9;</div><div class="line">87:      */</div><div class="line"><span class="number">88</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">encode</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> prettyFormat)</span> </span>{</div><div class="line"><span class="number">89</span>:         <span class="keyword">return</span> RemotingSerializable.toJson(<span class="keyword">this</span>, prettyFormat);</div><div class="line"><span class="number">90</span>:     }</div><div class="line"><span class="number">91</span>: </div><div class="line"><span class="number">92</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x6D88;&#x8D39;&#x8FDB;&#x5EA6;&#x7BA1;&#x7406;&#x5668;&#x3002;</li>
</ul>
<h1 id="6&#x3001;Broker-&#x63D0;&#x4F9B;-&#x53D1;&#x56DE;&#x6D88;&#x606F;-&#x63A5;&#x53E3;"><a href="#6&#x3001;Broker-&#x63D0;&#x4F9B;-&#x53D1;&#x56DE;&#x6D88;&#x606F;-&#x63A5;&#x53E3;" class="headerlink" title="6&#x3001;Broker &#x63D0;&#x4F9B;[&#x53D1;&#x56DE;&#x6D88;&#x606F;]&#x63A5;&#x53E3;"></a>6&#x3001;Broker &#x63D0;&#x4F9B;[&#x53D1;&#x56DE;&#x6D88;&#x606F;]&#x63A5;&#x53E3;</h1><p>&#x5927;&#x90E8;&#x5206;&#x903B;&#x8F91;&#x548C; <a href="http://www.yunai.me/RocketMQ/message-send-and-receive/#3&#x3001;Broker-&#x63A5;&#x6536;&#x6D88;&#x606F;"><code>Broker</code> &#x63D0;&#x4F9B;[&#x63A5;&#x6536;&#x6D88;&#x606F;]&#x63A5;&#x53E3;</a> &#x7C7B;&#x4F3C;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x770B;&#x4E0B;&#x76F8;&#x5173;&#x5185;&#x5BB9;&#x3002;</p>
<h2 id="SendMessageProcessor-consumerSendMsgBack-&#x2026;"><a href="#SendMessageProcessor-consumerSendMsgBack-&#x2026;" class="headerlink" title="SendMessageProcessor#consumerSendMsgBack(&#x2026;)"></a>SendMessageProcessor#consumerSendMsgBack(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="function"><span class="keyword">private</span> RemotingCommand <span class="title">consumerSendMsgBack</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx, <span class="keyword">final</span> RemotingCommand request)</span></span></div><div class="line">  2:     <span class="keyword">throws</span> RemotingCommandException {</div><div class="line">  <span class="number">3</span>: </div><div class="line">  <span class="number">4</span>:     <span class="comment">// &#x521D;&#x59CB;&#x5316;&#x54CD;&#x5E94;</span></div><div class="line">  <span class="number">5</span>:     <span class="keyword">final</span> RemotingCommand response = RemotingCommand.createResponseCommand(<span class="keyword">null</span>);</div><div class="line">  <span class="number">6</span>:     <span class="keyword">final</span> ConsumerSendMsgBackRequestHeader requestHeader =</div><div class="line">  <span class="number">7</span>:         (ConsumerSendMsgBackRequestHeader) request.decodeCommandCustomHeader(ConsumerSendMsgBackRequestHeader.class);</div><div class="line">  <span class="number">8</span>: </div><div class="line">  <span class="number">9</span>:     <span class="comment">// hook&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">10</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.hasConsumeMessageHook() &amp;&amp; !UtilAll.isBlank(requestHeader.getOriginMsgId())) {</div><div class="line"> <span class="number">11</span>: </div><div class="line"> <span class="number">12</span>:         ConsumeMessageContext context = <span class="keyword">new</span> ConsumeMessageContext();</div><div class="line"> <span class="number">13</span>:         context.setConsumerGroup(requestHeader.getGroup());</div><div class="line"> <span class="number">14</span>:         context.setTopic(requestHeader.getOriginTopic());</div><div class="line"> <span class="number">15</span>:         context.setCommercialRcvStats(BrokerStatsManager.StatsType.SEND_BACK);</div><div class="line"> <span class="number">16</span>:         context.setCommercialRcvTimes(<span class="number">1</span>);</div><div class="line"> <span class="number">17</span>:         context.setCommercialOwner(request.getExtFields().get(BrokerStatsManager.COMMERCIAL_OWNER));</div><div class="line"> <span class="number">18</span>: </div><div class="line"> <span class="number">19</span>:         <span class="keyword">this</span>.executeConsumeMessageHookAfter(context);</div><div class="line"> <span class="number">20</span>:     }</div><div class="line"> <span class="number">21</span>: </div><div class="line"> <span class="number">22</span>:     <span class="comment">// &#x5224;&#x65AD;&#x6D88;&#x8D39;&#x5206;&#x7EC4;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">23</span>:     SubscriptionGroupConfig subscriptionGroupConfig =</div><div class="line"> <span class="number">24</span>:         <span class="keyword">this</span>.brokerController.getSubscriptionGroupManager().findSubscriptionGroupConfig(requestHeader.getGroup());</div><div class="line"> <span class="number">25</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == subscriptionGroupConfig) {</div><div class="line"> <span class="number">26</span>:         response.setCode(ResponseCode.SUBSCRIPTION_GROUP_NOT_EXIST);</div><div class="line"> <span class="number">27</span>:         response.setRemark(<span class="string">&quot;subscription group not exist, &quot;</span> + requestHeader.getGroup() + <span class="string">&quot; &quot;</span></div><div class="line"> <span class="number">28</span>:             + FAQUrl.suggestTodo(FAQUrl.SUBSCRIPTION_GROUP_NOT_EXIST));</div><div class="line"> <span class="number">29</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">30</span>:     }</div><div class="line"> <span class="number">31</span>: </div><div class="line"> <span class="number">32</span>:     <span class="comment">// &#x68C0;&#x67E5; broker &#x662F;&#x5426;&#x6709;&#x5199;&#x5165;&#x6743;&#x9650;</span></div><div class="line"> <span class="number">33</span>:     <span class="keyword">if</span> (!PermName.isWriteable(<span class="keyword">this</span>.brokerController.getBrokerConfig().getBrokerPermission())) {</div><div class="line"> <span class="number">34</span>:         response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">35</span>:         response.setRemark(<span class="string">&quot;the broker[&quot;</span> + <span class="keyword">this</span>.brokerController.getBrokerConfig().getBrokerIP1() + <span class="string">&quot;] sending message is forbidden&quot;</span>);</div><div class="line"> <span class="number">36</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">37</span>:     }</div><div class="line"> <span class="number">38</span>: </div><div class="line"> <span class="number">39</span>:     <span class="comment">// &#x68C0;&#x67E5; &#x91CD;&#x8BD5;&#x961F;&#x5217;&#x6570; &#x662F;&#x5426;&#x5927;&#x4E8E;0&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">40</span>:     <span class="keyword">if</span> (subscriptionGroupConfig.getRetryQueueNums() &lt;= <span class="number">0</span>) {</div><div class="line"> <span class="number">41</span>:         response.setCode(ResponseCode.SUCCESS);</div><div class="line"> <span class="number">42</span>:         response.setRemark(<span class="keyword">null</span>);</div><div class="line"> <span class="number">43</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">44</span>:     }</div><div class="line"> <span class="number">45</span>: </div><div class="line"> <span class="number">46</span>:     <span class="comment">// &#x8BA1;&#x7B97;retry Topic</span></div><div class="line"> <span class="number">47</span>:     String newTopic = MixAll.getRetryTopic(requestHeader.getGroup());</div><div class="line"> <span class="number">48</span>: </div><div class="line"> <span class="number">49</span>:     <span class="comment">// &#x8BA1;&#x7B97;&#x961F;&#x5217;&#x7F16;&#x53F7;&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">50</span>:     <span class="keyword">int</span> queueIdInt = Math.abs(<span class="keyword">this</span>.random.nextInt() % <span class="number">99999999</span>) % subscriptionGroupConfig.getRetryQueueNums();</div><div class="line"> <span class="number">51</span>: </div><div class="line"> <span class="number">52</span>:     <span class="comment">// &#x8BA1;&#x7B97;sysFlag&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">53</span>:     <span class="keyword">int</span> topicSysFlag = <span class="number">0</span>;</div><div class="line"> <span class="number">54</span>:     <span class="keyword">if</span> (requestHeader.isUnitMode()) {</div><div class="line"> <span class="number">55</span>:         topicSysFlag = TopicSysFlag.buildSysFlag(<span class="keyword">false</span>, <span class="keyword">true</span>);</div><div class="line"> <span class="number">56</span>:     }</div><div class="line"> <span class="number">57</span>: </div><div class="line"> <span class="number">58</span>:     <span class="comment">// &#x83B7;&#x53D6;topicConfig&#x3002;&#x5982;&#x679C;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x521B;&#x5EFA;</span></div><div class="line"> <span class="number">59</span>:     TopicConfig topicConfig = <span class="keyword">this</span>.brokerController.getTopicConfigManager().createTopicInSendMessageBackMethod(<span class="comment">//</span></div><div class="line"> <span class="number">60</span>:         newTopic, <span class="comment">//</span></div><div class="line"> <span class="number">61</span>:         subscriptionGroupConfig.getRetryQueueNums(), <span class="comment">//</span></div><div class="line"> <span class="number">62</span>:         PermName.PERM_WRITE | PermName.PERM_READ, topicSysFlag);</div><div class="line"> <span class="number">63</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == topicConfig) { <span class="comment">// &#x6CA1;&#x6709;&#x914D;&#x7F6E;</span></div><div class="line"> <span class="number">64</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"> <span class="number">65</span>:         response.setRemark(<span class="string">&quot;topic[&quot;</span> + newTopic + <span class="string">&quot;] not exist&quot;</span>);</div><div class="line"> <span class="number">66</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">67</span>:     }</div><div class="line"> <span class="number">68</span>:     <span class="keyword">if</span> (!PermName.isWriteable(topicConfig.getPerm())) { <span class="comment">// &#x4E0D;&#x5141;&#x8BB8;&#x5199;&#x5165;</span></div><div class="line"> <span class="number">69</span>:         response.setCode(ResponseCode.NO_PERMISSION);</div><div class="line"> <span class="number">70</span>:         response.setRemark(String.format(<span class="string">&quot;the topic[%s] sending message is forbidden&quot;</span>, newTopic));</div><div class="line"> <span class="number">71</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">72</span>:     }</div><div class="line"> <span class="number">73</span>: </div><div class="line"> <span class="number">74</span>:     <span class="comment">// &#x67E5;&#x8BE2;&#x6D88;&#x606F;&#x3002;&#x82E5;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8FD4;&#x56DE;&#x5F02;&#x5E38;&#x9519;&#x8BEF;&#x3002;&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">75</span>:     MessageExt msgExt = <span class="keyword">this</span>.brokerController.getMessageStore().lookMessageByOffset(requestHeader.getOffset());</div><div class="line"> <span class="number">76</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == msgExt) {</div><div class="line"> <span class="number">77</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"> <span class="number">78</span>:         response.setRemark(<span class="string">&quot;look message by offset failed, &quot;</span> + requestHeader.getOffset());</div><div class="line"> <span class="number">79</span>:         <span class="keyword">return</span> response;</div><div class="line"> <span class="number">80</span>:     }</div><div class="line"> <span class="number">81</span>: </div><div class="line"> <span class="number">82</span>:     <span class="comment">// &#x8BBE;&#x7F6E;retryTopic&#x5230;&#x62D3;&#x5C55;&#x5C5E;&#x6027;&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"> <span class="number">83</span>:     <span class="keyword">final</span> String retryTopic = msgExt.getProperty(MessageConst.PROPERTY_RETRY_TOPIC);</div><div class="line"> <span class="number">84</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> == retryTopic) {</div><div class="line"> <span class="number">85</span>:         MessageAccessor.putProperty(msgExt, MessageConst.PROPERTY_RETRY_TOPIC, msgExt.getTopic());</div><div class="line"> <span class="number">86</span>:     }</div><div class="line"> <span class="number">87</span>: </div><div class="line"> <span class="number">88</span>:     <span class="comment">// &#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x4E0D;&#x7B49;&#x5F85;&#x5B58;&#x50A8;&#x5B8C;&#x6210;&#xFF08;&#x72EC;&#x6709;&#xFF09; TODO &#x7591;&#x95EE;&#xFF1A;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x6210;&#x4E0D;&#x7B49;&#x5F85;&#x5B58;&#x50A8;&#xFF0C;broker&#x8BBE;&#x7F6E;&#x6210;&#x540C;&#x6B65;&#x843D;&#x76D8;&#xFF0C;&#x5C82;&#x4E0D;&#x662F;&#x4E0D;&#x80FD;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x4E86;&#xFF1F;</span></div><div class="line"> <span class="number">89</span>:     msgExt.setWaitStoreMsgOK(<span class="keyword">false</span>);</div><div class="line"> <span class="number">90</span>: </div><div class="line"> <span class="number">91</span>:     <span class="comment">// &#x5904;&#x7406; delayLevel&#xFF08;&#x72EC;&#x6709;&#xFF09;&#x3002;</span></div><div class="line"> <span class="number">92</span>:     <span class="keyword">int</span> delayLevel = requestHeader.getDelayLevel();</div><div class="line"> <span class="number">93</span>:     <span class="keyword">int</span> maxReconsumeTimes = subscriptionGroupConfig.getRetryMaxTimes();</div><div class="line"> <span class="number">94</span>:     <span class="keyword">if</span> (request.getVersion() &gt;= MQVersion.Version.V3_4_9.ordinal()) {</div><div class="line"> <span class="number">95</span>:         maxReconsumeTimes = requestHeader.getMaxReconsumeTimes();</div><div class="line"> <span class="number">96</span>:     }</div><div class="line"> <span class="number">97</span>:     <span class="keyword">if</span> (msgExt.getReconsumeTimes() &gt;= maxReconsumeTimes<span class="comment">//</span></div><div class="line"> <span class="number">98</span>:         || delayLevel &lt; <span class="number">0</span>) { <span class="comment">// &#x5982;&#x679C;&#x8D85;&#x8FC7;&#x6700;&#x5927;&#x6D88;&#x8D39;&#x6B21;&#x6570;&#xFF0C;&#x5219;topic&#x4FEE;&#x6539;&#x6210;&quot;%DLQ%&quot; + &#x5206;&#x7EC4;&#x540D;&#xFF0C;&#x5373;&#x52A0;&#x5165; &#x6B7B;&#x4FE1;&#x961F;&#x5217;(Dead Letter Queue)</span></div><div class="line"> <span class="number">99</span>:         newTopic = MixAll.getDLQTopic(requestHeader.getGroup());</div><div class="line"><span class="number">100</span>:         queueIdInt = Math.abs(<span class="keyword">this</span>.random.nextInt() % <span class="number">99999999</span>) % DLQ_NUMS_PER_GROUP;</div><div class="line"><span class="number">101</span>: </div><div class="line"><span class="number">102</span>:         topicConfig = <span class="keyword">this</span>.brokerController.getTopicConfigManager().createTopicInSendMessageBackMethod(newTopic, <span class="comment">//</span></div><div class="line"><span class="number">103</span>:             DLQ_NUMS_PER_GROUP, <span class="comment">//</span></div><div class="line"><span class="number">104</span>:             PermName.PERM_WRITE, <span class="number">0</span></div><div class="line"><span class="number">105</span>:         );</div><div class="line"><span class="number">106</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == topicConfig) {</div><div class="line"><span class="number">107</span>:             response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">108</span>:             response.setRemark(<span class="string">&quot;topic[&quot;</span> + newTopic + <span class="string">&quot;] not exist&quot;</span>);</div><div class="line"><span class="number">109</span>:             <span class="keyword">return</span> response;</div><div class="line"><span class="number">110</span>:         }</div><div class="line"><span class="number">111</span>:     } <span class="keyword">else</span> {</div><div class="line"><span class="number">112</span>:         <span class="keyword">if</span> (<span class="number">0</span> == delayLevel) {</div><div class="line"><span class="number">113</span>:             delayLevel = <span class="number">3</span> + msgExt.getReconsumeTimes();</div><div class="line"><span class="number">114</span>:         }</div><div class="line"><span class="number">115</span>:         msgExt.setDelayTimeLevel(delayLevel);</div><div class="line"><span class="number">116</span>:     }</div><div class="line"><span class="number">117</span>: </div><div class="line"><span class="number">118</span>:     <span class="comment">// &#x521B;&#x5EFA;MessageExtBrokerInner</span></div><div class="line"><span class="number">119</span>:     MessageExtBrokerInner msgInner = <span class="keyword">new</span> MessageExtBrokerInner();</div><div class="line"><span class="number">120</span>:     msgInner.setTopic(newTopic);</div><div class="line"><span class="number">121</span>:     msgInner.setBody(msgExt.getBody());</div><div class="line"><span class="number">122</span>:     msgInner.setFlag(msgExt.getFlag());</div><div class="line"><span class="number">123</span>:     MessageAccessor.setProperties(msgInner, msgExt.getProperties());</div><div class="line"><span class="number">124</span>:     msgInner.setPropertiesString(MessageDecoder.messageProperties2String(msgExt.getProperties()));</div><div class="line"><span class="number">125</span>:     msgInner.setTagsCode(MessageExtBrokerInner.tagsString2tagsCode(<span class="keyword">null</span>, msgExt.getTags()));</div><div class="line"><span class="number">126</span>:     msgInner.setQueueId(queueIdInt);</div><div class="line"><span class="number">127</span>:     msgInner.setSysFlag(msgExt.getSysFlag());</div><div class="line"><span class="number">128</span>:     msgInner.setBornTimestamp(msgExt.getBornTimestamp());</div><div class="line"><span class="number">129</span>:     msgInner.setBornHost(msgExt.getBornHost());</div><div class="line"><span class="number">130</span>:     msgInner.setStoreHost(<span class="keyword">this</span>.getStoreHost());</div><div class="line"><span class="number">131</span>:     msgInner.setReconsumeTimes(msgExt.getReconsumeTimes() + <span class="number">1</span>);</div><div class="line"><span class="number">132</span>: </div><div class="line"><span class="number">133</span>:     <span class="comment">// &#x8BBE;&#x7F6E;&#x539F;&#x59CB;&#x6D88;&#x606F;&#x7F16;&#x53F7;&#x5230;&#x62D3;&#x5C55;&#x5B57;&#x6BB5;&#xFF08;&#x72EC;&#x6709;&#xFF09;</span></div><div class="line"><span class="number">134</span>:     String originMsgId = MessageAccessor.getOriginMessageId(msgExt);</div><div class="line"><span class="number">135</span>:     MessageAccessor.setOriginMessageId(msgInner, UtilAll.isBlank(originMsgId) ? msgExt.getMsgId() : originMsgId);</div><div class="line"><span class="number">136</span>: </div><div class="line"><span class="number">137</span>:     <span class="comment">// &#x6DFB;&#x52A0;&#x6D88;&#x606F;</span></div><div class="line"><span class="number">138</span>:     PutMessageResult putMessageResult = <span class="keyword">this</span>.brokerController.getMessageStore().putMessage(msgInner);</div><div class="line"><span class="number">139</span>:     <span class="keyword">if</span> (putMessageResult != <span class="keyword">null</span>) {</div><div class="line"><span class="number">140</span>:         <span class="keyword">switch</span> (putMessageResult.getPutMessageStatus()) {</div><div class="line"><span class="number">141</span>:             <span class="keyword">case</span> PUT_OK:</div><div class="line"><span class="number">142</span>:                 String backTopic = msgExt.getTopic();</div><div class="line"><span class="number">143</span>:                 String correctTopic = msgExt.getProperty(MessageConst.PROPERTY_RETRY_TOPIC);</div><div class="line"><span class="number">144</span>:                 <span class="keyword">if</span> (correctTopic != <span class="keyword">null</span>) {</div><div class="line"><span class="number">145</span>:                     backTopic = correctTopic;</div><div class="line"><span class="number">146</span>:                 }</div><div class="line"><span class="number">147</span>: </div><div class="line"><span class="number">148</span>:                 <span class="keyword">this</span>.brokerController.getBrokerStatsManager().incSendBackNums(requestHeader.getGroup(), backTopic);</div><div class="line"><span class="number">149</span>: </div><div class="line"><span class="number">150</span>:                 response.setCode(ResponseCode.SUCCESS);</div><div class="line"><span class="number">151</span>:                 response.setRemark(<span class="keyword">null</span>);</div><div class="line"><span class="number">152</span>: </div><div class="line"><span class="number">153</span>:                 <span class="keyword">return</span> response;</div><div class="line"><span class="number">154</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">155</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">156</span>:         }</div><div class="line"><span class="number">157</span>: </div><div class="line"><span class="number">158</span>:         response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">159</span>:         response.setRemark(putMessageResult.getPutMessageStatus().name());</div><div class="line"><span class="number">160</span>:         <span class="keyword">return</span> response;</div><div class="line"><span class="number">161</span>:     }</div><div class="line"><span class="number">162</span>: </div><div class="line"><span class="number">163</span>:     response.setCode(ResponseCode.SYSTEM_ERROR);</div><div class="line"><span class="number">164</span>:     response.setRemark(<span class="string">&quot;putMessageResult is null&quot;</span>);</div><div class="line"><span class="number">165</span>:     <span class="keyword">return</span> response;</div><div class="line"><span class="number">166</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5F53; <code>Consumer</code> &#x6D88;&#x8D39;&#x67D0;&#x6761;&#x6D88;&#x606F;&#x5931;&#x8D25;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x63A5;&#x53E3;&#x53D1;&#x56DE;&#x6D88;&#x606F;&#x3002;<code>Broker</code> &#x4F1A;&#x5B58;&#x50A8;&#x53D1;&#x56DE;&#x7684;&#x6D88;&#x606F;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x4E0B;&#x6B21; <code>Consumer</code> &#x62C9;&#x53D6;&#x8BE5;&#x6D88;&#x606F;&#xFF0C;&#x80FD;&#x591F;&#x4ECE; <code>CommitLog</code> &#x548C; <code>ConsumeQueue</code> &#x987A;&#x5E8F;&#x8BFB;&#x53D6;&#x3002;</li>
<li>[x] &#x56E0;&#x4E3A;&#x5927;&#x591A;&#x6570;&#x903B;&#x8F91;&#x548C; <strong><code>Broker</code> &#x63A5;&#x6536;&#x666E;&#x901A;&#x6D88;&#x606F;</strong> &#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x65F6;&#x5019; <code>TODO</code> &#x6807;&#x8BB0;&#x6210;&#x72EC;&#x6709;&#x7684;&#x903B;&#x8F91;&#x3002;</li>
<li>&#x7B2C; 4 &#x81F3; 7 &#x884C; &#xFF1A;&#x521D;&#x59CB;&#x5316;&#x54CD;&#x5E94;&#x3002;</li>
<li>[x] &#x7B2C; 9 &#x81F3; 20 &#x884C; &#xFF1A;Hook&#x903B;&#x8F91;&#x3002;</li>
<li>[x] &#x7B2C;22 &#x81F3; 30 &#x884C; &#xFF1A;&#x5224;&#x65AD;&#x6D88;&#x8D39;&#x5206;&#x7EC4;&#x662F;&#x5426;&#x5B58;&#x5728;&#x3002;</li>
<li>&#x7B2C; 32 &#x81F3; 37 &#x884C; &#xFF1A;&#x68C0;&#x67E5; <code>Broker</code> &#x662F;&#x5426;&#x6709;&#x5199;&#x5165;&#x6743;&#x9650;&#x3002;</li>
<li>[x] &#x7B2C; 39 &#x81F3; 44 &#x884C; &#xFF1A;&#x68C0;&#x67E5;&#x91CD;&#x8BD5;&#x961F;&#x5217;&#x6570;&#x662F;&#x5426;&#x5927;&#x4E8E;0&#x3002;</li>
<li>&#x7B2C; 47 &#x884C; &#xFF1A;&#x8BA1;&#x7B97; retry topic&#x3002;</li>
<li>[x] &#x7B2C; 50 &#x884C; &#xFF1A;&#x968F;&#x673A;&#x5206;&#x914D;&#x961F;&#x5217;&#x7F16;&#x53F7;&#xFF0C;&#x4F9D;&#x8D56; <code>retryQueueNums</code>&#x3002;</li>
<li>[x] &#x7B2C; 52 &#x81F3; 56 &#x884C; &#xFF1A;&#x8BA1;&#x7B97; <code>sysFlag</code>&#x3002;</li>
<li>&#x7B2C; 58 &#x81F3; 72 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>TopicConfig</code>&#x3002;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x3002;</li>
<li>[x] &#x7B2C; 74 &#x81F3; 80 &#x884C; &#xFF1A;&#x67E5;&#x8BE2;&#x6D88;&#x606F;&#x3002;&#x82E5;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8FD4;&#x56DE;&#x5F02;&#x5E38;&#x9519;&#x8BEF;&#x3002;</li>
<li>[x] &#x7B2C; 82 &#x81F3; 86 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E; <code>retryTopic</code> &#x5230;&#x6D88;&#x606F;&#x62D3;&#x5C55;&#x5C5E;&#x6027;&#x3002;</li>
<li>[x] &#x7B2C; 89 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x6D88;&#x606F;&#x4E0D;&#x7B49;&#x5F85;&#x5B58;&#x50A8;&#x5B8C;&#x6210;&#x3002;<ul>
<li>&#x5F53; <code>Broker</code> &#x5237;&#x76D8;&#x65B9;&#x5F0F;&#x4E3A;&#x540C;&#x6B65;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x540C;&#x6B65;&#x843D;&#x76D8;&#x4E0D;&#x80FD;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#xFF0C;&#x8FD9;&#x6837;&#x4F1A;&#x4E0D;&#x4F1A;&#x5B58;&#x5728;&#x95EE;&#x9898;&#xFF1F;&#x6709;&#x77E5;&#x9053;&#x7684;&#x540C;&#x5B66;&#x9EBB;&#x70E6;&#x544A;&#x77E5;&#x4E0B;&#x3002;&#x1F608;&#x3002;</li>
</ul>
</li>
<li>[x] &#x7B2C; 91 &#x81F3; 116 &#x884C; &#xFF1A;&#x5904;&#x7406; <code>delayLevel</code> &#x3002;</li>
<li>&#x7B2C; 118 &#x81F3; 131 &#x884C; &#xFF1A;&#x521B;&#x5EFA; <code>MessageExtBrokerInner</code> &#x3002;</li>
<li>[x] &#x7B2C; 133 &#x81F3; 135 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x539F;&#x59CB;&#x6D88;&#x606F;&#x7F16;&#x53F7;&#x5230;&#x62D3;&#x5C55;&#x5C5E;&#x6027;&#x3002;</li>
<li>&#x7B2C; 137 &#x81F3; 161 &#x884C; &#xFF1A;&#x6DFB;&#x52A0;&#x6D88;&#x606F;&#x3002;</li>
</ul>
<h1 id="7&#x3001;&#x7ED3;&#x5C3E;"><a href="#7&#x3001;&#x7ED3;&#x5C3E;" class="headerlink" title="7&#x3001;&#x7ED3;&#x5C3E;"></a>7&#x3001;&#x7ED3;&#x5C3E;</h1><p>&#x611F;&#x8C22;&#x540C;&#x5B66;&#x4EEC;&#x5BF9;&#x672C;&#x6587;&#x7684;&#x9605;&#x8BFB;&#x3001;&#x6536;&#x85CF;&#x3001;&#x70B9;&#x8D5E;&#x3002;</p>
<p>&#x1F608;&#x5982;&#x679C;&#x89E3;&#x6790;&#x5B58;&#x5728;&#x95EE;&#x9898;&#x6216;&#x8005;&#x8868;&#x8FBE;&#x8BEF;&#x89E3;&#x7684;&#xFF0C;&#x8868;&#x793A;&#x62B1;&#x6B49;&#x3002;&#x5982;&#x679C;&#x65B9;&#x4FBF;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E0B; <strong>QQ&#xFF1A;7685413</strong>&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x4E00;&#x573A; 1 &#xFF1A;1 &#x4EA4;&#x6D41;&#xFF08;&#x641E;&#x57FA;&#xFF09;&#x3002;</p>
<p>&#x518D;&#x6B21;&#x8868;&#x793A;&#x5341;&#x5206;&#x611F;&#x8C22;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
  <entry>
    <title>RocketMQ 源码分析 —— Message 存储</title>
    <link href="http://www.yunai.me/RocketMQ/message-store/"/>
    <id>http://www.yunai.me/RocketMQ/message-store/</id>
    <published>2017-04-22T16:00:00.000Z</published>
    <updated>2017-07-20T01:39:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="magnific-img" href="http://www.yunai.me/images/common/wechat_mp.jpeg"><img src="http://www.yunai.me/images/common/wechat_mp.jpeg" alt="" class="ui centered image"></a></p>
<blockquote>
<p>&#x1F642;&#x1F642;&#x1F642;&#x5173;&#x6CE8;<strong>&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A;&#x3010;&#x828B;&#x827F;&#x7684;&#x540E;&#x7AEF;&#x5C0F;&#x5C4B;&#x3011;</strong>&#x6709;&#x798F;&#x5229;&#xFF1A;  </p>
<ol class="ui list">
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x6240;&#x6709;</strong>&#x6E90;&#x7801;&#x5206;&#x6790;&#x6587;&#x7AE0;&#x5217;&#x8868;  </li>
<li>RocketMQ / MyCAT / Sharding-JDBC <strong>&#x4E2D;&#x6587;&#x6CE8;&#x91CA;&#x6E90;&#x7801; GitHub &#x5730;&#x5740;</strong>  </li>
<li>&#x60A8;&#x5BF9;&#x4E8E;&#x6E90;&#x7801;&#x7684;&#x7591;&#x95EE;&#x6BCF;&#x6761;&#x7559;&#x8A00;<strong>&#x90FD;</strong>&#x5C06;&#x5F97;&#x5230;<strong>&#x8BA4;&#x771F;</strong>&#x56DE;&#x590D;&#x3002;<strong>&#x751A;&#x81F3;&#x4E0D;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x8BFB;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF7;&#x6559;&#x5662;</strong>&#x3002;  </li>
<li><strong>&#x65B0;&#x7684;</strong>&#x6E90;&#x7801;&#x89E3;&#x6790;&#x6587;&#x7AE0;<strong>&#x5B9E;&#x65F6;</strong>&#x6536;&#x5230;&#x901A;&#x77E5;&#x3002;<strong>&#x6BCF;&#x5468;&#x66F4;&#x65B0;&#x4E00;&#x7BC7;&#x5DE6;&#x53F3;</strong>&#x3002;</li>
</ol>
</blockquote>
<hr>
<ul class="ui list">
<li><a href="#">1&#x3001;&#x6982;&#x8FF0;</a></li>
<li><a href="#">2&#x3001;CommitLog &#x7ED3;&#x6784;</a></li>
<li><a href="#">3&#x3001;CommitLog &#x5B58;&#x50A8;&#x6D88;&#x606F;</a><ul>
<li><a href="#">CommitLog#putMessage(&#x2026;)</a></li>
<li><a href="#">MappedFileQueue#getLastMappedFile(&#x2026;)</a></li>
<li><a href="#">MappedFile#appendMessage(&#x2026;)</a></li>
<li><a href="#">DefaultAppendMessageCallback#doAppend(&#x2026;)</a></li>
<li><a href="#">FlushCommitLogService</a><ul>
<li><a href="#">MappedFile#&#x843D;&#x76D8;</a></li>
<li><a href="#">FlushRealTimeService</a></li>
<li><a href="#">CommitRealTimeService</a></li>
<li><a href="#">GroupCommitService</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#">&#x7ED3;&#x5C3E;</a></li>
</ul>
<h1 id="1&#x3001;&#x6982;&#x8FF0;"><a href="#1&#x3001;&#x6982;&#x8FF0;" class="headerlink" title="1&#x3001;&#x6982;&#x8FF0;"></a>1&#x3001;&#x6982;&#x8FF0;</h1><p>&#x672C;&#x6587;&#x63A5;<a href="http://www.yunai.me/RocketMQ/message-send-and-receive/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x53D1;&#x9001;&#x4E0E;&#x63A5;&#x6536;&#x300B;</a>&#x3002;<br>&#x4E3B;&#x8981;&#x89E3;&#x6790; <code>CommitLog</code> &#x5B58;&#x50A8;&#x6D88;&#x606F;&#x90E8;&#x5206;&#x3002;</p>
<h1 id="2&#x3001;CommitLog-&#x7ED3;&#x6784;"><a href="#2&#x3001;CommitLog-&#x7ED3;&#x6784;" class="headerlink" title="2&#x3001;CommitLog &#x7ED3;&#x6784;"></a>2&#x3001;CommitLog &#x7ED3;&#x6784;</h1><p><code>CommitLog</code>&#x3001;<code>MappedFileQueue</code>&#x3001;<code>MappedFile</code> &#x7684;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#xFF1A;</p>
<blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_04_23/02.png"><img src="http://www.yunai.me/images/RocketMQ/2017_04_23/02.png" alt="CommitLog&#x3001;MappedFileQueue&#x3001;MappedFile&#x7684;&#x5173;&#x7CFB;" class="ui centered image"></a><br><code>CommitLog</code> : <code>MappedFileQueue</code> : <code>MappedFile</code> = 1 : 1 : N&#x3002;</p>
</blockquote>
<p>&#x53CD;&#x5E94;&#x5230;&#x7CFB;&#x7EDF;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">Yunai-MacdeMacBook-Pro-2:commitlog yunai$ <span class="built_in">pwd</span></div><div class="line">/Users/yunai/store/commitlog</div><div class="line">Yunai-MacdeMacBook-Pro-2:commitlog yunai$ ls -l</div><div class="line">total 10485760</div><div class="line">-rw-r--r--  1 yunai  staff  1073741824  4 21 16:27 00000000000000000000</div><div class="line">-rw-r--r--  1 yunai  staff  1073741824  4 21 16:29 00000000001073741824</div><div class="line">-rw-r--r--  1 yunai  staff  1073741824  4 21 16:32 00000000002147483648</div><div class="line">-rw-r--r--  1 yunai  staff  1073741824  4 21 16:33 00000000003221225472</div><div class="line">-rw-r--r--  1 yunai  staff  1073741824  4 21 16:32 00000000004294967296</div></pre></td></tr></table></figure>
<hr>
<p><code>CommitLog</code>&#x3001;<code>MappedFileQueue</code>&#x3001;<code>MappedFile</code> &#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul class="ui list">
<li><code>MappedFile</code> &#xFF1A;00000000000000000000&#x3001;00000000001073741824&#x3001;00000000002147483648&#x7B49;&#x6587;&#x4EF6;&#x3002;</li>
<li><code>MappedFileQueue</code> &#xFF1A;<code>MappedFile</code> &#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5BF9; <code>MappedFile</code> &#x8FDB;&#x884C;&#x5C01;&#x88C5;&#x6210;&#x6587;&#x4EF6;&#x961F;&#x5217;&#xFF0C;&#x5BF9;&#x4E0A;&#x5C42;&#x63D0;&#x4F9B;&#x53EF;&#x65E0;&#x9650;&#x4F7F;&#x7528;&#x7684;&#x6587;&#x4EF6;&#x5BB9;&#x91CF;&#x3002;<ul>
<li>&#x6BCF;&#x4E2A; <code>MappedFile</code> &#x7EDF;&#x4E00;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;</li>
<li>&#x6587;&#x4EF6;&#x547D;&#x540D;&#x65B9;&#x5F0F;&#xFF1A;fileName[n] = fileName[n - 1] + mappedFileSize&#x3002;&#x5728; <code>CommitLog</code> &#x91CC;&#x9ED8;&#x8BA4;&#x4E3A; 1GB&#x3002;</li>
</ul>
</li>
<li><code>CommitLog</code> &#xFF1A;&#x9488;&#x5BF9; <code>MappedFileQueue</code> &#x7684;&#x5C01;&#x88C5;&#x4F7F;&#x7528;&#x3002;</li>
</ul>
<p><code>CommitLog</code> &#x76EE;&#x524D;&#x5B58;&#x50A8;&#x5728; <code>MappedFile</code> &#x6709;&#x4E24;&#x79CD;&#x5185;&#x5BB9;&#x7C7B;&#x578B;&#xFF1A;</p>
<ol class="ui list">
<li>MESSAGE &#xFF1A;&#x6D88;&#x606F;&#x3002;</li>
<li>BLANK &#xFF1A;&#x6587;&#x4EF6;&#x4E0D;&#x8DB3;&#x4EE5;&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x65F6;&#x7684;&#x7A7A;&#x767D;&#x5360;&#x4F4D;&#x3002;</li>
</ol>
<p><code>CommitLog</code> &#x5B58;&#x50A8;&#x5728; <code>MappedFile</code>&#x7684;&#x7ED3;&#x6784;&#xFF1A;</p>
<blockquote>
<table>
<thead>
<tr>
<th>MESSAGE[1]</th>
<th>MESSAGE[2]</th>
<th>&#x2026;</th>
<th>MESSAGE[n - 1]</th>
<th>MESSAGE[n]</th>
<th>BLANK</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</blockquote>
<p><code>MESSAGE</code> &#x5728; <code>CommitLog</code> &#x5B58;&#x50A8;&#x7ED3;&#x6784;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">MsgLen</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x603B;&#x957F;&#x5EA6;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">MagicCode</td>
<td style="text-align:left">MESSAGE_MAGIC_CODE</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">BodyCRC</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x5185;&#x5BB9;CRC</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">QueueId</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x961F;&#x5217;&#x7F16;&#x53F7;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">Flag</td>
<td style="text-align:left">flag</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">6</td>
<td style="text-align:left">QueueOffset</td>
<td style="text-align:left">&#x6D88;&#x606F;&#x961F;&#x5217;&#x4F4D;&#x7F6E;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">7</td>
<td style="text-align:left">PhysicalOffset</td>
<td style="text-align:left">&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x3002;&#x5728; <code>CommitLog</code> &#x7684;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x3002;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">8</td>
<td style="text-align:left">SysFlag</td>
<td style="text-align:left">MessageSysFlag</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">9</td>
<td style="text-align:left">BornTimestamp</td>
<td style="text-align:left">&#x751F;&#x6210;&#x6D88;&#x606F;&#x65F6;&#x95F4;&#x6233;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">10</td>
<td style="text-align:left">BornHost</td>
<td style="text-align:left">&#x751F;&#x6548;&#x6D88;&#x606F;&#x7684;&#x5730;&#x5740;+&#x7AEF;&#x53E3;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">11</td>
<td style="text-align:left">StoreTimestamp</td>
<td style="text-align:left">&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x65F6;&#x95F4;&#x6233;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">12</td>
<td style="text-align:left">StoreHost</td>
<td style="text-align:left">&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x7684;&#x5730;&#x5740;+&#x7AEF;&#x53E3;</td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">13</td>
<td style="text-align:left">ReconsumeTimes</td>
<td style="text-align:left">&#x91CD;&#x65B0;&#x6D88;&#x8D39;&#x6D88;&#x606F;&#x6B21;&#x6570;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">14</td>
<td style="text-align:left">PreparedTransationOffset</td>
<td style="text-align:left"></td>
<td style="text-align:left">Long</td>
<td style="text-align:left">8</td>
</tr>
<tr>
<td style="text-align:left">15</td>
<td style="text-align:left">BodyLength + Body</td>
<td style="text-align:left">&#x5185;&#x5BB9;&#x957F;&#x5EA6; + &#x5185;&#x5BB9;</td>
<td style="text-align:left">Int + Bytes</td>
<td style="text-align:left">4 + bodyLength</td>
</tr>
<tr>
<td style="text-align:left">16</td>
<td style="text-align:left">TopicLength + Topic</td>
<td style="text-align:left">Topic&#x957F;&#x5EA6; + Topic</td>
<td style="text-align:left">Byte + Bytes</td>
<td style="text-align:left">1 + topicLength</td>
</tr>
<tr>
<td style="text-align:left">17</td>
<td style="text-align:left">PropertiesLength + Properties</td>
<td style="text-align:left">&#x62D3;&#x5C55;&#x5B57;&#x6BB5;&#x957F;&#x5EA6; + &#x62D3;&#x5C55;&#x5B57;&#x6BB5;</td>
<td style="text-align:left">Short + Bytes</td>
<td style="text-align:left">2 + PropertiesLength</td>
</tr>
</tbody>
</table>
<p><code>BLANK</code> &#x5728; <code>CommitLog</code> &#x5B58;&#x50A8;&#x7ED3;&#x6784;&#xFF1A;</p>
<table>
<thead>
<tr>
<th style="text-align:left">&#x7B2C;&#x51E0;&#x4F4D;</th>
<th style="text-align:left">&#x5B57;&#x6BB5;</th>
<th style="text-align:left">&#x8BF4;&#x660E;</th>
<th style="text-align:left">&#x6570;&#x636E;&#x7C7B;&#x578B;</th>
<th style="text-align:left">&#x5B57;&#x8282;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">maxBlank</td>
<td style="text-align:left">&#x7A7A;&#x767D;&#x957F;&#x5EA6;</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">MagicCode</td>
<td style="text-align:left">BLANK_MAGIC_CODE</td>
<td style="text-align:left">Int</td>
<td style="text-align:left">4</td>
</tr>
</tbody>
</table>
<h1 id="3&#x3001;CommitLog-&#x5B58;&#x50A8;&#x6D88;&#x606F;"><a href="#3&#x3001;CommitLog-&#x5B58;&#x50A8;&#x6D88;&#x606F;" class="headerlink" title="3&#x3001;CommitLog &#x5B58;&#x50A8;&#x6D88;&#x606F;"></a>3&#x3001;CommitLog &#x5B58;&#x50A8;&#x6D88;&#x606F;</h1><blockquote>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_04_23/01.png"><img src="http://www.yunai.me/images/RocketMQ/2017_04_23/01.png" alt="Broker&#x5B58;&#x50A8;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x987A;&#x5E8F;&#x56FE;" class="ui centered image"></a></p>
</blockquote>
<h2 id="CommitLog-putMessage-&#x2026;"><a href="#CommitLog-putMessage-&#x2026;" class="headerlink" title="CommitLog#putMessage(&#x2026;)"></a>CommitLog#putMessage(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="function"><span class="keyword">public</span> PutMessageResult <span class="title">putMessage</span><span class="params">(<span class="keyword">final</span> MessageExtBrokerInner msg)</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="comment">// Set the storage time</span></div><div class="line">  <span class="number">3</span>:     msg.setStoreTimestamp(System.currentTimeMillis());</div><div class="line">  <span class="number">4</span>:     <span class="comment">// Set the message body BODY CRC (consider the most appropriate setting</span></div><div class="line">  <span class="number">5</span>:     <span class="comment">// on the client)</span></div><div class="line">  <span class="number">6</span>:     msg.setBodyCRC(UtilAll.crc32(msg.getBody()));</div><div class="line">  <span class="number">7</span>:     <span class="comment">// Back to Results</span></div><div class="line">  <span class="number">8</span>:     AppendMessageResult result = <span class="keyword">null</span>;</div><div class="line">  <span class="number">9</span>: </div><div class="line"> <span class="number">10</span>:     StoreStatsService storeStatsService = <span class="keyword">this</span>.defaultMessageStore.getStoreStatsService();</div><div class="line"> <span class="number">11</span>: </div><div class="line"> <span class="number">12</span>:     String topic = msg.getTopic();</div><div class="line"> <span class="number">13</span>:     <span class="keyword">int</span> queueId = msg.getQueueId();</div><div class="line"> <span class="number">14</span>: </div><div class="line"> <span class="number">15</span>:     <span class="comment">// &#x4E8B;&#x52A1;&#x76F8;&#x5173; TODO &#x5F85;&#x8BFB;&#xFF1A;&#x4E8B;&#x52A1;&#x76F8;&#x5173;</span></div><div class="line"> <span class="number">16</span>:     <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(msg.getSysFlag());</div><div class="line"> <span class="number">17</span>:     <span class="keyword">if</span> (tranType == MessageSysFlag.TRANSACTION_NOT_TYPE<span class="comment">//</span></div><div class="line"> <span class="number">18</span>:         || tranType == MessageSysFlag.TRANSACTION_COMMIT_TYPE) {</div><div class="line"> <span class="number">19</span>:         <span class="comment">// Delay Delivery</span></div><div class="line"> <span class="number">20</span>:         <span class="keyword">if</span> (msg.getDelayTimeLevel() &gt; <span class="number">0</span>) {</div><div class="line"> <span class="number">21</span>:             <span class="keyword">if</span> (msg.getDelayTimeLevel() &gt; <span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel()) {</div><div class="line"> <span class="number">22</span>:                 msg.setDelayTimeLevel(<span class="keyword">this</span>.defaultMessageStore.getScheduleMessageService().getMaxDelayLevel());</div><div class="line"> <span class="number">23</span>:             }</div><div class="line"> <span class="number">24</span>: </div><div class="line"> <span class="number">25</span>:             topic = ScheduleMessageService.SCHEDULE_TOPIC;</div><div class="line"> <span class="number">26</span>:             queueId = ScheduleMessageService.delayLevel2QueueId(msg.getDelayTimeLevel());</div><div class="line"> <span class="number">27</span>: </div><div class="line"> <span class="number">28</span>:             <span class="comment">// Backup real topic, queueId</span></div><div class="line"> <span class="number">29</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_TOPIC, msg.getTopic());</div><div class="line"> <span class="number">30</span>:             MessageAccessor.putProperty(msg, MessageConst.PROPERTY_REAL_QUEUE_ID, String.valueOf(msg.getQueueId()));</div><div class="line"> <span class="number">31</span>:             msg.setPropertiesString(MessageDecoder.messageProperties2String(msg.getProperties()));</div><div class="line"> <span class="number">32</span>: </div><div class="line"> <span class="number">33</span>:             msg.setTopic(topic);</div><div class="line"> <span class="number">34</span>:             msg.setQueueId(queueId);</div><div class="line"> <span class="number">35</span>:         }</div><div class="line"> <span class="number">36</span>:     }</div><div class="line"> <span class="number">37</span>: </div><div class="line"> <span class="number">38</span>:     <span class="keyword">long</span> eclipseTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">39</span>: </div><div class="line"> <span class="number">40</span>:     <span class="comment">// &#x83B7;&#x53D6;&#x5199;&#x5165;&#x6620;&#x5C04;&#x6587;&#x4EF6;</span></div><div class="line"> <span class="number">41</span>:     MappedFile unlockMappedFile = <span class="keyword">null</span>;</div><div class="line"> <span class="number">42</span>:     MappedFile mappedFile = <span class="keyword">this</span>.mappedFileQueue.getLastMappedFile();</div><div class="line"> <span class="number">43</span>: </div><div class="line"> <span class="number">44</span>:     <span class="comment">// &#x83B7;&#x53D6;&#x5199;&#x5165;&#x9501;</span></div><div class="line"> <span class="number">45</span>:     lockForPutMessage(); <span class="comment">//spin...</span></div><div class="line"> <span class="number">46</span>:     <span class="keyword">try</span> {</div><div class="line"> <span class="number">47</span>:         <span class="keyword">long</span> beginLockTimestamp = <span class="keyword">this</span>.defaultMessageStore.getSystemClock().now();</div><div class="line"> <span class="number">48</span>:         <span class="keyword">this</span>.beginTimeInLock = beginLockTimestamp;</div><div class="line"> <span class="number">49</span>: </div><div class="line"> <span class="number">50</span>:         <span class="comment">// Here settings are stored timestamp, in order to ensure an orderly</span></div><div class="line"> <span class="number">51</span>:         <span class="comment">// global</span></div><div class="line"> <span class="number">52</span>:         msg.setStoreTimestamp(beginLockTimestamp);</div><div class="line"> <span class="number">53</span>: </div><div class="line"> <span class="number">54</span>:         <span class="comment">// &#x5F53;&#x4E0D;&#x5B58;&#x5728;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x521B;&#x5EFA;</span></div><div class="line"> <span class="number">55</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == mappedFile || mappedFile.isFull()) {</div><div class="line"> <span class="number">56</span>:             mappedFile = <span class="keyword">this</span>.mappedFileQueue.getLastMappedFile(<span class="number">0</span>); <span class="comment">// Mark: NewFile may be cause noise</span></div><div class="line"> <span class="number">57</span>:         }</div><div class="line"> <span class="number">58</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == mappedFile) {</div><div class="line"> <span class="number">59</span>:             log.error(<span class="string">&quot;create maped file1 error, topic: &quot;</span> + msg.getTopic() + <span class="string">&quot; clientAddr: &quot;</span> + msg.getBornHostString());</div><div class="line"> <span class="number">60</span>:             beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">61</span>:             <span class="keyword">return</span> <span class="keyword">new</span> PutMessageResult(PutMessageStatus.CREATE_MAPEDFILE_FAILED, <span class="keyword">null</span>);</div><div class="line"> <span class="number">62</span>:         }</div><div class="line"> <span class="number">63</span>: </div><div class="line"> <span class="number">64</span>:         <span class="comment">// &#x5B58;&#x50A8;&#x6D88;&#x606F;</span></div><div class="line"> <span class="number">65</span>:         result = mappedFile.appendMessage(msg, <span class="keyword">this</span>.appendMessageCallback);</div><div class="line"> <span class="number">66</span>:         <span class="keyword">switch</span> (result.getStatus()) {</div><div class="line"> <span class="number">67</span>:             <span class="keyword">case</span> PUT_OK:</div><div class="line"> <span class="number">68</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">69</span>:             <span class="keyword">case</span> END_OF_FILE: <span class="comment">// &#x5F53;&#x6587;&#x4EF6;&#x5C3E;&#x65F6;&#xFF0C;&#x83B7;&#x53D6;&#x65B0;&#x7684;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x63D2;&#x5165;</span></div><div class="line"> <span class="number">70</span>:                 unlockMappedFile = mappedFile;</div><div class="line"> <span class="number">71</span>:                 <span class="comment">// Create a new file, re-write the message</span></div><div class="line"> <span class="number">72</span>:                 mappedFile = <span class="keyword">this</span>.mappedFileQueue.getLastMappedFile(<span class="number">0</span>);</div><div class="line"> <span class="number">73</span>:                 <span class="keyword">if</span> (<span class="keyword">null</span> == mappedFile) {</div><div class="line"> <span class="number">74</span>:                     <span class="comment">// <span class="doctag">XXX:</span> warn and notify me</span></div><div class="line"> <span class="number">75</span>:                     log.error(<span class="string">&quot;create maped file2 error, topic: &quot;</span> + msg.getTopic() + <span class="string">&quot; clientAddr: &quot;</span> + msg.getBornHostString());</div><div class="line"> <span class="number">76</span>:                     beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">77</span>:                     <span class="keyword">return</span> <span class="keyword">new</span> PutMessageResult(PutMessageStatus.CREATE_MAPEDFILE_FAILED, result);</div><div class="line"> <span class="number">78</span>:                 }</div><div class="line"> <span class="number">79</span>:                 result = mappedFile.appendMessage(msg, <span class="keyword">this</span>.appendMessageCallback);</div><div class="line"> <span class="number">80</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">81</span>:             <span class="keyword">case</span> MESSAGE_SIZE_EXCEEDED:</div><div class="line"> <span class="number">82</span>:             <span class="keyword">case</span> PROPERTIES_SIZE_EXCEEDED:</div><div class="line"> <span class="number">83</span>:                 beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">84</span>:                 <span class="keyword">return</span> <span class="keyword">new</span> PutMessageResult(PutMessageStatus.MESSAGE_ILLEGAL, result);</div><div class="line"> <span class="number">85</span>:             <span class="keyword">case</span> UNKNOWN_ERROR:</div><div class="line"> <span class="number">86</span>:                 beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">87</span>:                 <span class="keyword">return</span> <span class="keyword">new</span> PutMessageResult(PutMessageStatus.UNKNOWN_ERROR, result);</div><div class="line"> <span class="number">88</span>:             <span class="keyword">default</span>:</div><div class="line"> <span class="number">89</span>:                 beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">90</span>:                 <span class="keyword">return</span> <span class="keyword">new</span> PutMessageResult(PutMessageStatus.UNKNOWN_ERROR, result);</div><div class="line"> <span class="number">91</span>:         }</div><div class="line"> <span class="number">92</span>: </div><div class="line"> <span class="number">93</span>:         eclipseTimeInLock = <span class="keyword">this</span>.defaultMessageStore.getSystemClock().now() - beginLockTimestamp;</div><div class="line"> <span class="number">94</span>:         beginTimeInLock = <span class="number">0</span>;</div><div class="line"> <span class="number">95</span>:     } <span class="keyword">finally</span> {</div><div class="line"> <span class="number">96</span>:         <span class="comment">// &#x91CA;&#x653E;&#x5199;&#x5165;&#x9501;</span></div><div class="line"> <span class="number">97</span>:         releasePutMessageLock();</div><div class="line"> <span class="number">98</span>:     }</div><div class="line"> <span class="number">99</span>: </div><div class="line"><span class="number">100</span>:     <span class="keyword">if</span> (eclipseTimeInLock &gt; <span class="number">500</span>) {</div><div class="line"><span class="number">101</span>:         log.warn(<span class="string">&quot;[NOTIFYME]putMessage in lock cost time(ms)={}, bodyLength={} AppendMessageResult={}&quot;</span>, eclipseTimeInLock, msg.getBody().length, result);</div><div class="line"><span class="number">102</span>:     }</div><div class="line"><span class="number">103</span>: </div><div class="line"><span class="number">104</span>:     <span class="comment">// </span></div><div class="line"><span class="number">105</span>:     <span class="keyword">if</span> (<span class="keyword">null</span> != unlockMappedFile &amp;&amp; <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().isWarmMapedFileEnable()) {</div><div class="line"><span class="number">106</span>:         <span class="keyword">this</span>.defaultMessageStore.unlockMappedFile(unlockMappedFile);</div><div class="line"><span class="number">107</span>:     }</div><div class="line"><span class="number">108</span>: </div><div class="line"><span class="number">109</span>:     PutMessageResult putMessageResult = <span class="keyword">new</span> PutMessageResult(PutMessageStatus.PUT_OK, result);</div><div class="line"><span class="number">110</span>: </div><div class="line"><span class="number">111</span>:     <span class="comment">// Statistics</span></div><div class="line"><span class="number">112</span>:     storeStatsService.getSinglePutMessageTopicTimesTotal(msg.getTopic()).incrementAndGet();</div><div class="line"><span class="number">113</span>:     storeStatsService.getSinglePutMessageTopicSizeTotal(topic).addAndGet(result.getWroteBytes());</div><div class="line"><span class="number">114</span>: </div><div class="line"><span class="number">115</span>:     <span class="comment">// &#x8FDB;&#x884C;&#x540C;&#x6B65;||&#x5F02;&#x6B65; flush||commit</span></div><div class="line"><span class="number">116</span>:     GroupCommitRequest request = <span class="keyword">null</span>;</div><div class="line"><span class="number">117</span>:     <span class="comment">// Synchronization flush</span></div><div class="line"><span class="number">118</span>:     <span class="keyword">if</span> (FlushDiskType.SYNC_FLUSH == <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getFlushDiskType()) {</div><div class="line"><span class="number">119</span>:         <span class="keyword">final</span> GroupCommitService service = (GroupCommitService) <span class="keyword">this</span>.flushCommitLogService;</div><div class="line"><span class="number">120</span>:         <span class="keyword">if</span> (msg.isWaitStoreMsgOK()) {</div><div class="line"><span class="number">121</span>:             request = <span class="keyword">new</span> GroupCommitRequest(result.getWroteOffset() + result.getWroteBytes());</div><div class="line"><span class="number">122</span>:             service.putRequest(request);</div><div class="line"><span class="number">123</span>:             <span class="keyword">boolean</span> flushOK = request.waitForFlush(<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getSyncFlushTimeout());</div><div class="line"><span class="number">124</span>:             <span class="keyword">if</span> (!flushOK) {</div><div class="line"><span class="number">125</span>:                 log.error(<span class="string">&quot;do groupcommit, wait for flush failed, topic: &quot;</span> + msg.getTopic() + <span class="string">&quot; tags: &quot;</span> + msg.getTags()</div><div class="line"><span class="number">126</span>:                     + <span class="string">&quot; client address: &quot;</span> + msg.getBornHostString());</div><div class="line"><span class="number">127</span>:                 putMessageResult.setPutMessageStatus(PutMessageStatus.FLUSH_DISK_TIMEOUT);</div><div class="line"><span class="number">128</span>:             }</div><div class="line"><span class="number">129</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">130</span>:             service.wakeup();</div><div class="line"><span class="number">131</span>:         }</div><div class="line"><span class="number">132</span>:     }</div><div class="line"><span class="number">133</span>:     <span class="comment">// Asynchronous flush</span></div><div class="line"><span class="number">134</span>:     <span class="keyword">else</span> {</div><div class="line"><span class="number">135</span>:         <span class="keyword">if</span> (!<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().isTransientStorePoolEnable()) {</div><div class="line"><span class="number">136</span>:             flushCommitLogService.wakeup(); <span class="comment">// important&#xFF1A;&#x5524;&#x9192;commitLog&#x7EBF;&#x7A0B;&#xFF0C;&#x8FDB;&#x884C;flush</span></div><div class="line"><span class="number">137</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">138</span>:             commitLogService.wakeup();</div><div class="line"><span class="number">139</span>:         }</div><div class="line"><span class="number">140</span>:     }</div><div class="line"><span class="number">141</span>: </div><div class="line"><span class="number">142</span>:     <span class="comment">// Synchronous write double &#x5982;&#x679C;&#x662F;&#x540C;&#x6B65;Master&#xFF0C;&#x540C;&#x6B65;&#x5230;&#x4ECE;&#x8282;&#x70B9; // TODO &#x5F85;&#x8BFB;&#xFF1A;&#x6570;&#x636E;&#x540C;&#x6B65;</span></div><div class="line"><span class="number">143</span>:     <span class="keyword">if</span> (BrokerRole.SYNC_MASTER == <span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getBrokerRole()) {</div><div class="line"><span class="number">144</span>:         HAService service = <span class="keyword">this</span>.defaultMessageStore.getHaService();</div><div class="line"><span class="number">145</span>:         <span class="keyword">if</span> (msg.isWaitStoreMsgOK()) {</div><div class="line"><span class="number">146</span>:             <span class="comment">// Determine whether to wait</span></div><div class="line"><span class="number">147</span>:             <span class="keyword">if</span> (service.isSlaveOK(result.getWroteOffset() + result.getWroteBytes())) {</div><div class="line"><span class="number">148</span>:                 <span class="keyword">if</span> (<span class="keyword">null</span> == request) {</div><div class="line"><span class="number">149</span>:                     request = <span class="keyword">new</span> GroupCommitRequest(result.getWroteOffset() + result.getWroteBytes());</div><div class="line"><span class="number">150</span>:                 }</div><div class="line"><span class="number">151</span>:                 service.putRequest(request);</div><div class="line"><span class="number">152</span>: </div><div class="line"><span class="number">153</span>:                 service.getWaitNotifyObject().wakeupAll();</div><div class="line"><span class="number">154</span>: </div><div class="line"><span class="number">155</span>:                 <span class="keyword">boolean</span> flushOK =</div><div class="line"><span class="number">156</span>:                     <span class="comment">// TODO</span></div><div class="line"><span class="number">157</span>:                     request.waitForFlush(<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getSyncFlushTimeout());</div><div class="line"><span class="number">158</span>:                 <span class="keyword">if</span> (!flushOK) {</div><div class="line"><span class="number">159</span>:                     log.error(<span class="string">&quot;do sync transfer other node, wait return, but failed, topic: &quot;</span> + msg.getTopic() + <span class="string">&quot; tags: &quot;</span></div><div class="line"><span class="number">160</span>:                         + msg.getTags() + <span class="string">&quot; client address: &quot;</span> + msg.getBornHostString());</div><div class="line"><span class="number">161</span>:                     putMessageResult.setPutMessageStatus(PutMessageStatus.FLUSH_SLAVE_TIMEOUT);</div><div class="line"><span class="number">162</span>:                 }</div><div class="line"><span class="number">163</span>:             }</div><div class="line"><span class="number">164</span>:             <span class="comment">// Slave problem</span></div><div class="line"><span class="number">165</span>:             <span class="keyword">else</span> {</div><div class="line"><span class="number">166</span>:                 <span class="comment">// Tell the producer, slave not available</span></div><div class="line"><span class="number">167</span>:                 putMessageResult.setPutMessageStatus(PutMessageStatus.SLAVE_NOT_AVAILABLE);</div><div class="line"><span class="number">168</span>:             }</div><div class="line"><span class="number">169</span>:         }</div><div class="line"><span class="number">170</span>:     }</div><div class="line"><span class="number">171</span>: </div><div class="line"><span class="number">172</span>:     <span class="keyword">return</span> putMessageResult;</div><div class="line"><span class="number">173</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x5B58;&#x50A8;&#x6D88;&#x606F;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x5B58;&#x50A8;&#x7ED3;&#x679C;&#x3002;</li>
<li>&#x7B2C; 2 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x5B58;&#x50A8;&#x65F6;&#x95F4;&#x7B49;&#x3002;</li>
<li>&#x7B2C; 16 &#x81F3; 36 &#x884C; &#xFF1A;&#x4E8B;&#x52A1;&#x6D88;&#x606F;&#x76F8;&#x5173;&#xFF0C;&#x6682;&#x672A;&#x4E86;&#x89E3;&#x3002;</li>
<li>&#x7B2C; 45 &amp; 97 &#x884C; &#xFF1A;&#x83B7;&#x53D6;&#x9501;&#x4E0E;&#x91CA;&#x653E;&#x9501;&#x3002;</li>
<li>&#x7B2C; 52 &#x884C; &#xFF1A;&#x518D;&#x6B21;&#x8BBE;&#x7F6E;&#x5B58;&#x50A8;&#x65F6;&#x95F4;&#x3002;&#x76EE;&#x524D;&#x4F1A;&#x6709;&#x591A;&#x5904;&#x5730;&#x65B9;&#x8BBE;&#x7F6E;&#x5B58;&#x50A8;&#x65F6;&#x95F4;&#x3002;</li>
<li>&#x7B2C; 55 &#x81F3; 62 &#x884C; &#xFF1A;&#x83B7;&#x53D6; <code>MappedFile</code>&#xFF0C;&#x82E5;&#x4E0D;&#x5B58;&#x5728;&#x6216;&#x5DF2;&#x6EE1;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x521B;&#x5EFA;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#mappedfilequeuegetlastmappedfile">MappedFileQueue#getLastMappedFile(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 65 &#x884C; &#xFF1A;<strong>&#x63D2;&#x5165;&#x6D88;&#x606F;</strong>&#x5230; <code>MappedFile</code>&#xFF0C;&#x89E3;&#x6790;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#mappedfileappendmessage">MappedFile#appendMessage(&#x2026;)</a>&#x3002;</li>
<li>&#x7B2C; 69 &#x81F3; 80 &#x884C; &#xFF1A;<code>MappedFile</code> &#x5DF2;&#x6EE1;&#xFF0C;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#xFF0C;&#x518D;&#x6B21;<strong>&#x63D2;&#x5165;&#x6D88;&#x606F;</strong>&#x3002;</li>
<li>&#x7B2C; 116 &#x81F3; 140 &#x884C; &#xFF1A;<strong>&#x6D88;&#x606F;&#x5237;&#x76D8;</strong>&#xFF0C;&#x5373;&#x6301;&#x4E45;&#x5316;&#x5230;&#x6587;&#x4EF6;&#x3002;&#x4E0A;&#x9762;<strong>&#x63D2;&#x5165;&#x6D88;&#x606F;</strong>&#x5B9E;&#x9645;&#x672A;&#x5B58;&#x50A8;&#x5230;&#x786C;&#x76D8;&#x3002;&#x6B64;&#x5904;&#xFF0C;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x5237;&#x76D8;&#x7B56;&#x7565;&#xFF0C;&#x6267;&#x884C;&#x4F1A;&#x6709;&#x4E0D;&#x540C;&#x3002;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x89C1;&#xFF1A;<a href="#flushcommitlogservice">FlushCommitLogService</a>&#x3002;</li>
<li>&#x7B2C; 143 &#x81F3; 173 &#x884C; &#xFF1A;<code>Broker</code> &#x4E3B;&#x4ECE;&#x540C;&#x6B65;&#x3002;&#x540E;&#x9762;&#x7684;&#x6587;&#x7AE0;&#x4F1A;&#x8BE6;&#x7EC6;&#x89E3;&#x6790;&#x1F608;&#x3002;</li>
</ul>
<h2 id="MappedFileQueue-getLastMappedFile-&#x2026;"><a href="#MappedFileQueue-getLastMappedFile-&#x2026;" class="headerlink" title="MappedFileQueue#getLastMappedFile(&#x2026;)"></a>MappedFileQueue#getLastMappedFile(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> MappedFile <span class="title">getLastMappedFile</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> startOffset, <span class="keyword">boolean</span> needCreate)</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">long</span> createOffset = -<span class="number">1</span>; <span class="comment">// &#x521B;&#x5EFA;&#x6587;&#x4EF6;&#x5F00;&#x59CB;offset&#x3002;-1&#x65F6;&#xFF0C;&#x4E0D;&#x521B;&#x5EFA;</span></div><div class="line"> <span class="number">3</span>:     MappedFile mappedFileLast = getLastMappedFile();</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="keyword">if</span> (mappedFileLast == <span class="keyword">null</span>) { <span class="comment">// &#x4E00;&#x4E2A;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x5B58;&#x5728;</span></div><div class="line"> <span class="number">6</span>:         createOffset = startOffset - (startOffset % <span class="keyword">this</span>.mappedFileSize);</div><div class="line"> <span class="number">7</span>:     }</div><div class="line"> <span class="number">8</span>: </div><div class="line"> <span class="number">9</span>:     <span class="keyword">if</span> (mappedFileLast != <span class="keyword">null</span> &amp;&amp; mappedFileLast.isFull()) { <span class="comment">// &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5DF2;&#x6EE1;</span></div><div class="line"><span class="number">10</span>:         createOffset = mappedFileLast.getFileFromOffset() + <span class="keyword">this</span>.mappedFileSize;</div><div class="line"><span class="number">11</span>:     }</div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:     <span class="keyword">if</span> (createOffset != -<span class="number">1</span> &amp;&amp; needCreate) { <span class="comment">// &#x521B;&#x5EFA;&#x6587;&#x4EF6;</span></div><div class="line"><span class="number">14</span>:         String nextFilePath = <span class="keyword">this</span>.storePath + File.separator + UtilAll.offset2FileName(createOffset);</div><div class="line"><span class="number">15</span>:         String nextNextFilePath = <span class="keyword">this</span>.storePath + File.separator</div><div class="line"><span class="number">16</span>:             + UtilAll.offset2FileName(createOffset + <span class="keyword">this</span>.mappedFileSize);</div><div class="line"><span class="number">17</span>:         MappedFile mappedFile = <span class="keyword">null</span>;</div><div class="line"><span class="number">18</span>: </div><div class="line"><span class="number">19</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.allocateMappedFileService != <span class="keyword">null</span>) {</div><div class="line"><span class="number">20</span>:             mappedFile = <span class="keyword">this</span>.allocateMappedFileService.putRequestAndReturnMappedFile(nextFilePath,</div><div class="line"><span class="number">21</span>:                 nextNextFilePath, <span class="keyword">this</span>.mappedFileSize);</div><div class="line"><span class="number">22</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">23</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">24</span>:                 mappedFile = <span class="keyword">new</span> MappedFile(nextFilePath, <span class="keyword">this</span>.mappedFileSize);</div><div class="line"><span class="number">25</span>:             } <span class="keyword">catch</span> (IOException e) {</div><div class="line"><span class="number">26</span>:                 log.error(<span class="string">&quot;create mappedFile exception&quot;</span>, e);</div><div class="line"><span class="number">27</span>:             }</div><div class="line"><span class="number">28</span>:         }</div><div class="line"><span class="number">29</span>: </div><div class="line"><span class="number">30</span>:         <span class="keyword">if</span> (mappedFile != <span class="keyword">null</span>) {</div><div class="line"><span class="number">31</span>:             <span class="keyword">if</span> (<span class="keyword">this</span>.mappedFiles.isEmpty()) {</div><div class="line"><span class="number">32</span>:                 mappedFile.setFirstCreateInQueue(<span class="keyword">true</span>);</div><div class="line"><span class="number">33</span>:             }</div><div class="line"><span class="number">34</span>:             <span class="keyword">this</span>.mappedFiles.add(mappedFile);</div><div class="line"><span class="number">35</span>:         }</div><div class="line"><span class="number">36</span>: </div><div class="line"><span class="number">37</span>:         <span class="keyword">return</span> mappedFile;</div><div class="line"><span class="number">38</span>:     }</div><div class="line"><span class="number">39</span>: </div><div class="line"><span class="number">40</span>:     <span class="keyword">return</span> mappedFileLast;</div><div class="line"><span class="number">41</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x83B7;&#x53D6;&#x6700;&#x540E;&#x4E00;&#x4E2A; <code>MappedFile</code>&#xFF0C;&#x82E5;&#x4E0D;&#x5B58;&#x5728;&#x6216;&#x6587;&#x4EF6;&#x5DF2;&#x6EE1;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x521B;&#x5EFA;&#x3002;</li>
<li>&#x7B2C; 5 &#x81F3; 11 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x5F53;&#x6587;&#x4EF6;&#x4E0D;&#x5B58;&#x5728;&#x6216;&#x5DF2;&#x6EE1;&#x65F6;&#xFF0C;&#x65B0;&#x521B;&#x5EFA;&#x6587;&#x4EF6;&#x7684; <code>createOffset</code>&#x3002;</li>
<li><p>&#x7B2C; 14 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x6587;&#x4EF6;&#x540D;&#x3002;&#x4ECE;&#x6B64;&#x5904;&#x6211;&#x4EEC;&#x53EF;<br>&#x4EE5;&#x5F97;&#x77E5;&#xFF0C;<code>MappedFile</code>&#x7684;&#x6587;&#x4EF6;&#x547D;&#x540D;&#x89C4;&#x5219;&#xFF1A;</p>
<blockquote>
<p>fileName[n] = fileName[n - 1] + n * mappedFileSize<br>fileName[0] = startOffset - (startOffset % this.mappedFileSize)</p>
</blockquote>
<p>  &#x76EE;&#x524D; <code>CommitLog</code> &#x7684; <code>startOffset</code> &#x4E3A; 0&#x3002;<br>  &#x6B64;&#x5904;&#x6709;&#x4E2A;<strong>&#x7591;&#x95EE;</strong>&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981; <code>(startOffset % this.mappedFileSize)</code>&#x3002;&#x4F8B;&#x5982;&#xFF1A;</p>
<p>  | startOffset  | mappedFileSize | createOffset |<br>  | &#x2014; | :&#x2013; | :&#x2013; |<br>  | 5 | 1 | 5 |<br>  | 5 | 2 | 4 |<br>  | 5 | 3 | 3  |<br>  | 5 | 4 | 4 |<br>  | 5 | &gt; 5 | 0 |</p>
<p>  <em>&#x5982;&#x679C;&#x6709;&#x77E5;&#x9053;&#x7684;&#x540C;&#x5B66;&#xFF0C;&#x9EBB;&#x70E6;&#x63D0;&#x793A;&#x4E0B;&#x3002;&#x1F608;</em><br>  <em>&#x89E3;&#x7B54;&#xFF1A;fileName[0] = startOffset - (startOffset % this.mappedFileSize) &#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x662F;&#xFF0C;&#x4EE5; <code>this.mappedFileSize</code> &#x4E3A;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x65F6;&#xFF0C;<code>startOffset</code> &#x6240;&#x5728;&#x6587;&#x4EF6;&#x7684;&#x5F00;&#x59CB;<code>offset</code></em></p>
</li>
<li><p>&#x7B2C; 30 &#x81F3; 35 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E; <code>MappedFile</code>&#x662F;&#x5426;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x521B;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x8BE5;&#x6807;&#x8BC6;&#x7528;&#x4E8E; <code>ConsumeQueue</code> &#x5BF9;&#x5E94;&#x7684; <code>MappedFile</code> &#xFF0C;&#x8BE6;&#x89C1; <code>ConsumeQueue#fillPreBlank</code>&#x3002;</p>
</li>
</ul>
<h2 id="MappedFile-appendMessage-&#x2026;"><a href="#MappedFile-appendMessage-&#x2026;" class="headerlink" title="MappedFile#appendMessage(&#x2026;)"></a>MappedFile#appendMessage(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="function"><span class="keyword">public</span> AppendMessageResult <span class="title">appendMessage</span><span class="params">(<span class="keyword">final</span> MessageExtBrokerInner msg, <span class="keyword">final</span> AppendMessageCallback cb)</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="keyword">assert</span> msg != <span class="keyword">null</span>;</div><div class="line"> <span class="number">3</span>:     <span class="keyword">assert</span> cb != <span class="keyword">null</span>;</div><div class="line"> <span class="number">4</span>: </div><div class="line"> <span class="number">5</span>:     <span class="keyword">int</span> currentPos = <span class="keyword">this</span>.wrotePosition.get();</div><div class="line"> <span class="number">6</span>: </div><div class="line"> <span class="number">7</span>:     <span class="keyword">if</span> (currentPos &lt; <span class="keyword">this</span>.fileSize) {</div><div class="line"> <span class="number">8</span>:         ByteBuffer byteBuffer = writeBuffer != <span class="keyword">null</span> ? writeBuffer.slice() : <span class="keyword">this</span>.mappedByteBuffer.slice();</div><div class="line"> <span class="number">9</span>:         byteBuffer.position(currentPos);</div><div class="line"><span class="number">10</span>:         AppendMessageResult result =</div><div class="line"><span class="number">11</span>:             cb.doAppend(<span class="keyword">this</span>.getFileFromOffset(), byteBuffer, <span class="keyword">this</span>.fileSize - currentPos, msg);</div><div class="line"><span class="number">12</span>:         <span class="keyword">this</span>.wrotePosition.addAndGet(result.getWroteBytes());</div><div class="line"><span class="number">13</span>:         <span class="keyword">this</span>.storeTimestamp = result.getStoreTimestamp();</div><div class="line"><span class="number">14</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">15</span>:     }</div><div class="line"><span class="number">16</span>: </div><div class="line"><span class="number">17</span>:     log.error(<span class="string">&quot;MappedFile.appendMessage return null, wrotePosition: &quot;</span> + currentPos + <span class="string">&quot; fileSize: &quot;</span></div><div class="line"><span class="number">18</span>:         + <span class="keyword">this</span>.fileSize);</div><div class="line"><span class="number">19</span>:     <span class="keyword">return</span> <span class="keyword">new</span> AppendMessageResult(AppendMessageStatus.UNKNOWN_ERROR);</div><div class="line"><span class="number">20</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;<strong>&#x63D2;&#x5165;&#x6D88;&#x606F;</strong>&#x5230; <code>MappedFile</code>&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x63D2;&#x5165;&#x7ED3;&#x679C;&#x3002;</li>
<li>&#x7B2C; 8 &#x884C; &#xFF1A;&#x83B7;&#x53D6;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x6709; <code>writeBuffer != null</code> &#x7684;&#x5224;&#x65AD;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x89C1;&#xFF1A;<a href="#flushcommitlogservice">FlushCommitLogService</a>&#x3002;</li>
<li>&#x7B2C; 9 &#x81F3; 11 &#x884C; &#xFF1A;&#x8BBE;&#x7F6E;&#x5199;&#x5165; <code>position</code>&#xFF0C;&#x6267;&#x884C;&#x5199;&#x5165;&#xFF0C;&#x66F4;&#x65B0; <code>wrotePosition</code>(&#x5F53;&#x524D;&#x5199;&#x5165;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E0B;&#x6B21;&#x5F00;&#x59CB;&#x5199;&#x5165;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;)&#x3002;</li>
</ul>
<h2 id="DefaultAppendMessageCallback-doAppend-&#x2026;"><a href="#DefaultAppendMessageCallback-doAppend-&#x2026;" class="headerlink" title="DefaultAppendMessageCallback#doAppend(&#x2026;)"></a>DefaultAppendMessageCallback#doAppend(&#x2026;)</h2><figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">DefaultAppendMessageCallback</span> <span class="keyword">implements</span> <span class="title">AppendMessageCallback</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="comment">// File at the end of the minimum fixed length empty</span></div><div class="line">  <span class="number">3</span>:     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> END_FILE_MIN_BLANK_LENGTH = <span class="number">4</span> + <span class="number">4</span>;</div><div class="line">  <span class="number">4</span>:     <span class="comment">/**</span></div><div class="line">  5:      * &#x5B58;&#x50A8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x7F16;&#x53F7;&#x5B57;&#x8282;Buffer</div><div class="line">  6:      */</div><div class="line">  <span class="number">7</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ByteBuffer msgIdMemory;</div><div class="line">  <span class="number">8</span>:     <span class="comment">/**</span></div><div class="line">  9:      * Store the message content</div><div class="line"> 10:      * &#x5B58;&#x50A8;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x5B57;&#x8282;Buffer</div><div class="line"> 11:      * &#x5F53;&#x6D88;&#x606F;&#x4F20;&#x9012;&#x5230;{<span class="doctag">@link</span> #doAppend(long, ByteBuffer, int, MessageExtBrokerInner)}&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x6700;&#x7EC8;&#x5199;&#x5230;&#x8BE5;&#x53C2;&#x6570;</div><div class="line"> 12:      */</div><div class="line"> <span class="number">13</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ByteBuffer msgStoreItemMemory;</div><div class="line"> <span class="number">14</span>:     <span class="comment">/**</span></div><div class="line"> 15:      * The maximum length of the message</div><div class="line"> 16:      * &#x6D88;&#x606F;&#x6700;&#x5927;&#x957F;&#x5EA6;</div><div class="line"> 17:      */</div><div class="line"> <span class="number">18</span>:     <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> maxMessageSize;</div><div class="line"> <span class="number">19</span>:     <span class="comment">/**</span></div><div class="line"> 20:      * Build Message Key</div><div class="line"> 21:      * {<span class="doctag">@link</span> #topicQueueTable}&#x7684;key</div><div class="line"> 22:      * &#x8BA1;&#x7B97;&#x65B9;&#x5F0F;&#xFF1A;topic + &quot;-&quot; + queueId</div><div class="line"> 23:      */</div><div class="line"> <span class="number">24</span>:     <span class="keyword">private</span> <span class="keyword">final</span> StringBuilder keyBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line"> <span class="number">25</span>:     <span class="comment">/**</span></div><div class="line"> 26:      * host&#x5B57;&#x8282;buffer</div><div class="line"> 27:      * &#x7528;&#x4E8E;&#x91CD;&#x590D;&#x8BA1;&#x7B97;host&#x7684;&#x5B57;&#x8282;&#x5185;&#x5BB9;</div><div class="line"> 28:      */</div><div class="line"> <span class="number">29</span>:     <span class="keyword">private</span> <span class="keyword">final</span> ByteBuffer hostHolder = ByteBuffer.allocate(<span class="number">8</span>);</div><div class="line"> <span class="number">30</span>: </div><div class="line"> <span class="number">31</span>:     DefaultAppendMessageCallback(<span class="keyword">final</span> <span class="keyword">int</span> size) {</div><div class="line"> <span class="number">32</span>:         <span class="keyword">this</span>.msgIdMemory = ByteBuffer.allocate(MessageDecoder.MSG_ID_LENGTH);</div><div class="line"> <span class="number">33</span>:         <span class="keyword">this</span>.msgStoreItemMemory = ByteBuffer.allocate(size + END_FILE_MIN_BLANK_LENGTH);</div><div class="line"> <span class="number">34</span>:         <span class="keyword">this</span>.maxMessageSize = size;</div><div class="line"> <span class="number">35</span>:     }</div><div class="line"> <span class="number">36</span>: </div><div class="line"> <span class="number">37</span>:     <span class="function"><span class="keyword">public</span> ByteBuffer <span class="title">getMsgStoreItemMemory</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">38</span>:         <span class="keyword">return</span> msgStoreItemMemory;</div><div class="line"> <span class="number">39</span>:     }</div><div class="line"> <span class="number">40</span>: </div><div class="line"> <span class="number">41</span>:     <span class="function"><span class="keyword">public</span> AppendMessageResult <span class="title">doAppend</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> fileFromOffset, <span class="keyword">final</span> ByteBuffer byteBuffer, <span class="keyword">final</span> <span class="keyword">int</span> maxBlank, <span class="keyword">final</span> MessageExtBrokerInner msgInner)</span> </span>{</div><div class="line"> <span class="number">42</span>:         <span class="comment">// STORETIMESTAMP + STOREHOSTADDRESS + OFFSET &lt;br&gt;</span></div><div class="line"> <span class="number">43</span>: </div><div class="line"> <span class="number">44</span>:         <span class="comment">// PHY OFFSET</span></div><div class="line"> <span class="number">45</span>:         <span class="keyword">long</span> wroteOffset = fileFromOffset + byteBuffer.position();</div><div class="line"> <span class="number">46</span>: </div><div class="line"> <span class="number">47</span>:         <span class="comment">// &#x8BA1;&#x7B97;commitLog&#x91CC;&#x7684;msgId</span></div><div class="line"> <span class="number">48</span>:         <span class="keyword">this</span>.resetByteBuffer(hostHolder, <span class="number">8</span>);</div><div class="line"> <span class="number">49</span>:         String msgId = MessageDecoder.createMessageId(<span class="keyword">this</span>.msgIdMemory, msgInner.getStoreHostBytes(hostHolder), wroteOffset);</div><div class="line"> <span class="number">50</span>: </div><div class="line"> <span class="number">51</span>:         <span class="comment">// Record ConsumeQueue information &#x83B7;&#x53D6;&#x961F;&#x5217;offset</span></div><div class="line"> <span class="number">52</span>:         keyBuilder.setLength(<span class="number">0</span>);</div><div class="line"> <span class="number">53</span>:         keyBuilder.append(msgInner.getTopic());</div><div class="line"> <span class="number">54</span>:         keyBuilder.append(<span class="string">&apos;-&apos;</span>);</div><div class="line"> <span class="number">55</span>:         keyBuilder.append(msgInner.getQueueId());</div><div class="line"> <span class="number">56</span>:         String key = keyBuilder.toString();</div><div class="line"> <span class="number">57</span>:         Long queueOffset = CommitLog.<span class="keyword">this</span>.topicQueueTable.get(key);</div><div class="line"> <span class="number">58</span>:         <span class="keyword">if</span> (<span class="keyword">null</span> == queueOffset) {</div><div class="line"> <span class="number">59</span>:             queueOffset = <span class="number">0L</span>;</div><div class="line"> <span class="number">60</span>:             CommitLog.<span class="keyword">this</span>.topicQueueTable.put(key, queueOffset);</div><div class="line"> <span class="number">61</span>:         }</div><div class="line"> <span class="number">62</span>: </div><div class="line"> <span class="number">63</span>:         <span class="comment">// Transaction messages that require special handling // TODO &#x7591;&#x95EE;&#xFF1A;&#x7528;&#x9014;</span></div><div class="line"> <span class="number">64</span>:         <span class="keyword">final</span> <span class="keyword">int</span> tranType = MessageSysFlag.getTransactionValue(msgInner.getSysFlag());</div><div class="line"> <span class="number">65</span>:         <span class="keyword">switch</span> (tranType) {</div><div class="line"> <span class="number">66</span>:             <span class="comment">// Prepared and Rollback message is not consumed, will not enter the</span></div><div class="line"> <span class="number">67</span>:             <span class="comment">// consumer queue</span></div><div class="line"> <span class="number">68</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_PREPARED_TYPE:</div><div class="line"> <span class="number">69</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:</div><div class="line"> <span class="number">70</span>:                 queueOffset = <span class="number">0L</span>;</div><div class="line"> <span class="number">71</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">72</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_NOT_TYPE:</div><div class="line"> <span class="number">73</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_COMMIT_TYPE:</div><div class="line"> <span class="number">74</span>:             <span class="keyword">default</span>:</div><div class="line"> <span class="number">75</span>:                 <span class="keyword">break</span>;</div><div class="line"> <span class="number">76</span>:         }</div><div class="line"> <span class="number">77</span>: </div><div class="line"> <span class="number">78</span>:         <span class="comment">// &#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x957F;&#x5EA6;</span></div><div class="line"> <span class="number">79</span>:         <span class="keyword">final</span> <span class="keyword">byte</span>[] propertiesData =</div><div class="line"> <span class="number">80</span>:             msgInner.getPropertiesString() == <span class="keyword">null</span> ? <span class="keyword">null</span> : msgInner.getPropertiesString().getBytes(MessageDecoder.CHARSET_UTF8);</div><div class="line"> <span class="number">81</span>:         <span class="keyword">final</span> <span class="keyword">int</span> propertiesLength = propertiesData == <span class="keyword">null</span> ? <span class="number">0</span> : propertiesData.length;</div><div class="line"> <span class="number">82</span>:         <span class="keyword">if</span> (propertiesLength &gt; Short.MAX_VALUE) {</div><div class="line"> <span class="number">83</span>:             log.warn(<span class="string">&quot;putMessage message properties length too long. length={}&quot;</span>, propertiesData.length);</div><div class="line"> <span class="number">84</span>:             <span class="keyword">return</span> <span class="keyword">new</span> AppendMessageResult(AppendMessageStatus.PROPERTIES_SIZE_EXCEEDED);</div><div class="line"> <span class="number">85</span>:         }</div><div class="line"> <span class="number">86</span>:         <span class="keyword">final</span> <span class="keyword">byte</span>[] topicData = msgInner.getTopic().getBytes(MessageDecoder.CHARSET_UTF8);</div><div class="line"> <span class="number">87</span>:         <span class="keyword">final</span> <span class="keyword">int</span> topicLength = topicData.length;</div><div class="line"> <span class="number">88</span>:         <span class="keyword">final</span> <span class="keyword">int</span> bodyLength = msgInner.getBody() == <span class="keyword">null</span> ? <span class="number">0</span> : msgInner.getBody().length;</div><div class="line"> <span class="number">89</span>:         <span class="keyword">final</span> <span class="keyword">int</span> msgLen = calMsgLength(bodyLength, topicLength, propertiesLength);</div><div class="line"> <span class="number">90</span>:         <span class="comment">// Exceeds the maximum message</span></div><div class="line"> <span class="number">91</span>:         <span class="keyword">if</span> (msgLen &gt; <span class="keyword">this</span>.maxMessageSize) {</div><div class="line"> <span class="number">92</span>:             CommitLog.log.warn(<span class="string">&quot;message size exceeded, msg total size: &quot;</span> + msgLen + <span class="string">&quot;, msg body size: &quot;</span> + bodyLength</div><div class="line"> <span class="number">93</span>:                 + <span class="string">&quot;, maxMessageSize: &quot;</span> + <span class="keyword">this</span>.maxMessageSize);</div><div class="line"> <span class="number">94</span>:             <span class="keyword">return</span> <span class="keyword">new</span> AppendMessageResult(AppendMessageStatus.MESSAGE_SIZE_EXCEEDED);</div><div class="line"> <span class="number">95</span>:         }</div><div class="line"> <span class="number">96</span>: </div><div class="line"> <span class="number">97</span>:         <span class="comment">// Determines whether there is sufficient(&#x8DB3;&#x591F;) free space</span></div><div class="line"> <span class="number">98</span>:         <span class="keyword">if</span> ((msgLen + END_FILE_MIN_BLANK_LENGTH) &gt; maxBlank) {</div><div class="line"> <span class="number">99</span>:             <span class="keyword">this</span>.resetByteBuffer(<span class="keyword">this</span>.msgStoreItemMemory, maxBlank);</div><div class="line"><span class="number">100</span>:             <span class="comment">// 1 TOTAL_SIZE</span></div><div class="line"><span class="number">101</span>:             <span class="keyword">this</span>.msgStoreItemMemory.putInt(maxBlank);</div><div class="line"><span class="number">102</span>:             <span class="comment">// 2 MAGIC_CODE</span></div><div class="line"><span class="number">103</span>:             <span class="keyword">this</span>.msgStoreItemMemory.putInt(CommitLog.BLANK_MAGIC_CODE);</div><div class="line"><span class="number">104</span>:             <span class="comment">// 3 The remaining space may be any value</span></div><div class="line"><span class="number">105</span>:             <span class="comment">//</span></div><div class="line"><span class="number">106</span>: </div><div class="line"><span class="number">107</span>:             <span class="comment">// Here the length of the specially set maxBlank</span></div><div class="line"><span class="number">108</span>:             <span class="keyword">final</span> <span class="keyword">long</span> beginTimeMills = CommitLog.<span class="keyword">this</span>.defaultMessageStore.now();</div><div class="line"><span class="number">109</span>:             byteBuffer.put(<span class="keyword">this</span>.msgStoreItemMemory.array(), <span class="number">0</span>, maxBlank);</div><div class="line"><span class="number">110</span>:             <span class="keyword">return</span> <span class="keyword">new</span> AppendMessageResult(AppendMessageStatus.END_OF_FILE, wroteOffset, maxBlank, msgId, msgInner.getStoreTimestamp(),</div><div class="line"><span class="number">111</span>:                 queueOffset, CommitLog.<span class="keyword">this</span>.defaultMessageStore.now() - beginTimeMills);</div><div class="line"><span class="number">112</span>:         }</div><div class="line"><span class="number">113</span>: </div><div class="line"><span class="number">114</span>:         <span class="comment">// Initialization of storage space</span></div><div class="line"><span class="number">115</span>:         <span class="keyword">this</span>.resetByteBuffer(msgStoreItemMemory, msgLen);</div><div class="line"><span class="number">116</span>:         <span class="comment">// 1 TOTAL_SIZE</span></div><div class="line"><span class="number">117</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgLen);</div><div class="line"><span class="number">118</span>:         <span class="comment">// 2 MAGIC_CODE</span></div><div class="line"><span class="number">119</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(CommitLog.MESSAGE_MAGIC_CODE);</div><div class="line"><span class="number">120</span>:         <span class="comment">// 3 BODY_CRC</span></div><div class="line"><span class="number">121</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgInner.getBodyCRC());</div><div class="line"><span class="number">122</span>:         <span class="comment">// 4 QUEUE_ID</span></div><div class="line"><span class="number">123</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgInner.getQueueId());</div><div class="line"><span class="number">124</span>:         <span class="comment">// 5 FLAG</span></div><div class="line"><span class="number">125</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgInner.getFlag());</div><div class="line"><span class="number">126</span>:         <span class="comment">// 6 QUEUE_OFFSET</span></div><div class="line"><span class="number">127</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putLong(queueOffset);</div><div class="line"><span class="number">128</span>:         <span class="comment">// 7 PHYSICAL_OFFSET</span></div><div class="line"><span class="number">129</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putLong(fileFromOffset + byteBuffer.position());</div><div class="line"><span class="number">130</span>:         <span class="comment">// 8 SYS_FLAG</span></div><div class="line"><span class="number">131</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgInner.getSysFlag());</div><div class="line"><span class="number">132</span>:         <span class="comment">// 9 BORN_TIMESTAMP</span></div><div class="line"><span class="number">133</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putLong(msgInner.getBornTimestamp());</div><div class="line"><span class="number">134</span>:         <span class="comment">// 10 BORN_HOST</span></div><div class="line"><span class="number">135</span>:         <span class="keyword">this</span>.resetByteBuffer(hostHolder, <span class="number">8</span>);</div><div class="line"><span class="number">136</span>:         <span class="keyword">this</span>.msgStoreItemMemory.put(msgInner.getBornHostBytes(hostHolder));</div><div class="line"><span class="number">137</span>:         <span class="comment">// 11 STORE_TIMESTAMP</span></div><div class="line"><span class="number">138</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putLong(msgInner.getStoreTimestamp());</div><div class="line"><span class="number">139</span>:         <span class="comment">// 12 STORE_HOST_ADDRESS</span></div><div class="line"><span class="number">140</span>:         <span class="keyword">this</span>.resetByteBuffer(hostHolder, <span class="number">8</span>);</div><div class="line"><span class="number">141</span>:         <span class="keyword">this</span>.msgStoreItemMemory.put(msgInner.getStoreHostBytes(hostHolder));</div><div class="line"><span class="number">142</span>:         <span class="comment">//this.msgStoreItemMemory.put(msgInner.getStoreHostBytes());</span></div><div class="line"><span class="number">143</span>:         <span class="comment">// 13 RECONSUME_TIMES</span></div><div class="line"><span class="number">144</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(msgInner.getReconsumeTimes());</div><div class="line"><span class="number">145</span>:         <span class="comment">// 14 Prepared Transaction Offset</span></div><div class="line"><span class="number">146</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putLong(msgInner.getPreparedTransactionOffset());</div><div class="line"><span class="number">147</span>:         <span class="comment">// 15 BODY</span></div><div class="line"><span class="number">148</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putInt(bodyLength);</div><div class="line"><span class="number">149</span>:         <span class="keyword">if</span> (bodyLength &gt; <span class="number">0</span>)</div><div class="line"><span class="number">150</span>:             <span class="keyword">this</span>.msgStoreItemMemory.put(msgInner.getBody());</div><div class="line"><span class="number">151</span>:         <span class="comment">// 16 TOPIC</span></div><div class="line"><span class="number">152</span>:         <span class="keyword">this</span>.msgStoreItemMemory.put((<span class="keyword">byte</span>) topicLength);</div><div class="line"><span class="number">153</span>:         <span class="keyword">this</span>.msgStoreItemMemory.put(topicData);</div><div class="line"><span class="number">154</span>:         <span class="comment">// 17 PROPERTIES</span></div><div class="line"><span class="number">155</span>:         <span class="keyword">this</span>.msgStoreItemMemory.putShort((<span class="keyword">short</span>) propertiesLength);</div><div class="line"><span class="number">156</span>:         <span class="keyword">if</span> (propertiesLength &gt; <span class="number">0</span>)</div><div class="line"><span class="number">157</span>:             <span class="keyword">this</span>.msgStoreItemMemory.put(propertiesData);</div><div class="line"><span class="number">158</span>: </div><div class="line"><span class="number">159</span>:         <span class="keyword">final</span> <span class="keyword">long</span> beginTimeMills = CommitLog.<span class="keyword">this</span>.defaultMessageStore.now();</div><div class="line"><span class="number">160</span>:         <span class="comment">// Write messages to the queue buffer</span></div><div class="line"><span class="number">161</span>:         byteBuffer.put(<span class="keyword">this</span>.msgStoreItemMemory.array(), <span class="number">0</span>, msgLen);</div><div class="line"><span class="number">162</span>: </div><div class="line"><span class="number">163</span>:         AppendMessageResult result = <span class="keyword">new</span> AppendMessageResult(AppendMessageStatus.PUT_OK, wroteOffset, msgLen, msgId,</div><div class="line"><span class="number">164</span>:             msgInner.getStoreTimestamp(), queueOffset, CommitLog.<span class="keyword">this</span>.defaultMessageStore.now() - beginTimeMills);</div><div class="line"><span class="number">165</span>: </div><div class="line"><span class="number">166</span>:         <span class="keyword">switch</span> (tranType) {</div><div class="line"><span class="number">167</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_PREPARED_TYPE:</div><div class="line"><span class="number">168</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_ROLLBACK_TYPE:</div><div class="line"><span class="number">169</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">170</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_NOT_TYPE:</div><div class="line"><span class="number">171</span>:             <span class="keyword">case</span> MessageSysFlag.TRANSACTION_COMMIT_TYPE:</div><div class="line"><span class="number">172</span>:                 <span class="comment">// The next update ConsumeQueue information &#x66F4;&#x65B0;&#x961F;&#x5217;&#x7684;offset</span></div><div class="line"><span class="number">173</span>:                 CommitLog.<span class="keyword">this</span>.topicQueueTable.put(key, ++queueOffset);</div><div class="line"><span class="number">174</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">175</span>:             <span class="keyword">default</span>:</div><div class="line"><span class="number">176</span>:                 <span class="keyword">break</span>;</div><div class="line"><span class="number">177</span>:         }</div><div class="line"><span class="number">178</span>:         <span class="keyword">return</span> result;</div><div class="line"><span class="number">179</span>:     }</div><div class="line"><span class="number">180</span>: </div><div class="line"><span class="number">181</span>:     <span class="comment">/**</span></div><div class="line">182:      * &#x91CD;&#x7F6E;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;</div><div class="line">183:      *</div><div class="line">184:      * <span class="doctag">@param</span> byteBuffer &#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;</div><div class="line">185:      * <span class="doctag">@param</span> limit &#x957F;&#x5EA6;</div><div class="line">186:      */</div><div class="line"><span class="number">187</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resetByteBuffer</span><span class="params">(<span class="keyword">final</span> ByteBuffer byteBuffer, <span class="keyword">final</span> <span class="keyword">int</span> limit)</span> </span>{</div><div class="line"><span class="number">188</span>:         byteBuffer.flip();</div><div class="line"><span class="number">189</span>:         byteBuffer.limit(limit);</div><div class="line"><span class="number">190</span>:     }</div><div class="line"><span class="number">191</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E; &#xFF1A;&#x63D2;&#x5165;&#x6D88;&#x606F;&#x5230;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;&#x3002;</li>
<li>&#x7B2C; 45 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x7269;&#x7406;&#x4F4D;&#x7F6E;&#x3002;&#x5728; <code>CommitLog</code> &#x7684;&#x987A;&#x5E8F;&#x5B58;&#x50A8;&#x4F4D;&#x7F6E;&#x3002;</li>
<li>&#x7B2C; 47 &#x81F3; 49 &#x884C; &#xFF1A;&#x8BA1;&#x7B97; <code>CommitLog</code> &#x91CC;&#x7684; <code>offsetMsgId</code>&#x3002;&#x8FD9;&#x91CC;&#x4E00;&#x5B9A;&#x8981;&#x548C; <code>msgId</code> &#x533A;&#x5206;&#x5F00;&#x3002;</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th>&#x8BA1;&#x7B97;&#x65B9;&#x5F0F;</th>
<th>&#x957F;&#x5EA6;</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>offsetMsgId</td>
<td>Broker&#x5B58;&#x50A8;&#x65F6;&#x751F;&#x6210;</td>
<td>Hex(storeHostBytes, wroteOffset)</td>
<td>32</td>
</tr>
<tr>
<td>msgId</td>
<td>Client&#x53D1;&#x9001;&#x6D88;&#x606F;&#x65F6;&#x751F;&#x6210;</td>
<td>Hex(&#x8FDB;&#x7A0B;&#x7F16;&#x53F7;, IP, ClassLoader, startTime, currentTime, &#x81EA;&#x589E;&#x5E8F;&#x5217;)</td>
<td>32</td>
<td><a href="http://www.yunai.me/RocketMQ/message/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x57FA;&#x7840;&#x300B;</a></td>
</tr>
</tbody>
</table>
<ul class="ui list">
<li>&#x7B2C; 51 &#x81F3; 61 &#x884C; &#xFF1A;&#x83B7;&#x53D6;&#x961F;&#x5217;&#x4F4D;&#x7F6E;(offset)&#x3002;</li>
<li>&#x7B2C; 78 &#x81F3; 95 &#x884C; &#xFF1A;&#x8BA1;&#x7B97;&#x6D88;&#x606F;&#x603B;&#x957F;&#x5EA6;&#x3002;</li>
<li>&#x7B2C; 98 &#x81F3; 112 &#x884C; &#xFF1A;&#x5F53;&#x6587;&#x4EF6;&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#x4E0D;&#x8DB3;&#x65F6;&#xFF0C;&#x5199;&#x5165; <code>BLANK</code> &#x5360;&#x4F4D;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3002;</li>
<li>&#x7B2C; 114 &#x81F3; 161 &#x884C; &#xFF1A;&#x5199;&#x5165; <code>MESSAGE</code> &#x3002;</li>
<li>&#x7B2C; 173 &#x884C; &#xFF1A;&#x66F4;&#x65B0;&#x961F;&#x5217;&#x4F4D;&#x7F6E;(offset)&#x3002;</li>
</ul>
<h2 id="FlushCommitLogService"><a href="#FlushCommitLogService" class="headerlink" title="FlushCommitLogService"></a>FlushCommitLogService</h2><p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_04_23/03.png"><img src="http://www.yunai.me/images/RocketMQ/2017_04_23/03.png" alt="FlushCommitLogService&#x7C7B;&#x56FE;" class="ui centered image"></a></p>
<table>
<thead>
<tr>
<th>&#x7EBF;&#x7A0B;&#x670D;&#x52A1;</th>
<th>&#x573A;&#x666F;</th>
<th>&#x63D2;&#x5165;&#x6D88;&#x606F;&#x6027;&#x80FD;</th>
</tr>
</thead>
<tbody>
<tr>
<td>CommitRealTimeService</td>
<td>&#x5F02;&#x6B65;&#x5237;&#x76D8; &amp;&amp; &#x5F00;&#x542F;&#x5185;&#x5B58;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;</td>
<td>&#x7B2C;&#x4E00;</td>
</tr>
<tr>
<td>FlushRealTimeService</td>
<td>&#x5F02;&#x6B65;&#x5237;&#x76D8; &amp;&amp; &#x5173;&#x95ED;&#x5185;&#x5B58;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;</td>
<td>&#x7B2C;&#x4E8C;</td>
</tr>
<tr>
<td>GroupCommitService</td>
<td>&#x540C;&#x6B65;&#x5237;&#x76D8;</td>
<td>&#x7B2C;&#x4E09;</td>
</tr>
</tbody>
</table>
<h3 id="MappedFile-&#x843D;&#x76D8;"><a href="#MappedFile-&#x843D;&#x76D8;" class="headerlink" title="MappedFile#&#x843D;&#x76D8;"></a>MappedFile#&#x843D;&#x76D8;</h3><table>
<thead>
<tr>
<th>&#x65B9;&#x5F0F;</th>
<th></th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x65B9;&#x5F0F;&#x4E00;</td>
<td>&#x5199;&#x5165;&#x5185;&#x5B58;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;(writeBuffer)</td>
<td style="text-align:left">&#x4ECE;&#x5185;&#x5B58;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;(write buffer)&#x63D0;&#x4EA4;(commit)&#x5230;&#x6587;&#x4EF6;&#x901A;&#x9053;(fileChannel)</td>
<td style="text-align:left">&#x6587;&#x4EF6;&#x901A;&#x9053;(fileChannel)flush</td>
</tr>
<tr>
<td>&#x65B9;&#x5F0F;&#x4E8C;</td>
<td></td>
<td style="text-align:left">&#x5199;&#x5165;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;(mappedByteBuffer)</td>
<td style="text-align:left">&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x533A;(mappedByteBuffer)flush</td>
</tr>
</tbody>
</table>
<p><a class="magnific-img" href="http://www.yunai.me/images/RocketMQ/2017_04_23/04.jpeg"><img src="http://www.yunai.me/images/RocketMQ/2017_04_23/04.jpeg" alt="MappedFile&#x7684;position&#x8FC1;&#x79FB;&#x56FE;" class="ui centered image"></a></p>
<p><strong>flush&#x76F8;&#x5173;&#x4EE3;&#x7801;</strong></p>
<p>&#x8003;&#x8651;&#x5230;&#x5199;&#x5165;&#x6027;&#x80FD;&#xFF0C;&#x6EE1;&#x8DB3; <code>flushLeastPages * OS_PAGE_SIZE</code> &#x624D;&#x8FDB;&#x884C; <code>flush</code>&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * flush</div><div class="line"> 3:  *</div><div class="line"> 4:  * <span class="doctag">@param</span> flushLeastPages flush&#x6700;&#x5C0F;&#x9875;&#x6570;</div><div class="line"> 5:  * <span class="doctag">@return</span> The current flushed position</div><div class="line"> 6:  */</div><div class="line"> <span class="number">7</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">flush</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> flushLeastPages)</span> </span>{</div><div class="line"> <span class="number">8</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isAbleToFlush(flushLeastPages)) {</div><div class="line"> <span class="number">9</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.hold()) {</div><div class="line"><span class="number">10</span>:             <span class="keyword">int</span> value = getReadPosition();</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">13</span>:                 <span class="comment">//We only append data to fileChannel or mappedByteBuffer, never both.</span></div><div class="line"><span class="number">14</span>:                 <span class="keyword">if</span> (writeBuffer != <span class="keyword">null</span> || <span class="keyword">this</span>.fileChannel.position() != <span class="number">0</span>) {</div><div class="line"><span class="number">15</span>:                     <span class="keyword">this</span>.fileChannel.force(<span class="keyword">false</span>);</div><div class="line"><span class="number">16</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">17</span>:                     <span class="keyword">this</span>.mappedByteBuffer.force();</div><div class="line"><span class="number">18</span>:                 }</div><div class="line"><span class="number">19</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">20</span>:                 log.error(<span class="string">&quot;Error occurred when force data to disk.&quot;</span>, e);</div><div class="line"><span class="number">21</span>:             }</div><div class="line"><span class="number">22</span>: </div><div class="line"><span class="number">23</span>:             <span class="keyword">this</span>.flushedPosition.set(value);</div><div class="line"><span class="number">24</span>:             <span class="keyword">this</span>.release();</div><div class="line"><span class="number">25</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">26</span>:             log.warn(<span class="string">&quot;in flush, hold failed, flush offset = &quot;</span> + <span class="keyword">this</span>.flushedPosition.get());</div><div class="line"><span class="number">27</span>:             <span class="keyword">this</span>.flushedPosition.set(getReadPosition());</div><div class="line"><span class="number">28</span>:         }</div><div class="line"><span class="number">29</span>:     }</div><div class="line"><span class="number">30</span>:     <span class="keyword">return</span> <span class="keyword">this</span>.getFlushedPosition();</div><div class="line"><span class="number">31</span>: }</div><div class="line"><span class="number">32</span>: </div><div class="line"><span class="number">33</span>: <span class="comment">/**</span></div><div class="line">34:  * &#x662F;&#x5426;&#x80FD;&#x591F;flush&#x3002;&#x6EE1;&#x8DB3;&#x5982;&#x4E0B;&#x6761;&#x4EF6;&#x4EFB;&#x610F;&#x6761;&#x4EF6;&#xFF1A;</div><div class="line">35:  * 1. &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x5DF2;&#x7ECF;&#x5199;&#x6EE1;</div><div class="line">36:  * 2. flushLeastPages &gt; 0 &amp;&amp; &#x672A;flush&#x90E8;&#x5206;&#x8D85;&#x8FC7;flushLeastPages</div><div class="line">37:  * 3. flushLeastPages = 0 &amp;&amp; &#x6709;&#x65B0;&#x5199;&#x5165;&#x90E8;&#x5206;</div><div class="line">38:  *</div><div class="line">39:  * <span class="doctag">@param</span> flushLeastPages flush&#x6700;&#x5C0F;&#x5206;&#x9875;</div><div class="line">40:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x80FD;&#x591F;&#x5199;&#x5165;</div><div class="line">41:  */</div><div class="line"><span class="number">42</span>: <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isAbleToFlush</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> flushLeastPages)</span> </span>{</div><div class="line"><span class="number">43</span>:     <span class="keyword">int</span> flush = <span class="keyword">this</span>.flushedPosition.get();</div><div class="line"><span class="number">44</span>:     <span class="keyword">int</span> write = getReadPosition();</div><div class="line"><span class="number">45</span>: </div><div class="line"><span class="number">46</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isFull()) {</div><div class="line"><span class="number">47</span>:         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">48</span>:     }</div><div class="line"><span class="number">49</span>: </div><div class="line"><span class="number">50</span>:     <span class="keyword">if</span> (flushLeastPages &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">51</span>:         <span class="keyword">return</span> ((write / OS_PAGE_SIZE) - (flush / OS_PAGE_SIZE)) &gt;= flushLeastPages;</div><div class="line"><span class="number">52</span>:     }</div><div class="line"><span class="number">53</span>: </div><div class="line"><span class="number">54</span>:     <span class="keyword">return</span> write &gt; flush;</div><div class="line"><span class="number">55</span>: }</div></pre></td></tr></table></figure>
<p><strong>commit&#x76F8;&#x5173;&#x4EE3;&#x7801;&#xFF1A;</strong></p>
<p>&#x8003;&#x8651;&#x5230;&#x5199;&#x5165;&#x6027;&#x80FD;&#xFF0C;&#x6EE1;&#x8DB3; <code>commitLeastPages * OS_PAGE_SIZE</code> &#x624D;&#x8FDB;&#x884C; <code>commit</code>&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="comment">/**</span></div><div class="line"> 2:  * commit</div><div class="line"> 3:  * &#x5F53;{<span class="doctag">@link</span> #writeBuffer}&#x4E3A;null&#x65F6;&#xFF0C;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;{<span class="doctag">@link</span> #wrotePosition}</div><div class="line"> 4:  *</div><div class="line"> 5:  * <span class="doctag">@param</span> commitLeastPages commit&#x6700;&#x5C0F;&#x9875;&#x6570;</div><div class="line"> 6:  * <span class="doctag">@return</span> &#x5F53;&#x524D;commit&#x4F4D;&#x7F6E;</div><div class="line"> 7:  */</div><div class="line"> <span class="number">8</span>: <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">commit</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> commitLeastPages)</span> </span>{</div><div class="line"> <span class="number">9</span>:     <span class="keyword">if</span> (writeBuffer == <span class="keyword">null</span>) {</div><div class="line"><span class="number">10</span>:         <span class="comment">//no need to commit data to file channel, so just regard wrotePosition as committedPosition.</span></div><div class="line"><span class="number">11</span>:         <span class="keyword">return</span> <span class="keyword">this</span>.wrotePosition.get();</div><div class="line"><span class="number">12</span>:     }</div><div class="line"><span class="number">13</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isAbleToCommit(commitLeastPages)) {</div><div class="line"><span class="number">14</span>:         <span class="keyword">if</span> (<span class="keyword">this</span>.hold()) {</div><div class="line"><span class="number">15</span>:             commit0(commitLeastPages);</div><div class="line"><span class="number">16</span>:             <span class="keyword">this</span>.release();</div><div class="line"><span class="number">17</span>:         } <span class="keyword">else</span> {</div><div class="line"><span class="number">18</span>:             log.warn(<span class="string">&quot;in commit, hold failed, commit offset = &quot;</span> + <span class="keyword">this</span>.committedPosition.get());</div><div class="line"><span class="number">19</span>:         }</div><div class="line"><span class="number">20</span>:     }</div><div class="line"><span class="number">21</span>: </div><div class="line"><span class="number">22</span>:     <span class="comment">// All dirty data has been committed to FileChannel. &#x5199;&#x5230;&#x6587;&#x4EF6;&#x5C3E;&#x65F6;&#xFF0C;&#x56DE;&#x6536;writeBuffer&#x3002;</span></div><div class="line"><span class="number">23</span>:     <span class="keyword">if</span> (writeBuffer != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.transientStorePool != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.fileSize == <span class="keyword">this</span>.committedPosition.get()) {</div><div class="line"><span class="number">24</span>:         <span class="keyword">this</span>.transientStorePool.returnBuffer(writeBuffer);</div><div class="line"><span class="number">25</span>:         <span class="keyword">this</span>.writeBuffer = <span class="keyword">null</span>;</div><div class="line"><span class="number">26</span>:     }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>:     <span class="keyword">return</span> <span class="keyword">this</span>.committedPosition.get();</div><div class="line"><span class="number">29</span>: }</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>: <span class="comment">/**</span></div><div class="line">32:  * commit&#x5B9E;&#x73B0;&#xFF0C;&#x5C06;writeBuffer&#x5199;&#x5165;fileChannel&#x3002;</div><div class="line">33:  * <span class="doctag">@param</span> commitLeastPages commit&#x6700;&#x5C0F;&#x9875;&#x6570;&#x3002;&#x7528;&#x4E0D;&#x4E0A;&#x8BE5;&#x53C2;&#x6570;</div><div class="line">34:  */</div><div class="line"><span class="number">35</span>: <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">commit0</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> commitLeastPages)</span> </span>{</div><div class="line"><span class="number">36</span>:     <span class="keyword">int</span> writePos = <span class="keyword">this</span>.wrotePosition.get();</div><div class="line"><span class="number">37</span>:     <span class="keyword">int</span> lastCommittedPosition = <span class="keyword">this</span>.committedPosition.get();</div><div class="line"><span class="number">38</span>: </div><div class="line"><span class="number">39</span>:     <span class="keyword">if</span> (writePos - <span class="keyword">this</span>.committedPosition.get() &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">40</span>:         <span class="keyword">try</span> {</div><div class="line"><span class="number">41</span>:             <span class="comment">// &#x8BBE;&#x7F6E;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;byteBuffer</span></div><div class="line"><span class="number">42</span>:             ByteBuffer byteBuffer = writeBuffer.slice();</div><div class="line"><span class="number">43</span>:             byteBuffer.position(lastCommittedPosition);</div><div class="line"><span class="number">44</span>:             byteBuffer.limit(writePos);</div><div class="line"><span class="number">45</span>:             <span class="comment">// &#x5199;&#x5165;fileChannel</span></div><div class="line"><span class="number">46</span>:             <span class="keyword">this</span>.fileChannel.position(lastCommittedPosition);</div><div class="line"><span class="number">47</span>:             <span class="keyword">this</span>.fileChannel.write(byteBuffer);</div><div class="line"><span class="number">48</span>:             <span class="comment">// &#x8BBE;&#x7F6E;position</span></div><div class="line"><span class="number">49</span>:             <span class="keyword">this</span>.committedPosition.set(writePos);</div><div class="line"><span class="number">50</span>:         } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">51</span>:             log.error(<span class="string">&quot;Error occurred when commit data to FileChannel.&quot;</span>, e);</div><div class="line"><span class="number">52</span>:         }</div><div class="line"><span class="number">53</span>:     }</div><div class="line"><span class="number">54</span>: }</div><div class="line"><span class="number">55</span>: </div><div class="line"><span class="number">56</span>: <span class="comment">/**</span></div><div class="line">57:  * &#x662F;&#x5426;&#x80FD;&#x591F;commit&#x3002;&#x6EE1;&#x8DB3;&#x5982;&#x4E0B;&#x6761;&#x4EF6;&#x4EFB;&#x610F;&#x6761;&#x4EF6;&#xFF1A;</div><div class="line">58:  * 1. &#x6620;&#x5C04;&#x6587;&#x4EF6;&#x5DF2;&#x7ECF;&#x5199;&#x6EE1;</div><div class="line">59:  * 2. commitLeastPages &gt; 0 &amp;&amp; &#x672A;commit&#x90E8;&#x5206;&#x8D85;&#x8FC7;commitLeastPages</div><div class="line">60:  * 3. commitLeastPages = 0 &amp;&amp; &#x6709;&#x65B0;&#x5199;&#x5165;&#x90E8;&#x5206;</div><div class="line">61:  *</div><div class="line">62:  * <span class="doctag">@param</span> commitLeastPages commit&#x6700;&#x5C0F;&#x5206;&#x9875;</div><div class="line">63:  * <span class="doctag">@return</span> &#x662F;&#x5426;&#x80FD;&#x591F;&#x5199;&#x5165;</div><div class="line">64:  */</div><div class="line"><span class="number">65</span>: <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isAbleToCommit</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> commitLeastPages)</span> </span>{</div><div class="line"><span class="number">66</span>:     <span class="keyword">int</span> flush = <span class="keyword">this</span>.committedPosition.get();</div><div class="line"><span class="number">67</span>:     <span class="keyword">int</span> write = <span class="keyword">this</span>.wrotePosition.get();</div><div class="line"><span class="number">68</span>: </div><div class="line"><span class="number">69</span>:     <span class="keyword">if</span> (<span class="keyword">this</span>.isFull()) {</div><div class="line"><span class="number">70</span>:         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line"><span class="number">71</span>:     }</div><div class="line"><span class="number">72</span>: </div><div class="line"><span class="number">73</span>:     <span class="keyword">if</span> (commitLeastPages &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">74</span>:         <span class="keyword">return</span> ((write / OS_PAGE_SIZE) - (flush / OS_PAGE_SIZE)) &gt;= commitLeastPages;</div><div class="line"><span class="number">75</span>:     }</div><div class="line"><span class="number">76</span>: </div><div class="line"><span class="number">77</span>:     <span class="keyword">return</span> write &gt; flush;</div><div class="line"><span class="number">78</span>: }</div></pre></td></tr></table></figure>
<h3 id="FlushRealTimeService"><a href="#FlushRealTimeService" class="headerlink" title="FlushRealTimeService"></a>FlushRealTimeService</h3><p>&#x6D88;&#x606F;&#x63D2;&#x5165;&#x6210;&#x529F;&#x65F6;&#xFF0C;&#x5F02;&#x6B65;&#x5237;&#x76D8;&#x65F6;&#x4F7F;&#x7528;&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">FlushRealTimeService</span> <span class="keyword">extends</span> <span class="title">FlushCommitLogService</span> </span>{</div><div class="line"> <span class="number">2</span>:     <span class="comment">/**</span></div><div class="line"> 3:      * &#x6700;&#x540E;flush&#x65F6;&#x95F4;&#x6233;</div><div class="line"> 4:      */</div><div class="line"> <span class="number">5</span>:     <span class="keyword">private</span> <span class="keyword">long</span> lastFlushTimestamp = <span class="number">0</span>;</div><div class="line"> <span class="number">6</span>:     <span class="comment">/**</span></div><div class="line"> 7:      * print&#x8BA1;&#x65F6;&#x5668;&#x3002;</div><div class="line"> 8:      * &#x6EE1;&#x8DB3;print&#x6B21;&#x6570;&#x65F6;&#xFF0C;&#x8C03;&#x7528;{<span class="doctag">@link</span> #printFlushProgress()}</div><div class="line"> 9:      */</div><div class="line"><span class="number">10</span>:     <span class="keyword">private</span> <span class="keyword">long</span> printTimes = <span class="number">0</span>;</div><div class="line"><span class="number">11</span>: </div><div class="line"><span class="number">12</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">13</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"><span class="number">14</span>: </div><div class="line"><span class="number">15</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"><span class="number">16</span>:             <span class="keyword">boolean</span> flushCommitLogTimed = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().isFlushCommitLogTimed();</div><div class="line"><span class="number">17</span>:             <span class="keyword">int</span> interval = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getFlushIntervalCommitLog();</div><div class="line"><span class="number">18</span>:             <span class="keyword">int</span> flushPhysicQueueLeastPages = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getFlushCommitLogLeastPages();</div><div class="line"><span class="number">19</span>:             <span class="keyword">int</span> flushPhysicQueueThoroughInterval = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getFlushCommitLogThoroughInterval();</div><div class="line"><span class="number">20</span>: </div><div class="line"><span class="number">21</span>:             <span class="comment">// Print flush progress</span></div><div class="line"><span class="number">22</span>:             <span class="comment">// &#x5F53;&#x65F6;&#x95F4;&#x6EE1;&#x8DB3;flushPhysicQueueThoroughInterval&#x65F6;&#xFF0C;&#x5373;&#x4F7F;&#x5199;&#x5165;&#x7684;&#x6570;&#x91CF;&#x4E0D;&#x8DB3;flushPhysicQueueLeastPages&#xFF0C;&#x4E5F;&#x8FDB;&#x884C;flush</span></div><div class="line"><span class="number">23</span>:             <span class="keyword">boolean</span> printFlushProgress = <span class="keyword">false</span>;</div><div class="line"><span class="number">24</span>:             <span class="keyword">long</span> currentTimeMillis = System.currentTimeMillis();</div><div class="line"><span class="number">25</span>:             <span class="keyword">if</span> (currentTimeMillis &gt;= (<span class="keyword">this</span>.lastFlushTimestamp + flushPhysicQueueThoroughInterval)) {</div><div class="line"><span class="number">26</span>:                 <span class="keyword">this</span>.lastFlushTimestamp = currentTimeMillis;</div><div class="line"><span class="number">27</span>:                 flushPhysicQueueLeastPages = <span class="number">0</span>;</div><div class="line"><span class="number">28</span>:                 printFlushProgress = (printTimes++ % <span class="number">10</span>) == <span class="number">0</span>;</div><div class="line"><span class="number">29</span>:             }</div><div class="line"><span class="number">30</span>: </div><div class="line"><span class="number">31</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">32</span>:                 <span class="comment">// &#x7B49;&#x5F85;&#x6267;&#x884C;</span></div><div class="line"><span class="number">33</span>:                 <span class="keyword">if</span> (flushCommitLogTimed) {</div><div class="line"><span class="number">34</span>:                     Thread.sleep(interval);</div><div class="line"><span class="number">35</span>:                 } <span class="keyword">else</span> {</div><div class="line"><span class="number">36</span>:                     <span class="keyword">this</span>.waitForRunning(interval);</div><div class="line"><span class="number">37</span>:                 }</div><div class="line"><span class="number">38</span>: </div><div class="line"><span class="number">39</span>:                 <span class="keyword">if</span> (printFlushProgress) {</div><div class="line"><span class="number">40</span>:                     <span class="keyword">this</span>.printFlushProgress();</div><div class="line"><span class="number">41</span>:                 }</div><div class="line"><span class="number">42</span>: </div><div class="line"><span class="number">43</span>:                 <span class="comment">// flush commitLog</span></div><div class="line"><span class="number">44</span>:                 <span class="keyword">long</span> begin = System.currentTimeMillis();</div><div class="line"><span class="number">45</span>:                 CommitLog.<span class="keyword">this</span>.mappedFileQueue.flush(flushPhysicQueueLeastPages);</div><div class="line"><span class="number">46</span>:                 <span class="keyword">long</span> storeTimestamp = CommitLog.<span class="keyword">this</span>.mappedFileQueue.getStoreTimestamp();</div><div class="line"><span class="number">47</span>:                 <span class="keyword">if</span> (storeTimestamp &gt; <span class="number">0</span>) {</div><div class="line"><span class="number">48</span>:                     CommitLog.<span class="keyword">this</span>.defaultMessageStore.getStoreCheckpoint().setPhysicMsgTimestamp(storeTimestamp);</div><div class="line"><span class="number">49</span>:                 }</div><div class="line"><span class="number">50</span>:                 <span class="keyword">long</span> past = System.currentTimeMillis() - begin;</div><div class="line"><span class="number">51</span>:                 <span class="keyword">if</span> (past &gt; <span class="number">500</span>) {</div><div class="line"><span class="number">52</span>:                     log.info(<span class="string">&quot;Flush data to disk costs {} ms&quot;</span>, past);</div><div class="line"><span class="number">53</span>:                 }</div><div class="line"><span class="number">54</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">55</span>:                 CommitLog.log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"><span class="number">56</span>:                 <span class="keyword">this</span>.printFlushProgress();</div><div class="line"><span class="number">57</span>:             }</div><div class="line"><span class="number">58</span>:         }</div><div class="line"><span class="number">59</span>: </div><div class="line"><span class="number">60</span>:         <span class="comment">// Normal shutdown, to ensure that all the flush before exit</span></div><div class="line"><span class="number">61</span>:         <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</div><div class="line"><span class="number">62</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; RETRY_TIMES_OVER &amp;&amp; !result; i++) {</div><div class="line"><span class="number">63</span>:             result = CommitLog.<span class="keyword">this</span>.mappedFileQueue.flush(<span class="number">0</span>);</div><div class="line"><span class="number">64</span>:             CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service shutdown, retry &quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot; times &quot;</span> + (result ? <span class="string">&quot;OK&quot;</span> : <span class="string">&quot;Not OK&quot;</span>));</div><div class="line"><span class="number">65</span>:         }</div><div class="line"><span class="number">66</span>: </div><div class="line"><span class="number">67</span>:         <span class="keyword">this</span>.printFlushProgress();</div><div class="line"><span class="number">68</span>: </div><div class="line"><span class="number">69</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">70</span>:     }</div><div class="line"><span class="number">71</span>: </div><div class="line"><span class="number">72</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">73</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">74</span>:         <span class="keyword">return</span> FlushRealTimeService.class.getSimpleName();</div><div class="line"><span class="number">75</span>:     }</div><div class="line"><span class="number">76</span>: </div><div class="line"><span class="number">77</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printFlushProgress</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">78</span>:         <span class="comment">// CommitLog.log.info(&quot;how much disk fall behind memory, &quot;</span></div><div class="line"><span class="number">79</span>:         <span class="comment">// + CommitLog.this.mappedFileQueue.howMuchFallBehind());</span></div><div class="line"><span class="number">80</span>:     }</div><div class="line"><span class="number">81</span>: </div><div class="line"><span class="number">82</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">83</span>:     <span class="meta">@SuppressWarnings</span>(<span class="string">&quot;SpellCheckingInspection&quot;</span>)</div><div class="line"><span class="number">84</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getJointime</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">85</span>:         <span class="keyword">return</span> <span class="number">1000</span> * <span class="number">60</span> * <span class="number">5</span>;</div><div class="line"><span class="number">86</span>:     }</div><div class="line"><span class="number">87</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x5B9E;&#x65F6; <code>flush</code>&#x7EBF;&#x7A0B;&#x670D;&#x52A1;&#xFF0C;&#x8C03;&#x7528; <code>MappedFile#flush</code> &#x76F8;&#x5173;&#x903B;&#x8F91;&#x3002;</li>
<li>&#x7B2C; 23 &#x81F3; 29 &#x884C; &#xFF1A;&#x6BCF; <code>flushPhysicQueueThoroughInterval</code> &#x5468;&#x671F;&#xFF0C;&#x6267;&#x884C;&#x4E00;&#x6B21; <code>flush</code> &#x3002;&#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x5230;&#x90FD;&#x80FD;&#x6EE1;&#x8DB3; <code>flushCommitLogLeastPages</code> &#x5927;&#x5C0F;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x5468;&#x671F;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x5F3A;&#x5236; <code>flush</code> &#x3002;&#x5F53;&#x7136;&#xFF0C;&#x4E0D;&#x80FD;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x90FD;&#x53BB;&#x6267;&#x884C;&#x5F3A;&#x5236; <code>flush</code>&#xFF0C;&#x8FD9;&#x6837;&#x6027;&#x80FD;&#x8F83;&#x5DEE;&#x3002;</li>
<li>&#x7B2C; 33 &#x884C; &#x81F3; 37 &#x884C; &#xFF1A;&#x6839;&#x636E; <code>flushCommitLogTimed</code> &#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x662F;<strong>&#x56FA;&#x5B9A;&#x5468;&#x671F;</strong>&#x8FD8;&#x662F;<strong>&#x7B49;&#x5F85;&#x5524;&#x9192;</strong>&#x3002;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x662F;&#x540E;&#x8005;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6BCF;&#x6B21;&#x63D2;&#x5165;&#x6D88;&#x606F;&#x5B8C;&#x6210;&#xFF0C;&#x4F1A;&#x53BB;&#x8C03;&#x7528; <code>commitLogService.wakeup()</code> &#x3002;</li>
<li>&#x7B2C; 45 &#x884C; &#xFF1A;&#x8C03;&#x7528; <code>MappedFile</code> &#x8FDB;&#x884C; <code>flush</code>&#x3002;</li>
<li>&#x7B2C; 61 &#x81F3; 65 &#x884C; &#xFF1A;<code>Broker</code> &#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x5F3A;&#x5236; <code>flush</code>&#xFF0C;&#x907F;&#x514D;&#x6709;&#x672A;&#x5237;&#x76D8;&#x7684;&#x6570;&#x636E;&#x3002;</li>
</ul>
<h3 id="CommitRealTimeService"><a href="#CommitRealTimeService" class="headerlink" title="CommitRealTimeService"></a>CommitRealTimeService</h3><p>&#x6D88;&#x606F;&#x63D2;&#x5165;&#x6210;&#x529F;&#x65F6;&#xFF0C;&#x5F02;&#x6B65;&#x5237;&#x76D8;&#x65F6;&#x4F7F;&#x7528;&#x3002;<br>&#x548C; <code>FlushRealTimeService</code> &#x7C7B;&#x4F3C;&#xFF0C;&#x6027;&#x80FD;&#x66F4;&#x597D;&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line"> <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">CommitRealTimeService</span> <span class="keyword">extends</span> <span class="title">FlushCommitLogService</span> </span>{</div><div class="line"> <span class="number">2</span>: </div><div class="line"> <span class="number">3</span>:     <span class="comment">/**</span></div><div class="line"> 4:      * &#x6700;&#x540E; commit &#x65F6;&#x95F4;&#x6233;</div><div class="line"> 5:      */</div><div class="line"> <span class="number">6</span>:     <span class="keyword">private</span> <span class="keyword">long</span> lastCommitTimestamp = <span class="number">0</span>;</div><div class="line"> <span class="number">7</span>: </div><div class="line"> <span class="number">8</span>:     <span class="meta">@Override</span></div><div class="line"> <span class="number">9</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">10</span>:         <span class="keyword">return</span> CommitRealTimeService.class.getSimpleName();</div><div class="line"><span class="number">11</span>:     }</div><div class="line"><span class="number">12</span>: </div><div class="line"><span class="number">13</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">14</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">15</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"><span class="number">16</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"><span class="number">17</span>:             <span class="keyword">int</span> interval = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getCommitIntervalCommitLog();</div><div class="line"><span class="number">18</span>:             <span class="keyword">int</span> commitDataLeastPages = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getCommitCommitLogLeastPages();</div><div class="line"><span class="number">19</span>:             <span class="keyword">int</span> commitDataThoroughInterval = CommitLog.<span class="keyword">this</span>.defaultMessageStore.getMessageStoreConfig().getCommitCommitLogThoroughInterval();</div><div class="line"><span class="number">20</span>: </div><div class="line"><span class="number">21</span>:             <span class="comment">// &#x5F53;&#x65F6;&#x95F4;&#x6EE1;&#x8DB3;commitDataThoroughInterval&#x65F6;&#xFF0C;&#x5373;&#x4F7F;&#x5199;&#x5165;&#x7684;&#x6570;&#x91CF;&#x4E0D;&#x8DB3;commitDataLeastPages&#xFF0C;&#x4E5F;&#x8FDB;&#x884C;flush</span></div><div class="line"><span class="number">22</span>:             <span class="keyword">long</span> begin = System.currentTimeMillis();</div><div class="line"><span class="number">23</span>:             <span class="keyword">if</span> (begin &gt;= (<span class="keyword">this</span>.lastCommitTimestamp + commitDataThoroughInterval)) {</div><div class="line"><span class="number">24</span>:                 <span class="keyword">this</span>.lastCommitTimestamp = begin;</div><div class="line"><span class="number">25</span>:                 commitDataLeastPages = <span class="number">0</span>;</div><div class="line"><span class="number">26</span>:             }</div><div class="line"><span class="number">27</span>: </div><div class="line"><span class="number">28</span>:             <span class="keyword">try</span> {</div><div class="line"><span class="number">29</span>:                 <span class="comment">// commit</span></div><div class="line"><span class="number">30</span>:                 <span class="keyword">boolean</span> result = CommitLog.<span class="keyword">this</span>.mappedFileQueue.commit(commitDataLeastPages);</div><div class="line"><span class="number">31</span>:                 <span class="keyword">long</span> end = System.currentTimeMillis();</div><div class="line"><span class="number">32</span>:                 <span class="keyword">if</span> (!result) { <span class="comment">// TODO &#x7591;&#x95EE;&#xFF1A;&#x672A;&#x5199;&#x5165;&#x6210;&#x529F;&#xFF0C;&#x4E3A;&#x5565;&#x8981;&#x5524;&#x9192;flushCommitLogService</span></div><div class="line"><span class="number">33</span>:                     <span class="keyword">this</span>.lastCommitTimestamp = end; <span class="comment">// result = false means some data committed.</span></div><div class="line"><span class="number">34</span>:                     <span class="comment">//now wake up flush thread.</span></div><div class="line"><span class="number">35</span>:                     flushCommitLogService.wakeup();</div><div class="line"><span class="number">36</span>:                 }</div><div class="line"><span class="number">37</span>: </div><div class="line"><span class="number">38</span>:                 <span class="keyword">if</span> (end - begin &gt; <span class="number">500</span>) {</div><div class="line"><span class="number">39</span>:                     log.info(<span class="string">&quot;Commit data to file costs {} ms&quot;</span>, end - begin);</div><div class="line"><span class="number">40</span>:                 }</div><div class="line"><span class="number">41</span>: </div><div class="line"><span class="number">42</span>:                 <span class="comment">// &#x7B49;&#x5F85;&#x6267;&#x884C;</span></div><div class="line"><span class="number">43</span>:                 <span class="keyword">this</span>.waitForRunning(interval);</div><div class="line"><span class="number">44</span>:             } <span class="keyword">catch</span> (Throwable e) {</div><div class="line"><span class="number">45</span>:                 CommitLog.log.error(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"><span class="number">46</span>:             }</div><div class="line"><span class="number">47</span>:         }</div><div class="line"><span class="number">48</span>: </div><div class="line"><span class="number">49</span>:         <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</div><div class="line"><span class="number">50</span>:         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; RETRY_TIMES_OVER &amp;&amp; !result; i++) {</div><div class="line"><span class="number">51</span>:             result = CommitLog.<span class="keyword">this</span>.mappedFileQueue.commit(<span class="number">0</span>);</div><div class="line"><span class="number">52</span>:             CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service shutdown, retry &quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot; times &quot;</span> + (result ? <span class="string">&quot;OK&quot;</span> : <span class="string">&quot;Not OK&quot;</span>));</div><div class="line"><span class="number">53</span>:         }</div><div class="line"><span class="number">54</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"><span class="number">55</span>:     }</div><div class="line"><span class="number">56</span>: }</div></pre></td></tr></table></figure>
<h3 id="GroupCommitService"><a href="#GroupCommitService" class="headerlink" title="GroupCommitService"></a>GroupCommitService</h3><p>&#x6D88;&#x606F;&#x63D2;&#x5165;&#x6210;&#x529F;&#x65F6;&#xFF0C;&#x540C;&#x6B65;&#x5237;&#x76D8;&#x65F6;&#x4F7F;&#x7528;&#x3002;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><div class="line">  <span class="number">1</span>: <span class="class"><span class="keyword">class</span> <span class="title">GroupCommitService</span> <span class="keyword">extends</span> <span class="title">FlushCommitLogService</span> </span>{</div><div class="line">  <span class="number">2</span>:     <span class="comment">/**</span></div><div class="line">  3:      * &#x5199;&#x5165;&#x8BF7;&#x6C42;&#x961F;&#x5217;</div><div class="line">  4:      */</div><div class="line">  <span class="number">5</span>:     <span class="keyword">private</span> <span class="keyword">volatile</span> List&lt;GroupCommitRequest&gt; requestsWrite = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">  <span class="number">6</span>:     <span class="comment">/**</span></div><div class="line">  7:      * &#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x961F;&#x5217;</div><div class="line">  8:      */</div><div class="line">  <span class="number">9</span>:     <span class="keyword">private</span> <span class="keyword">volatile</span> List&lt;GroupCommitRequest&gt; requestsRead = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"> <span class="number">10</span>: </div><div class="line"> <span class="number">11</span>:     <span class="comment">/**</span></div><div class="line"> 12:      * &#x6DFB;&#x52A0;&#x5199;&#x5165;&#x8BF7;&#x6C42;</div><div class="line"> 13:      *</div><div class="line"> 14:      * <span class="doctag">@param</span> request &#x5199;&#x5165;&#x8BF7;&#x6C42;</div><div class="line"> 15:      */</div><div class="line"> <span class="number">16</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">putRequest</span><span class="params">(<span class="keyword">final</span> GroupCommitRequest request)</span> </span>{</div><div class="line"> <span class="number">17</span>:         <span class="comment">// &#x6DFB;&#x52A0;&#x5199;&#x5165;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">18</span>:         <span class="keyword">synchronized</span> (<span class="keyword">this</span>.requestsWrite) {</div><div class="line"> <span class="number">19</span>:             <span class="keyword">this</span>.requestsWrite.add(request);</div><div class="line"> <span class="number">20</span>:         }</div><div class="line"> <span class="number">21</span>:         <span class="comment">// &#x5207;&#x6362;&#x8BFB;&#x5199;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">22</span>:         <span class="keyword">if</span> (hasNotified.compareAndSet(<span class="keyword">false</span>, <span class="keyword">true</span>)) {</div><div class="line"> <span class="number">23</span>:             waitPoint.countDown(); <span class="comment">// notify</span></div><div class="line"> <span class="number">24</span>:         }</div><div class="line"> <span class="number">25</span>:     }</div><div class="line"> <span class="number">26</span>: </div><div class="line"> <span class="number">27</span>:     <span class="comment">/**</span></div><div class="line"> 28:      * &#x5207;&#x6362;&#x8BFB;&#x5199;&#x961F;&#x5217;</div><div class="line"> 29:      */</div><div class="line"> <span class="number">30</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swapRequests</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">31</span>:         List&lt;GroupCommitRequest&gt; tmp = <span class="keyword">this</span>.requestsWrite;</div><div class="line"> <span class="number">32</span>:         <span class="keyword">this</span>.requestsWrite = <span class="keyword">this</span>.requestsRead;</div><div class="line"> <span class="number">33</span>:         <span class="keyword">this</span>.requestsRead = tmp;</div><div class="line"> <span class="number">34</span>:     }</div><div class="line"> <span class="number">35</span>: </div><div class="line"> <span class="number">36</span>:     <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doCommit</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">37</span>:         <span class="keyword">synchronized</span> (<span class="keyword">this</span>.requestsRead) {</div><div class="line"> <span class="number">38</span>:             <span class="keyword">if</span> (!<span class="keyword">this</span>.requestsRead.isEmpty()) {</div><div class="line"> <span class="number">39</span>:                 <span class="keyword">for</span> (GroupCommitRequest req : <span class="keyword">this</span>.requestsRead) {</div><div class="line"> <span class="number">40</span>:                     <span class="comment">// There may be a message in the next file, so a maximum of</span></div><div class="line"> <span class="number">41</span>:                     <span class="comment">// two times the flush (&#x53EF;&#x80FD;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x7684;messages&#xFF0C;&#x5206;&#x5E03;&#x5728;&#x4E24;&#x4E2A;MappedFile)</span></div><div class="line"> <span class="number">42</span>:                     <span class="keyword">boolean</span> flushOK = <span class="keyword">false</span>;</div><div class="line"> <span class="number">43</span>:                     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> &amp;&amp; !flushOK; i++) {</div><div class="line"> <span class="number">44</span>:                         <span class="comment">// &#x662F;&#x5426;&#x6EE1;&#x8DB3;&#x9700;&#x8981;flush&#x6761;&#x4EF6;&#xFF0C;&#x5373;&#x8BF7;&#x6C42;&#x7684;offset&#x8D85;&#x8FC7;flush&#x7684;offset</span></div><div class="line"> <span class="number">45</span>:                         flushOK = CommitLog.<span class="keyword">this</span>.mappedFileQueue.getFlushedWhere() &gt;= req.getNextOffset();</div><div class="line"> <span class="number">46</span>:                         <span class="keyword">if</span> (!flushOK) {</div><div class="line"> <span class="number">47</span>:                             CommitLog.<span class="keyword">this</span>.mappedFileQueue.flush(<span class="number">0</span>);</div><div class="line"> <span class="number">48</span>:                         }</div><div class="line"> <span class="number">49</span>:                     }</div><div class="line"> <span class="number">50</span>:                     <span class="comment">// &#x5524;&#x9192;&#x7B49;&#x5F85;&#x8BF7;&#x6C42;</span></div><div class="line"> <span class="number">51</span>:                     req.wakeupCustomer(flushOK);</div><div class="line"> <span class="number">52</span>:                 }</div><div class="line"> <span class="number">53</span>: </div><div class="line"> <span class="number">54</span>:                 <span class="keyword">long</span> storeTimestamp = CommitLog.<span class="keyword">this</span>.mappedFileQueue.getStoreTimestamp();</div><div class="line"> <span class="number">55</span>:                 <span class="keyword">if</span> (storeTimestamp &gt; <span class="number">0</span>) {</div><div class="line"> <span class="number">56</span>:                     CommitLog.<span class="keyword">this</span>.defaultMessageStore.getStoreCheckpoint().setPhysicMsgTimestamp(storeTimestamp);</div><div class="line"> <span class="number">57</span>:                 }</div><div class="line"> <span class="number">58</span>: </div><div class="line"> <span class="number">59</span>:                 <span class="comment">// &#x6E05;&#x7406;&#x8BFB;&#x53D6;&#x961F;&#x5217;</span></div><div class="line"> <span class="number">60</span>:                 <span class="keyword">this</span>.requestsRead.clear();</div><div class="line"> <span class="number">61</span>:             } <span class="keyword">else</span> {</div><div class="line"> <span class="number">62</span>:                 <span class="comment">// Because of individual messages is set to not sync flush, it</span></div><div class="line"> <span class="number">63</span>:                 <span class="comment">// will come to this process &#x4E0D;&#x5408;&#x6CD5;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6BD4;&#x5982;message&#x4E0A;&#x672A;&#x8BBE;&#x7F6E;isWaitStoreMsgOK&#x3002;</span></div><div class="line"> <span class="number">64</span>:                 <span class="comment">// &#x8D70;&#x5230;&#x6B64;&#x5904;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x53D1;&#x9001;&#x4E00;&#x6761;&#x6D88;&#x606F;&#xFF0C;&#x843D;&#x76D8;&#x4E00;&#x6761;&#x6D88;&#x606F;&#xFF0C;&#x5B9E;&#x9645;&#x65E0;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x7684;&#x6548;&#x679C;&#x3002;</span></div><div class="line"> <span class="number">65</span>:                 CommitLog.<span class="keyword">this</span>.mappedFileQueue.flush(<span class="number">0</span>);</div><div class="line"> <span class="number">66</span>:             }</div><div class="line"> <span class="number">67</span>:         }</div><div class="line"> <span class="number">68</span>:     }</div><div class="line"> <span class="number">69</span>: </div><div class="line"> <span class="number">70</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{</div><div class="line"> <span class="number">71</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service started&quot;</span>);</div><div class="line"> <span class="number">72</span>: </div><div class="line"> <span class="number">73</span>:         <span class="keyword">while</span> (!<span class="keyword">this</span>.isStopped()) {</div><div class="line"> <span class="number">74</span>:             <span class="keyword">try</span> {</div><div class="line"> <span class="number">75</span>:                 <span class="keyword">this</span>.waitForRunning(<span class="number">10</span>);</div><div class="line"> <span class="number">76</span>:                 <span class="keyword">this</span>.doCommit();</div><div class="line"> <span class="number">77</span>:             } <span class="keyword">catch</span> (Exception e) {</div><div class="line"> <span class="number">78</span>:                 CommitLog.log.warn(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service has exception. &quot;</span>, e);</div><div class="line"> <span class="number">79</span>:             }</div><div class="line"> <span class="number">80</span>:         }</div><div class="line"> <span class="number">81</span>: </div><div class="line"> <span class="number">82</span>:         <span class="comment">// Under normal circumstances shutdown, wait for the arrival of the</span></div><div class="line"> <span class="number">83</span>:         <span class="comment">// request, and then flush</span></div><div class="line"> <span class="number">84</span>:         <span class="keyword">try</span> {</div><div class="line"> <span class="number">85</span>:             Thread.sleep(<span class="number">10</span>);</div><div class="line"> <span class="number">86</span>:         } <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line"> <span class="number">87</span>:             CommitLog.log.warn(<span class="string">&quot;GroupCommitService Exception, &quot;</span>, e);</div><div class="line"> <span class="number">88</span>:         }</div><div class="line"> <span class="number">89</span>: </div><div class="line"> <span class="number">90</span>:         <span class="keyword">synchronized</span> (<span class="keyword">this</span>) {</div><div class="line"> <span class="number">91</span>:             <span class="keyword">this</span>.swapRequests();</div><div class="line"> <span class="number">92</span>:         }</div><div class="line"> <span class="number">93</span>: </div><div class="line"> <span class="number">94</span>:         <span class="keyword">this</span>.doCommit();</div><div class="line"> <span class="number">95</span>: </div><div class="line"> <span class="number">96</span>:         CommitLog.log.info(<span class="keyword">this</span>.getServiceName() + <span class="string">&quot; service end&quot;</span>);</div><div class="line"> <span class="number">97</span>:     }</div><div class="line"> <span class="number">98</span>: </div><div class="line"> <span class="number">99</span>:     <span class="comment">/**</span></div><div class="line">100:      * &#x6BCF;&#x6B21;&#x6267;&#x884C;&#x5B8C;&#xFF0C;&#x5207;&#x6362;&#x8BFB;&#x5199;&#x961F;&#x5217;</div><div class="line">101:      */</div><div class="line"><span class="number">102</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">103</span>:     <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onWaitEnd</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">104</span>:         <span class="keyword">this</span>.swapRequests();</div><div class="line"><span class="number">105</span>:     }</div><div class="line"><span class="number">106</span>: </div><div class="line"><span class="number">107</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">108</span>:     <span class="function"><span class="keyword">public</span> String <span class="title">getServiceName</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">109</span>:         <span class="keyword">return</span> GroupCommitService.class.getSimpleName();</div><div class="line"><span class="number">110</span>:     }</div><div class="line"><span class="number">111</span>: </div><div class="line"><span class="number">112</span>:     <span class="meta">@Override</span></div><div class="line"><span class="number">113</span>:     <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getJointime</span><span class="params">()</span> </span>{</div><div class="line"><span class="number">114</span>:         <span class="keyword">return</span> <span class="number">1000</span> * <span class="number">60</span> * <span class="number">5</span>;</div><div class="line"><span class="number">115</span>:     }</div><div class="line"><span class="number">116</span>: }</div></pre></td></tr></table></figure>
<ul class="ui list">
<li>&#x8BF4;&#x660E;&#xFF1A;&#x6279;&#x91CF;&#x5199;&#x5165;&#x7EBF;&#x7A0B;&#x670D;&#x52A1;&#x3002;</li>
<li>&#x7B2C; 16 &#x81F3; 25 &#x884C; &#xFF1A;&#x6DFB;&#x52A0;&#x5199;&#x5165;&#x8BF7;&#x6C42;&#x3002;&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x4E86; <code>sync</code> &#x7684;&#x539F;&#x56E0;&#xFF1A;<code>this.requestsWrite</code> &#x4F1A;&#x548C; <code>this.requestsRead</code> &#x4E0D;&#x65AD;&#x4EA4;&#x6362;&#xFF0C;&#x65E0;&#x6CD5;&#x4FDD;&#x8BC1;&#x7A33;&#x5B9A;&#x7684;&#x540C;&#x6B65;&#x3002;</li>
<li>&#x7B2C; 27 &#x81F3; 34 &#x884C; &#xFF1A;&#x8BFB;&#x5199;&#x961F;&#x5217;&#x4EA4;&#x6362;&#x3002;</li>
<li>&#x7B2C; 38 &#x81F3; 60 &#x884C; &#xFF1A;&#x5FAA;&#x73AF;&#x5199;&#x5165;&#x961F;&#x5217;&#xFF0C;&#x8FDB;&#x884C; <code>flush</code>&#x3002;<ul>
<li>&#x7B2C; 43 &#x884C; &#xFF1A;&#x8003;&#x8651;&#x5230;&#x6709;&#x53EF;&#x80FD;&#x6BCF;&#x6B21;&#x5FAA;&#x73AF;&#x7684;&#x6D88;&#x606F;&#x5199;&#x5165;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x53EF;&#x80FD;&#x5206;&#x5E03;&#x5728;<strong>&#x4E24;&#x4E2A;</strong> <code>MappedFile</code>(&#x5199;&#x7B2C;N&#x4E2A;&#x6D88;&#x606F;&#x65F6;&#xFF0C;<code>MappedFile</code> &#x5DF2;&#x6EE1;&#xFF0C;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;)&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x6709;&#x5FAA;&#x73AF;2&#x6B21;&#x3002;</li>
<li>&#x7B2C; 51 &#x884C; &#xFF1A;&#x5524;&#x9192;&#x7B49;&#x5F85;&#x5199;&#x5165;&#x8BF7;&#x6C42;&#x7EBF;&#x7A0B;&#xFF0C;&#x901A;&#x8FC7; <code>CountDownLatch</code> &#x5B9E;&#x73B0;&#x3002;</li>
</ul>
</li>
<li>&#x7B2C; 61 &#x81F3; 66 &#x884C; &#xFF1A;&#x76F4;&#x63A5;&#x5237;&#x76D8;&#x3002;&#x6B64;&#x5904;&#x662F;&#x7531;&#x4E8E;&#x53D1;&#x9001;&#x7684;&#x6D88;&#x606F;&#x7684; <code>isWaitStoreMsgOK</code> &#x672A;&#x8BBE;&#x7F6E;&#x6210; <code>TRUE</code> &#xFF0C;&#x5BFC;&#x81F4;&#x672A;&#x8D70;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x3002;</li>
<li>&#x7B2C; 73 &#x81F3; 80 &#x884C; &#xFF1A;&#x6BCF; 10ms &#x6267;&#x884C;&#x4E00;&#x6B21;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C; <code>wakeup()</code> &#x65F6;&#xFF0C;&#x5219;&#x4F1A;&#x7ACB;&#x5373;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x6279;&#x91CF;&#x63D0;&#x4EA4;&#x3002;&#x5F53; <code>Broker</code> &#x8BBE;&#x7F6E;&#x6210;&#x540C;&#x6B65;&#x843D;&#x76D8; &amp;&amp; &#x6D88;&#x606F; <code>isWaitStoreMsgOK=true</code>&#xFF0C;&#x6D88;&#x606F;&#x9700;&#x8981;&#x7565;&#x5927;&#x4E8E; 10ms &#x624D;&#x80FD;&#x53D1;&#x9001;&#x6210;&#x529F;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x6027;&#x80FD;&#x76F8;&#x5BF9;&#x5F02;&#x6B65;&#x843D;&#x76D8;&#x8F83;&#x5DEE;&#xFF0C;&#x53EF;&#x9760;&#x6027;&#x66F4;&#x9AD8;&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x5728;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x65F6;&#x53BB;&#x53D6;&#x820D;&#x3002; </li>
</ul>
<h1 id="&#x7ED3;&#x5C3E;"><a href="#&#x7ED3;&#x5C3E;" class="headerlink" title="&#x7ED3;&#x5C3E;"></a>&#x7ED3;&#x5C3E;</h1><p>&#x5199;&#x7684;&#x7B2C;&#x4E8C;&#x7BC7;&#x4E0E;RocketMQ&#x6E90;&#x7801;&#x76F8;&#x5173;&#x7684;&#x535A;&#x6587;&#xFF0C;&#x770B;&#x5230;&#x6709;&#x9605;&#x8BFB;&#x3001;&#x70B9;&#x8D5E;&#x3001;&#x6536;&#x85CF;&#x751A;&#x81F3;&#x8BA2;&#x9605;&#xFF0C;&#x5F88;&#x53D7;&#x9F13;&#x821E;&#x3002;</p>
<p>&#x300A;Message&#x5B58;&#x50A8;&#x300B;&#x6BD4;&#x8D77;&#x300A;Message&#x53D1;&#x9001;&amp;&#x63A5;&#x6536;&#x300B;&#x4ECE;&#x96BE;&#x5EA6;&#x4E0A;&#x8BF4;&#x662F;&#x66F4;&#x5927;&#x7684;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x662F;&#x66F4;&#x6709;&#x8DA3;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x7406;&#x89E3;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x8868;&#x8FBE;&#x4E0D;&#x6E05;&#x6670;&#xFF0C;&#x8FD8;&#x8BF7;&#x5927;&#x5BB6;&#x591A;&#x591A;&#x5305;&#x542B;&#x3002;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x8BF7;&#x9EBB;&#x70E6;&#x6DFB;&#x52A0; QQ&#xFF1A;7685413 &#x8FDB;&#x884C;&#x6307;&#x51FA;&#xFF0C;&#x907F;&#x514D;&#x81EA;&#x5DF1;&#x7684;&#x7406;&#x89E3;&#x9519;&#x8BEF;&#xFF0C;&#x7ED9;&#x5927;&#x5BB6;&#x9020;&#x6210;&#x56F0;&#x6270;&#x3002;</p>
<p>&#x63A8;&#x8350;<a href="http://www.jasongj.com/kafka/high_throughput/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" rel="external nofollow noopener noreferrer" target="_blank">&#x300A;Kafka&#x8BBE;&#x8BA1;&#x89E3;&#x6790;&#xFF08;&#x516D;&#xFF09;- Kafka&#x9AD8;&#x6027;&#x80FD;&#x67B6;&#x6784;&#x4E4B;&#x9053;&#x300B;</a>&#xFF0C;&#x4F5C;&#x8005;&#x7AD9;&#x5728;&#x7684;&#x9AD8;&#x5EA6;&#x6BD4;&#x6211;&#x9AD8;&#x7684;&#x591A;&#x7684;&#x591A;&#xFF0C;&#x55EF;&#xFF0C;&#x6309;&#x7167;&#x674E;&#x5C0F;&#x7490;&#x7684;&#x8BF4;&#x6CD5;&#xFF1A;&#x9AD8;&#x4E00;&#x4E2A;&#x559C;&#x9A6C;&#x62C9;&#x96C5;&#x5C71;&#x3002;&#x1F608;&#x8BA4;&#x771F;&#x5543;&#x8BFB;&#x300A;Linux&#x5185;&#x6838;&#x8BBE;&#x8BA1;&#x4E0E;&#x5B9E;&#x73B0;(&#x539F;&#x4E66;&#x7B2C;3&#x7248;)&#x300B;&#xFF0C;day day up&#x3002;</p>
<p>&#x518D;&#x6B21;&#x611F;&#x8C22;&#x5927;&#x5BB6;&#x7684;&#x9605;&#x8BFB;&#x3001;&#x70B9;&#x8D5E;&#x3001;&#x6536;&#x85CF;&#x3002;</p>
<p>&#x4E0B;&#x4E00;&#x7BC7;&#xFF1A;<a href="http://www.yunai.me/RocketMQ/message-pull-and-consume-first/">&#x300A;RocketMQ &#x6E90;&#x7801;&#x5206;&#x6790; &#x2014;&#x2014; Message &#x62C9;&#x53D6;&#x4E0E;&#x6D88;&#x8D39;&#x300B;</a> &#x8D77;&#x822A;&#xFF01;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a class=&quot;magnific-img&quot; href=&quot;http://www.yunai.me/images/common/wechat_mp.jpeg&quot;&gt;&lt;img src=&quot;http://www.yunai.me/images/common/wechat_mp.jpe
    
    </summary>
    
      <category term="RocketMQ" scheme="http://www.yunai.me/categories/RocketMQ/"/>
    
    
  </entry>
  
</feed>
